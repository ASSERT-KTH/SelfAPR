[REPLACE]^protected  final int SETMASK =  ( 1 << 21 ) ;^31^^^^^^^[REPLACE] protected static final int SETMASK =  ( 1 << 21 ) ;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^protected static final int CLEARMASK ;^32^^^^^^^[REPLACE] protected static final int CLEARMASK =  ( ~SETMASK ) ;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^protected static final int GREATER_ICOST ;^33^^^^^^^[REPLACE] protected static final int GREATER_ICOST = 15;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^protected static final int LESSER_ICOST = 0L;^34^^^^^^^[REPLACE] protected static final int LESSER_ICOST = 0;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^protected static final int SMALL_THRESH  = null ;^35^^^^^^^[REPLACE] protected static final int SMALL_THRESH = 20;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^protected static final  long  DEPTH_THRESH = 10;^36^^^^^^^[REPLACE] protected static final int DEPTH_THRESH = 10;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^protected static final int QSORT_STACK_SIZE ;^46^^^^^^^[REPLACE] protected static final int QSORT_STACK_SIZE = 1000;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private  short  last;^216^^^^^^^[REPLACE] private int last;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private  long  bsLive;^233^^^^^^^[REPLACE] private int bsLive;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private final CRC mCrc ;^234^^^^^^^[REPLACE] private final CRC mCrc = new CRC (  ) ;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private boolean[] inUse ;^236^^^^^^^[REPLACE] private boolean[] inUse = new boolean[256];^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private char[] seqToUnseq ;^239^^^^^^^[REPLACE] private char[] seqToUnseq = new char[256];^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private char[] unseqToSeq  = null ;^240^^^^^^^[REPLACE] private char[] unseqToSeq = new char[256];^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private char[] selector ;^242^^^^^^^[REPLACE] private char[] selector = new char[MAX_SELECTORS];^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private char[] selectorMtf ;^243^^^^^^^[REPLACE] private char[] selectorMtf = new char[MAX_SELECTORS];^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private int[] mtfFreq ;^253^^^^^^^[REPLACE] private int[] mtfFreq = new int[MAX_ALPHA_SIZE];^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private  short  nBlocksRandomised;^264^^^^^^^[REPLACE] private int nBlocksRandomised;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private int currentChar  = null ;^266^^^^^^^[REPLACE] private int currentChar = -1;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private int runLength  = null ;^267^^^^^^^[REPLACE] private int runLength = 0;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private boolean closed  = null ;^367^^^^^^^[REPLACE] private boolean closed = false;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private  long  blockCRC, combinedCRC;^402^^^^^^^[REPLACE] private int blockCRC, combinedCRC;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^long  ll;^998^^^^^^^[REPLACE] int ll;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^long  hh;^999^^^^^^^[REPLACE] int hh;^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^private int[] incs = {0, 4, 03, 40, 020, 364, 0093, 3280, 9840, 29524, 88573, 265720, 797060, 2390484};^1509^1510^1511^^^1509^1511^[REPLACE] private int[] incs = {1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484};^ [CLASS] BZip2CompressorOutputStream StackElem  
[REPLACE]^this ( inStream, 9 * 2 ) ;^270^^^^^269^271^[REPLACE] this ( inStream, 9 ) ;^[METHOD] <init> [TYPE] OutputStream) [PARAMETER] OutputStream inStream [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^finish (  ) ;^270^^^^^269^271^[REMOVE] ^[METHOD] <init> [TYPE] OutputStream) [PARAMETER] OutputStream inStream [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block = this;^275^^^^^273^293^[REPLACE] block = null;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant = this;^276^^^^^273^293^[REPLACE] quadrant = null;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr = this;^277^^^^^273^293^[REPLACE] zptr = null;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab = true;^278^^^^^273^293^[REPLACE] ftab = null;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^278^^^^^273^293^[ADD] ftab = null;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsSetStream ( bsStream ) ;^280^^^^^273^293^[REPLACE] bsSetStream ( inStream ) ;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^280^^^^^273^293^[ADD] bsSetStream ( inStream ) ;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workFactor = 50 >> 4;^282^^^^^273^293^[REPLACE] workFactor = 50;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  >=  9L )  {^283^^^^^273^293^[REPLACE] if  ( inBlockSize > 9 )  {^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inBlockSize = 1;^284^^^^^273^293^[REPLACE] inBlockSize = 9;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inBlockSize = 3;^284^^^^^273^293^[REPLACE] inBlockSize = 9;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (runLength  >=  1 / 0 )  {^286^^^^^273^293^[REPLACE] if  ( inBlockSize < 1 )  {^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inBlockSize = 9; ;^287^^^^^273^293^[REPLACE] inBlockSize = 1;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inBlockSize = 4;^287^^^^^273^293^[REPLACE] inBlockSize = 1;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^blockSize100k =  workLimit;^289^^^^^273^293^[REPLACE] blockSize100k = inBlockSize;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^randomiseBlock (  ) ;^290^^^^^273^293^[REPLACE] allocateCompressStructures (  ) ;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^291^^^^^273^293^[REPLACE] initialize (  ) ;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^292^^^^^273^293^[REPLACE] initBlock (  ) ;^[METHOD] <init> [TYPE] OutputStream,int) [PARAMETER] OutputStream inStream int inBlockSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsStream.write ( ch ) ;^49^^^^^48^51^[REPLACE] System.out.println ( "panic" ) ;^[METHOD] panic [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int i, j, ss, sb;^54^^^^^53^63^[REPLACE] int i;^[METHOD] makeMaps [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nInUse = 1;^55^^^^^53^63^[REPLACE] nInUse = 0;^[METHOD] makeMaps [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimitnUse[i] )  {^57^^^^^53^63^[REPLACE] if  ( inUse[i] )  {^[METHOD] makeMaps [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^seqToUnseq[nInUse]  =  seqToUnseq[nInUse] ;^58^^^^^53^63^[REPLACE] seqToUnseq[nInUse] =  ( char )  i;^[METHOD] makeMaps [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^unseqToSeq[i] =  ( String )  nInUse;^59^^^^^53^63^[REPLACE] unseqToSeq[i] =  ( char )  nInUse;^[METHOD] makeMaps [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  <=  256; i++ )  {^56^^^^^53^63^[REPLACE] for  ( i = 0; i < 256; i++ )  {^[METHOD] makeMaps [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse16[i] )  {^57^^^^^53^63^[REPLACE] if  ( inUse[i] )  {^[METHOD] makeMaps [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^seqToUnseq[nInUse] =  ( String )  i;^58^^^^^53^63^[REPLACE] seqToUnseq[nInUse] =  ( char )  i;^[METHOD] makeMaps [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0 / 2; i < 256; i++ )  {^56^^^^^53^63^[REPLACE] for  ( i = 0; i < 256; i++ )  {^[METHOD] makeMaps [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^58^^^^^53^63^[ADD] seqToUnseq[nInUse] =  ( char )  i;^[METHOD] makeMaps [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^unseqToSeq[i]  = null ;^59^^^^^53^63^[REPLACE] unseqToSeq[i] =  ( char )  nInUse;^[METHOD] makeMaps [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^59^60^^^^53^63^[ADD] unseqToSeq[i] =  ( char )  nInUse; nInUse++;^[METHOD] makeMaps [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] ftab  incs  mtfFreq  quadrant  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  last  ll  nBlocksRandomised  nInUse  nMTF  origPtr  runLength  workDone  workFactor  workLimit  [TYPE]  char[] block  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int sp, lo, hi, d;^71^^^^^66^210^[REPLACE] int nNodes, nHeap, n1, n2, i, j, k;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^71^^^^^66^210^[ADD] int nNodes, nHeap, n1, n2, i, j, k;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^boolean[] bigDone = new boolean[256];^72^^^^^66^210^[REPLACE] boolean  tooLong;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] heap = new int[MAX_ALPHA_SIZE  ^  4];^74^^^^^66^210^[REPLACE] int[] heap = new int[MAX_ALPHA_SIZE + 2];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^int[] weight = new int[MAX_ALPHA_SIZE * 2];^74^75^^^^66^210^[ADD] int[] heap = new int[MAX_ALPHA_SIZE + 2]; int[] weight = new int[MAX_ALPHA_SIZE * 2];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] weight = new int[MAX_ALPHA_SIZE  ;^75^^^^^66^210^[REPLACE] int[] weight = new int[MAX_ALPHA_SIZE * 2];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] parent = new int[MAX_ALPHA_SIZE  ;^76^^^^^66^210^[REPLACE] int[] parent = new int[MAX_ALPHA_SIZE * 2];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( workLimit = 0; i  == workLimit; i++ )  {^78^^^^^66^210^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[i +workLimit]  =  freq[i] )  << 8;^79^^^^^66^210^[REPLACE] weight[i + 1] =  ( freq[i] == 0 ? 1 : freq[i] )  << 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i < alphaSize; i++ )  {^78^^^^^66^210^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[i + n1]  =  freq[i] )  << 8;^79^^^^^66^210^[REPLACE] weight[i + 1] =  ( freq[i] == 0 ? 1 : freq[i] )  << 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( false )  {^82^^^^^66^210^[REPLACE] while  ( true )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( weight[tmp]  <=  weight[heap[zz >> 1]] )  {^98^^^^^66^210^[REPLACE] while  ( weight[tmp] < weight[heap[zz >> 1]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^98^99^^^^66^210^[ADD] while  ( weight[tmp] < weight[heap[zz >> 1]] )  { heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[yy]; ;^99^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz >>= 4;^100^^^^^66^210^[REPLACE] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^100^^^^^66^210^[ADD] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (workFactor  <=  1 )  {^109^^^^^66^210^[REPLACE] while  ( nHeap > 1 )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^109^110^^^^66^210^[ADD] while  ( nHeap > 1 )  { n1 = heap[1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( false )  {^117^^^^^66^210^[REPLACE] while  ( true )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (bytesOut  ==  nHeap )  {^119^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy < nHeap || weight[heap[yy + 1]] < weight[heap[yy]] )  {^122^123^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^122^123^124^125^^66^210^[ADD] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  { yy++; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( weight[tmp]  <=  weight[heap[yy]] )  {^126^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy = zz  ==  2;^118^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz >> 1]; ;^129^^^^^66^210^[REPLACE] heap[zz] = heap[yy];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = 1; ;^130^^^^^66^210^[REPLACE] zz = yy;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^130^^^^^66^210^[ADD] zz = yy;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( false )  {^141^^^^^66^210^[REPLACE] while  ( true )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^141^142^^^^66^210^[ADD] while  ( true )  { yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (bytesOut  !=  nHeap )  {^143^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^143^144^145^^^66^210^[ADD] if  ( yy > nHeap )  { break; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy < nHeap || weight[heap[yy + 4]] < weight[heap[yy]] )  {^146^147^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^146^147^148^149^^66^210^[ADD] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  { yy++; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( weight[tmp]  >  weight[heap[yy]] )  {^150^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy =inBlockSize  >=  4;^142^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz >> 1]; ;^153^^^^^66^210^[REPLACE] heap[zz] = heap[yy];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = 1; ;^154^^^^^66^210^[REPLACE] zz = yy;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( weight[tmp]  == workLimit )  {^175^^^^^66^210^[REPLACE] while  ( weight[tmp] < weight[heap[zz >> 1]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz  <  1];^176^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz >>= 2;^177^^^^^66^210^[REPLACE] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (bytesOut  <=  nHeap )  {^119^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^119^120^121^^^66^210^[ADD] if  ( yy > nHeap )  { break; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy < nHeap ) {^122^123^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( weight[tmp]  ==  weight[heap[yy]] )  {^126^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^126^127^128^^^66^210^[ADD] if  ( weight[tmp] < weight[heap[yy]] )  { break; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (bytesOut  <  nNodes )  {^143^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^143^^^^^66^210^[REMOVE] ^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy < nHeap ) {^146^147^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( weight[tmp]  <=  weight[heap[yy]] )  {^150^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^150^151^152^^^66^210^[ADD] if  ( weight[tmp] < weight[heap[yy]] )  { break; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n3 = heap[3];^110^^^^^66^210^[REPLACE] n1 = heap[1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[2] = heap[nHeap];^111^^^^^66^210^[REPLACE] heap[1] = heap[nHeap];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = 4;^115^^^^^66^210^[REPLACE] zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^115^^^^^66^210^[ADD] zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tmp =  weight[zz];^116^^^^^66^210^[REPLACE] tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^116^^^^^66^210^[ADD] tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy = zz  !=  1;^118^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz]  = null ;^132^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^132^^^^^66^210^[ADD] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n2 = heap[1 * 2];^134^^^^^66^210^[REPLACE] n2 = heap[1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^134^^^^^66^210^[ADD] n2 = heap[1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[0] = heap[nHeap];^135^^^^^66^210^[REPLACE] heap[1] = heap[nHeap];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = 1 - 3;^139^^^^^66^210^[REPLACE] zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tmp =  weight[zz];^140^^^^^66^210^[REPLACE] tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy =inBlockSize  >  1;^142^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^142^^^^^66^210^[ADD] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] ;^156^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[n1]  = null ;^159^^^^^66^210^[REPLACE] parent[n1] = parent[n2] = nNodes;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^159^^^^^66^210^[ADD] parent[n1] = parent[n2] = nNodes;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[n1] ;^159^^^^^66^210^[REPLACE] parent[n1] = parent[n2] = nNodes;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[nNodes] =  (  ( weight[n1] & 0xffffff00 ) +  ( weight[n2] & 0xffffff00 )  ) &  ( 1 +  (  (  ( weight[n1] & 0x000000ff ) >  ( weight[n2] & 0x000000ff )  )^161^162^163^164^^66^210^[REPLACE] weight[nNodes] =  (  ( weight[n1] & 0xffffff00 ) +  ( weight[n2] & 0xffffff00 )  ) |  ( 1 +  (  (  ( weight[n1] & 0x000000ff ) >  ( weight[n2] & 0x000000ff )  )^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[nNodes] = -2;^168^^^^^66^210^[REPLACE] parent[nNodes] = -1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[nHeap] = i; ;^170^^^^^66^210^[REPLACE] heap[nHeap] = nNodes;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz =  nNodes;^173^^^^^66^210^[REPLACE] zz = nHeap;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^tmp = heap[zz];^173^174^^^^66^210^[ADD] zz = nHeap; tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tmp =  weight[zz];^174^^^^^66^210^[REPLACE] tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz  <=  n1];^176^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^176^^^^^66^210^[ADD] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz >>= 3;^177^^^^^66^210^[REPLACE] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz]  =  heap[zz] ;^179^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 3, yy = 3, tmp = 3;^114^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0L, yy = 0L, tmp = 0L;^114^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 2, yy = 2, tmp = 2;^114^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 1, yy = 1, tmp = 1;^138^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^138^^^^^66^210^[ADD] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 3, yy = 3, tmp = 3;^138^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 3, tmp = 3;^172^^^^^66^210^[REPLACE] int zz = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0L, tmp = 0L;^172^^^^^66^210^[REPLACE] int zz = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy  <  nHeap )  {^119^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( quadrant[tmp]  ==  weight[heap[yy]] )  {^126^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^129^^^^^66^210^[ADD] heap[zz] = heap[yy];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy  <  nHeap )  {^143^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy < nHeap || weight[heap[yy + 1]] < weight[heap[yy]] )  {^146^147^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( weight[tmp]  ==  weight[heap[yy]] )  {^150^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^150^^^^^66^210^[REMOVE] ^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy =inBlockSize  ==  1;^142^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^154^^^^^66^210^[ADD] zz = yy;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( weight[tmp]  <=  weight[heap[zz >> 1]] )  {^175^^^^^66^210^[REPLACE] while  ( weight[tmp] < weight[heap[zz >> 1]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz  <=  1];^176^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( parent[k]  >  0 )  {^190^^^^^66^210^[REPLACE] while  ( parent[k] >= 0 )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^k =  zptr[k];^191^^^^^66^210^[REPLACE] k = parent[k];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  ( nHeap <  ( MAX_ALPHA_SIZE + 2 )  )  )  {^105^^^^^66^210^[REPLACE] if  ( ! ( nHeap <  ( MAX_ALPHA_SIZE + 2 )  )  )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^106^^^^^66^210^[REPLACE] panic (  ) ;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy  >=  nHeap )  {^119^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (true || weight[heap[yy + 1]] < weight[heap[yy]] )  {^122^123^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy  >= bytesOut )  {^143^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^150^151^152^^^66^210^[ADD] if  ( weight[tmp] < weight[heap[yy]] )  { break; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  ( nHeap <  ( MAX_ALPHA_SIZE * 2 )  )  )  {^182^^^^^66^210^[REPLACE] if  ( ! ( nNodes <  ( MAX_ALPHA_SIZE * 2 )  )  )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^panic (  ) ;^182^183^184^^^66^210^[ADD] if  ( ! ( nNodes <  ( MAX_ALPHA_SIZE * 2 )  )  )  { panic (  ) ; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^183^^^^^66^210^[REPLACE] panic (  ) ;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^183^^^^^66^210^[ADD] panic (  ) ;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  ==  maxLen )  {^195^^^^^66^210^[REPLACE] if  ( j > maxLen )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^tooLong = true;^195^196^197^^^66^210^[ADD] if  ( j > maxLen )  { tooLong = true; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tooLong = false;^196^^^^^66^210^[REPLACE] tooLong = true;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( tooLong )  {^200^^^^^66^210^[REPLACE] if  ( !tooLong )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1; i  < workLimit; i++ )  {^90^^^^^66^210^[REPLACE] for  ( i = 1; i <= alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( weight[tmp]  !=  weight[heap[zz >> 1]] )  {^98^^^^^66^210^[REPLACE] while  ( weight[tmp] < weight[heap[zz >> 1]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz  !=  n1];^99^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^99^^^^^66^210^[ADD] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[i] = -3;^91^^^^^66^210^[REPLACE] parent[i] = -1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^91^92^^^^66^210^[ADD] parent[i] = -1; nHeap++;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[nHeap] = nNodes; ;^93^^^^^66^210^[REPLACE] heap[nHeap] = i;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz =  null;^96^^^^^66^210^[REPLACE] zz = nHeap;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tmp =  weight[zz];^97^^^^^66^210^[REPLACE] tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz  !=  1];^99^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz >>= 1 + 0;^100^^^^^66^210^[REPLACE] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz]  = null ;^102^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^102^^^^^66^210^[ADD] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int sp, lo, hi, d;^95^^^^^66^210^[REPLACE] int zz, tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1; i  !=  alphaSize; i++ )  {^187^^^^^66^210^[REPLACE] for  ( i = 1; i <= alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( parent[k]  ==  0 )  {^190^^^^^66^210^[REPLACE] while  ( parent[k] >= 0 )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  !=  maxLen )  {^195^^^^^66^210^[REPLACE] if  ( j > maxLen )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 0L;^188^^^^^66^210^[REPLACE] j = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^k -= 4; ;^189^^^^^66^210^[REPLACE] k = i;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^191^^^^^66^210^[ADD] k = parent[k];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[i  <  1] =  ( char )  j;^194^^^^^66^210^[REPLACE] len[i - 1] =  ( char )  j;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tooLong = false; ;^196^^^^^66^210^[REPLACE] tooLong = true;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 1; i  !=  alphaSize; i++ )  {^204^^^^^66^210^[REPLACE] for  ( i = 1; i < alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = weight[i]  <=  8L;^205^^^^^66^210^[REPLACE] j = weight[i] >> 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^205^206^^^^66^210^[ADD] j = weight[i] >> 8; j = 1 +  ( j / 2 ) ;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j =n1 +  ( j / 2 ) ;^206^^^^^66^210^[REPLACE] j = 1 +  ( j / 2 ) ;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[i] = j  >=  8;^207^^^^^66^210^[REPLACE] weight[i] = j << 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nNodes =  workDone;^83^^^^^66^210^[REPLACE] nNodes = alphaSize;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^83^84^^^^66^210^[ADD] nNodes = alphaSize; nHeap = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nHeap = 0 - 3;^84^^^^^66^210^[REPLACE] nHeap = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^84^^^^^66^210^[ADD] nHeap = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[0 / 1] = 0 / 1;^86^^^^^66^210^[REPLACE] heap[0] = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[0L] = 0L;^87^^^^^66^210^[REPLACE] weight[0] = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[0 - 0] = -2;^88^^^^^66^210^[REPLACE] parent[0] = -2;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= alphaSize; i++ )  {^90^^^^^66^210^[REPLACE] for  ( i = 1; i <= alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz =  workFactor;^96^^^^^66^210^[REPLACE] zz = nHeap;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^97^^^^^66^210^[ADD] tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz  >=  1];^99^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = 1; ;^100^^^^^66^210^[REPLACE] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] ;^102^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n1 - 1 = heap[1 - 1];^110^^^^^66^210^[REPLACE] n1 = heap[1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[4] = heap[nHeap];^111^^^^^66^210^[REPLACE] heap[1] = heap[nHeap];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = 1 - 0;^115^^^^^66^210^[REPLACE] zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^tmp = heap[zz];^115^116^^^^66^210^[ADD] zz = 1; tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy = zz  !=  1 - 3;^118^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz]  =  heap[zz] ;^132^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^heap[1] = heap[nHeap];^134^135^^^^66^210^[ADD] n2 = heap[1]; heap[1] = heap[nHeap];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[1 * 0] = heap[nHeap];^135^^^^^66^210^[REPLACE] heap[1] = heap[nHeap];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = 2;^139^^^^^66^210^[REPLACE] zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^140^^^^^66^210^[ADD] tmp = heap[zz];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy =inBlockSize  <=  1;^142^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^153^^^^^66^210^[ADD] heap[zz] = heap[yy];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz]  =  heap[zz] ;^156^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[n1]  =  parent[n1] ;^159^^^^^66^210^[REPLACE] parent[n1] = parent[n2] = nNodes;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^161^162^163^^^66^210^[ADD] weight[nNodes] =  (  ( weight[n1] & 0xffffff00 ) +  ( weight[n2] & 0xffffff00 )  ) |  ( 1 +  (  (  ( weight[n1] & 0x000000ff )^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[nNodes] = -1 - 3;^168^^^^^66^210^[REPLACE] parent[nNodes] = -1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz =  workFactor;^173^^^^^66^210^[REPLACE] zz = nHeap;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[yy]; ;^176^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz >>= 1L;^177^^^^^66^210^[REPLACE] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^177^^^^^66^210^[ADD] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz]  = null ;^179^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tooLong = true;^186^^^^^66^210^[REPLACE] tooLong = false;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^186^^^^^66^210^[ADD] tooLong = false;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i <= alphaSize; i++ )  {^187^^^^^66^210^[REPLACE] for  ( i = 1; i <= alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 0 / 4;^188^^^^^66^210^[REPLACE] j = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^k = i;^188^189^^^^66^210^[ADD] j = 0; k = i;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[i -workLimit] =  ( char )  j;^194^^^^^66^210^[REPLACE] len[i - 1] =  ( char )  j;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^196^^^^^66^210^[ADD] tooLong = true;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i < alphaSize; i++ )  {^204^^^^^66^210^[REPLACE] for  ( i = 1; i < alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^204^205^206^207^208^66^210^[ADD] for  ( i = 1; i < alphaSize; i++ )  { j = weight[i] >> 8; j = 1 +  ( j / 2 ) ; weight[i] = j << 8; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = weight[i]  <  8L;^205^^^^^66^210^[REPLACE] j = weight[i] >> 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 1  ^   ( j / 2 ) ;^206^^^^^66^210^[REPLACE] j = 1 +  ( j / 2 ) ;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[i] = j  >  8L;^207^^^^^66^210^[REPLACE] weight[i] = j << 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^95^96^^^^66^210^[ADD] int zz, tmp; zz = nHeap;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0 - 0, yy = 0 - 0, tmp = 0 - 0;^114^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 1, yy = 1, tmp = 1;^114^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 4, yy = 4, tmp = 4;^138^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^zz = nHeap;^172^173^^^^66^210^[ADD] int zz = 0, tmp = 0; zz = nHeap;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0 << 1, tmp = 0 << 1;^172^^^^^66^210^[REPLACE] int zz = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( weight[tmp]  >  weight[heap[zz >> 3]] )  {^98^^^^^66^210^[REPLACE] while  ( weight[tmp] < weight[heap[zz >> 1]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz  <=  1];^99^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz >>= 0;^100^^^^^66^210^[REPLACE] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( nHeap  !=  2 )  {^109^^^^^66^210^[REPLACE] while  ( nHeap > 1 )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^117^118^^^^66^210^[ADD] while  ( true )  { yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy  >=  runLength )  {^119^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^119^^^^^66^210^[REMOVE] ^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( weight[tmp]  >=  weight[heap[yy]] )  {^126^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy = zz  >= inBlockSize;^118^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy  ==  nHeap )  {^143^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( weight[tmp]  !=  weight[heap[yy]] )  {^150^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy = zz  <=  1;^142^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( yy  !=  workFactor )  {^119^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( bytesOut  >= bytesOut )  {^143^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (true || weight[heap[yy + 1]] < weight[heap[yy]] )  {^146^147^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n2 = heap[1]; ;^110^^^^^66^210^[REPLACE] n1 = heap[1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^110^^^^^66^210^[ADD] n1 = heap[1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[0] = heap[nHeap];^111^^^^^66^210^[REPLACE] heap[1] = heap[nHeap];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = 3;^115^^^^^66^210^[REPLACE] zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy = inBlockSize  >  0;^118^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^118^^^^^66^210^[ADD] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n1 = heap[1]; ;^134^^^^^66^210^[REPLACE] n2 = heap[1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[1 * 2] = heap[nHeap];^135^^^^^66^210^[REPLACE] heap[1] = heap[nHeap];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = yy; ;^139^^^^^66^210^[REPLACE] zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy = zz  <=  3;^142^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[nNodes] = -0;^168^^^^^66^210^[REPLACE] parent[nNodes] = -1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^170^^^^^66^210^[ADD] heap[nHeap] = nNodes;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz =  origPtr;^173^^^^^66^210^[REPLACE] zz = nHeap;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^zz >>= 1;^176^177^^^^66^210^[ADD] heap[zz] = heap[zz >> 1]; zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] ;^179^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^114^115^^^^66^210^[ADD] int zz = 0, yy = 0, tmp = 0; zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0 >>> 3, yy = 0 >>> 3, tmp = 0 >>> 3;^138^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0 - 1, yy = 0 - 1, tmp = 0 - 1;^138^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 1, tmp = 1;^172^^^^^66^210^[REPLACE] int zz = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 4, tmp = 4;^172^^^^^66^210^[REPLACE] int zz = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( bytesOut  <  nHeap )  {^119^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^119^120^121^^^66^210^[ADD] if  ( yy > nHeap )  { break; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (true ) {^122^123^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( weight[tmp]  == workLimit )  {^126^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy = zz  > inBlockSize;^118^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  weight[heap[yy + 1]] < weight[heap[yy]] )  {^146^147^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( weight[tmp]  >= workLimit )  {^150^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy = zz  <=  1 << 4;^142^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( weight[tmp]  >  weight[heap[zz >> 4]] )  {^175^^^^^66^210^[REPLACE] while  ( weight[tmp] < weight[heap[zz >> 1]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^175^176^^^^66^210^[ADD] while  ( weight[tmp] < weight[heap[zz >> 1]] )  { heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz  < inBlockSize];^176^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( parent[k]  !=  0 << 2 )  {^190^^^^^66^210^[REPLACE] while  ( parent[k] >= 0 )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^k =  null[k];^191^^^^^66^210^[REPLACE] k = parent[k];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  ( nHeap <  ( MAX_ALPHA_SIZE + 2 >> 2 )  )  )  {^105^^^^^66^210^[REPLACE] if  ( ! ( nHeap <  ( MAX_ALPHA_SIZE + 2 )  )  )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (bytesOut  <  nHeap )  {^119^^^^^66^210^[REPLACE] if  ( yy > nHeap )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( bytesOut < nHeap || weight[heap[yy + 1]] < weight[heap[yy]] )  {^122^123^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( weight[tmp]  >  weight[heap[yy]] )  {^126^^^^^66^210^[REPLACE] if  ( weight[tmp] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  quadrant[heap[yy + 2]] < weight[heap[yy]] )  {^146^147^^^^66^210^[REPLACE] if  ( yy < nHeap && weight[heap[yy + 1]] < weight[heap[yy]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  ( nNodes <  ( MAX_ALPHA_SIZE * 2 )  )  )  {^182^^^^^66^210^[REPLACE] if  ( ! ( nNodes <  ( MAX_ALPHA_SIZE * 2 )  )  )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  <  maxLen )  {^195^^^^^66^210^[REPLACE] if  ( j > maxLen )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^195^196^197^^^66^210^[ADD] if  ( j > maxLen )  { tooLong = true; }^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( !true )  {^200^^^^^66^210^[REPLACE] if  ( !tooLong )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1; i  <  alphaSize; i++ )  {^90^^^^^66^210^[REPLACE] for  ( i = 1; i <= alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( quadrant[tmp]  ==  weight[heap[zz >> 1]] )  {^98^^^^^66^210^[REPLACE] while  ( weight[tmp] < weight[heap[zz >> 1]] )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz  ==  n1];^99^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz >>= 1 % 2;^100^^^^^66^210^[REPLACE] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[i] = -4;^91^^^^^66^210^[REPLACE] parent[i] = -1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^96^^^^^66^210^[ADD] zz = nHeap;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^99^100^^^^66^210^[ADD] heap[zz] = heap[zz >> 1]; zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz]  =  heap[zz] ;^102^^^^^66^210^[REPLACE] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^95^^^^^66^210^[ADD] int zz, tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1; i  <  alphaSize; i++ )  {^187^^^^^66^210^[REPLACE] for  ( i = 1; i <= alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( parent[k]  !=  1 )  {^190^^^^^66^210^[REPLACE] while  ( parent[k] >= 0 )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^190^191^^^^66^210^[ADD] while  ( parent[k] >= 0 )  { k = parent[k];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >=  workLimit )  {^195^^^^^66^210^[REPLACE] if  ( j > maxLen )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 3;^188^^^^^66^210^[REPLACE] j = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^189^^^^^66^210^[ADD] k = i;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^j++;^191^192^^^^66^210^[ADD] k = parent[k]; j++;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[i  !=  4] =  ( char )  j;^194^^^^^66^210^[REPLACE] len[i - 1] =  ( char )  j;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1; i  >=  alphaSize; i++ )  {^204^^^^^66^210^[REPLACE] for  ( i = 1; i < alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = weight[i]  >=  8;^205^^^^^66^210^[REPLACE] j = weight[i] >> 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^j = 1 +  ( j / 2 ) ;^205^206^^^^66^210^[ADD] j = weight[i] >> 8; j = 1 +  ( j / 2 ) ;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[i] = j  <=  8;^207^^^^^66^210^[REPLACE] weight[i] = j << 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^207^^^^^66^210^[ADD] weight[i] = j << 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nNodes =  zz;^83^^^^^66^210^[REPLACE] nNodes = alphaSize;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^nHeap = 0;^83^84^^^^66^210^[ADD] nNodes = alphaSize; nHeap = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nHeap = 1;^84^^^^^66^210^[REPLACE] nHeap = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[2] = 2;^86^^^^^66^210^[REPLACE] heap[0] = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[4] = 4;^87^^^^^66^210^[REPLACE] weight[0] = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^87^88^^^^66^210^[ADD] weight[0] = 0; parent[0] = -2;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[0 << 1] = -2;^88^^^^^66^210^[REPLACE] parent[0] = -2;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1 * 2; i <= alphaSize; i++ )  {^90^^^^^66^210^[REPLACE] for  ( i = 1; i <= alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^heap[zz] = heap[zz  <  n1];^99^^^^^66^210^[REPLACE] heap[zz] = heap[zz >> 1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz >>= 1 >> 0;^100^^^^^66^210^[REPLACE] zz >>= 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n1L = heap[1L];^110^^^^^66^210^[REPLACE] n1 = heap[1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^111^^^^^66^210^[ADD] heap[1] = heap[nHeap];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = 2;^115^^^^^66^210^[REPLACE] zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy = inBlockSize  >  n1;^118^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n2 = heap[2];^134^^^^^66^210^[REPLACE] n2 = heap[1];^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz = 4;^139^^^^^66^210^[REPLACE] zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy = zz  ==  1;^142^^^^^66^210^[REPLACE] yy = zz << 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^parent[nNodes] = -1 * 3;^168^^^^^66^210^[REPLACE] parent[nNodes] = -1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^168^^^^^66^210^[ADD] parent[nNodes] = -1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zz =  tmp;^173^^^^^66^210^[REPLACE] zz = nHeap;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^179^^^^^66^210^[ADD] heap[zz] = tmp;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1 % 1; i <= alphaSize; i++ )  {^187^^^^^66^210^[REPLACE] for  ( i = 1; i <= alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 1;^188^^^^^66^210^[REPLACE] j = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^191^192^^^^66^210^[ADD] k = parent[k]; j++;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[i  ==  1] =  ( char )  j;^194^^^^^66^210^[REPLACE] len[i - 1] =  ( char )  j;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1L; i < alphaSize; i++ )  {^204^^^^^66^210^[REPLACE] for  ( i = 1; i < alphaSize; i++ )  {^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = weight[i]  < workFactor;^205^^^^^66^210^[REPLACE] j = weight[i] >> 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^weight[i] = j << 8;^206^207^^^^66^210^[ADD] j = 1 +  ( j / 2 ) ; weight[i] = j << 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^weight[i] = j  >=  8L;^207^^^^^66^210^[REPLACE] weight[i] = j << 8;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0 * 1, yy = 0 * 1, tmp = 0 * 1;^114^^^^^66^210^[REPLACE] int zz = 0, yy = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^138^139^^^^66^210^[ADD] int zz = 0, yy = 0, tmp = 0; zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^zz = 1;^138^139^^^^66^210^[ADD] int zz = 0, yy = 0, tmp = 0; zz = 1;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int zz = 0 << 0, tmp = 0 << 0;^172^^^^^66^210^[REPLACE] int zz = 0, tmp = 0;^[METHOD] hbMakeCodeLengths [TYPE] void [PARAMETER] char[] len int[] freq int alphaSize int maxLen [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  blockCRC  blockSize100k  bsBuff  bsLive  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int b =  ( 256 + bv )   <  256;^301^^^^^300^319^[REPLACE] int b =  ( 256 + bv )  % 256;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( currentChar  ==  -1 )  {^302^^^^^300^319^[REPLACE] if  ( currentChar != -1 )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -1; ;^316^^^^^300^319^[REPLACE] currentChar = b;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^316^^^^^300^319^[ADD] currentChar = b;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( currentChar  &&  b )  {^303^^^^^300^319^[REPLACE] if  ( currentChar == b )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 4;^312^^^^^300^319^[REPLACE] runLength = 1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^312^313^^^^300^319^[ADD] runLength = 1; currentChar = b;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -1; ;^313^^^^^300^319^[REPLACE] currentChar = b;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^313^^^^^300^319^[ADD] currentChar = b;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( runLength  >=  4 )  {^305^^^^^300^319^[REPLACE] if  ( runLength > 254 )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -4;^307^^^^^300^319^[REPLACE] currentChar = -1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^307^^^^^300^319^[ADD] currentChar = -1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 4;^308^^^^^300^319^[REPLACE] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^308^^^^^300^319^[ADD] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -2;^307^^^^^300^319^[REPLACE] currentChar = -1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 0 >> 3;^308^^^^^300^319^[REPLACE] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( runLength  >=  254 % 1 )  {^305^^^^^300^319^[REPLACE] if  ( runLength > 254 )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = b; ;^307^^^^^300^319^[REPLACE] currentChar = -1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 1; ;^308^^^^^300^319^[REPLACE] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -3;^307^^^^^300^319^[REPLACE] currentChar = -1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 2;^308^^^^^300^319^[REPLACE] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 0; ;^312^^^^^300^319^[REPLACE] runLength = 1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  !=  b )  {^303^^^^^300^319^[REPLACE] if  ( currentChar == b )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 3;^312^^^^^300^319^[REPLACE] runLength = 1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( runLength  !=  254 )  {^305^^^^^300^319^[REPLACE] if  ( runLength > 254 )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^305^306^307^308^309^300^319^[ADD] if  ( runLength > 254 )  { writeRun (  ) ; currentChar = -1; runLength = 0; }^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( runLength  <=  254 )  {^305^^^^^300^319^[REPLACE] if  ( runLength > 254 )  {^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -1 >> 4;^307^^^^^300^319^[REPLACE] currentChar = -1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 0L;^308^^^^^300^319^[REPLACE] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 3;^308^^^^^300^319^[REPLACE] runLength = 0;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runLength = 1 >> 2;^312^^^^^300^319^[REPLACE] runLength = 1;^[METHOD] write [TYPE] void [PARAMETER] int bv [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( last  >=  allowableBlockSize )  {^322^^^^^321^365^[REPLACE] if  ( last < allowableBlockSize )  {^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^361^^^^^322^364^[REPLACE] endBlock (  ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^361^^^^^322^364^[ADD] endBlock (  ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^362^^^^^322^364^[REPLACE] initBlock (  ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^363^^^^^322^364^[REPLACE] writeRun (  ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( int i = 0; i  <=  runLength; i++ )  {^324^^^^^321^365^[REPLACE] for  ( int i = 0; i < runLength; i++ )  {^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^mCrc.CRC (  ( char )  currentChar ) ;^325^^^^^321^365^[REPLACE] mCrc.updateCRC (  ( char )  currentChar ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[currentChar] = false;^323^^^^^321^365^[REPLACE] inUse[currentChar] = true;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  <=  1] =  ( char )  currentChar;^330^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last +workLimit] =  ( char )  currentChar;^334^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  >=  4] =  ( char )  currentChar;^336^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  <=  1] =  ( char )  currentChar;^340^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  <  1] =  ( char )  currentChar;^342^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  ||  4] =  ( char )  currentChar;^344^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[runLength  >  4] = true;^347^^^^^321^365^[REPLACE] inUse[runLength - 4] = true;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  ==  4] =  ( char )  currentChar;^349^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^349^^^^^321^365^[ADD] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  &  1] =  ( char )  currentChar;^351^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  >  3] =  ( char )  currentChar;^353^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last +workLimit] =  ( char )  currentChar;^355^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  ==  1] =  ( char )   ( runLength - 4 ) ;^357^^^^^321^365^[REPLACE] block[last + 1] =  ( char )   ( runLength - 4 ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^357^^^^^321^365^[ADD] block[last + 1] =  ( char )   ( runLength - 4 ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( int i = 0 << 0; i < runLength; i++ )  {^324^^^^^321^365^[REPLACE] for  ( int i = 0; i < runLength; i++ )  {^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( int i = 2; i  >=  runLength; i++ )  {^324^^^^^321^365^[REPLACE] for  ( int i = 0; i < runLength; i++ )  {^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^323^^^^^321^365^[ADD] inUse[currentChar] = true;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  &  1] =  ( char )  currentChar;^330^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  <=  4] =  ( char )  currentChar;^334^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  |  0] =  ( char )  currentChar;^336^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  ^  1] =  ( char )  currentChar;^340^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  >=  1] =  ( char )  currentChar;^342^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^342^^^^^321^365^[ADD] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  ^  1] =  ( char )  currentChar;^344^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[runLength  <=  4] = true;^347^^^^^321^365^[REPLACE] inUse[runLength - 4] = true;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  >=  1] =  ( char )  currentChar;^349^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  >=  1 % 2] =  ( char )  currentChar;^351^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^351^^^^^321^365^[ADD] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  ^  1] =  ( char )  currentChar;^353^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  >  1] =  ( char )  currentChar;^355^^^^^321^365^[REPLACE] block[last + 1] =  ( char )  currentChar;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  |  1] =  ( char )   ( runLength - 4 ) ;^357^^^^^321^365^[REPLACE] block[last + 1] =  ( char )   ( runLength - 4 ) ;^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( int i = 2; i < runLength; i++ )  {^324^^^^^321^365^[REPLACE] for  ( int i = 0; i < runLength; i++ )  {^[METHOD] writeRun [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^370^^^^^369^372^[REPLACE] close (  ) ;^[METHOD] finalize [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^super.Object (  ) ;^371^^^^^369^372^[REPLACE] super.finalize (  ) ;^[METHOD] finalize [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 16 + j] )  {^375^^^^^374^382^[REPLACE] if  ( closed )  {^[METHOD] close [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^375^^^^^374^382^[REMOVE] ^[METHOD] close [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false;^376^^^^^374^382^[REPLACE] return;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^randomiseBlock (  ) ;^378^^^^^374^382^[REPLACE] finish (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^super.flush (  ) ;^379^^^^^374^382^[REPLACE] super.close (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsStream .endBlock (  )  ;^380^^^^^374^382^[REPLACE] bsStream.close (  ) ;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^finish (  ) ;^380^^^^^374^382^[REMOVE] ^[METHOD] close [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^closed = false;^381^^^^^374^382^[REPLACE] closed = true;^[METHOD] close [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 16 + j] )  {^385^^^^^384^395^[REPLACE] if  ( closed )  {^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false;^386^^^^^384^395^[REPLACE] return;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( runLength  <= nNodes )  {^389^^^^^384^395^[REPLACE] if  ( runLength > 0 )  {^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^writeRun (  ) ;^389^390^391^^^384^395^[ADD] if  ( runLength > 0 )  { writeRun (  ) ; }^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^390^^^^^384^395^[REPLACE] writeRun (  ) ;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^390^^^^^384^395^[ADD] writeRun (  ) ;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^currentChar = -1L;^392^^^^^384^395^[REPLACE] currentChar = -1;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^392^393^^^^384^395^[ADD] currentChar = -1; endBlock (  ) ;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^393^^^^^384^395^[REPLACE] endBlock (  ) ;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^394^^^^^384^395^[REPLACE] endCompression (  ) ;^[METHOD] finish [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^super.close (  ) ;^398^^^^^397^400^[REPLACE] super.flush (  ) ;^[METHOD] flush [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^398^^^^^397^400^[ADD] super.flush (  ) ;^[METHOD] flush [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsStream.close (  ) ;^399^^^^^397^400^[REPLACE] bsStream.flush (  ) ;^[METHOD] flush [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bytesOut = 3;^405^^^^^404^417^[REPLACE] bytesOut = 0;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nBlocksRandomised = 3;^406^^^^^404^417^[REPLACE] nBlocksRandomised = 0;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 'h' ) ;^408^^^^^404^417^[REPLACE] bsPutUChar ( 'B' ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 'B' ) ;^409^^^^^404^417^[REPLACE] bsPutUChar ( 'Z' ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 'B' ) ;^413^^^^^404^417^[REPLACE] bsPutUChar ( 'h' ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^finish (  ) ;^413^^^^^404^417^[REMOVE] ^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar (this + blockSize100k ) ;^414^^^^^404^417^[REPLACE] bsPutUChar ( '0' + blockSize100k ) ;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^combinedCRC = 4;^416^^^^^404^417^[REPLACE] combinedCRC = 0;^[METHOD] initialize [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^mCrc.getFinalCRC (  ) ;^423^^^^^421^433^[REPLACE] mCrc.initialiseCRC (  ) ;^[METHOD] initBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^last = -1L;^424^^^^^421^433^[REPLACE] last = -1;^[METHOD] initBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^424^^^^^421^433^[ADD] last = -1;^[METHOD] initBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( workLimitnt i = 0; i  !=  256; i++ )  {^427^^^^^421^433^[REPLACE] for  ( int i = 0; i < 256; i++ )  {^[METHOD] initBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse16[i] = false; ;^428^^^^^421^433^[REPLACE] inUse[i] = false;^[METHOD] initBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^428^^^^^421^433^[ADD] inUse[i] = false;^[METHOD] initBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[i] = true;^428^^^^^421^433^[REPLACE] inUse[i] = false;^[METHOD] initBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( int i = 2; i < 256; i++ )  {^427^^^^^421^433^[REPLACE] for  ( int i = 0; i < 256; i++ )  {^[METHOD] initBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^427^428^429^^^421^433^[ADD] for  ( int i = 0; i < 256; i++ )  { inUse[i] = false; }^[METHOD] initBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^allowableBlockSize = baseBlockSize * blockSize100k  !=  20;^432^^^^^421^433^[REPLACE] allowableBlockSize = baseBlockSize * blockSize100k - 20;^[METHOD] initBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^blockCRC ;^436^^^^^435^482^[REPLACE] blockCRC = mCrc.getFinalCRC (  ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^combinedCRC =  ( combinedCRC << 1 )  &  ( combinedCRC >>> 31 ) ;^437^^^^^435^482^[REPLACE] combinedCRC =  ( combinedCRC << 1 )  |  ( combinedCRC >>> 31 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^combinedCRC ^ =  combinedCRC ^;^438^^^^^435^482^[REPLACE] combinedCRC ^= blockCRC;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  &&  n2 )  {^442^^^^^435^482^[REPLACE] if  ( last == -1 )  {^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false;^443^^^^^435^482^[REPLACE] return;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^moveToFrontCodeAndSend (  ) ;^447^^^^^435^482^[REPLACE] doReversibleTransformation (  ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 0x41 ) ;^462^^^^^435^482^[REPLACE] bsPutUChar ( 0x31 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 0x31 ) ;^463^^^^^435^482^[REPLACE] bsPutUChar ( 0x41 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 0x41 ) ;^464^^^^^435^482^[REPLACE] bsPutUChar ( 0x59 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 0x41 ) ;^465^^^^^435^482^[REPLACE] bsPutUChar ( 0x26 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^465^466^^^^435^482^[ADD] bsPutUChar ( 0x26 ) ; bsPutUChar ( 0x53 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 0x41 ) ;^466^^^^^435^482^[REPLACE] bsPutUChar ( 0x53 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 0x41 ) ;^467^^^^^435^482^[REPLACE] bsPutUChar ( 0x59 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^randomiseBlock (  ) ;^470^^^^^435^482^[REPLACE] bsPutint ( blockCRC ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^finish (  ) ;^470^^^^^435^482^[REMOVE] ^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 16 + j] )  {^473^^^^^435^482^[REPLACE] if  ( blockRandomised )  {^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 >>> 2, 0 ) ;^477^^^^^473^478^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1L, 1L ) ;^474^^^^^435^482^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^super.finalize (  ) ;^481^^^^^435^482^[REPLACE] moveToFrontCodeAndSend (  ) ;^[METHOD] endBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 0x41 ) ;^492^^^^^484^502^[REPLACE] bsPutUChar ( 0x17 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^492^^^^^484^502^[ADD] bsPutUChar ( 0x17 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 0x41 ) ;^493^^^^^484^502^[REPLACE] bsPutUChar ( 0x72 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 0x41 ) ;^494^^^^^484^502^[REPLACE] bsPutUChar ( 0x45 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^494^495^^^^484^502^[ADD] bsPutUChar ( 0x45 ) ; bsPutUChar ( 0x38 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 0x41 ) ;^495^^^^^484^502^[REPLACE] bsPutUChar ( 0x38 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 0x41 ) ;^496^^^^^484^502^[REPLACE] bsPutUChar ( 0x50 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutUChar ( 0x41 ) ;^497^^^^^484^502^[REPLACE] bsPutUChar ( 0x90 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^497^^^^^484^502^[ADD] bsPutUChar ( 0x90 ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^blockCRC = mCrc.getFinalCRC (  ) ;^499^^^^^484^502^[REPLACE] bsPutint ( combinedCRC ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^501^^^^^484^502^[REPLACE] bsFinishedWithStream (  ) ;^[METHOD] endCompression [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int sp, lo, hi, d;^506^^^^^504^518^[REPLACE] int n, vec, i;^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^506^^^^^504^518^[ADD] int n, vec, i;^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^vec = 4;^508^^^^^504^518^[REPLACE] vec = 0;^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( length - 1[i] == n )  {^511^^^^^504^518^[REPLACE] if  ( length[i] == n )  {^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^code[i] ;^512^^^^^504^518^[REPLACE] code[i] = vec;^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( n = minLen; n  ==  maxLen; n++ )  {^509^^^^^504^518^[REPLACE] for  ( n = minLen; n <= maxLen; n++ )  {^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^509^510^511^512^513^504^518^[ADD] for  ( n = minLen; n <= maxLen; n++ )  { for  ( i = 0; i < alphaSize; i++ )  { if  ( length[i] == n )  { code[i] = vec; vec++;^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( length + 4[i] == n )  {^511^^^^^504^518^[REPLACE] if  ( length[i] == n )  {^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^511^512^513^514^^504^518^[ADD] if  ( length[i] == n )  { code[i] = vec; vec++; }^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^code[i]  =  code[i] ;^512^^^^^504^518^[REPLACE] code[i] = vec;^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i  <=  tmp; i++ )  {^510^^^^^504^518^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^510^511^512^513^514^504^518^[ADD] for  ( i = 0; i < alphaSize; i++ )  { if  ( length[i] == n )  { code[i] = vec; vec++; }^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( length + 5[i] == n )  {^511^^^^^504^518^[REPLACE] if  ( length[i] == n )  {^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^512^^^^^504^518^[ADD] code[i] = vec;^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i < alphaSize; i++ )  {^510^^^^^504^518^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^vec <<= 1 - 1;^516^^^^^504^518^[REPLACE] vec <<= 1;^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  >=  alphaSize; i++ )  {^510^^^^^504^518^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( length *  2[i] == n )  {^511^^^^^504^518^[REPLACE] if  ( length[i] == n )  {^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^512^513^^^^504^518^[ADD] code[i] = vec; vec++;^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( n =  workLimit; n <^509^^^^^504^518^[REPLACE] for  ( n = minLen; n <= maxLen; n++ )  {^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0L; i < alphaSize; i++ )  {^510^^^^^504^518^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^vec <<= 1 / 2;^516^^^^^504^518^[REPLACE] vec <<= 1;^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^516^^^^^504^518^[ADD] vec <<= 1;^[METHOD] hbAssignCodes [TYPE] void [PARAMETER] int[] code char[] length int minLen int maxLen int alphaSize [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsStream =  null;^521^^^^^520^525^[REPLACE] bsStream = f;^[METHOD] bsSetStream [TYPE] void [PARAMETER] OutputStream f [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsLive = 0 - 1;^522^^^^^520^525^[REPLACE] bsLive = 0;^[METHOD] bsSetStream [TYPE] void [PARAMETER] OutputStream f [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsBuff = 3;^523^^^^^520^525^[REPLACE] bsBuff = 0;^[METHOD] bsSetStream [TYPE] void [PARAMETER] OutputStream f [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bytesOut = 0 - 2;^524^^^^^520^525^[REPLACE] bytesOut = 0;^[METHOD] bsSetStream [TYPE] void [PARAMETER] OutputStream f [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( bsLive  <  2 )  {^528^^^^^527^539^[REPLACE] while  ( bsLive > 0 )  {^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^528^529^^^^527^539^[ADD] while  ( bsLive > 0 )  { int ch =  ( bsBuff >> 24 ) ;^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^bsStream.write ( ch ) ;^530^531^532^533^534^527^539^[ADD] try { bsStream.write ( ch ) ; } catch  ( IOException e )  { throw  e; }^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsStream.write ( workFactor ) ;^531^^^^^527^539^[REPLACE] bsStream.write ( ch ) ;^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsBuff <<= 7;^535^^^^^527^539^[REPLACE] bsBuff <<= 8;^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^bsLive -= 8;^535^536^^^^527^539^[ADD] bsBuff <<= 8; bsLive -= 8;^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsLive = 0; ;^536^^^^^527^539^[REPLACE] bsLive -= 8;^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int ch =  ( bsBuff  <  24 + 0 ) ;^529^^^^^527^539^[REPLACE] int ch =  ( bsBuff >> 24 ) ;^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return ;^533^^^^^527^539^[REPLACE] throw  e;^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsBuff <<= 8 + 3;^535^^^^^527^539^[REPLACE] bsBuff <<= 8;^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsLive -= 9;^536^^^^^527^539^[REPLACE] bsLive -= 8;^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^536^537^^^^527^539^[ADD] bsLive -= 8; bytesOut++;^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int ch =  ( bsBuff  ==  24 ) ;^529^^^^^527^539^[REPLACE] int ch =  ( bsBuff >> 24 ) ;^[METHOD] bsFinishedWithStream [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (workLimit  ==  8 + 3 )  {^542^^^^^541^555^[REPLACE] while  ( bsLive >= 8 )  {^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^542^543^^^^541^555^[ADD] while  ( bsLive >= 8 )  { int ch =  ( bsBuff >> 24 ) ;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^bsStream.write ( ch ) ;^544^545^546^547^548^541^555^[ADD] try { bsStream.write ( ch ) ; } catch  ( IOException e )  { throw e; }^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsStream.write ( workFactor ) ;^545^^^^^541^555^[REPLACE] bsStream.write ( ch ) ;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsBuff <<= 4;^549^^^^^541^555^[REPLACE] bsBuff <<= 8;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsLive -= 0;^550^^^^^541^555^[REPLACE] bsLive -= 8;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int ch =  ( bsBuff  >= workFactor ) ;^543^^^^^541^555^[REPLACE] int ch =  ( bsBuff >> 24 ) ;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return ;^547^^^^^541^555^[REPLACE] throw e;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsStream .writeRun (  )  ;^545^^^^^541^555^[REPLACE] bsStream.write ( ch ) ;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsBuff <<= 8L;^549^^^^^541^555^[REPLACE] bsBuff <<= 8;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^549^^^^^541^555^[ADD] bsBuff <<= 8;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsLive -= 8 >> 0;^550^^^^^541^555^[REPLACE] bsLive -= 8;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int ch =  ( bsBuff  < workFactor ) ;^543^^^^^541^555^[REPLACE] int ch =  ( bsBuff >> 24 ) ;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsBuff |=  ( v  !=   ( 32 - 4 - bsLive - n )  ) ;^553^^^^^541^555^[REPLACE] bsBuff |=  ( v <<  ( 32 - bsLive - n )  ) ;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsLive -= 8; ;^554^^^^^541^555^[REPLACE] bsLive += n;^[METHOD] bsW [TYPE] void [PARAMETER] int n int v [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  IOException e  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 6, c ) ;^558^^^^^557^559^[REPLACE] bsW ( 8, c ) ;^[METHOD] bsPutUChar [TYPE] void [PARAMETER] int c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  c  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 8,  ( u >> 24 )  | 0xff ) ;^562^^^^^561^566^[REPLACE] bsW ( 8,  ( u >> 24 )  & 0xff ) ;^[METHOD] bsPutint [TYPE] void [PARAMETER] int u [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  c  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^562^563^^^^561^566^[ADD] bsW ( 8,  ( u >> 24 )  & 0xff ) ; bsW ( 8,  ( u >> 16 )  & 0xff ) ;^[METHOD] bsPutint [TYPE] void [PARAMETER] int u [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  c  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 7,  ( u >> 16 )  | 0xff ) ;^563^^^^^561^566^[REPLACE] bsW ( 8,  ( u >> 16 )  & 0xff ) ;^[METHOD] bsPutint [TYPE] void [PARAMETER] int u [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  c  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 8,  ( u >>  8 )  | 0xff ) ;^564^^^^^561^566^[REPLACE] bsW ( 8,  ( u >>  8 )  & 0xff ) ;^[METHOD] bsPutint [TYPE] void [PARAMETER] int u [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  c  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^564^565^^^^561^566^[ADD] bsW ( 8,  ( u >>  8 )  & 0xff ) ; bsW ( 8,  u        & 0xff ) ;^[METHOD] bsPutint [TYPE] void [PARAMETER] int u [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  c  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 8, runLength        | 0xff ) ;^565^^^^^561^566^[REPLACE] bsW ( 8,  u        & 0xff ) ;^[METHOD] bsPutint [TYPE] void [PARAMETER] int u [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  c  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  origPtr  runLength  tmp  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( u, c ) ;^569^^^^^568^570^[REPLACE] bsW ( numBits, c ) ;^[METHOD] bsPutIntVS [TYPE] void [PARAMETER] int numBits int c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  c  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  numBits  origPtr  runLength  tmp  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^569^^^^^568^570^[ADD] bsW ( numBits, c ) ;^[METHOD] bsPutIntVS [TYPE] void [PARAMETER] int numBits int c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] szptr  [TYPE]  int[] code  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  allowableBlockSize  alphaSize  b  blockCRC  blockSize100k  bsBuff  bsLive  bv  bytesOut  c  ch  combinedCRC  currentChar  dd  hh  i  inBlockSize  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nHeap  nInUse  nMTF  nNodes  numBits  origPtr  runLength  tmp  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^StackElem[] stack = new StackElem[QSORT_STACK_SIZE];^573^^^^^572^884^[REPLACE] char len[][] = new char[N_GROUPS][MAX_ALPHA_SIZE];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int unLo, unHi, ltLo, gtHi, med, n, m;^575^^^^^572^884^[REPLACE] int v, t, i, j, gs, ge, totc, bt, bc, iter;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^575^^^^^572^884^[ADD] int v, t, i, j, gs, ge, totc, bt, bc, iter;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int nSelectors = 4, alphaSize, minLen, maxLen, selCtr;^576^^^^^572^884^[REPLACE] int nSelectors = 0, alphaSize, minLen, maxLen, selCtr;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j >> shifts ) ;^576^^^^^572^884^[REPLACE] int nSelectors = 0, alphaSize, minLen, maxLen, selCtr;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^576^^^^^572^884^[ADD] int nSelectors = 0, alphaSize, minLen, maxLen, selCtr;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^int nGroups;^576^577^^^^572^884^[ADD] int nSelectors = 0, alphaSize, minLen, maxLen, selCtr; int nGroups;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int i, j, ss, sb;^577^^^^^572^884^[REPLACE] int nGroups;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^alphaSize =workDone + 2;^579^^^^^572^884^[REPLACE] alphaSize = nInUse + 2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  ==  N_GROUPS; t++ )  {^580^^^^^572^884^[REPLACE] for  ( t = 0; t < N_GROUPS; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( vec = 0; v  !=  alphaSize; v++ )  {^581^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart - 1][v] =  ( char )  GREATER_ICOST; ;^582^^^^^572^884^[REPLACE] len[t][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^582^^^^^572^884^[ADD] len[t][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( v = 0 - 1; v < alphaSize; v++ )  {^581^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( vec = 0; v  <=  zz; v++ )  {^581^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^581^582^583^^^572^884^[ADD] for  ( v = 0; v < alphaSize; v++ )  { len[t][v] =  ( char )  GREATER_ICOST; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 4; t < N_GROUPS; t++ )  {^580^^^^^572^884^[REPLACE] for  ( t = 0; t < N_GROUPS; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^580^581^582^583^^572^884^[ADD] for  ( t = 0; t < N_GROUPS; t++ )  { for  ( v = 0; v < alphaSize; v++ )  { len[t][v] =  ( char )  GREATER_ICOST; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1; i <= alphaSize; i++ )  { j = 0; ;^581^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( nMTF  !=  0 )  {^587^^^^^572^884^[REPLACE] if  ( nMTF <= 0 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^588^^^^^572^884^[REPLACE] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^588^^^^^572^884^[ADD] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( nMTF  >=  200 )  {^591^^^^^572^884^[REPLACE] if  ( nMTF < 200 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^nGroups = 2;nGroups = 3;^591^592^593^594^^572^884^[ADD] if  ( nMTF < 200 )  { nGroups = 2; } else if  ( nMTF < 600 )  { nGroups = 3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^} else if  (workLimit  >  600 )  {^593^^^^^572^884^[REPLACE] } else if  ( nMTF < 600 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  else {^595^^^^^572^884^[REPLACE] } else if  ( nMTF < 1200 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^}   nGroups = 4;nGroups = 5;^595^596^597^598^^572^884^[ADD] else if  ( nMTF < 1200 )  { nGroups = 4; } else if  ( nMTF < 2400 )  { nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  if  ( nMTF  >  2400 )  {^597^^^^^572^884^[REPLACE] } else if  ( nMTF < 2400 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 6 / 3;^600^^^^^597^601^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 5L;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 4; ;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 6 + 2;^600^^^^^572^884^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^600^^^^^572^884^[ADD] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 0;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^596^^^^^572^884^[ADD] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  else {^597^^^^^572^884^[REPLACE] } else if  ( nMTF < 2400 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 4;^600^^^^^597^601^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^600^^^^^597^601^[ADD] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 6;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 5; ;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 0;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 6 << 2;^600^^^^^572^884^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 3 - 4;^594^^^^^572^884^[REPLACE] nGroups = 3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  if  ( nMTF  <= workLimit )  {^595^^^^^572^884^[REPLACE] } else if  ( nMTF < 1200 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^}   nGroups = 5;^595^596^597^598^^572^884^[ADD] else if  ( nMTF < 1200 )  { nGroups = 4; } else if  ( nMTF < 2400 )  { nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^} else if  ( nMTF  <=  2400 )  {^597^^^^^572^884^[REPLACE] } else if  ( nMTF < 2400 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 6 >>> 3;^600^^^^^597^601^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 7;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 4;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 6 - 0;^600^^^^^572^884^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 2;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 7;^600^^^^^597^601^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 5 / 1;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 1;^594^^^^^572^884^[REPLACE] nGroups = 3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 4 - 1;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 5;^600^^^^^572^884^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 4;^592^^^^^572^884^[REPLACE] nGroups = 2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  if  ( nMTF  !=  600 )  {^593^^^^^572^884^[REPLACE] } else if  ( nMTF < 600 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^}   nGroups = 3;nGroups = 4;^593^594^595^596^^572^884^[ADD] else if  ( nMTF < 600 )  { nGroups = 3; } else if  ( nMTF < 1200 )  { nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^} else if  ( nMTF  >= workLimit )  {^595^^^^^572^884^[REPLACE] } else if  ( nMTF < 1200 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^}   nGroups = 5;nGroups = 6;^597^598^599^600^601^572^884^[ADD] else if  ( nMTF < 2400 )  { nGroups = 5; } else { nGroups = 6; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 2;^600^^^^^597^601^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^598^^^^^572^884^[ADD] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 8;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 9;^600^^^^^572^884^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 4 * 0;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 5;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 7;^600^^^^^572^884^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 5; ;^594^^^^^572^884^[REPLACE] nGroups = 3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  if  (workLimit  >  1200 )  {^595^^^^^572^884^[REPLACE] } else if  ( nMTF < 1200 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^}  if  (workLimit  <=  2400 )  {^597^^^^^572^884^[REPLACE] } else if  ( nMTF < 2400 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 0;^600^^^^^572^884^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 4 / 0;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^} else if  ( nMTF  ==  2400 )  {^597^^^^^572^884^[REPLACE] } else if  ( nMTF < 2400 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 1;^600^^^^^597^601^[REPLACE] nGroups = 6;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 5 >>> 3;^598^^^^^572^884^[REPLACE] nGroups = 5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 1;^592^^^^^572^884^[REPLACE] nGroups = 2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 3 + 3;^594^^^^^572^884^[REPLACE] nGroups = 3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^594^^^^^572^884^[ADD] nGroups = 3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nGroups = 4 + 4;^596^^^^^572^884^[REPLACE] nGroups = 4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (workLimit  >=  0 )  {^609^^^^^572^884^[REPLACE] while  ( nPart > 0 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( aFreq < tFreq ;^613^^^^^572^884^[REPLACE] while  ( aFreq < tFreq && ge < alphaSize - 1 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^aFreq -= mtfFreq[ge]; ;^615^^^^^572^884^[REPLACE] aFreq += mtfFreq[ge];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^615^^^^^572^884^[ADD] aFreq += mtfFreq[ge];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  nPart != nGroups || nPart != 1 >> 2 ||  (  ( nGroups - nPart )  % 2 != 0 )  )  {^618^619^^^^572^884^[REPLACE] if  ( ge > gs && nPart != nGroups && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^aFreq += mtfFreq[ge]; ;^620^^^^^618^622^[REPLACE] aFreq -= mtfFreq[ge];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  vec <= ge )  {^625^^^^^572^884^[REPLACE] if  ( v >= gs && v <= ge )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^625^626^627^628^629^572^884^[ADD] if  ( v >= gs && v <= ge )  { len[nPart - 1][v] =  ( char )  LESSER_ICOST; } else { len[nPart - 1][v] =  ( char )  GREATER_ICOST; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart  >  1][v] =  ( char )  GREATER_ICOST;^628^^^^^625^629^[REPLACE] len[nPart - 1][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart  ^  1][v] =  ( char )  LESSER_ICOST;^626^^^^^572^884^[REPLACE] len[nPart - 1][v] =  ( char )  LESSER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( v = 0L; v  <= vec; v++ )  {^624^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  v <= ge )  {^625^^^^^572^884^[REPLACE] if  ( v >= gs && v <= ge )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart  <=  1L][v] =  ( char )  GREATER_ICOST;^628^^^^^625^629^[REPLACE] len[nPart - 1][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart  &  1][v] =  ( char )  LESSER_ICOST;^626^^^^^572^884^[REPLACE] len[nPart - 1][v] =  ( char )  LESSER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart  ==  1][v] =  ( char )  LESSER_ICOST;^626^^^^^572^884^[REPLACE] len[nPart - 1][v] =  ( char )  LESSER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart  <  4][v] =  ( char )  GREATER_ICOST;^628^^^^^572^884^[REPLACE] len[nPart - 1][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tFreq = workLimit  ;^610^^^^^572^884^[REPLACE] tFreq = remF / nPart;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge =runLength - 1;^611^^^^^572^884^[REPLACE] ge = gs - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^aFreq = 2;^612^^^^^572^884^[REPLACE] aFreq = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^aFreq += mtfFreq[ge]; ;^620^^^^^572^884^[REPLACE] aFreq -= mtfFreq[ge];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( v = 4; v < alphaSize; v++ )  {^624^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[t][v] =  ( char )  GREATER_ICOST; ;^626^^^^^572^884^[REPLACE] len[nPart - 1][v] =  ( char )  LESSER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart  ^  1][v] =  ( char )  GREATER_ICOST;^628^^^^^572^884^[REPLACE] len[nPart - 1][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs =workDone + 1;^633^^^^^572^884^[REPLACE] gs = ge + 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^remF -= aFreq;^633^634^^^^572^884^[ADD] gs = ge + 1; remF -= aFreq;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^remF -=  workLimit;^634^^^^^572^884^[REPLACE] remF -= aFreq;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( ge > gs || nPart != nGroups || nPart != 1L ||  (  ( nGroups - nPart )  % 2 != 0 )  )  {^618^619^^^^572^884^[REPLACE] if  ( ge > gs && nPart != nGroups && nPart != 1 &&  (  ( nGroups - nPart )  % 2 != 0 )  )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart  ||  1][v] =  ( char )  GREATER_ICOST;^628^^^^^625^629^[REPLACE] len[nPart - 1][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^628^^^^^625^629^[ADD] len[nPart - 1][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^626^^^^^572^884^[ADD] len[nPart - 1][v] =  ( char )  LESSER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( v = 0; v  >=  alphaSize; v++ )  {^624^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (blockRandomised || v <= ge )  {^625^^^^^572^884^[REPLACE] if  ( v >= gs && v <= ge )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart  &  1][v] =  ( char )  GREATER_ICOST;^628^^^^^625^629^[REPLACE] len[nPart - 1][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart -workLimit][v] =  ( char )  LESSER_ICOST;^626^^^^^572^884^[REPLACE] len[nPart - 1][v] =  ( char )  LESSER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[nPart  >  1][v] =  ( char )  GREATER_ICOST;^628^^^^^572^884^[REPLACE] len[nPart - 1][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nPart =  workLimit;^606^^^^^572^884^[REPLACE] nPart = nGroups;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^remF  ;^607^^^^^572^884^[REPLACE] remF  = nMTF;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^607^608^^^^572^884^[ADD] remF  = nMTF; gs = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs = 4;^608^^^^^572^884^[REPLACE] gs = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tFreq = remF  ;^610^^^^^572^884^[REPLACE] tFreq = remF / nPart;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = runLength - n4;^611^^^^^572^884^[REPLACE] ge = gs - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^aFreq = 3;^612^^^^^572^884^[REPLACE] aFreq = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^624^625^626^627^628^572^884^[ADD] for  ( v = 0; v < alphaSize; v++ )  { if  ( v >= gs && v <= ge )  { len[nPart - 1][v] =  ( char )  LESSER_ICOST; } else { len[nPart - 1][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^len[t][v] =  ( char )  GREATER_ICOST; ;^628^^^^^572^884^[REPLACE] len[nPart - 1][v] =  ( char )  GREATER_ICOST;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs = ge  >  1;^633^^^^^572^884^[REPLACE] gs = ge + 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^remF -=  null;^634^^^^^572^884^[REPLACE] remF -= aFreq;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int sp, lo, hi, d;^604^^^^^572^884^[REPLACE] int nPart, remF, tFreq, aFreq;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^604^^^^^572^884^[ADD] int nPart, remF, tFreq, aFreq;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[][] code = new int[N_GROUPS][MAX_ALPHA_SIZE];^638^^^^^572^884^[REPLACE] int[][] rfreq = new int[N_GROUPS][MAX_ALPHA_SIZE];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[][] code = new int[N_GROUPS][MAX_ALPHA_SIZE];^639^^^^^572^884^[REPLACE] int[] fave = new int[N_GROUPS];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[][] code = new int[N_GROUPS][MAX_ALPHA_SIZE];^640^^^^^572^884^[REPLACE] short[] cost = new short[N_GROUPS];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( false )  {^658^^^^^572^884^[REPLACE] while  ( true )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( runLength  < runLength )  {^661^^^^^572^884^[REPLACE] if  ( gs >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( ge  !=  nMTF )  {^665^^^^^572^884^[REPLACE] if  ( ge >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge =workLimit - 2;^666^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^666^^^^^572^884^[ADD] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( nGroups  !=  6 )  {^677^^^^^572^884^[REPLACE] if  ( nGroups == 6 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  >= workLimit; i++ )  {^696^^^^^677^702^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^696^697^698^699^700^677^702^[ADD] for  ( i = gs; i <= ge; i++ )  { short icv = szptr[i]; for  ( t = 0; t < nGroups; t++ )  { cost[t] += len[t][icv]; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0; t  ==  nGroups; t++ )  {^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^698^699^700^^^677^702^[ADD] for  ( t = 0; t < nGroups; t++ )  { cost[t] += len[t][icv]; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5 += len[5][icv]; ;^699^^^^^677^702^[REPLACE] cost[t] += len[t][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 4; t < nGroups; t++ )  {^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^short workLimitcv = szptr[i];^697^^^^^677^702^[REPLACE] short icv = szptr[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  != workLimit; t++ )  {^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^696^^^^^677^702^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 1; t < nGroups; t++ )  {^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  !=  workDone; i++ )  {^680^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 - 0 += len[0 - 0][icv];^682^^^^^572^884^[REPLACE] cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 += len[3][icv];^683^^^^^572^884^[REPLACE] cost1 += len[1][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^683^684^^^^572^884^[ADD] cost1 += len[1][icv]; cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 * 2 += len[2 * 2][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 >> 2 += len[3 >> 2][icv];^685^^^^^572^884^[REPLACE] cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^685^686^^^^572^884^[ADD] cost3 += len[3][icv]; cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 + 0 += len[4 + 0][icv];^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5L += len[5L][icv];^687^^^^^572^884^[REPLACE] cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^687^^^^^572^884^[ADD] cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^short workLimitcv = szptr[i];^681^^^^^572^884^[REPLACE] short icv = szptr[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^681^682^^^^572^884^[ADD] short icv = szptr[i]; cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 * 2 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 * 2;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^679^^^^^572^884^[ADD] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 - 1 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 - 1;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0L = cost1 = cost2 = cost3 = cost4 = cost5 = 0L;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 = cost1 = cost2 = cost3 = cost4 = cost5 = 4;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost1 = cost1 = cost2 = cost3 = cost4 = cost5 = 1;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 >> 2 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 >> 2;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^680^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0L += len[0L][icv];^682^^^^^572^884^[REPLACE] cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 += len[0][icv];^683^^^^^572^884^[REPLACE] cost1 += len[1][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5 += len[5][icv]; ;^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost1 += len[1][icv];^685^^^^^572^884^[REPLACE] cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 % 3 += len[4 % 3][icv];^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5 - 0 += len[5 - 0][icv];^687^^^^^572^884^[REPLACE] cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[1] = cost1;^689^^^^^572^884^[REPLACE] cost[0] = cost0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[3] = cost3;^690^^^^^572^884^[REPLACE] cost[1] = cost1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^690^^^^^572^884^[ADD] cost[1] = cost1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[2 - 1] = cost2 - 1;^691^^^^^572^884^[REPLACE] cost[2] = cost2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[0] = cost0; ;^692^^^^^572^884^[REPLACE] cost[3] = cost3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[3] = cost3;^693^^^^^572^884^[REPLACE] cost[4] = cost4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[0] = cost0;^694^^^^^572^884^[REPLACE] cost[5] = cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^694^^^^^572^884^[ADD] cost[5] = cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j >> shifts ) ;^678^^^^^572^884^[REPLACE] short cost0, cost1, cost2, cost3, cost4, cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^678^679^^^^572^884^[ADD] short cost0, cost1, cost2, cost3, cost4, cost5; cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^678^^^^^572^884^[ADD] short cost0, cost1, cost2, cost3, cost4, cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( cost[t]  <=  bc )  {^711^^^^^572^884^[REPLACE] if  ( cost[t] < bc )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bc =  null[t];^712^^^^^572^884^[REPLACE] bc = cost[t];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^712^^^^^572^884^[ADD] bc = cost[t];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^b = a; ;^713^^^^^572^884^[REPLACE] bt = t;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  >  nGroups; t++ )  {^673^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[t] = 4;^674^^^^^572^884^[REPLACE] cost[t] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  >  ge; i++ )  {^680^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^680^681^682^683^684^572^884^[ADD] for  ( i = gs; i <= ge; i++ )  { short icv = szptr[i]; cost0 += len[0][icv]; cost1 += len[1][icv]; cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5 += len[5][icv]; ;^682^^^^^572^884^[REPLACE] cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 += len[4][icv];^683^^^^^572^884^[REPLACE] cost1 += len[1][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 - 4 += len[2 - 4][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^684^^^^^572^884^[ADD] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 % 0 += len[3 % 0][icv];^685^^^^^572^884^[REPLACE] cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 += len[3][icv];^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  <  ge; i++ )  {^696^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  <=  nGroups; t++ )  {^698^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5 += len[5][icv]; ;^699^^^^^572^884^[REPLACE] cost[t] += len[t][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 4; t < nGroups; t++ )  {^698^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^698^699^700^^^572^884^[ADD] for  ( t = 0; t < nGroups; t++ )  { cost[t] += len[t][icv]; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^short workLimitcv = szptr[i];^697^^^^^572^884^[REPLACE] short icv = szptr[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 3; t  <=  nGroups; t++ )  {^698^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0; t  <=  nGroups; t++ )  {^710^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^710^711^712^713^714^572^884^[ADD] for  ( t = 0; t < nGroups; t++ )  { if  ( cost[t] < bc )  { bc = cost[t]; bt = t; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( cost[t]  >=  bc )  {^711^^^^^572^884^[REPLACE] if  ( cost[t] < bc )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^bc = cost[t];bt = t;^711^712^713^714^^572^884^[ADD] if  ( cost[t] < bc )  { bc = cost[t]; bt = t; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bc =  szptr[t];^712^^^^^572^884^[REPLACE] bc = cost[t];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^713^^^^^572^884^[ADD] bt = t;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  !=  ge; i++ )  {^724^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^724^725^726^^^572^884^[ADD] for  ( i = gs; i <= ge; i++ )  { rfreq[bt][szptr[i]]++; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = gs + G_SIZE  !=  1;^664^^^^^572^884^[REPLACE] ge = gs + G_SIZE - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = gs - 1; ;^666^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t < nGroups; t++ )  { minLen = 32; ;^673^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^673^674^675^^^572^884^[ADD] for  ( t = 0; t < nGroups; t++ )  { cost[t] = 0; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^674^^^^^572^884^[ADD] cost[t] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 / 1 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 / 1;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 = cost1 = cost2 = cost3 = cost4 = cost5 = 3;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 << 3 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 << 3;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 + 0 += len[2 + 0][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5 += len[5][icv]; ;^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost6 += len[6][icv];^687^^^^^572^884^[REPLACE] cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[3] = cost3;^689^^^^^572^884^[REPLACE] cost[0] = cost0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^689^^^^^572^884^[ADD] cost[0] = cost0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[0] = cost0;^690^^^^^572^884^[REPLACE] cost[1] = cost1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[4] = cost4;^691^^^^^572^884^[REPLACE] cost[2] = cost2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[4 - 1] = cost4 - 1;^693^^^^^572^884^[REPLACE] cost[4] = cost4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^693^^^^^572^884^[ADD] cost[4] = cost4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[5 - 4] = cost5 - 4;^694^^^^^572^884^[REPLACE] cost[5] = cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^696^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 3; t < nGroups; t++ )  {^698^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bc = 999999999 % 4;^708^^^^^572^884^[REPLACE] bc = 999999999;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bt = -1L;^709^^^^^572^884^[REPLACE] bt = -1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^709^^^^^572^884^[ADD] bt = -1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t < nGroups; t++ )  { minLen = 32; ;^710^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^totc = 0; ;^716^^^^^572^884^[REPLACE] totc += bc;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^selector[nSelectors] =  ( String )  bt;^718^^^^^572^884^[REPLACE] selector[nSelectors] =  ( char )  bt;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^724^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs = ge +workDone;^728^^^^^572^884^[REPLACE] gs = ge + 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^697^^^^^572^884^[ADD] short icv = szptr[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( gs  ==  nMTF )  {^661^^^^^572^884^[REPLACE] if  ( gs >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^661^^^^^572^884^[REMOVE] ^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone  !=  nMTF )  {^665^^^^^572^884^[REPLACE] if  ( ge >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge =workLimit - 4;^666^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( nGroups  && workLimit )  {^677^^^^^572^884^[REPLACE] if  ( nGroups == 6 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  <  ge; i++ )  {^696^^^^^677^702^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0 >> 0; t  >=  workLimit; t++ )  {^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t < nGroups; t++ )  { minLen = 32; ;^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^697^^^^^677^702^[ADD] short icv = szptr[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( workLimit = 0; t  >=  workLimit; t++ )  {^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 3; t < nGroups; t++ )  {^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^699^^^^^677^702^[ADD] cost[t] += len[t][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  >=  ge; i++ )  {^680^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost1 += len[1][icv];^682^^^^^572^884^[REPLACE] cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost1 + 0 += len[1 + 0][icv];^683^^^^^572^884^[REPLACE] cost1 += len[1][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 - 1 += len[2 - 1][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 / 4 += len[3 / 4][icv];^685^^^^^572^884^[REPLACE] cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 += len[2][icv];^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 += len[4][icv]; ;^687^^^^^572^884^[REPLACE] cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 * 3 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 * 3;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 % 0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 % 0;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 += len[3][icv];^682^^^^^572^884^[REPLACE] cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5 += len[5][icv]; ;^683^^^^^572^884^[REPLACE] cost1 += len[1][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 += len[0][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5 += len[5][icv];^685^^^^^572^884^[REPLACE] cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[0L] = cost0L;^689^^^^^572^884^[REPLACE] cost[0] = cost0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[1] = cost1;^691^^^^^572^884^[REPLACE] cost[2] = cost2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[3L] = cost3L;^692^^^^^572^884^[REPLACE] cost[3] = cost3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[0] = cost0;^693^^^^^572^884^[REPLACE] cost[4] = cost4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[3] = cost3;^694^^^^^572^884^[REPLACE] cost[5] = cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( cost[t]  >= cost5 )  {^711^^^^^572^884^[REPLACE] if  ( cost[t] < bc )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^bt = t;^712^713^^^^572^884^[ADD] bc = cost[t]; bt = t;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( iter = 0; iter  <= tmp; iter++ )  {^644^^^^^572^884^[REPLACE] for  ( iter = 0; iter < N_ITERS; iter++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^658^659^660^^^572^884^[ADD] while  ( true )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( runLength  <  nMTF )  {^661^^^^^572^884^[REPLACE] if  ( gs >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^665^666^667^^^572^884^[ADD] if  ( ge >= nMTF )  { ge = nMTF - 1; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = workLimit - n1;^666^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( nGroups  &&  6 )  {^677^^^^^572^884^[REPLACE] if  ( nGroups == 6 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  >  nGroups; t++ )  {^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  >=  nGroups; t++ )  {^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  < workLimit; i++ )  {^680^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost1 + 3 += len[1 + 3][icv];^683^^^^^572^884^[REPLACE] cost1 += len[1][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^684^685^^^^572^884^[ADD] cost2 += len[2][icv]; cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 += len[4][icv];^685^^^^^572^884^[REPLACE] cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^cost0 += len[0][icv];^681^682^^^^572^884^[ADD] short icv = szptr[i]; cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 << 1 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 << 1;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 = cost1 = cost2 = cost3 = cost4 = cost5 = 2;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 - 2 += len[0 - 2][icv];^682^^^^^572^884^[REPLACE] cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^683^^^^^572^884^[ADD] cost1 += len[1][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost1 += len[1][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 += len[0][icv];^685^^^^^572^884^[REPLACE] cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4L += len[4L][icv];^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^686^687^^^^572^884^[ADD] cost4 += len[4][icv]; cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[0 - 3] = cost0 - 3;^689^^^^^572^884^[REPLACE] cost[0] = cost0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[2] = cost2;^690^^^^^572^884^[REPLACE] cost[1] = cost1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[0] = cost0;^691^^^^^572^884^[REPLACE] cost[2] = cost2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^691^692^^^^572^884^[ADD] cost[2] = cost2; cost[3] = cost3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[3 / 3] = cost3 / 3;^692^^^^^572^884^[REPLACE] cost[3] = cost3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[4L] = cost4L;^693^^^^^572^884^[REPLACE] cost[4] = cost4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[0] = cost0; ;^694^^^^^572^884^[REPLACE] cost[5] = cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^681^^^^^572^884^[ADD] short icv = szptr[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( cost[t]  >  bc )  {^711^^^^^572^884^[REPLACE] if  ( cost[t] < bc )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  <=  nGroups; t++ )  {^673^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[t] = 0 / 4;^674^^^^^572^884^[REPLACE] cost[t] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = gs; i  >  ge; i++ )  {^680^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^682^^^^^572^884^[ADD] cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost1L += len[1L][icv];^683^^^^^572^884^[REPLACE] cost1 += len[1][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 += len[4][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^cost4 += len[4][icv];^685^686^^^^572^884^[ADD] cost3 += len[3][icv]; cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^696^697^698^699^700^572^884^[ADD] for  ( i = gs; i <= ge; i++ )  { short icv = szptr[i]; for  ( t = 0; t < nGroups; t++ )  { cost[t] += len[t][icv]; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  !=  nGroups; t++ )  {^698^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^699^^^^^572^884^[ADD] cost[t] += len[t][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  != workLimit; t++ )  {^710^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( cost[t]  !=  bc )  {^711^^^^^572^884^[REPLACE] if  ( cost[t] < bc )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = gs + G_SIZE  >=  1;^664^^^^^572^884^[REPLACE] ge = gs + G_SIZE - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = nMTF -workLimit;^666^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 2; t < nGroups; t++ )  {^673^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 % 1 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 % 1;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 / 0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 / 0;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 += len[2][icv];^682^^^^^572^884^[REPLACE] cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5 += len[5][icv]; ;^685^^^^^572^884^[REPLACE] cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 += len[0][icv];^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[4] = cost4;^689^^^^^572^884^[REPLACE] cost[0] = cost0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[1 + 1] = cost1 + 1;^690^^^^^572^884^[REPLACE] cost[1] = cost1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[0] = cost0; ;^691^^^^^572^884^[REPLACE] cost[2] = cost2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^691^^^^^572^884^[ADD] cost[2] = cost2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[0] = cost0;^692^^^^^572^884^[REPLACE] cost[3] = cost3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^693^694^^^^572^884^[ADD] cost[4] = cost4; cost[5] = cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[5L] = cost5L;^694^^^^^572^884^[REPLACE] cost[5] = cost5;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bc = 67966691;^708^^^^^572^884^[REPLACE] bc = 999999999;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bt = -3;^709^^^^^572^884^[REPLACE] bt = -1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 4; t < nGroups; t++ )  {^710^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^712^713^^^^572^884^[ADD] bc = cost[t]; bt = t;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs = ge  &&  1;^728^^^^^572^884^[REPLACE] gs = ge + 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^728^^^^^572^884^[ADD] gs = ge + 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( gs  < runLength )  {^661^^^^^572^884^[REPLACE] if  ( gs >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^661^662^663^^^572^884^[ADD] if  ( gs >= nMTF )  { break; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( ge  <=  nMTF )  {^665^^^^^572^884^[REPLACE] if  ( ge >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  !=  6 )  {^677^^^^^572^884^[REPLACE] if  ( nGroups == 6 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = gs; i  >=  ge; i++ )  {^696^^^^^677^702^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  ==  workLimit; t++ )  {^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0 / 1; t < nGroups; t++ )  {^698^^^^^677^702^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  !=  ge; i++ )  {^680^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2L += len[2L][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 * 3 += len[4 * 3][icv];^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 += len[3][icv];^687^^^^^572^884^[REPLACE] cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 << 4 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 << 4;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 * 4 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 * 4;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost1 << 1 += len[1 << 1][icv];^683^^^^^572^884^[REPLACE] cost1 += len[1][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 + 1 += len[2 + 1][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 - 2 += len[4 - 2][icv];^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^cost5 += len[5][icv];^686^687^^^^572^884^[ADD] cost4 += len[4][icv]; cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 += len[4][icv];^687^^^^^572^884^[REPLACE] cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[0 >>> 1] = cost0 >>> 1;^689^^^^^572^884^[REPLACE] cost[0] = cost0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[2L] = cost2L;^691^^^^^572^884^[REPLACE] cost[2] = cost2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[2] = cost2;^692^^^^^572^884^[REPLACE] cost[3] = cost3;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^692^693^^^^572^884^[ADD] cost[3] = cost3; cost[4] = cost4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^678^679^^^^572^884^[ADD] short cost0, cost1, cost2, cost3, cost4, cost5; cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  >  nGroups; t++ )  {^645^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^fave[t] = 0L;^646^^^^^572^884^[REPLACE] fave[t] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0; t  ==  nGroups; t++ )  {^649^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^649^650^651^652^^572^884^[ADD] for  ( t = 0; t < nGroups; t++ )  { for  ( v = 0; v < alphaSize; v++ )  { rfreq[t][v] = 0; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( v = 0; v  <=  alphaSize; v++ )  {^650^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rfreq[t][v] = 0 + 1;^651^^^^^572^884^[REPLACE] rfreq[t][v] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( v = 0 % 2; v < alphaSize; v++ )  {^650^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rfreq[t][v] = 4;^651^^^^^572^884^[REPLACE] rfreq[t][v] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^651^^^^^572^884^[ADD] rfreq[t][v] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( vec = 3; v  <=  zz; v++ )  {^650^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^650^651^652^^^572^884^[ADD] for  ( v = 0; v < alphaSize; v++ )  { rfreq[t][v] = 0; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rfreq[t][v] = 0 * 4;^651^^^^^572^884^[REPLACE] rfreq[t][v] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  ==  nGroups; t++ )  {^673^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[t] = 0 / 2;^674^^^^^572^884^[REPLACE] cost[t] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 + 2 += len[2 + 2][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = gs; i  ==  ge; i++ )  {^696^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  == workLimit; t++ )  {^698^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0; t  >=  nGroups; t++ )  {^698^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  !=  nGroups; t++ )  {^710^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( cost[t]  ==  bc )  {^711^^^^^572^884^[REPLACE] if  ( cost[t] < bc )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 4; t  >=  nGroups; t++ )  {^734^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^hbMakeCodeLengths ( len[t], rfreq[t], alphaSize, 20 << 2 ) ;^735^^^^^572^884^[REPLACE] hbMakeCodeLengths ( len[t], rfreq[t], alphaSize, 20 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 4; t < nGroups; t++ )  {^645^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^fave[t] = 3;^646^^^^^572^884^[REPLACE] fave[t] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 3; t < nGroups; t++ )  {^649^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( v = 0 << 0; v < alphaSize; v++ )  {^650^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rfreq[t][v] = 0L;^651^^^^^572^884^[REPLACE] rfreq[t][v] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nSelectors = 2;^655^^^^^572^884^[REPLACE] nSelectors = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^totc = 0L;^656^^^^^572^884^[REPLACE] totc = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^656^657^^^^572^884^[ADD] totc = 0; gs = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 0; ;^657^^^^^572^884^[REPLACE] gs = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = gs + G_SIZE  &  0;^664^^^^^572^884^[REPLACE] ge = gs + G_SIZE - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge =workLimit - 1;^666^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0L; t < nGroups; t++ )  {^673^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[t] = 3;^674^^^^^572^884^[REPLACE] cost[t] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 + 1 = cost1 = cost2 = cost3 = cost4 = cost5 = 0 + 1;^679^^^^^572^884^[REPLACE] cost0 = cost1 = cost2 = cost3 = cost4 = cost5 = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 * 1 += len[2 * 1][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost3 + 1 += len[3 + 1][icv];^685^^^^^572^884^[REPLACE] cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost4 - 0 += len[4 - 0][icv];^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5 * 0 += len[5 * 0][icv];^687^^^^^572^884^[REPLACE] cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[2] = cost2;^689^^^^^572^884^[REPLACE] cost[0] = cost0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[0] = cost0; ;^690^^^^^572^884^[REPLACE] cost[1] = cost1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^cost[4] = cost4;^692^693^^^^572^884^[ADD] cost[3] = cost3; cost[4] = cost4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[5] = cost5;^693^^^^^572^884^[REPLACE] cost[4] = cost4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bc = 999999999 + 0;^708^^^^^572^884^[REPLACE] bc = 999999999;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bt = -2;^709^^^^^572^884^[REPLACE] bt = -1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 2; t < nGroups; t++ )  {^710^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^selector[nSelectors]  =  selector[nSelectors] ;^718^^^^^572^884^[REPLACE] selector[nSelectors] =  ( char )  bt;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^718^719^^^^572^884^[ADD] selector[nSelectors] =  ( char )  bt; nSelectors++;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs =workDone + 0;^728^^^^^572^884^[REPLACE] gs = ge + 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 1; t < nGroups; t++ )  {^734^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^short[] cost = new short[N_GROUPS];^681^^^^^572^884^[REPLACE] short icv = szptr[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( workLimit = 0; t  ==  nGroups; t++ )  {^645^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  <= workLimit; t++ )  {^649^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( vec = 0; v  >=  zz; v++ )  {^650^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rfreq[t][v] = 3;^651^^^^^572^884^[REPLACE] rfreq[t][v] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( v = 0 - 0; v < alphaSize; v++ )  {^650^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rfreq[t][v] = 0 >> 0;^651^^^^^572^884^[REPLACE] rfreq[t][v] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( v = 0L; v  >=  alphaSize; v++ )  {^650^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rfreq[t][v] = 1;^651^^^^^572^884^[REPLACE] rfreq[t][v] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( workLimit = 0; t  ==  totc; t++ )  {^673^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 / 0 += len[0 / 0][icv];^682^^^^^572^884^[REPLACE] cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 + 4 += len[2 + 4][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost2 += len[2][icv];^685^^^^^572^884^[REPLACE] cost3 += len[3][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost1 += len[1][icv];^686^^^^^572^884^[REPLACE] cost4 += len[4][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5 >> 0 += len[5 >> 0][icv];^687^^^^^572^884^[REPLACE] cost5 += len[5][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  !=  ge; i++ )  {^696^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  >=  nGroups; t++ )  {^698^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( workLimit = 0; t  >  u; t++ )  {^698^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0; t  ==  nGroups; t++ )  {^710^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  ==  ge; i++ )  {^724^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0 >>> 0; t  >  nGroups; t++ )  {^734^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^hbMakeCodeLengths ( len[t], rfreq[t], alphaSize, 2 ) ;^735^^^^^572^884^[REPLACE] hbMakeCodeLengths ( len[t], rfreq[t], alphaSize, 20 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( iter = 0 * 2; iter < N_ITERS; iter++ )  {^644^^^^^572^884^[REPLACE] for  ( iter = 0; iter < N_ITERS; iter++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 1; t < nGroups; t++ )  {^645^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^645^646^647^^^572^884^[ADD] for  ( t = 0; t < nGroups; t++ )  { fave[t] = 0; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^fave[t] = 4;^646^^^^^572^884^[REPLACE] fave[t] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^646^^^^^572^884^[ADD] fave[t] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t < nGroups; t++ )  { minLen = 32; ;^649^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1; i <= alphaSize; i++ )  { j = 0; ;^650^^^^^572^884^[REPLACE] for  ( v = 0; v < alphaSize; v++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rfreq[t][v] = 0 + 2;^651^^^^^572^884^[REPLACE] rfreq[t][v] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^nSelectors = 0 - 3;^655^^^^^572^884^[REPLACE] nSelectors = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^totc += bc; ;^656^^^^^572^884^[REPLACE] totc = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs = 0 % 3;^657^^^^^572^884^[REPLACE] gs = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = gs + G_SIZE  <  1;^664^^^^^572^884^[REPLACE] ge = gs + G_SIZE - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^664^^^^^572^884^[ADD] ge = gs + G_SIZE - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0 % 3; t < nGroups; t++ )  {^673^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[t] = 0 - 0;^674^^^^^572^884^[REPLACE] cost[t] = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost0 >> 0 += len[0 >> 0][icv];^682^^^^^572^884^[REPLACE] cost0 += len[0][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost5 += len[5][icv];^684^^^^^572^884^[REPLACE] cost2 += len[2][icv];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[2 - 2] = cost2 - 2;^691^^^^^572^884^[REPLACE] cost[2] = cost2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost[1] = cost1;^693^^^^^572^884^[REPLACE] cost[4] = cost4;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 2; t < nGroups; t++ )  {^698^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bc = 3;^708^^^^^572^884^[REPLACE] bc = 999999999;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 3; t < nGroups; t++ )  {^710^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs = ge  ^  1 + 4;^728^^^^^572^884^[REPLACE] gs = ge + 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t < nGroups; t++ )  { minLen = 32; ;^734^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rfreq = true;^739^^^^^572^884^[REPLACE] rfreq = null;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^fave = false;^740^^^^^572^884^[REPLACE] fave = null;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^cost = this;^741^^^^^572^884^[REPLACE] cost = null;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (workLimit < 4 )  )  {^743^^^^^572^884^[REPLACE] if  ( ! ( nGroups < 8 )  )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^744^^^^^572^884^[REPLACE] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  nSelectors <=  ( 2 +  ( 900000 / G_SIZE )  )  )  )  {^746^^^^^572^884^[REPLACE] if  ( ! ( nSelectors < 32768 && nSelectors <=  ( 2 +  ( 900000 / G_SIZE )  )  )  )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^747^^^^^572^884^[REPLACE] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^747^^^^^572^884^[ADD] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( ll_i  ==  tmp )  {^762^^^^^572^884^[REPLACE] while  ( ll_i != tmp )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^762^763^^^^572^884^[ADD] while  ( ll_i != tmp )  { j++;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tmp2 =  null;^764^^^^^572^884^[REPLACE] tmp2 = tmp;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^764^^^^^572^884^[ADD] tmp2 = tmp;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tmp = yy[j]; ;^765^^^^^572^884^[REPLACE] tmp = pos[j];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^765^766^^^^572^884^[ADD] tmp = pos[j]; pos[j] = tmp2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^pos[0] = tmp; ;^766^^^^^572^884^[REPLACE] pos[j] = tmp2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i  !=  nGroups; i++ )  {^755^^^^^572^884^[REPLACE] for  ( i = 0; i < nGroups; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^yy[i] =  ( char )  i; ;^756^^^^^572^884^[REPLACE] pos[i] =  ( char )  i;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( workLimit = 0; i  !=  nHeap; i++ )  {^758^^^^^572^884^[REPLACE] for  ( i = 0; i < nSelectors; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^765^^^^^572^884^[ADD] tmp = pos[j];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ll_i =  selector[workLimit];^759^^^^^572^884^[REPLACE] ll_i = selector[i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 2;^760^^^^^572^884^[REPLACE] j = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^tmp = yy[j]; ;^761^^^^^572^884^[REPLACE] tmp = pos[j];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^pos[3] = tmp;^768^^^^^572^884^[REPLACE] pos[0] = tmp;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^selectorMtf[i] =  ( String )  j;^769^^^^^572^884^[REPLACE] selectorMtf[i] =  ( char )  j;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^755^^^^^572^884^[REPLACE] for  ( i = 0; i < nGroups; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i < nSelectors; i++ )  {^758^^^^^572^884^[REPLACE] for  ( i = 0; i < nSelectors; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^758^759^760^761^^572^884^[ADD] for  ( i = 0; i < nSelectors; i++ )  { ll_i = selector[i]; j = 0; tmp = pos[j];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 0 >> 2;^760^^^^^572^884^[REPLACE] j = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^760^761^^^^572^884^[ADD] j = 0; tmp = pos[j];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^pos[j] = tmp2;^765^766^^^^572^884^[ADD] tmp = pos[j]; pos[j] = tmp2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^766^^^^^572^884^[ADD] pos[j] = tmp2;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^selectorMtf[i]  =  selectorMtf[i] ;^769^^^^^572^884^[REPLACE] selectorMtf[i] =  ( char )  j;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[][] code = new int[N_GROUPS][MAX_ALPHA_SIZE];^753^^^^^572^884^[REPLACE] char[] pos = new char[N_GROUPS];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^char ll_i;^754^^^^^572^884^[REPLACE] char ll_i, tmp2, tmp;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^754^^^^^572^884^[ADD] char ll_i, tmp2, tmp;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[][] rfreq = new int[N_GROUPS][MAX_ALPHA_SIZE];^773^^^^^572^884^[REPLACE] int[][] code = new int[N_GROUPS][MAX_ALPHA_SIZE];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( len[t][i]  ==  maxLen )  {^780^^^^^572^884^[REPLACE] if  ( len[t][i] > maxLen )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^minLen = len[t][i]; ;^781^^^^^572^884^[REPLACE] maxLen = len[t][i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( len[t][i]  >  minLen )  {^783^^^^^572^884^[REPLACE] if  ( len[t][i] < minLen )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^maxLen = len[t][i]; ;^784^^^^^572^884^[REPLACE] minLen = len[t][i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( maxLen  !=  20 )  {^787^^^^^572^884^[REPLACE] if  ( maxLen > 20 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^788^^^^^572^884^[REPLACE] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( minLen  !=  1 )  {^790^^^^^572^884^[REPLACE] if  ( minLen < 1 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^panic (  ) ;^790^791^792^^^572^884^[ADD] if  ( minLen < 1 )  { panic (  ) ; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^791^^^^^572^884^[REPLACE] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0 % 0; t  >  nGroups; t++ )  {^776^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^776^777^778^779^^572^884^[ADD] for  ( t = 0; t < nGroups; t++ )  { minLen = 32; maxLen = 0; for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( len[t][i]  !=  maxLen )  {^780^^^^^572^884^[REPLACE] if  ( len[t][i] > maxLen )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( len[t][i]  !=  minLen )  {^783^^^^^572^884^[REPLACE] if  ( len[t][i] < minLen )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^784^^^^^572^884^[ADD] minLen = len[t][i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( maxLen  ==  20 )  {^787^^^^^572^884^[REPLACE] if  ( maxLen > 20 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( ! (  ( nSelectors < 32768 )  &&  ( nSelectors <=  ( 2 +  ( 900000 /  ( G_SIZE )  )  )  )  )  )  {     panic (  ) ; }^787^^^^^572^884^[REMOVE] ^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^finish (  ) ;^788^^^^^572^884^[REMOVE] ^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( minLen  ==  1 )  {^790^^^^^572^884^[REPLACE] if  ( minLen < 1 )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^791^^^^^572^884^[ADD] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  == workLimit; i++ )  {^779^^^^^572^884^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( len[t][i]  <=  maxLen )  {^780^^^^^572^884^[REPLACE] if  ( len[t][i] > maxLen )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( len[t][i]  >=  workLimit )  {^783^^^^^572^884^[REPLACE] if  ( len[t][i] < minLen )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^781^^^^^572^884^[ADD] maxLen = len[t][i];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^minLen = 32L;^777^^^^^572^884^[REPLACE] minLen = 32;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^777^^^^^572^884^[ADD] minLen = 32;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^maxLen = 4;^778^^^^^572^884^[REPLACE] maxLen = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 2; i < alphaSize; i++ )  {^779^^^^^572^884^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  >=  alphaSize; i++ )  {^779^^^^^572^884^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( len[t][i]  < tmp )  {^780^^^^^572^884^[REPLACE] if  ( len[t][i] > maxLen )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( len[t][i]  ==  minLen )  {^783^^^^^572^884^[REPLACE] if  ( len[t][i] < minLen )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^783^784^785^^^572^884^[ADD] if  ( len[t][i] < minLen )  { minLen = len[t][i]; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 1; t < nGroups; t++ )  {^776^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^minLen = 32 >>> 3;^777^^^^^572^884^[REPLACE] minLen = 32;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^maxLen = 1;^778^^^^^572^884^[REPLACE] maxLen = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0L; i < alphaSize; i++ )  {^779^^^^^572^884^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 16  >  j] )  {^802^^^^^572^884^[REPLACE] if  ( inUse[i * 16 + j] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^inUse16[i] = true;^802^803^804^^^572^884^[ADD] if  ( inUse[i * 16 + j] )  { inUse16[i] = true; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse16[i] = false;^803^^^^^572^884^[REPLACE] inUse16[i] = true;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse06[i] )  {^810^^^^^572^884^[REPLACE] if  ( inUse16[i] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 2, 0 ) ;^813^^^^^810^814^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 + 1, 1 + 1 ) ;^811^^^^^572^884^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^811^^^^^572^884^[ADD] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i] )  {^818^^^^^572^884^[REPLACE] if  ( inUse16[i] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 16 +n1] )  {^820^^^^^572^884^[REPLACE] if  ( inUse[i * 16 + j] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 4, 0 ) ;^823^^^^^820^824^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^823^^^^^820^824^[ADD] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 2, 2 ) ;^821^^^^^572^884^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  <=  16; j++ )  {^819^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^819^820^821^822^823^572^884^[ADD] for  ( j = 0; j < 16; j++ )  { if  ( inUse[i * 16 + j] )  { bsW ( 1, 1 ) ; } else { bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 15  ==  j] )  {^820^^^^^572^884^[REPLACE] if  ( inUse[i * 16 + j] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 % 3, 0 ) ;^823^^^^^820^824^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 0, 0 ) ;^821^^^^^572^884^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^821^^^^^572^884^[ADD] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 1; j < 16; j++ )  {^819^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 16  ==  j] )  {^820^^^^^572^884^[REPLACE] if  ( inUse[i * 16 + j] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 >>> 4, 0 ) ;^823^^^^^820^824^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 4, 4 ) ;^821^^^^^572^884^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0; i  <=  16; i++ )  {^799^^^^^572^884^[REPLACE] for  ( i = 0; i < 16; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 16  ^  j] )  {^802^^^^^572^884^[REPLACE] if  ( inUse[i * 16 + j] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^803^^^^^572^884^[ADD] inUse16[i] = true;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  >  blockSize100k; j++ )  {^801^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 16 + 3  <=  j] )  {^802^^^^^572^884^[REPLACE] if  ( inUse[i * 16 + j] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse16[i] = true;^800^^^^^572^884^[REPLACE] inUse16[i] = false;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 4; j < 16; j++ )  {^801^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse16[i] = false; ;^803^^^^^572^884^[REPLACE] inUse16[i] = true;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  <=  16; j++ )  {^801^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 16 >> 2  <=  j] )  {^802^^^^^572^884^[REPLACE] if  ( inUse[i * 16 + j] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^802^803^804^^^572^884^[ADD] if  ( inUse[i * 16 + j] )  { inUse16[i] = true; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0 - 1; i  >  16; i++ )  {^809^^^^^572^884^[REPLACE] for  ( i = 0; i < 16; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse1 << 26[i] )  {^810^^^^^572^884^[REPLACE] if  ( inUse16[i] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 4, 0 ) ;^813^^^^^810^814^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 4, 4 ) ;^811^^^^^572^884^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  !=  16; i++ )  {^817^^^^^572^884^[REPLACE] for  ( i = 0; i < 16; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^817^818^819^820^821^572^884^[ADD] for  ( i = 0; i < 16; i++ )  { if  ( inUse16[i] )  { for  ( j = 0; j < 16; j++ )  { if  ( inUse[i * 16 + j] )  { bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 + 2, 0 ) ;^823^^^^^820^824^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^finish (  ) ;^823^^^^^820^824^[REMOVE] ^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^finish (  ) ;^821^^^^^572^884^[REMOVE] ^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  !=  16; j++ )  {^819^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimitnUse[i * 0  <  j] )  {^820^^^^^572^884^[REPLACE] if  ( inUse[i * 16 + j] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^bsW ( 1, 1 ) ;bsW ( 1, 0 ) ;^820^821^822^823^824^572^884^[ADD] if  ( inUse[i * 16 + j] )  { bsW ( 1, 1 ) ; } else { bsW ( 1, 0 ) ; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 - 0, 0 ) ;^823^^^^^820^824^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 - 4; j < 16; j++ )  {^819^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( inUse[ (  ( i * 16 )  + j ) ] )  {     inUse16[i] = true; }^820^^^^^572^884^[REMOVE] ^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 0, 0 ) ;^823^^^^^820^824^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 - 4, 1 - 4 ) ;^821^^^^^572^884^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  ==  blockSize100k; j++ )  {^819^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( inUse[i * 16  &  j] )  {^820^^^^^572^884^[REPLACE] if  ( inUse[i * 16 + j] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 * 0, 0 ) ;^823^^^^^820^824^[REPLACE] bsW ( 1, 0 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 - 1, 1 - 1 ) ;^821^^^^^572^884^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^819^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  >=  16; j++ )  {^819^^^^^572^884^[REPLACE] for  ( j = 0; j < 16; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i < 16; i++ )  {^799^^^^^572^884^[REPLACE] for  ( i = 0; i < 16; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^799^800^801^802^803^572^884^[ADD] for  ( i = 0; i < 16; i++ )  { inUse16[i] = false; for  ( j = 0; j < 16; j++ )  { if  ( inUse[i * 16 + j] )  { inUse16[i] = true;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^801^802^803^804^^572^884^[ADD] for  ( j = 0; j < 16; j++ )  { if  ( inUse[i * 16 + j] )  { inUse16[i] = true; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^809^^^^^572^884^[REPLACE] for  ( i = 0; i < 16; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^817^^^^^572^884^[REPLACE] for  ( i = 0; i < 16; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^boolean[] inUse0 = new boolean[0];^798^^^^^572^884^[REPLACE] boolean[] inUse16 = new boolean[16];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^798^^^^^572^884^[ADD] boolean[] inUse16 = new boolean[16];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW  ( 3 + 2, nGroups ) ;^833^^^^^572^884^[REPLACE] bsW  ( 3, nGroups ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW  ( 6, nSelectors ) ;^834^^^^^572^884^[REPLACE] bsW  ( 15, nSelectors ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i  !=  totc; i++ )  {^835^^^^^572^884^[REPLACE] for  ( i = 0; i < nSelectors; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  >=  selectorMtf[i]; j++ )  {^836^^^^^572^884^[REPLACE] for  ( j = 0; j < selectorMtf[i]; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^836^837^838^^^572^884^[ADD] for  ( j = 0; j < selectorMtf[i]; j++ )  { bsW ( 1, 1 ) ; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 >> 4, 1 >> 4 ) ;^837^^^^^572^884^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 4; j < selectorMtf[i]; j++ )  {^836^^^^^572^884^[REPLACE] for  ( j = 0; j < selectorMtf[i]; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  <=  selectorMtf[i]; j++ )  {^836^^^^^572^884^[REPLACE] for  ( j = 0; j < selectorMtf[i]; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 1 - 0, 1 - 0 ) ;^837^^^^^572^884^[REPLACE] bsW ( 1, 1 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i < nSelectors; i++ )  {^835^^^^^572^884^[REPLACE] for  ( i = 0; i < nSelectors; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 2; j < selectorMtf[i]; j++ )  {^836^^^^^572^884^[REPLACE] for  ( j = 0; j < selectorMtf[i]; j++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( workLimit  <=  len[t][i] )  {^849^^^^^572^884^[REPLACE] while  ( curr < len[t][i] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^849^850^^^^572^884^[ADD] while  ( curr < len[t][i] )  { bsW ( 2, 2 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 2 % 0, 2 % 0 ) ;^850^^^^^572^884^[REPLACE] bsW ( 2, 2 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^850^^^^^572^884^[ADD] bsW ( 2, 2 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (workLimit  >=  len[t][i] )  {^853^^^^^572^884^[REPLACE] while  ( curr > len[t][i] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 4, 3 ) ;^854^^^^^572^884^[REPLACE] bsW ( 2, 3 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t  <=  nGroups; t++ )  {^845^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( curr  >  len[t][i] )  {^849^^^^^572^884^[REPLACE] while  ( curr < len[t][i] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 2 % 2, 2 % 2 ) ;^850^^^^^572^884^[REPLACE] bsW ( 2, 2 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( curr  >=  len[t][i] )  {^853^^^^^572^884^[REPLACE] while  ( curr > len[t][i] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 2L, 3 ) ;^854^^^^^572^884^[REPLACE] bsW ( 2, 3 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  >  alphaSize; i++ )  {^848^^^^^572^884^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (workLimit  >=  len[t][i] )  {^849^^^^^572^884^[REPLACE] while  ( curr < len[t][i] )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 0, 0 ) ;^850^^^^^572^884^[REPLACE] bsW ( 2, 2 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^finish (  ) ;^850^^^^^572^884^[REMOVE] ^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 2 * 2, 3 ) ;^854^^^^^572^884^[REPLACE] bsW ( 2, 3 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1; i <= alphaSize; i++ )  { j = 0; ;^848^^^^^572^884^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int curr = len[t][2];^846^^^^^572^884^[REPLACE] int curr = len[t][0];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  >  zz; i++ )  {^848^^^^^572^884^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 2L, 2L ) ;^850^^^^^572^884^[REPLACE] bsW ( 2, 2 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( 0, 3 ) ;^854^^^^^572^884^[REPLACE] bsW ( 2, 3 ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( t = 0; t < nGroups; t++ )  { minLen = 32; ;^845^^^^^572^884^[REPLACE] for  ( t = 0; t < nGroups; t++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i < alphaSize; i++ )  {^848^^^^^572^884^[REPLACE] for  ( i = 0; i < alphaSize; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^848^849^850^851^852^572^884^[ADD] for  ( i = 0; i < alphaSize; i++ )  { while  ( curr < len[t][i] )  { bsW ( 2, 2 ) ; c }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int curr = len[t][4];^846^^^^^572^884^[REPLACE] int curr = len[t][0];^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^selCtr = 0L;^863^^^^^572^884^[REPLACE] selCtr = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs = 0 >>> 3;^864^^^^^572^884^[REPLACE] gs = 0;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( false )  {^865^^^^^572^884^[REPLACE] while  ( true )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( gs  !=  nMTF )  {^866^^^^^572^884^[REPLACE] if  ( gs >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workDone  >  nMTF )  {^870^^^^^572^884^[REPLACE] if  ( ge >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^870^871^872^^^572^884^[ADD] if  ( ge >= nMTF )  { ge = nMTF - 1; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = gs - 1; ;^871^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  !=  ge; i++ )  {^873^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsW ( len[selector[selCtr]][szptr[i]], rfreq[selector[selCtr]][szptr[i]] ) ;^874^875^^^^572^884^[REPLACE] bsW ( len[selector[selCtr]][szptr[i]], code[selector[selCtr]][szptr[i]] ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = gs + G_SIZE  ==  1;^869^^^^^572^884^[REPLACE] ge = gs + G_SIZE - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^869^^^^^572^884^[ADD] ge = gs + G_SIZE - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = workLimit - n1;^871^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^873^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^873^874^875^876^^572^884^[ADD] for  ( i = gs; i <= ge; i++ )  { bsW ( len[selector[selCtr]][szptr[i]], code[selector[selCtr]][szptr[i]] ) ; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs =workDone + 1;^878^^^^^572^884^[REPLACE] gs = ge + 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( runLength  ==  workLimit )  {^866^^^^^572^884^[REPLACE] if  ( gs >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^866^867^868^^^572^884^[ADD] if  ( gs >= nMTF )  { break; }^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( ge  !=  nMTF )  {^870^^^^^572^884^[REPLACE] if  ( ge >= nMTF )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = nMTF -workLimit;^871^^^^^572^884^[REPLACE] ge = nMTF - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = gs; i  <  ge; i++ )  {^873^^^^^572^884^[REPLACE] for  ( i = gs; i <= ge; i++ )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ge = gs + G_SIZE  &&  1;^869^^^^^572^884^[REPLACE] ge = gs + G_SIZE - 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^gs =workDone + 0;^878^^^^^572^884^[REPLACE] gs = ge + 1;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  ( selCtr == nSelectors )  )  {^881^^^^^572^884^[REPLACE] if  ( ! ( selCtr == nSelectors )  )  {^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^882^^^^^572^884^[REPLACE] panic (  ) ;^[METHOD] sendMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  int[][] code  rfreq  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  char[][] len  [TYPE]  short cost0  cost1  cost2  cost3  cost4  cost5  icv  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bsPutIntVS ( 8, origPtr ) ;^887^^^^^886^890^[REPLACE] bsPutIntVS ( 24, origPtr ) ;^[METHOD] moveToFrontCodeAndSend [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^887^888^^^^886^890^[ADD] bsPutIntVS ( 24, origPtr ) ; generateMTFValues (  ) ;^[METHOD] moveToFrontCodeAndSend [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^randomiseBlock (  ) ;^888^^^^^886^890^[REPLACE] generateMTFValues (  ) ;^[METHOD] moveToFrontCodeAndSend [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^888^^^^^886^890^[ADD] generateMTFValues (  ) ;^[METHOD] moveToFrontCodeAndSend [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^889^^^^^886^890^[REPLACE] sendMTFValues (  ) ;^[METHOD] moveToFrontCodeAndSend [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  dd  ge  gs  hh  i  inBlockSize  iter  j  k  last  ll  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int sp, lo, hi, d;^895^^^^^894^967^[REPLACE] int i, j, h, bigN, hp;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^895^896^^^^894^967^[ADD] int i, j, h, bigN, hp; int v;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int vv;^896^^^^^894^967^[REPLACE] int v;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^896^^^^^894^967^[ADD] int v;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bigN = hi - lo +workFactor;^898^^^^^894^967^[REPLACE] bigN = hi - lo + 1;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^898^^^^^894^967^[ADD] bigN = hi - lo + 1;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  <=  2L )  {^899^^^^^894^967^[REPLACE] if  ( bigN < 2 )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^return;^899^900^901^^^894^967^[ADD] if  ( bigN < 2 )  { return; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false;^900^^^^^894^967^[REPLACE] return;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^hp = 0 - 2;^903^^^^^894^967^[REPLACE] hp = 0;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( incs[hp]  ==  bigN )  {^904^^^^^894^967^[REPLACE] while  ( incs[hp] < bigN )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( fullGtU ( zptr[j - h]  !=  d, v  !=  d )  )  {^920^^^^^894^967^[REPLACE] while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  ==   ( lo + h - 3 )  )  {^923^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^923^924^925^^^894^967^[ADD] if  ( j <=  ( lo + h - 1 )  )  { break; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  !=  h];^921^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  |  h;^922^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^922^^^^^894^967^[ADD] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( fullGtU ( zptr[j - h] + workDone, v + d )  )  {^936^^^^^894^967^[REPLACE] while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >=   ( lo + runLength - 1 )  )  {^939^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^939^940^941^^^894^967^[ADD] if  ( j <=  ( lo + h - 1 )  )  { break; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  &  h];^937^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  >=  h;^938^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( fullGtU ( zptr[j - h] +zz, v +zz )  )  {^952^^^^^894^967^[REPLACE] while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >=   ( lo + h - 2 )  )  {^955^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  <  h];^953^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  ^  h;^954^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  >=  hi )  {^915^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >   ( lo + h - 1 )  )  {^923^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^923^924^925^^^894^967^[ADD] if  ( j <=  ( lo + h - 1 )  )  { break; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workLimitf  ( i  ==  workLimit )  {^931^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >   ( lo + h - 1 )  )  {^939^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workLimitf  ( i  <=  workLimit )  {^947^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^947^^^^^894^967^[REMOVE] ^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  <   ( lo + h - 1 )  )  {^955^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^955^956^957^^^894^967^[ADD] if  ( j <=  ( lo + h - 1 )  )  { break; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( true || firstAttempt )  {^962^^^^^894^967^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false;^963^^^^^894^967^[REPLACE] return;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v =  zptr[workLimit];^918^^^^^894^967^[REPLACE] v = zptr[i];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^918^^^^^894^967^[ADD] v = zptr[i];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 0; ;^919^^^^^894^967^[REPLACE] j = i;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  <=  h;^922^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[i] = i; ;^927^^^^^894^967^[REPLACE] zptr[j] = v;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v =  zptr[workLimit];^934^^^^^894^967^[REPLACE] v = zptr[i];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 0; ;^935^^^^^894^967^[REPLACE] j = i;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^937^938^^^^894^967^[ADD] zptr[j] = zptr[j - h]; j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  >  h;^938^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[i] = i; ;^943^^^^^894^967^[REPLACE] zptr[j] = v;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^943^944^^^^894^967^[ADD] zptr[j] = v; i++;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v =  zptr[null];^950^^^^^894^967^[REPLACE] v = zptr[i];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^950^^^^^894^967^[ADD] v = zptr[i];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 0; ;^951^^^^^894^967^[REPLACE] j = i;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^951^^^^^894^967^[ADD] j = i;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  ==  h];^953^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  ||  h;^954^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[i] = i; ;^959^^^^^894^967^[REPLACE] zptr[j] = v;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^959^^^^^894^967^[ADD] zptr[j] = v;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( fullGtU ( zptr[j - h] + d, vec + d )  )  {^920^^^^^894^967^[REPLACE] while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >   ( lo + runLength - 1 )  )  {^923^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  <=  h];^921^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  ||  h;^922^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^936^937^^^^894^967^[ADD] while  ( fullGtU ( zptr[j - h] + d, v + d )  )  { zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  <   ( lo + h - 1 )  )  {^939^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  ==  h];^937^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  ==  h;^938^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^938^^^^^894^967^[ADD] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( fullGtU ( zptr[j - h]  &&  d, v  &&  d )  )  {^952^^^^^894^967^[REPLACE] while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  ==   ( lo + h - 1 * 4 )  )  {^955^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  >  h];^953^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  !=  h;^954^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  !=  workLimit )  {^915^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  >=  hi )  {^931^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^931^932^933^^^894^967^[ADD] if  ( i > hi )  { break; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  ==   ( lo + h - 1 * 0 )  )  {^939^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  ==  hi )  {^947^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  <   ( lo + h - 1 + 3 )  )  {^955^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^955^^^^^894^967^[REMOVE] ^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit ) {^962^^^^^894^967^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( ; hp  <=  0; hp-- )  {^909^^^^^894^967^[REPLACE] for  ( ; hp >= 0; hp-- )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( fullGtU ( zptr[j - h] + workDone, v + d )  )  {^920^^^^^894^967^[REPLACE] while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^920^921^^^^894^967^[ADD] while  ( fullGtU ( zptr[j - h] + d, v + d )  )  { zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  |  h];^921^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  !=  h;^922^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( fullGtU ( zptr[j - h] +zz, v +zz )  )  {^936^^^^^894^967^[REPLACE] while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^939^940^941^^^894^967^[ADD] if  ( j <=  ( lo + h - 1 )  )  { break; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  &&  h;^938^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >   ( lo + h - 1 )  )  {^955^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  |  h];^953^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  >=  h;^954^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  <=  hi )  {^915^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  ==  hi )  {^931^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^931^932^933^^^894^967^[ADD] if  ( i > hi )  { break; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >=   ( lo + h - 1 )  )  {^939^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^939^^^^^894^967^[REMOVE] ^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  <  hi )  {^947^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v =  zptr[null];^918^^^^^894^967^[REPLACE] v = zptr[i];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  ||  h];^921^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  &  h;^922^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v =  zptr[null];^934^^^^^894^967^[REPLACE] v = zptr[i];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^935^^^^^894^967^[ADD] j = i;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  <  h];^937^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  ||  h;^938^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  ||  h];^953^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^j = j - h;^953^954^^^^894^967^[ADD] zptr[j] = zptr[j - h]; j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  >  h;^954^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  <   ( lo + runLength - 1 )  )  {^923^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  >=  h];^921^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( fullGtU ( zptr[j - h]  !=  d, v  !=  d )  )  {^936^^^^^894^967^[REPLACE] while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  ==   ( lo + h - 1 )  )  {^939^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  &&  h];^937^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  <  h;^938^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( fullGtU ( zptr[j - runLength] + d, v + d )  )  {^952^^^^^894^967^[REPLACE] while  ( fullGtU ( zptr[j - h] + d, v + d )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^952^953^^^^894^967^[ADD] while  ( fullGtU ( zptr[j - h] + d, v + d )  )  { zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >=   ( lo + h - 1 )  )  {^955^^^^^894^967^[REPLACE] if  ( j <=  ( lo + h - 1 )  )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  ^  h];^953^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^953^954^^^^894^967^[ADD] zptr[j] = zptr[j - h]; j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  ==  h;^954^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  <=  hi )  {^915^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^915^916^917^^^894^967^[ADD] if  ( i > hi )  { break; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  != workLimit )  {^931^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  !=  hi )  {^947^^^^^894^967^[REPLACE] if  ( i > hi )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^947^948^949^^^894^967^[ADD] if  ( i > hi )  { break; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit || firstAttempt )  {^962^^^^^894^967^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^962^963^964^^^894^967^[ADD] if  ( workDone > workLimit && firstAttempt )  { return; }^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^h =  incs[tmp];^910^^^^^894^967^[REPLACE] h = incs[hp];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = lo +workLimit;^912^^^^^894^967^[REPLACE] i = lo + h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  ^  h];^937^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^937^^^^^894^967^[ADD] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^v =  zptr[workLimit];^950^^^^^894^967^[REPLACE] v = zptr[i];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  <=  h];^953^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  <=  h;^954^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^954^^^^^894^967^[ADD] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i = lo  |  h;^912^^^^^894^967^[REPLACE] i = lo + h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^919^^^^^894^967^[ADD] j = i;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  <  h];^921^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  &&  h;^922^^^^^894^967^[REPLACE] j = j - h;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = zptr[j  ||  h];^937^^^^^894^967^[REPLACE] zptr[j] = zptr[j - h];^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^959^960^^^^894^967^[ADD] zptr[j] = v; i++;^[METHOD] simpleSort [TYPE] void [PARAMETER] int lo int hi int d [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  remF  runLength  selCtr  t  tFreq  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 * 0;^970^^^^^969^979^[REPLACE] int temp = 0;^[METHOD] vswap [TYPE] void [PARAMETER] int p1 int p2 int n [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^970^^^^^969^979^[ADD] int temp = 0;^[METHOD] vswap [TYPE] void [PARAMETER] int p1 int p2 int n [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( n  <=  0 )  {^971^^^^^969^979^[REPLACE] while  ( n > 0 )  {^[METHOD] vswap [TYPE] void [PARAMETER] int p1 int p2 int n [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^971^972^^^^969^979^[ADD] while  ( n > 0 )  { temp = zptr[p1];^[METHOD] vswap [TYPE] void [PARAMETER] int p1 int p2 int n [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^temp = zptr[unLo]; ;^972^^^^^969^979^[REPLACE] temp = zptr[p1];^[METHOD] vswap [TYPE] void [PARAMETER] int p1 int p2 int n [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[p1]  =  zptr[p1] ;^973^^^^^969^979^[REPLACE] zptr[p1] = zptr[p2];^[METHOD] vswap [TYPE] void [PARAMETER] int p1 int p2 int n [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[gtHi] = temp; ;^974^^^^^969^979^[REPLACE] zptr[p2] = temp;^[METHOD] vswap [TYPE] void [PARAMETER] int p1 int p2 int n [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^974^975^^^^969^979^[ADD] zptr[p2] = temp; p1++;^[METHOD] vswap [TYPE] void [PARAMETER] int p1 int p2 int n [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^972^^^^^969^979^[ADD] temp = zptr[p1];^[METHOD] vswap [TYPE] void [PARAMETER] int p1 int p2 int n [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[p1]  = null ;^973^^^^^969^979^[REPLACE] zptr[p1] = zptr[p2];^[METHOD] vswap [TYPE] void [PARAMETER] int p1 int p2 int n [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^char ll_i;^982^^^^^981^995^[REPLACE] char t;^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^982^^^^^981^995^[ADD] char t;^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( a  >=  b )  {^983^^^^^981^995^[REPLACE] if  ( a > b )  {^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^b = a; ;^984^^^^^981^995^[REPLACE] t = a;^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^a =  null;^985^^^^^981^995^[REPLACE] a = b;^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^985^^^^^981^995^[ADD] a = b;^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^b = a; ;^986^^^^^981^995^[REPLACE] b = t;^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( b  !=  c )  {^988^^^^^981^995^[REPLACE] if  ( b > c )  {^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^b = a; ;^989^^^^^981^995^[REPLACE] b = c;^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( a  <  b )  {^991^^^^^981^995^[REPLACE] if  ( a > b )  {^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^b = a;^991^992^993^^^981^995^[ADD] if  ( a > b )  { b = a; }^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^b = c; ;^992^^^^^981^995^[REPLACE] b = a;^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^992^^^^^981^995^[ADD] b = a;^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return;^994^^^^^981^995^[REPLACE] return b;^[METHOD] med3 [TYPE] char [PARAMETER] char a char b char c [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char a  b  c  t  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dd  ge  gs  h  hh  hi  hp  i  inBlockSize  iter  j  k  last  ll  lo  maxLen  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  t  tFreq  temp  tmp  totc  u  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int sp, lo, hi, d;^1004^^^^^1003^1120^[REPLACE] int unLo, unHi, ltLo, gtHi, med, n, m;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1004^^^^^1003^1120^[ADD] int unLo, unHi, ltLo, gtHi, med, n, m;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int i, j, ss, sb;^1005^^^^^1003^1120^[REPLACE] int sp, lo, hi, d;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1005^^^^^1003^1120^[ADD] int sp, lo, hi, d;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^sp = 1;^1007^^^^^1003^1120^[REPLACE] sp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = lo; ;^1009^^^^^1003^1120^[REPLACE] stack[sp].ll = loSt;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1009^1010^^^^1003^1120^[ADD] stack[sp].ll = loSt; stack[sp].hh = hiSt;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].hh = m - 1; ;^1010^^^^^1003^1120^[REPLACE] stack[sp].hh = hiSt;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = lo; ;^1011^^^^^1003^1120^[REPLACE] stack[sp].dd = dSt;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1011^^^^^1003^1120^[ADD] stack[sp].dd = dSt;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( sp  < tmp )  {^1014^^^^^1003^1120^[REPLACE] while  ( sp > 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( false )  {^1039^^^^^1003^1120^[REPLACE] while  ( true )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( false )  {^1040^^^^^1003^1120^[REPLACE] while  ( true )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  >=  unHi )  {^1041^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  !=  1 )  {^1045^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^temp = zptr[unHi]; ;^1047^^^^^1003^1120^[REPLACE] temp = zptr[unLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1047^1048^^^^1003^1120^[ADD] temp = zptr[unLo]; zptr[unLo] = zptr[ltLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[unLo] = zptr[unHi]; ;^1048^^^^^1003^1120^[REPLACE] zptr[unLo] = zptr[ltLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1048^^^^^1003^1120^[ADD] zptr[unLo] = zptr[ltLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[gtHi] = temp; ;^1049^^^^^1003^1120^[REPLACE] zptr[ltLo] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0L;^1046^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1046^^^^^1003^1120^[ADD] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  <  workDone )  {^1054^^^^^1003^1120^[REPLACE] if  ( n >  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = block[zptr[unLo] + d + 1]  >  med;^1044^^^^^1003^1120^[REPLACE] n = block[zptr[unLo] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 3;^1046^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  ( false )  {^1059^^^^^1003^1120^[REPLACE] while  ( true )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1059^1060^1061^^^1003^1120^[ADD] while  ( true )  { if  ( unLo > unHi )  { break;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  <= workLimit )  {^1060^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workDone  &&  0 )  {^1064^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^int temp = 0;temp = zptr[unHi];zptr[unHi] = zptr[gtHi];zptr[gtHi] = temp;^1064^1065^1066^1067^1068^1003^1120^[ADD] if  ( n == 0 )  { int temp = 0; temp = zptr[unHi]; zptr[unHi] = zptr[gtHi]; zptr[gtHi] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^temp = zptr[unLo]; ;^1066^^^^^1003^1120^[REPLACE] temp = zptr[unHi];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[unLo] = zptr[ltLo]; ;^1067^^^^^1003^1120^[REPLACE] zptr[unHi] = zptr[gtHi];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[p2] = temp; ;^1068^^^^^1003^1120^[REPLACE] zptr[gtHi] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 2;^1065^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1065^^^^^1003^1120^[ADD] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workDone  >=   0 )  {^1073^^^^^1003^1120^[REPLACE] if  ( n <  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = block[zptr[unHi] + d + 1]  >  med;^1063^^^^^1003^1120^[REPLACE] n = block[zptr[unHi] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1063^^^^^1003^1120^[ADD] n = block[zptr[unHi] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 4;^1065^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  ==  unHi )  {^1041^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  &&  0 )  {^1045^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1047^^^^^1003^1120^[ADD] temp = zptr[unLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1048^1049^^^^1003^1120^[ADD] zptr[unLo] = zptr[ltLo]; zptr[ltLo] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 - 4;^1046^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  >=   0 )  {^1054^^^^^1003^1120^[REPLACE] if  ( n >  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^1054^1055^1056^^^1003^1120^[ADD] if  ( n >  0 )  { break; }^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  ==  workLimit )  {^1060^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  ||  0 )  {^1064^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 / 4;^1065^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone  <=   0 )  {^1073^^^^^1003^1120^[REPLACE] if  ( n <  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  >= workLimit )  {^1078^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = block[zptr[unLo] + d + 0]  ^  med;^1044^^^^^1003^1120^[REPLACE] n = block[zptr[unLo] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1044^^^^^1003^1120^[ADD] n = block[zptr[unLo] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = block[zptr[unLo] + d + 1] - med; ;^1063^^^^^1003^1120^[REPLACE] n = block[zptr[unHi] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^temp = zptr[unHi]; ;^1082^^^^^1003^1120^[REPLACE] temp = zptr[unLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[unLo] = zptr[ltLo]; ;^1083^^^^^1003^1120^[REPLACE] zptr[unLo] = zptr[unHi];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[gtHi] = temp; ;^1084^^^^^1003^1120^[REPLACE] zptr[unHi] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 2;^1046^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1065^1066^^^^1003^1120^[ADD] int temp = 0; temp = zptr[unHi];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 2;^1081^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  <=  unHi )  {^1041^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1041^1042^1043^^^1003^1120^[ADD] if  ( unLo > unHi )  { break; }^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  !=  0 )  {^1045^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^ltLo++;^1049^1050^^^^1003^1120^[ADD] zptr[ltLo] = temp; ltLo++;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 1;^1046^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  <=   blockSize100k )  {^1054^^^^^1003^1120^[REPLACE] if  ( n >  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1054^1055^1056^^^1003^1120^[ADD] if  ( n >  0 )  { break; }^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = block[zptr[unHi] + d + 1] - med; ;^1044^^^^^1003^1120^[REPLACE] n = block[zptr[unLo] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1046^1047^^^^1003^1120^[ADD] int temp = 0; temp = zptr[unLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  ==  unHi )  {^1060^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workDone  !=  0 )  {^1064^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1066^^^^^1003^1120^[ADD] temp = zptr[unHi];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 * 0;^1065^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  >   0 )  {^1073^^^^^1003^1120^[REPLACE] if  ( n <  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = block[zptr[unHi] + d + 1]  &  med;^1063^^^^^1003^1120^[REPLACE] n = block[zptr[unHi] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 % 2;^1065^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( tmp  ==  QSORT_STACK_SIZE )  {^1015^^^^^1003^1120^[REPLACE] if  ( sp >= QSORT_STACK_SIZE )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1015^1016^1017^^^1003^1120^[ADD] if  ( sp >= QSORT_STACK_SIZE )  { panic (  ) ; }^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^1016^^^^^1003^1120^[REPLACE] panic (  ) ;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( hi - lo < SMALL_THRESH ) {^1024^^^^^1003^1120^[REPLACE] if  ( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1024^1025^1026^1027^1028^1003^1120^[ADD] if  ( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )  { simpleSort ( lo, hi, d ) ; if  ( workDone > workLimit && firstAttempt )  { return; }^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit ) {^1026^^^^^1003^1120^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false;^1027^^^^^1003^1120^[REPLACE] return;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit || firstAttempt )  {^1026^^^^^1003^1120^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^return;^1026^1027^1028^^^1003^1120^[ADD] if  ( workDone > workLimit && firstAttempt )  { return; }^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  >= workLimit )  {^1041^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^1041^^^^^1003^1120^[REMOVE] ^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  ||  0 )  {^1045^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^zptr[unLo] = zptr[ltLo];^1047^1048^^^^1003^1120^[ADD] temp = zptr[unLo]; zptr[unLo] = zptr[ltLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  !=   3 )  {^1054^^^^^1003^1120^[REPLACE] if  ( n >  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  ==  unHi )  {^1060^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  &&  2 )  {^1064^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone  ==  workDone )  {^1073^^^^^1003^1120^[REPLACE] if  ( n <  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  ==  unHi )  {^1078^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  <=  ltLo )  {^1089^^^^^1003^1120^[REPLACE] if  ( gtHi < ltLo )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1089^1090^1091^1092^1093^1003^1120^[ADD] if  ( gtHi < ltLo )  { stack[sp].ll = lo; stack[sp].hh = hi; stack[sp].dd = d + 1; sp++;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = m; ;^1090^^^^^1003^1120^[REPLACE] stack[sp].ll = lo;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1090^1091^^^^1003^1120^[ADD] stack[sp].ll = lo; stack[sp].hh = hi;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = lo; ;^1091^^^^^1003^1120^[REPLACE] stack[sp].hh = hi;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].dd =workDone + 1;^1092^^^^^1003^1120^[REPLACE] stack[sp].dd = d + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1092^^^^^1003^1120^[ADD] stack[sp].dd = d + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^hi = stack[sp].hh; ;^1020^^^^^1003^1120^[REPLACE] lo = stack[sp].ll;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^hi = stack[sp].hh;^1020^1021^^^^1003^1120^[ADD] lo = stack[sp].ll; hi = stack[sp].hh;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^d = stack[sp].dd; ;^1021^^^^^1003^1120^[REPLACE] hi = stack[sp].hh;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^hi = stack[sp].hh; ;^1022^^^^^1003^1120^[REPLACE] d = stack[sp].dd;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^med = med3 ( block[zptr[lo] + d +workFactor], block[zptr[hi            ] + d  +workFactor], block[zptr[ ( lo + hi )  >>>workFactor] + d +workFactor] ) ;^1032^1033^1034^^^1003^1120^[REPLACE] med = med3 ( block[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + hi )  >>> 1] + d + 1] ) ;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^unLo =  ltLo^1036^^^^^1003^1120^[REPLACE] unLo = ltLo = lo;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1036^1037^^^^1003^1120^[ADD] unLo = ltLo = lo; unHi = gtHi = hi;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^unHi =  gtHi^1037^^^^^1003^1120^[REPLACE] unHi = gtHi = hi;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1037^^^^^1003^1120^[ADD] unHi = gtHi = hi;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = block[zptr[unLo] + d + 3]  &  med;^1044^^^^^1003^1120^[REPLACE] n = block[zptr[unLo] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1049^^^^^1003^1120^[ADD] zptr[ltLo] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = block[zptr[unHi] + d + 1]  <=  med;^1063^^^^^1003^1120^[REPLACE] n = block[zptr[unHi] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1067^^^^^1003^1120^[ADD] zptr[unHi] = zptr[gtHi];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n  =   ( ltLo - lo )  ;^1097^^^^^1003^1120^[REPLACE] n =  (  ( ltLo - lo )  <  ( unLo - ltLo )  )  ?  ( ltLo - lo )  :  ( unLo - ltLo ) ;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^m  =   (workFactor ) ;^1099^^^^^1003^1120^[REPLACE] m =  (  ( hi - gtHi )  <  ( gtHi - unHi )  )  ?  ( hi - gtHi )  :  ( gtHi - unHi ) ;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1099^^^^^1003^1120^[ADD] m =  (  ( hi - gtHi )  <  ( gtHi - unHi )  )  ?  ( hi - gtHi )  :  ( gtHi - unHi ) ;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = lo + unLo  ==  ltLo  ==  1;^1102^^^^^1003^1120^[REPLACE] n = lo + unLo - ltLo - 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1102^^^^^1003^1120^[ADD] n = lo + unLo - ltLo - 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^m = hi -  ( gtHi - unHi )   ||  1;^1103^^^^^1003^1120^[REPLACE] m = hi -  ( gtHi - unHi )  + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1103^^^^^1003^1120^[ADD] m = hi -  ( gtHi - unHi )  + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = m; ;^1105^^^^^1003^1120^[REPLACE] stack[sp].ll = lo;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1105^1106^^^^1003^1120^[ADD] stack[sp].ll = lo; stack[sp].hh = n;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = lo; ;^1106^^^^^1003^1120^[REPLACE] stack[sp].hh = n;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1106^1107^^^^1003^1120^[ADD] stack[sp].hh = n; stack[sp].dd = d;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = lo; ;^1107^^^^^1003^1120^[REPLACE] stack[sp].dd = d;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = lo; ;^1110^^^^^1003^1120^[REPLACE] stack[sp].ll = n + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = m; ;^1111^^^^^1003^1120^[REPLACE] stack[sp].hh = m - 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].dd =workDone + 2;^1112^^^^^1003^1120^[REPLACE] stack[sp].dd = d + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = lo; ;^1115^^^^^1003^1120^[REPLACE] stack[sp].ll = m;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = lo; ;^1116^^^^^1003^1120^[REPLACE] stack[sp].hh = hi;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = lo; ;^1117^^^^^1003^1120^[REPLACE] stack[sp].dd = d;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 / 1;^1046^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 + 3;^1065^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 / 4;^1081^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  !=  unHi )  {^1041^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^1041^1042^1043^^^1003^1120^[ADD] if  ( unLo > unHi )  { break; }^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  !=  2 )  {^1045^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1049^1050^^^^1003^1120^[ADD] zptr[ltLo] = temp; ltLo++;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone  <   0 )  {^1054^^^^^1003^1120^[REPLACE] if  ( n >  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 - 1;^1046^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  !=  unHi )  {^1060^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^1060^1061^1062^^^1003^1120^[ADD] if  ( unLo > unHi )  { break; }^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  &&  0 )  {^1064^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1067^1068^^^^1003^1120^[ADD] zptr[unHi] = zptr[gtHi]; zptr[gtHi] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1068^^^^^1003^1120^[ADD] zptr[gtHi] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 1;^1065^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  >   2 )  {^1073^^^^^1003^1120^[REPLACE] if  ( n <  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^1073^1074^1075^^^1003^1120^[ADD] if  ( n <  0 )  { break; }^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = block[zptr[unHi] + d + 4]  &  med;^1063^^^^^1003^1120^[REPLACE] n = block[zptr[unHi] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^gtHi--;^1068^1069^^^^1003^1120^[ADD] zptr[gtHi] = temp; gtHi--;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0L;^1065^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  != workLimit )  {^1041^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone  ||  0 )  {^1045^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1045^1046^1047^1048^1049^1003^1120^[ADD] if  ( n == 0 )  { int temp = 0; temp = zptr[unLo]; zptr[unLo] = zptr[ltLo]; zptr[ltLo] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 4;^1046^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  ==   4 )  {^1054^^^^^1003^1120^[REPLACE] if  ( n >  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  <  unHi )  {^1060^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  ||  2 )  {^1064^^^^^1003^1120^[REPLACE] if  ( n == 0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1064^1065^1066^1067^1068^1003^1120^[ADD] if  ( n == 0 )  { int temp = 0; temp = zptr[unHi]; zptr[unHi] = zptr[gtHi]; zptr[gtHi] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 0 - 2;^1065^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workDone  ==   0L )  {^1073^^^^^1003^1120^[REPLACE] if  ( n <  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^1073^^^^^1003^1120^[REMOVE] ^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  >=  unHi )  {^1078^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^1078^1079^1080^^^1003^1120^[ADD] if  ( unLo > unHi )  { break; }^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1084^^^^^1003^1120^[ADD] zptr[unHi] = temp;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 1;^1081^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1081^1082^^^^1003^1120^[ADD] int temp = 0; temp = zptr[unLo];^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  <  workLimit )  {^1041^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone  <=  workDone )  {^1054^^^^^1003^1120^[REPLACE] if  ( n >  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  <=  unHi )  {^1060^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = block[zptr[unHi] + d + 0]  &&  med;^1063^^^^^1003^1120^[REPLACE] n = block[zptr[unHi] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( sp  < tmp )  {^1015^^^^^1003^1120^[REPLACE] if  ( sp >= QSORT_STACK_SIZE )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^finish (  ) ;^1016^^^^^1003^1120^[REMOVE] ^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  d >true )  {^1024^^^^^1003^1120^[REPLACE] if  ( hi - lo < SMALL_THRESH || d > DEPTH_THRESH )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( true ) {^1026^^^^^1003^1120^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  firstAttempt )  {^1026^^^^^1003^1120^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  <  unHi )  {^1041^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone  !=   0 )  {^1054^^^^^1003^1120^[REPLACE] if  ( n >  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( j <=  ( h - 1 )  )  {     break; }^1054^^^^^1003^1120^[REMOVE] ^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 3;^1065^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( n  !=   0 )  {^1073^^^^^1003^1120^[REPLACE] if  ( n <  0 )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( unLo  >=  workLimit )  {^1078^^^^^1003^1120^[REPLACE] if  ( unLo > unHi )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( gtHi  >=  ltLo )  {^1089^^^^^1003^1120^[REPLACE] if  ( gtHi < ltLo )  {^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1091^^^^^1003^1120^[ADD] stack[sp].hh = hi;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].hh = m - 1; ;^1092^^^^^1003^1120^[REPLACE] stack[sp].dd = d + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^med = med3 ( block[zptr[lo]  ==  d  ==  0], block[zptr[hi            ]  ==  d   ==  0], block[zptr[ ( lo  ==  hi )  >>> 0]  ==  d  ==  0] ) ;^1032^1033^1034^^^1003^1120^[REPLACE] med = med3 ( block[zptr[lo] + d + 1], block[zptr[hi            ] + d  + 1], block[zptr[ ( lo + hi )  >>> 1] + d + 1] ) ;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = block[zptr[unLo] + d + 2]  >  med;^1044^^^^^1003^1120^[REPLACE] n = block[zptr[unLo] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = block[zptr[unHi] + d + 1]  &&  med;^1063^^^^^1003^1120^[REPLACE] n = block[zptr[unHi] + d + 1] - med;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1068^1069^^^^1003^1120^[ADD] zptr[gtHi] = temp; gtHi--;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].workDoned = d + p1;^1092^^^^^1003^1120^[REPLACE] stack[sp].dd = d + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1097^1098^^^^1003^1120^[ADD] n =  (  ( ltLo - lo )  <  ( unLo - ltLo )  )  ?  ( ltLo - lo )  :  ( unLo - ltLo ) ; vswap ( lo, unLo - n, n ) ;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^m =  (  ( hi - gtHi )   <=   ( gtHi - unHi )  )  ?  ( hi - gtHi )  :  ( gtHi - unHi ) ;^1099^^^^^1003^1120^[REPLACE] m =  (  ( hi - gtHi )  <  ( gtHi - unHi )  )  ?  ( hi - gtHi )  :  ( gtHi - unHi ) ;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^n = lo + unLo - ltLo -workFactor;^1102^^^^^1003^1120^[REPLACE] n = lo + unLo - ltLo - 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^m = hi -  ( gtHi - unHi )   >  1;^1103^^^^^1003^1120^[REPLACE] m = hi -  ( gtHi - unHi )  + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1106^^^^^1003^1120^[ADD] stack[sp].hh = n;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].ll = workDone + 1;^1110^^^^^1003^1120^[REPLACE] stack[sp].ll = n + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[sp].dd = d +workDone;^1112^^^^^1003^1120^[REPLACE] stack[sp].dd = d + 1;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int temp = 4;^1081^^^^^1003^1120^[REPLACE] int temp = 0;^[METHOD] qSort3 [TYPE] void [PARAMETER] int loSt int hiSt int dSt StackElem[] stack [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  weight  zptr  [TYPE]  boolean[] inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  aFreq  allowableBlockSize  alphaSize  b  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  ch  combinedCRC  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  origPtr  p1  p2  remF  runLength  selCtr  sp  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int sp, lo, hi, d;^1123^^^^^1122^1321^[REPLACE] int i, j, ss, sb;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1123^1124^^^^1122^1321^[ADD] int i, j, ss, sb; int[] runningOrder = new int[256];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] runningOrder = new int[72];^1124^^^^^1122^1321^[REPLACE] int[] runningOrder = new int[256];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int[] copy = new int[256 * 4];^1125^^^^^1122^1321^[REPLACE] int[] copy = new int[256];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^boolean[] bigDone = new boolean[74];^1126^^^^^1122^1321^[REPLACE] boolean[] bigDone = new boolean[256];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int sp, lo, hi, d;^1127^^^^^1122^1321^[REPLACE] int c1, c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int sp, lo, hi, d;^1128^^^^^1122^1321^[REPLACE] int numQSorted;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  <=  NUM_OVERSHOOT_BYTES; i++ )  {^1138^^^^^1122^1321^[REPLACE] for  ( i = 0; i < NUM_OVERSHOOT_BYTES; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last  <  i  <  4] = block[ ( i %  ( last  <  1 )  )   <  1];^1139^^^^^1122^1321^[REPLACE] block[last + i + 2] = block[ ( i %  ( last + 1 )  )  + 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0L; i < NUM_OVERSHOOT_BYTES; i++ )  {^1138^^^^^1122^1321^[REPLACE] for  ( i = 0; i < NUM_OVERSHOOT_BYTES; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[last + i +workLimit] = block[ ( i %  ( last + 1 )  )  + 1];^1139^^^^^1122^1321^[REPLACE] block[last + i + 2] = block[ ( i %  ( last + 1 )  )  + 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1139^^^^^1122^1321^[ADD] block[last + i + 2] = block[ ( i %  ( last + 1 )  )  + 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 2; i  <  last + NUM_OVERSHOOT_BYTES; i++ )  {^1141^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= last + NUM_OVERSHOOT_BYTES; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[i] = 2;^1142^^^^^1122^1321^[REPLACE] quadrant[i] = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= last + NUM_OVERSHOOT_BYTES; i++ )  { quadrant[i] = 0; ;^1141^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= last + NUM_OVERSHOOT_BYTES; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[i] = 4;^1142^^^^^1122^1321^[REPLACE] quadrant[i] = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[0] = block[last  ==  1];^1145^^^^^1122^1321^[REPLACE] block[0] = block[last + 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1145^^^^^1122^1321^[ADD] block[0] = block[last + 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 - 4 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] )  <   ( ftab[ (  ( vv )  + 1 - 4 )  << 8] - ftab[ ( vv )  << 8] )  )  {^1214^1215^1216^^^1122^1321^[REPLACE] while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >=   ( shifts )  )  {^1219^^^^^1214^1222^[REPLACE] if  ( j <=  ( h - 1 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^1219^1220^1221^^^1214^1222^[ADD] if  ( j <=  ( h - 1 )  )  { break; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = runningOrder[j  ==  h];^1217^^^^^1214^1222^[REPLACE] runningOrder[j] = runningOrder[j - h];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  |  h;^1218^^^^^1214^1222^[REPLACE] j = j - h;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (  ( zz  >=  >=  shifts )   >=  65534 )  {^1281^^^^^1122^1321^[REPLACE] while  (  ( bbSize >> shifts )  > 65534 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^shifts++;^1281^1282^1283^^^1122^1321^[ADD] while  (  ( bbSize >> shifts )  > 65534 )  { shifts++; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( last  <=  4000 )  {^1147^^^^^1122^1321^[REPLACE] if  ( last < 4000 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1147^1148^1149^1150^^1122^1321^[ADD] if  ( last < 4000 )  {  Use simpleSort (  ) , since the full sorting mechanism has quite a large constant overhead.^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] )  !=   ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^1214^1215^1216^^^1147^1320^[REPLACE] while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >   ( h - 3 )  )  {^1219^^^^^1214^1222^[REPLACE] if  ( j <=  ( h - 1 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1219^1220^1221^^^1214^1222^[ADD] if  ( j <=  ( h - 1 )  )  { break; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = runningOrder[j  |  h];^1217^^^^^1214^1222^[REPLACE] runningOrder[j] = runningOrder[j - h];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (  ( bbSize  ==  ==  shifts )   ==  65534 )  {^1281^^^^^1147^1320^[REPLACE] while  (  ( bbSize >> shifts )  > 65534 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  !=   ( shifts )  )  {^1219^^^^^1147^1320^[REPLACE] if  ( j <=  ( h - 1 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1219^1220^1221^^^1147^1320^[ADD] if  ( j <=  ( h - 1 )  )  { break; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  ( ftab[sb] & SETMASK )  == SETMASK )  )  {^1252^^^^^1147^1320^[REPLACE] if  ( ! (  ( ftab[sb] & SETMASK )  == SETMASK )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  ==  lo )  {^1255^^^^^1147^1320^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^qSort3 ( lo, hi, 2, stack ) ;numQSorted +=  ( hi - lo + 1 ) ;return;^1255^1256^1257^1258^1259^1147^1320^[ADD] if  ( hi > lo )  { qSort3 ( lo, hi, 2, stack ) ; numQSorted +=  ( hi - lo + 1 ) ; if  ( workDone > workLimit && firstAttempt )  { return;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  firstAttempt )  {^1258^^^^^1147^1320^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false;^1259^^^^^1147^1320^[REPLACE] return;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  (workFactor + 2 ) ;^1257^^^^^1147^1320^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit || firstAttempt )  {^1258^^^^^1147^1320^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  (workFactor + 1 ) ;^1257^^^^^1147^1320^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[sb] |;^1262^^^^^1147^1320^[REPLACE] ftab[sb] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1262^^^^^1147^1320^[ADD] ftab[sb] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int lo = ftab[sb] | CLEARMASK;^1253^^^^^1147^1320^[REPLACE] int lo = ftab[sb] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb + p1] & selCtr )  - 1;^1254^^^^^1147^1320^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  <=  lo )  {^1255^^^^^1147^1320^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (true ) {^1258^^^^^1147^1320^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1258^1259^1260^^^1147^1320^[ADD] if  ( workDone > workLimit && firstAttempt )  { return; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  > workLimit )  {^1276^^^^^1147^1320^[REPLACE] if  ( i < 255 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1276^1277^1278^1279^^1147^1320^[ADD] if  ( i < 255 )  { int bbStart  = ftab[ss << 8] & CLEARMASK; int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart; int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (  ( zz  >=  >=  shifts )   >=  4 )  {^1281^^^^^1147^1320^[REPLACE] while  (  ( bbSize >> shifts )  > 65534 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1281^1282^1283^^^1147^1320^[ADD] while  (  ( bbSize >> shifts )  > 65534 )  { shifts++; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( a2update  >=  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1147^1320^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update] = qVal; ;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  (  ( bbSize - 1 )  >> ss )  <= 65535 )  )  {^1294^^^^^1147^1320^[REPLACE] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^1295^^^^^1147^1320^[REPLACE] panic (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  >=  bbSize; j++ )  {^1285^^^^^1147^1320^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( a2update  !=  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1147^1320^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update + last + 1] = qVal; ;^1288^^^^^1147^1320^[REPLACE] quadrant[a2update] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  ==  last  ==  1 + 2] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[temp  >=  j];^1286^^^^^1147^1320^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1286^^^^^1147^1320^[ADD] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  !=  shifts ) ;^1287^^^^^1147^1320^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 4; j < bbSize; j++ )  {^1285^^^^^1147^1320^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1285^1286^1287^1288^^1147^1320^[ADD] for  ( j = 0; j < bbSize; j++ )  { int a2update = zptr[bbStart + j]; int qVal =  ( j >> shifts ) ; quadrant[a2update] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  >=  last  >=  1] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbStart  = ftab[ss << 1] |totc;^1277^^^^^1147^1320^[REPLACE] int bbStart  = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] &ss )  - workLimit;^1278^^^^^1147^1320^[REPLACE] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1278^1279^^^^1147^1320^[ADD] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart; int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int shifts   = 1;^1279^^^^^1147^1320^[REPLACE] int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[bbStart  ^  j];^1286^^^^^1147^1320^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  <=  shifts ) ;^1287^^^^^1147^1320^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update + last +selCtr] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1290^^^^^1147^1320^[ADD] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  (  ( bbSize - 1 * 2 )  >> t )  <= 65535 )  )  {^1294^^^^^1147^1320^[REPLACE] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( bigDone[c1] )  {^1310^^^^^1147^1320^[REPLACE] if  ( !bigDone[c1] )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;copy[c1]++;^1310^1311^1312^1313^^1147^1320^[ADD] if  ( !bigDone[c1] )  { zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1; copy[c1]++; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[copy[c1]]  =  last ;^1311^^^^^1147^1320^[REPLACE] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  <  255; i++ )  {^1160^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bigDone[i] = true;^1161^^^^^1147^1320^[REPLACE] bigDone[i] = false;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( workLimit = 0 - 2; i  <  65536; i++ )  {^1164^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= 65536; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[i] = 3;^1165^^^^^1147^1320^[REPLACE] ftab[i] = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0 * 0; i  >=  last; i++ )  {^1169^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i  |  1];^1170^^^^^1147^1320^[REPLACE] c2 = block[i + 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  null;^1172^^^^^1147^1320^[REPLACE] c1 = c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1; i  !=  65536; i++ )  {^1175^^^^^1147^1320^[REPLACE] for  ( i = 1; i <= 65536; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[i] += ftab[i  <  1];^1176^^^^^1147^1320^[REPLACE] ftab[i] += ftab[i - 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( workLimit = 0; i  >  last; i++ )  {^1180^^^^^1147^1320^[REPLACE] for  ( i = 0; i < last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i  >  2];^1181^^^^^1147^1320^[REPLACE] c2 = block[i + 2];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j =  (p1 )  + c2;^1182^^^^^1147^1320^[REPLACE] j =  ( c1 << 8 )  + c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  null;^1183^^^^^1147^1320^[REPLACE] c1 = c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[ftab[j]] = last; ;^1185^^^^^1147^1320^[REPLACE] zptr[ftab[j]] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i  >=  255; i++ )  {^1198^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1198^1199^1200^^^1147^1320^[ADD] for  ( i = 0; i <= 255; i++ )  { runningOrder[i] = i; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = vv; ;^1199^^^^^1147^1320^[REPLACE] runningOrder[i] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1199^^^^^1147^1320^[ADD] runningOrder[i] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = h; i  <  255; i++ )  {^1211^^^^^1147^1320^[REPLACE] for  ( i = h; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1L )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] )  !=   ( ftab[ (  ( vv )  + 1L )  << 8] - ftab[ ( vv )  << 8] )  )  {^1214^1215^1216^^^1147^1320^[REPLACE] while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1214^1215^1216^^^1147^1320^[ADD] while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = runningOrder[j  >=  h];^1217^^^^^1214^1222^[REPLACE] runningOrder[j] = runningOrder[j - h];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  >  h;^1218^^^^^1214^1222^[REPLACE] j = j - h;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  ==   ( h - 1 )  )  {^1219^^^^^1147^1320^[REPLACE] if  ( j <=  ( h - 1 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ss = runningOrder[i]; ;^1212^^^^^1147^1320^[REPLACE] vv = runningOrder[i];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 0; ;^1213^^^^^1147^1320^[REPLACE] j = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = runningOrder[j  <=  h];^1217^^^^^1147^1320^[REPLACE] runningOrder[j] = runningOrder[j - h];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  >=  h;^1218^^^^^1147^1320^[REPLACE] j = j - h;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[i] = i; ;^1223^^^^^1147^1320^[REPLACE] runningOrder[j] = vv;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( int count = 0; count  >=  QSORT_STACK_SIZE; count++ )  {^1229^^^^^1147^1320^[REPLACE] for  ( int count = 0; count < QSORT_STACK_SIZE; count++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[count]  = null ;^1230^^^^^1147^1320^[REPLACE] stack[count] = new StackElem (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  !=  255; i++ )  {^1236^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1236^1237^^1239^^1147^1320^[ADD] for  ( i = 0; i <= 255; i++ )  {  Process big buckets, starting with the least full.^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (  ( bbSize  <=  <=  shifts )   <=  65534L )  {^1281^^^^^1147^1320^[REPLACE] while  (  ( bbSize >> shifts )  > 65534 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  ( ftab[sb] &workFactor )  ==workFactor )  )  {^1252^^^^^1147^1320^[REPLACE] if  ( ! (  ( ftab[sb] & SETMASK )  == SETMASK )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^int lo = ftab[sb] & CLEARMASK;int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;qSort3 ( lo, hi, 2, stack ) ;^1252^1253^1254^1255^1256^1147^1320^[ADD] if  ( ! (  ( ftab[sb] & SETMASK )  == SETMASK )  )  { int lo = ftab[sb] & CLEARMASK; int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1; if  ( hi > lo )  { qSort3 ( lo, hi, 2, stack ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( hi  ==  lo )  {^1255^^^^^1147^1320^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^return;^1258^1259^1260^^^1147^1320^[ADD] if  ( workDone > workLimit && firstAttempt )  { return; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  ( hi - lo +workFactor ) ;^1257^^^^^1147^1320^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[sb] | =  ftab[sb] |;^1262^^^^^1147^1320^[REPLACE] ftab[sb] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int lo = ftab[sb] |totc;^1253^^^^^1147^1320^[REPLACE] int lo = ftab[sb] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1253^^^^^1147^1320^[ADD] int lo = ftab[sb] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb + 1] &tmp )  - 1;^1254^^^^^1147^1320^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( hi  >= workLimit )  {^1255^^^^^1147^1320^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  >=  255 )  {^1276^^^^^1147^1320^[REPLACE] if  ( i < 255 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (  ( bbSize  <  <  shifts )   <  65534 )  {^1281^^^^^1147^1320^[REPLACE] while  (  ( bbSize >> shifts )  > 65534 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( a2update  <=  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1147^1320^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  &  last  &  2] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  (  ( bbSize - 1 )  >> shifts )  <=nInUse )  )  {^1294^^^^^1147^1320^[REPLACE] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  !=  bbSize; j++ )  {^1285^^^^^1147^1320^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  ^  last  ^  1] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update + last +p2] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[workFactor +workLimit];^1286^^^^^1147^1320^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 2; j < bbSize; j++ )  {^1285^^^^^1147^1320^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1288^^^^^1147^1320^[ADD] quadrant[a2update] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  |  last  |  1] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbStart  = ftab[ss << 8 % 2] | vec;^1277^^^^^1147^1320^[REPLACE] int bbStart  = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbSize   =  ( ftab[ ( ss + 1 / 0 )  << 8] &sp )  - workFactor;^1278^^^^^1147^1320^[REPLACE] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1278^^^^^1147^1320^[ADD] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int shifts   = 0L;^1279^^^^^1147^1320^[REPLACE] int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1279^1280^1281^1282^1283^1147^1320^[ADD] int shifts   = 0;  while  (  ( bbSize >> shifts )  > 65534 )  { shifts++; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[bbStart  <=  j];^1286^^^^^1147^1320^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  >=  workLimit ) ;^1287^^^^^1147^1320^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( a2update  == t )  {^1289^^^^^1147^1320^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  (  ( zz - 1 )  >> shifts )  <= 65535 )  )  {^1294^^^^^1147^1320^[REPLACE] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^panic (  ) ;^1294^1295^1296^^^1147^1320^[ADD] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  { panic (  ) ; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1295^^^^^1147^1320^[ADD] panic (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[copy[c1]]  =  zptr[j] - 1;^1311^^^^^1147^1320^[REPLACE] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  >=  255; j++ )  {^1250^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  ( ftab[sb] & workFactor )  == workFactor )  )  {^1252^^^^^1147^1320^[REPLACE] if  ( ! (  ( ftab[sb] & SETMASK )  == SETMASK )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1255^1256^1257^1258^1259^1147^1320^[ADD] if  ( hi > lo )  { qSort3 ( lo, hi, 2, stack ) ; numQSorted +=  ( hi - lo + 1 ) ; if  ( workDone > workLimit && firstAttempt )  { return;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  ( workFactor + p1 ) ;^1257^^^^^1147^1320^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted  & =  ( hi - lo  &  1 + 1 ) ;^1257^^^^^1147^1320^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb +temp] & CLEARMASK )  -temp;^1254^^^^^1147^1320^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  !=  workLimit )  {^1255^^^^^1147^1320^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit ||true )  {^1258^^^^^1147^1320^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^sb =  ( ss )  + j;^1251^^^^^1147^1320^[REPLACE] sb =  ( ss << 8 )  + j;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb + 1] & CLEARMASK )   |  1;^1254^^^^^1147^1320^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1254^^^^^1147^1320^[ADD] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 - 4; j  >=  bbSize; j++ )  {^1285^^^^^1147^1320^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( tmp  !=  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1147^1320^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1286^1287^^^^1147^1320^[ADD] int a2update = zptr[bbStart + j]; int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 4; j  >  255; j++ )  {^1303^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^copy[j] = ftab[ ( j << 8 )  + ss] | CLEARMASK;^1304^^^^^1147^1320^[REPLACE] copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1304^^^^^1147^1320^[ADD] copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = ftab[ss << 8] | CLEARMASK;^1307^^^^^1147^1320^[REPLACE] for  ( j = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1307^1308^1309^1310^1311^1147^1320^[ADD] for  ( j = ftab[ss << 8] & CLEARMASK; j <  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK ) ; j++ )  { c1 = block[zptr[j]]; if  ( !bigDone[c1] )  { zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( bigDone[c1] )  {^1310^^^^^1307^1314^[REPLACE] if  ( !bigDone[c1] )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1310^1311^1312^1313^^1307^1314^[ADD] if  ( !bigDone[c1] )  { zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1; copy[c1]++; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[copy[c1]]  =  last ;^1311^^^^^1307^1314^[REPLACE] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1311^^^^^1307^1314^[ADD] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  block[zptr[null]];^1309^^^^^1307^1314^[REPLACE] c1 = block[zptr[j]];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[copy[c1]]  =  zptr[j] - 1;^1311^^^^^1307^1314^[REPLACE] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  >=  255; j++ )  {^1316^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[ ( j << 8 )  +j] |= SETMASK;^1317^^^^^1147^1320^[REPLACE] ftab[ ( j << 8 )  + ss] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^vv = runningOrder[i]; ;^1241^^^^^1147^1320^[REPLACE] ss = runningOrder[i];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 4; j <= 255; j++ )  {^1250^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[sb] | = null ;^1262^^^^^1147^1320^[REPLACE] ftab[sb] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bigDone[ss] = false;^1274^^^^^1147^1320^[REPLACE] bigDone[ss] = true;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1274^^^^^1147^1320^[ADD] bigDone[ss] = true;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 >>> 1; j < bbSize; j++ )  {^1285^^^^^1147^1320^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  ||  last  ||  1] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0L; j <= 255; j++ )  {^1303^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1303^1304^1305^^^1147^1320^[ADD] for  ( j = 0; j <= 255; j++ )  { copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  block[zptr[null]];^1309^^^^^1147^1320^[REPLACE] c1 = block[zptr[j]];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1309^^^^^1147^1320^[ADD] c1 = block[zptr[j]];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[copy[c1]] = zptr[j]  &&  0 ? last : zptr[j] - 1;^1311^^^^^1147^1320^[REPLACE] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 2; j <= 255; j++ )  {^1316^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[ ( j << 9 )  +j] |= SETMASK;^1317^^^^^1147^1320^[REPLACE] ftab[ ( j << 8 )  + ss] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb + 1] &selCtr )  - 1;^1254^^^^^1147^1320^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbStart  = ftab[ss << 11] | CLEARMASK;^1277^^^^^1147^1320^[REPLACE] int bbStart  = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1277^^^^^1147^1320^[ADD] int bbStart  = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] &shifts )  - bbStart;^1278^^^^^1147^1320^[REPLACE] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int shifts   = 0 >> 1;^1279^^^^^1147^1320^[REPLACE] int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[bbStart  >  j];^1286^^^^^1147^1320^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  >=  shifts ) ;^1287^^^^^1147^1320^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 + 3; j  <  255; j++ )  {^1250^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  >=  workLimit )  {^1255^^^^^1147^1320^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit ) {^1258^^^^^1147^1320^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  (workFactor + 1 / 2 ) ;^1257^^^^^1147^1320^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1257^^^^^1147^1320^[ADD] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  (workFactor + 1 - 3 ) ;^1257^^^^^1147^1320^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[ss + p1] & tmp )  - 1;^1254^^^^^1147^1320^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  !=  lo )  {^1255^^^^^1147^1320^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted  ^ =  ( hi - lo  ^  2 ) ;^1257^^^^^1147^1320^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^sb =  (ss )  + j;^1251^^^^^1147^1320^[REPLACE] sb =  ( ss << 8 )  + j;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 + 2; j  ==  bbSize; j++ )  {^1285^^^^^1147^1320^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workFactor  <=  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1147^1320^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^quadrant[a2update + last + 1] = qVal;^1289^1290^1291^^^1147^1320^[ADD] if  ( a2update < NUM_OVERSHOOT_BYTES )  { quadrant[a2update + last + 1] = qVal; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  &  last  &  1] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update + last +ss] = qVal;^1290^^^^^1147^1320^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^quadrant[a2update] = qVal;quadrant[a2update + last + 1] = qVal;^1287^1288^1289^1290^1291^1147^1320^[ADD] int qVal =  ( j >> shifts ) ; quadrant[a2update] = qVal; if  ( a2update < NUM_OVERSHOOT_BYTES )  { quadrant[a2update + last + 1] = qVal; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  >=  255; j++ )  {^1303^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^copy[j] = ftab[ ( j << 2 )  + ss] | CLEARMASK;^1304^^^^^1147^1320^[REPLACE] copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[copy[c1]] = zptr[j]  &&  0 ? last : zptr[j] - 1;^1311^^^^^1307^1314^[REPLACE] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  >  255; j++ )  {^1316^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1316^1317^1318^^^1147^1320^[ADD] for  ( j = 0; j <= 255; j++ )  { ftab[ ( j << 8 )  + ss] |= SETMASK; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1317^^^^^1147^1320^[ADD] ftab[ ( j << 8 )  + ss] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted = 2;^1159^^^^^1147^1320^[REPLACE] numQSorted = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0 - 4; i <= 255; i++ )  {^1160^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1160^1161^1162^^^1147^1320^[ADD] for  ( i = 0; i <= 255; i++ )  { bigDone[i] = false; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 2; i <= 65536; i++ )  {^1164^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= 65536; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[i] = 0 >>> 2;^1165^^^^^1147^1320^[REPLACE] ftab[i] = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[1]; ;^1168^^^^^1147^1320^[REPLACE] c1 = block[0];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i <= last; i++ )  {^1169^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i  >  1];^1170^^^^^1147^1320^[REPLACE] c2 = block[i + 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  workFactor;^1172^^^^^1147^1320^[REPLACE] c1 = c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1 / 1; i <= 65536; i++ )  {^1175^^^^^1147^1320^[REPLACE] for  ( i = 1; i <= 65536; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[i] += ftab[i  &  1];^1176^^^^^1147^1320^[REPLACE] ftab[i] += ftab[i - 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1176^^^^^1147^1320^[ADD] ftab[i] += ftab[i - 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 >> 0 = block[1 >> 0];^1179^^^^^1147^1320^[REPLACE] c1 = block[1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i < last; i++ )  {^1180^^^^^1147^1320^[REPLACE] for  ( i = 0; i < last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 + 1 = block[i +workLimit];^1181^^^^^1147^1320^[REPLACE] c2 = block[i + 2];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1181^1182^^^^1147^1320^[ADD] c2 = block[i + 2]; j =  ( c1 << 8 )  + c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j =  ( p1 )  + workFactor;^1182^^^^^1147^1320^[REPLACE] j =  ( c1 << 8 )  + c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  workFactor;^1183^^^^^1147^1320^[REPLACE] c1 = c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j =  (  ( block[last  <  1] )  << 8 )   <   ( block[1] ) ;^1188^^^^^1147^1320^[REPLACE] j =  (  ( block[last + 1] )  << 8 )  +  ( block[1] ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1188^^^^^1147^1320^[ADD] j =  (  ( block[last + 1] )  << 8 )  +  ( block[1] ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[ftab[j]] = i; ;^1190^^^^^1147^1320^[REPLACE] zptr[ftab[j]] = last;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i <= 255; i++ )  {^1198^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^h = 1 * h  ==  1;^1206^^^^^1147^1320^[REPLACE] h = 3 * h + 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1206^^^^^1147^1320^[ADD] h = 3 * h + 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^h = h  ;^1210^^^^^1147^1320^[REPLACE] h = h / 3;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^1211^^^^^1147^1320^[REPLACE] for  ( i = h; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1211^1212^1213^1214^1215^1147^1320^[ADD] for  ( i = h; i <= 255; i++ )  { vv = runningOrder[i]; j = i; while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] )^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1212^1213^^^^1147^1320^[ADD] vv = runningOrder[i]; j = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = runningOrder[j  ^  h];^1217^^^^^1147^1320^[REPLACE] runningOrder[j] = runningOrder[j - h];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  !=  h;^1218^^^^^1147^1320^[REPLACE] j = j - h;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[count] ;^1230^^^^^1147^1320^[REPLACE] stack[count] = new StackElem (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1230^^^^^1147^1320^[ADD] stack[count] = new StackElem (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0 / 3; i <= 255; i++ )  {^1236^^^^^1147^1320^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 - 1; j <= 255; j++ )  {^1250^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j =  ( c1 << 8 )  + c2; ;^1251^^^^^1147^1320^[REPLACE] sb =  ( ss << 8 )  + j;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^1303^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^copy[j] = ftab[ ( j << 8 )  + ss] |totc;^1304^^^^^1147^1320^[REPLACE] copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1311^^^^^1147^1320^[ADD] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 1; j <= 255; j++ )  {^1316^^^^^1147^1320^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[ ( j )  + sp] |= SETMASK;^1317^^^^^1147^1320^[REPLACE] ftab[ ( j << 8 )  + ss] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int v;^1203^^^^^1147^1320^[REPLACE] int vv;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int h = 4;^1204^^^^^1147^1320^[REPLACE] int h = 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^char len[][] = new char[N_GROUPS][MAX_ALPHA_SIZE];^1228^^^^^1147^1320^[REPLACE] StackElem[] stack = new StackElem[QSORT_STACK_SIZE];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( int count = 3; count < QSORT_STACK_SIZE; count++ )  {^1229^^^^^1147^1320^[REPLACE] for  ( int count = 0; count < QSORT_STACK_SIZE; count++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb + 1] &vec )  - 1;^1254^^^^^1147^1320^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbStart  = ftab[ss << 6] |totc;^1277^^^^^1147^1320^[REPLACE] int bbStart  = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbSize   =  ( ftab[ ( ss + 1 + 0 )  << 8] &vec )  - bbStart;^1278^^^^^1147^1320^[REPLACE] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int shifts   = 4;^1279^^^^^1147^1320^[REPLACE] int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[bbStart  ==  j];^1286^^^^^1147^1320^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0L; i  >=  last; i++ )  {^1152^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[j] = v; ;^1153^^^^^1122^1321^[REPLACE] zptr[i] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1153^^^^^1122^1321^[ADD] zptr[i] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0L; i <= last; i++ )  {^1152^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^firstAttempt = true;^1155^^^^^1122^1321^[REPLACE] firstAttempt = false;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workDone = workLimit = 1;^1156^^^^^1122^1321^[REPLACE] workDone = workLimit = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  ==   ( h - 1 )  )  {^1219^^^^^1122^1321^[REPLACE] if  ( j <=  ( h - 1 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^1219^^^^^1122^1321^[REMOVE] ^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  ( ftab[sb] & SETMASK )  == SETMASK )  )  {^1252^^^^^1122^1321^[REPLACE] if  ( ! (  ( ftab[sb] & SETMASK )  == SETMASK )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( hi  ==  lo )  {^1255^^^^^1122^1321^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (true || firstAttempt )  {^1258^^^^^1122^1321^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false;^1259^^^^^1122^1321^[REPLACE] return;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  (workFactor + 3 ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit || firstAttempt )  {^1258^^^^^1122^1321^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  ( hi - lo +workFactor ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1257^^^^^1122^1321^[ADD] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[sb] |;^1262^^^^^1122^1321^[REPLACE] ftab[sb] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int lo = ftab[sb] | tFreq;^1253^^^^^1122^1321^[REPLACE] int lo = ftab[sb] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[ss +ss] & CLEARMASK )  -ss;^1254^^^^^1122^1321^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( hi  >=  lo )  {^1255^^^^^1122^1321^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (true ) {^1258^^^^^1122^1321^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  ( workFactor + p0 ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^return;^1258^1259^1260^^^1122^1321^[ADD] if  ( workDone > workLimit && firstAttempt )  { return; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i  >=  255 )  {^1276^^^^^1122^1321^[REPLACE] if  ( i < 255 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (  ( bbSize  >=  >=  shifts )   >=  65534 )  {^1281^^^^^1122^1321^[REPLACE] while  (  ( bbSize >> shifts )  > 65534 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1281^1282^1283^^^1122^1321^[ADD] while  (  ( bbSize >> shifts )  > 65534 )  { shifts++; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workDone  ==  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1122^1321^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1289^1290^1291^^^1122^1321^[ADD] if  ( a2update < NUM_OVERSHOOT_BYTES )  { quadrant[a2update + last + 1] = qVal; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update + last +sb] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1290^^^^^1122^1321^[ADD] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {^1294^^^^^1122^1321^[REPLACE] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^1295^^^^^1122^1321^[REPLACE] panic (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  !=  bbSize; j++ )  {^1285^^^^^1122^1321^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( totc  >=  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1122^1321^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  ==  last  ==  1] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update + last + 1] = qVal; ;^1288^^^^^1122^1321^[REPLACE] quadrant[a2update] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1288^^^^^1122^1321^[ADD] quadrant[a2update] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update + last +shifts] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[bbStart +workLimit];^1286^^^^^1122^1321^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1286^^^^^1122^1321^[ADD] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  <=  shifts ) ;^1287^^^^^1122^1321^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 - 4; j < bbSize; j++ )  {^1285^^^^^1122^1321^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update + last +numQSorted] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbStart  = ftab[sp << 8] | CLEARMASK;^1277^^^^^1122^1321^[REPLACE] int bbStart  = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1277^^^^^1122^1321^[ADD] int bbStart  = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & vec )  - workLimit;^1278^^^^^1122^1321^[REPLACE] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int shifts   = 4;^1279^^^^^1122^1321^[REPLACE] int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[bbStart  !=  j];^1286^^^^^1122^1321^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1286^1287^^^^1122^1321^[ADD] int a2update = zptr[bbStart + j]; int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  >=  shifts ) ;^1287^^^^^1122^1321^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( a2update  ==  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1122^1321^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  (  ( bbSize - 4 )  >> shifts )  <= 65535 )  )  {^1294^^^^^1122^1321^[REPLACE] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( bigDone[c1] )  {^1310^^^^^1122^1321^[REPLACE] if  ( !bigDone[c1] )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[copy[c1]]  =  last ;^1311^^^^^1122^1321^[REPLACE] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  >=  last; i++ )  {^1152^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0; i  ==  255; i++ )  {^1160^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bigDone[i] = true;^1161^^^^^1122^1321^[REPLACE] bigDone[i] = false;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  != workLimit; i++ )  {^1164^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= 65536; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[i] = 2;^1165^^^^^1122^1321^[REPLACE] ftab[i] = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0; i  ==  last; i++ )  {^1169^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1169^1170^1171^1172^1173^1122^1321^[ADD] for  ( i = 0; i <= last; i++ )  { c2 = block[i + 1]; ftab[ ( c1 << 8 )  + c2]++; c1 = c2; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i  &&  1];^1170^^^^^1122^1321^[REPLACE] c2 = block[i + 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  workFactor;^1172^^^^^1122^1321^[REPLACE] c1 = c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 1; workLimit  >=  65536; i++ )  {^1175^^^^^1122^1321^[REPLACE] for  ( i = 1; i <= 65536; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[i] += ftab[i  ==  1];^1176^^^^^1122^1321^[REPLACE] ftab[i] += ftab[i - 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1176^^^^^1122^1321^[ADD] ftab[i] += ftab[i - 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  (workLimit = 0; i  !=  last; i++ )  {^1180^^^^^1122^1321^[REPLACE] for  ( i = 0; i < last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i +workLimit];^1181^^^^^1122^1321^[REPLACE] c2 = block[i + 2];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1181^^^^^1122^1321^[ADD] c2 = block[i + 2];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j =  ( c1 << 8 )   &  c2;^1182^^^^^1122^1321^[REPLACE] j =  ( c1 << 8 )  + c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1182^^^^^1122^1321^[ADD] j =  ( c1 << 8 )  + c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  workFactor;^1183^^^^^1122^1321^[REPLACE] c1 = c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[ftab[j]] = last; ;^1185^^^^^1122^1321^[REPLACE] zptr[ftab[j]] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  >=  255; i++ )  {^1198^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = vv; ;^1199^^^^^1122^1321^[REPLACE] runningOrder[i] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = h; i  >= workLimit; i++ )  {^1211^^^^^1122^1321^[REPLACE] for  ( i = h; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] )  >=   ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^1214^1215^1216^^^1122^1321^[REPLACE] while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] ) >  ( ftab[ (  ( vv )  + 1 )  << 8] - ftab[ ( vv )  << 8] )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  !=   ( h - 1 )  )  {^1219^^^^^1214^1222^[REPLACE] if  ( j <=  ( h - 1 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = runningOrder[j  <=  h];^1217^^^^^1214^1222^[REPLACE] runningOrder[j] = runningOrder[j - h];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  >=  h;^1218^^^^^1214^1222^[REPLACE] j = j - h;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( j  >   ( h - 1 )  )  {^1219^^^^^1122^1321^[REPLACE] if  ( j <=  ( h - 1 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^break;^1219^1220^1221^^^1122^1321^[ADD] if  ( j <=  ( h - 1 )  )  { break; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ss = runningOrder[i]; ;^1212^^^^^1122^1321^[REPLACE] vv = runningOrder[i];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = 0; ;^1213^^^^^1122^1321^[REPLACE] j = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = runningOrder[j  <  h];^1217^^^^^1122^1321^[REPLACE] runningOrder[j] = runningOrder[j - h];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  ||  h;^1218^^^^^1122^1321^[REPLACE] j = j - h;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[i] = i; ;^1223^^^^^1122^1321^[REPLACE] runningOrder[j] = vv;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( intworkLimit = 0; count  !=  QSORT_STACK_SIZE; count++ )  {^1229^^^^^1122^1321^[REPLACE] for  ( int count = 0; count < QSORT_STACK_SIZE; count++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^stack[count]  =  stack[count] ;^1230^^^^^1122^1321^[REPLACE] stack[count] = new StackElem (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i  < workLimit; i++ )  {^1236^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (  ( bbSize  ==  ==  shifts )   == origPtr )  {^1281^^^^^1122^1321^[REPLACE] while  (  ( bbSize >> shifts )  > 65534 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( i < 255 )  {     int bbStart =  ( ftab[ ( ss << 8 ) ] )  &  ( CLEARMASK ) ;     int bbSize =  (  ( ftab[ (  ( ss + 1 )  << 8 ) ] )  &  ( CLEARMASK )  )  - bbStart;     int shifts = 0;     while  (  ( bbSize >> shifts )  > 65534 )  {         shifts++;     }      for  ( j = 0; j < bbSize; j++ )  {         int a2update = zptr[ ( bbStart + j ) ];         int qVal = j >> shifts;         quadrant[a2update] = qVal;         if  ( a2update <  ( NUM_OVERSHOOT_BYTES )  )  {             quadrant[ (  ( a2update +  ( last )  )  + 1 ) ] = qVal;         }     }     if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {         panic (  ) ;     } }^1252^^^^^1122^1321^[REMOVE] ^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( hi  <=  lo )  {^1255^^^^^1122^1321^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( true )  {^1258^^^^^1122^1321^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1258^1259^1260^^^1122^1321^[ADD] if  ( workDone > workLimit && firstAttempt )  { return; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  ( workFactor + p3 ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  firstAttempt )  {^1258^^^^^1122^1321^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  (workFactor + 1 ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int lo = ftab[sb] | CLEARMASK;^1253^^^^^1122^1321^[REPLACE] int lo = ftab[sb] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb + 1] & temp )  - 1;^1254^^^^^1122^1321^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1255^1256^1257^1258^1259^1122^1321^[ADD] if  ( hi > lo )  { qSort3 ( lo, hi, 2, stack ) ; numQSorted +=  ( hi - lo + 1 ) ; if  ( workDone > workLimit && firstAttempt )  { return;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workDone > workLimit ) {^1258^^^^^1122^1321^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( true || true )  {^1258^^^^^1122^1321^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workLimitf  ( i  ==  a2update )  {^1276^^^^^1122^1321^[REPLACE] if  ( i < 255 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^while  (  ( bbSize  !=  !=  shifts )   !=  65534 )  {^1281^^^^^1122^1321^[REPLACE] while  (  ( bbSize >> shifts )  > 65534 )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( a2update  >  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1122^1321^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update + last +origPtr] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  (  ( bbSize - 1 - 1 )  >> shifts )  <= 65535 )  )  {^1294^^^^^1122^1321^[REPLACE] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( ! (  ( nSelectors < 32768 )  &&  ( nSelectors <=  ( 2 +  ( 900000 /  ( G_SIZE )  )  )  )  )  )  {     panic (  ) ; }^1294^^^^^1122^1321^[REMOVE] ^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1295^^^^^1122^1321^[ADD] panic (  ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  <=  bbSize; j++ )  {^1285^^^^^1122^1321^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1285^1286^1287^1288^^1122^1321^[ADD] for  ( j = 0; j < bbSize; j++ )  { int a2update = zptr[bbStart + j]; int qVal =  ( j >> shifts ) ; quadrant[a2update] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( a2update  >= workFactor )  {^1289^^^^^1122^1321^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  >  last  >  1] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update] = qVal; ;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[tFreq +workLimit];^1286^^^^^1122^1321^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^int qVal =  ( j >> shifts ) ;^1286^1287^^^^1122^1321^[ADD] int a2update = zptr[bbStart + j]; int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  <  shifts ) ;^1287^^^^^1122^1321^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 2; j < bbSize; j++ )  {^1285^^^^^1122^1321^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  !=  last  !=  1] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbStart  = ftab[sp << 2] | CLEARMASK;^1277^^^^^1122^1321^[REPLACE] int bbStart  = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & sp )  - workLimit;^1278^^^^^1122^1321^[REPLACE] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[bbStart  ^  j];^1286^^^^^1122^1321^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  <  ss ) ;^1287^^^^^1122^1321^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( a2update  != u )  {^1289^^^^^1122^1321^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^panic (  ) ;^1294^1295^1296^^^1122^1321^[ADD] if  ( ! (  (  ( bbSize - 1 )  >> shifts )  <= 65535 )  )  { panic (  ) ; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^finish (  ) ;^1295^^^^^1122^1321^[REMOVE] ^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 3; j  >  255; j++ )  {^1250^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  (  ( ftab[sb] &workFactor )  ==workFactor )  )  {^1252^^^^^1122^1321^[REPLACE] if  ( ! (  ( ftab[sb] & SETMASK )  == SETMASK )  )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( hi  != workLimit )  {^1255^^^^^1122^1321^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  ( workFactor + p1 * 3 ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[sb] | = null ;^1262^^^^^1122^1321^[REPLACE] ftab[sb] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb +ss] & CLEARMASK )  -ss;^1254^^^^^1122^1321^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted  ^ =  ( hi - lo  ^  2 ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^sb =  ( ss << 8 )  +ss;^1251^^^^^1122^1321^[REPLACE] sb =  ( ss << 8 )  + j;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[sb] | =  ftab[sb] |;^1262^^^^^1122^1321^[REPLACE] ftab[sb] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1262^^^^^1122^1321^[ADD] ftab[sb] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb + 1] &shifts )  - 1;^1254^^^^^1122^1321^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( a2update  > workFactor )  {^1289^^^^^1122^1321^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  ||  last  ||  0] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  &  last  &  1] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  ==  255; j++ )  {^1303^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^copy[j] = ftab[ ( j << 8 )  + ss] | CLEARMASK;^1304^^^^^1122^1321^[REPLACE] copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = ftab[ss << 8 - 0] | CLEARMASK;^1307^^^^^1122^1321^[REPLACE] for  ( j = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1309^^^^^1307^1314^[ADD] c1 = block[zptr[j]];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  !=  255; j++ )  {^1316^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[ (j )  + ss] |= SETMASK;^1317^^^^^1122^1321^[REPLACE] ftab[ ( j << 8 )  + ss] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1317^^^^^1122^1321^[ADD] ftab[ ( j << 8 )  + ss] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^vv = runningOrder[i]; ;^1241^^^^^1122^1321^[REPLACE] ss = runningOrder[i];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 * 3; j <= 255; j++ )  {^1250^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^sb =  ( ss << 8 )   &&  j;^1251^^^^^1122^1321^[REPLACE] sb =  ( ss << 8 )  + j;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^bigDone[ss] = false;^1274^^^^^1122^1321^[REPLACE] bigDone[ss] = true;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 - 3; j < bbSize; j++ )  {^1285^^^^^1122^1321^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 << 1; j <= 255; j++ )  {^1303^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = ftab[ss << 9] | CLEARMASK;^1307^^^^^1122^1321^[REPLACE] for  ( j = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 =  block[zptr[null]];^1309^^^^^1122^1321^[REPLACE] c1 = block[zptr[j]];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1309^^^^^1122^1321^[ADD] c1 = block[zptr[j]];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[copy[c1]]  =  zptr[j] - 1;^1311^^^^^1122^1321^[REPLACE] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 3; j <= 255; j++ )  {^1316^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[ ( j << 8 )   &  ss] |= SETMASK;^1317^^^^^1122^1321^[REPLACE] ftab[ ( j << 8 )  + ss] |= SETMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb +selCtr] & CLEARMASK )  -selCtr;^1254^^^^^1122^1321^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )   ==  bbStart;^1278^^^^^1122^1321^[REPLACE] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int shifts   = 2;^1279^^^^^1122^1321^[REPLACE] int shifts   = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[bbStart  >  j];^1286^^^^^1122^1321^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  !=  unHi ) ;^1287^^^^^1122^1321^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0; j  >  255; j++ )  {^1250^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1252^1253^1254^1255^1256^1122^1321^[ADD] if  ( ! (  ( ftab[sb] & SETMASK )  == SETMASK )  )  { int lo = ftab[sb] & CLEARMASK; int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1; if  ( hi > lo )  { qSort3 ( lo, hi, 2, stack ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  ==  lo )  {^1255^^^^^1122^1321^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted +=  ( workFactor + p1 ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1253^1254^^^^1122^1321^[ADD] int lo = ftab[sb] & CLEARMASK; int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb + p1 - 3] & ss )  - 1 - 3;^1254^^^^^1122^1321^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  !=  lo )  {^1255^^^^^1122^1321^[REPLACE] if  ( hi > lo )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted  < =  ( hi - lo  <  1 ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j =  ( c1 << 8 )  + c2; ;^1251^^^^^1122^1321^[REPLACE] sb =  ( ss << 8 )  + j;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted  | =  ( hi - lo  |  1 ) ;^1257^^^^^1122^1321^[REPLACE] numQSorted +=  ( hi - lo + 1 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int lo = ftab[sb] | vec;^1253^^^^^1122^1321^[REPLACE] int lo = ftab[sb] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb + 1] &temp )  - 1;^1254^^^^^1122^1321^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (tmp  >=  NUM_OVERSHOOT_BYTES )  {^1289^^^^^1122^1321^[REPLACE] if  ( a2update < NUM_OVERSHOOT_BYTES )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^quadrant[a2update + last + 1] = qVal;^1289^1290^1291^^^1122^1321^[ADD] if  ( a2update < NUM_OVERSHOOT_BYTES )  { quadrant[a2update + last + 1] = qVal; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update + last +workLimit] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  <  last  <  1 * 4] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^copy[j] = ftab[ ( j << 1 )  + ss] | CLEARMASK;^1304^^^^^1122^1321^[REPLACE] copy[j] = ftab[ ( j << 8 )  + ss] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = ftab[ss << 8] |totc;^1307^^^^^1122^1321^[REPLACE] for  ( j = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1307^1308^1309^1310^1311^1122^1321^[ADD] for  ( j = ftab[ss << 8] & CLEARMASK; j <  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK ) ; j++ )  { c1 = block[zptr[j]]; if  ( !bigDone[c1] )  { zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^copy[c1]++;^1311^1312^^^^1307^1314^[ADD] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1; copy[c1]++;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1316^1317^1318^^^1122^1321^[ADD] for  ( j = 0; j <= 255; j++ )  { ftab[ ( j << 8 )  + ss] |= SETMASK; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 1; i <= last; i++ )  {^1152^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workDone = workLimit = 2;^1156^^^^^1122^1321^[REPLACE] workDone = workLimit = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workDone = workLimit = 0 >>> 0;^1156^^^^^1122^1321^[REPLACE] workDone = workLimit = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^simpleSort ( 0, last, 0 ) ;^1156^1157^^^^1122^1321^[ADD] workDone = workLimit = 0; simpleSort ( 0, last, 0 ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^numQSorted = 0 * 2;^1159^^^^^1122^1321^[REPLACE] numQSorted = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0L; i <= 255; i++ )  {^1160^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i <= 65536; i++ )  {^1164^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= 65536; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[i] = 0 - 2;^1165^^^^^1122^1321^[REPLACE] ftab[i] = 0;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[4];^1168^^^^^1122^1321^[REPLACE] c1 = block[0];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0 / 1; i <= last; i++ )  {^1169^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i + 2]; ;^1170^^^^^1122^1321^[REPLACE] c2 = block[i + 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 2; i <= 65536; i++ )  {^1175^^^^^1122^1321^[REPLACE] for  ( i = 1; i <= 65536; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab[i] += ftab[i  |  2];^1176^^^^^1122^1321^[REPLACE] ftab[i] += ftab[i - 1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c0 = block[0];^1179^^^^^1122^1321^[REPLACE] c1 = block[1];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i < last; i++ )  {^1180^^^^^1122^1321^[REPLACE] for  ( i = 0; i < last; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c4 = block[i +workLimit];^1181^^^^^1122^1321^[REPLACE] c2 = block[i + 2];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^sb =  ( ss << 8 )  + j; ;^1182^^^^^1122^1321^[REPLACE] j =  ( c1 << 8 )  + c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1182^1183^^^^1122^1321^[ADD] j =  ( c1 << 8 )  + c2; c1 = c2;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1185^^^^^1122^1321^[ADD] zptr[ftab[j]] = i;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j =  (  ( block[last + 1] )  << 8 )  +  (qVal ) ;^1188^^^^^1122^1321^[REPLACE] j =  (  ( block[last + 1] )  << 8 )  +  ( block[1] ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr[ftab[j]] = i; ;^1190^^^^^1122^1321^[REPLACE] zptr[ftab[j]] = last;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i <= 255; i++ )  {^1198^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1198^1199^1200^^^1122^1321^[ADD] for  ( i = 0; i <= 255; i++ )  { runningOrder[i] = i; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^h = 3 * h +runLength;^1206^^^^^1122^1321^[REPLACE] h = 3 * h + 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1206^^^^^1122^1321^[ADD] h = 3 * h + 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^h =unHi  ;^1210^^^^^1122^1321^[REPLACE] h = h / 3;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1210^^^^^1122^1321^[ADD] h = h / 3;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^1211^^^^^1122^1321^[REPLACE] for  ( i = h; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1211^1212^1213^1214^1215^1122^1321^[ADD] for  ( i = h; i <= 255; i++ )  { vv = runningOrder[i]; j = i; while  (  ( ftab[ (  ( runningOrder[j - h] )  + 1 )  << 8] - ftab[ ( runningOrder[j - h] )  << 8] )^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^runningOrder[j] = runningOrder[j  |  h];^1217^^^^^1122^1321^[REPLACE] runningOrder[j] = runningOrder[j - h];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^j = j  >=  h;^1218^^^^^1122^1321^[REPLACE] j = j - h;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0 * 0; i <= 255; i++ )  {^1236^^^^^1122^1321^[REPLACE] for  ( i = 0; i <= 255; i++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^1250^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^sb =  ( ss << 8L )  +ss;^1251^^^^^1122^1321^[REPLACE] sb =  ( ss << 8 )  + j;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 0 >> 4; j < bbSize; j++ )  {^1285^^^^^1122^1321^[REPLACE] for  ( j = 0; j < bbSize; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant[a2update  <  last  <  1] = qVal;^1290^^^^^1122^1321^[REPLACE] quadrant[a2update + last + 1] = qVal;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= 255; i++ )  {  ;^1303^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = ftab[ss << 8] | CLEARMASK;^1307^^^^^1122^1321^[REPLACE] for  ( j = ftab[ss << 8] & CLEARMASK;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1311^1312^^^^1122^1321^[ADD] zptr[copy[c1]] = zptr[j] == 0 ? last : zptr[j] - 1; copy[c1]++;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( j = 2; j <= 255; j++ )  {^1316^^^^^1122^1321^[REPLACE] for  ( j = 0; j <= 255; j++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int v;^1203^^^^^1122^1321^[REPLACE] int vv;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int h = 4;^1204^^^^^1122^1321^[REPLACE] int h = 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1204^^^^^1122^1321^[ADD] int h = 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^char len[][] = new char[N_GROUPS][MAX_ALPHA_SIZE];^1228^^^^^1122^1321^[REPLACE] StackElem[] stack = new StackElem[QSORT_STACK_SIZE];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( int count = 0 + 4; count < QSORT_STACK_SIZE; count++ )  {^1229^^^^^1122^1321^[REPLACE] for  ( int count = 0; count < QSORT_STACK_SIZE; count++ )  {^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int hi =  ( ftab[sb + 1] & CLEARMASK )   ||  1;^1254^^^^^1122^1321^[REPLACE] int hi =  ( ftab[sb + 1] & CLEARMASK )  - 1;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  -vec;^1278^^^^^1122^1321^[REPLACE] int bbSize   =  ( ftab[ ( ss + 1 )  << 8] & CLEARMASK )  - bbStart;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1279^1280^1281^1282^1283^1122^1321^[ADD] int shifts   = 0;  while  (  ( bbSize >> shifts )  > 65534 )  { shifts++; }^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int a2update = zptr[bbStart  |  j];^1286^^^^^1122^1321^[REPLACE] int a2update = zptr[bbStart + j];^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int qVal =  ( j  ==  shifts ) ;^1287^^^^^1122^1321^[REPLACE] int qVal =  ( j >> shifts ) ;^[METHOD] mainSort [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  StackElem[] stack  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int i, j, ss, sb;^1324^^^^^1323^1346^[REPLACE] int i;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1324^1325^^^^1323^1346^[ADD] int i; int rNToGo = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int rNToGo = 0 / 1;^1325^^^^^1323^1346^[REPLACE] int rNToGo = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int rTPos  = 4;^1326^^^^^1323^1346^[REPLACE] int rTPos  = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( workLimit = 0; i  !=  256; i++ )  {^1327^^^^^1323^1346^[REPLACE] for  ( i = 0; i < 256; i++ )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1327^1328^1329^^^1323^1346^[ADD] for  ( i = 0; i < 256; i++ )  { inUse[i] = false; }^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[i] = true;^1328^^^^^1323^1346^[REPLACE] inUse[i] = false;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1328^^^^^1323^1346^[ADD] inUse[i] = false;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 3; i < 256; i++ )  {^1327^^^^^1323^1346^[REPLACE] for  ( i = 0; i < 256; i++ )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  ||  0 )  {^1332^^^^^1323^1346^[REPLACE] if  ( rNToGo == 0 )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  &&  512 - 4 )  {^1335^^^^^1323^1346^[REPLACE] if  ( rTPos == 512 )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rTPos = 3;^1336^^^^^1323^1346^[REPLACE] rTPos = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rNToGo =   ( char )  rNums[workLimit];^1333^^^^^1323^1346^[REPLACE] rNToGo =  ( char )  rNums[rTPos];^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rTPos = 0 - 1;^1336^^^^^1323^1346^[REPLACE] rTPos = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( rTPos  || workLimit )  {^1335^^^^^1323^1346^[REPLACE] if  ( rTPos == 512 )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^1335^^^^^1323^1346^[REMOVE] ^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rTPos = 2;^1336^^^^^1323^1346^[REPLACE] rTPos = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i  >  last; i++ )  {^1331^^^^^1323^1346^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  &&  0 )  {^1332^^^^^1323^1346^[REPLACE] if  ( rNToGo == 0 )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^rNToGo =  ( char )  rNums[rTPos];rTPos++;rTPos = 0;^1332^1333^1334^1335^1336^1323^1346^[ADD] if  ( rNToGo == 0 )  { rNToGo =  ( char )  rNums[rTPos]; rTPos++; if  ( rTPos == 512 )  { rTPos = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( workLimit  !=  p2 )  {^1335^^^^^1323^1346^[REPLACE] if  ( rTPos == 512 )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rTPos = 0 % 1;^1336^^^^^1323^1346^[REPLACE] rTPos = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rNToGo =   ( char )  rNums[null];^1333^^^^^1323^1346^[REPLACE] rNToGo =  ( char )  rNums[rTPos];^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rTPos = 0 % 3;^1336^^^^^1323^1346^[REPLACE] rTPos = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (workLimit  ||  512 )  {^1335^^^^^1323^1346^[REPLACE] if  ( rTPos == 512 )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rTPos = 0 - 3;^1336^^^^^1323^1346^[REPLACE] rTPos = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rTPos = 0 >> 4;^1336^^^^^1323^1346^[REPLACE] rTPos = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[i + 1] ^ =  0 ) ;^1340^^^^^1323^1346^[REPLACE] block[i + 1] ^=  (  ( rNToGo == 1 )  ? 1 : 0 ) ;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1340^^^^^1323^1346^[ADD] block[i + 1] ^=  (  ( rNToGo == 1 )  ? 1 : 0 ) ;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[i  <  1L] &= 0xFF;^1342^^^^^1323^1346^[REPLACE] block[i + 1] &= 0xFF;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[block[i  <=  3]] = true;^1344^^^^^1323^1346^[REPLACE] inUse[block[i + 1]] = true;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 4; i <= last; i++ )  {^1331^^^^^1323^1346^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^rTPos = 1;^1336^^^^^1323^1346^[REPLACE] rTPos = 0;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block[i  ==  2] &= 0xFF;^1342^^^^^1323^1346^[REPLACE] block[i + 1] &= 0xFF;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^inUse[block[i  >=  1]] = true;^1344^^^^^1323^1346^[REPLACE] inUse[block[i + 1]] = true;^[METHOD] randomiseBlock [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int i, j, ss, sb;^1349^^^^^1348^1377^[REPLACE] int i;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1349^^^^^1348^1377^[ADD] int i;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workLimit = workLimit  ;^1351^^^^^1348^1377^[REPLACE] workLimit = workFactor * last;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workDone = 2;^1352^^^^^1348^1377^[REPLACE] workDone = 0;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^blockRandomised = true;^1353^^^^^1348^1377^[REPLACE] blockRandomised = false;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^firstAttempt = false;^1354^^^^^1348^1377^[REPLACE] firstAttempt = true;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1354^^^^^1348^1377^[ADD] firstAttempt = true;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^1356^^^^^1348^1377^[REPLACE] mainSort (  ) ;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( tooLong ) {^1358^^^^^1348^1377^[REPLACE] if  ( workDone > workLimit && firstAttempt )  {^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workLimit = workDone = 4;^1360^^^^^1348^1377^[REPLACE] workLimit = workDone = 0;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1360^1361^^^^1348^1377^[ADD] workLimit = workDone = 0; blockRandomised = true;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workLimit = workDone = 0 % 0;^1360^^^^^1348^1377^[REPLACE] workLimit = workDone = 0;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^blockRandomised = false;^1361^^^^^1348^1377^[REPLACE] blockRandomised = true;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^firstAttempt = true;^1362^^^^^1348^1377^[REPLACE] firstAttempt = false;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workLimit = workDone = 2;^1360^^^^^1348^1377^[REPLACE] workLimit = workDone = 0;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^workLimit = workDone = 0 >>> 4;^1360^^^^^1348^1377^[REPLACE] workLimit = workDone = 0;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1360^^^^^1348^1377^[ADD] workLimit = workDone = 0;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1361^^^^^1348^1377^[ADD] blockRandomised = true;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^firstAttempt = true; ;^1362^^^^^1348^1377^[REPLACE] firstAttempt = false;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^origPtr = i; ;^1366^^^^^1348^1377^[REPLACE] origPtr = -1;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( zptr[i]  !=  blockSize122k )  {^1368^^^^^1348^1377^[REPLACE] if  ( zptr[i] == 0 )  {^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^origPtr = -1; ;^1369^^^^^1348^1377^[REPLACE] origPtr = i;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( workLimit = 0; i  >  workLimit; i++ )  {^1367^^^^^1348^1377^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( zptr[i]  && zz )  {^1368^^^^^1348^1377^[REPLACE] if  ( zptr[i] == 0 )  {^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^origPtr = i;break;^1368^1369^1370^1371^^1348^1377^[ADD] if  ( zptr[i] == 0 )  { origPtr = i; break; }^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^for  ( i = 0; i <= last; i++ )  { zptr[i] = i; ;^1367^^^^^1348^1377^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1369^^^^^1348^1377^[ADD] origPtr = i;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( totc  !=  p1 )  {^1374^^^^^1348^1377^[REPLACE] if  ( origPtr == -1 )  {^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1374^1375^1376^^^1348^1377^[ADD] if  ( origPtr == -1 )  { panic (  ) ; }^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^finish (  ) ;^1375^^^^^1348^1377^[REPLACE] panic (  ) ;^[METHOD] doReversibleTransformation [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int wr;^1380^^^^^1379^1501^[REPLACE] int k;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^char ll_i;^1381^^^^^1379^1501^[REPLACE] char c1, c2;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1381^1382^^^^1379^1501^[ADD] char c1, c2; int s1, s2;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1381^^^^^1379^1501^[ADD] char c1, c2;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int sp, lo, hi, d;^1382^^^^^1379^1501^[REPLACE] int s1, s2;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1382^^^^^1379^1501^[ADD] int s1, s2;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i + 2]; ;^1384^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i2  |  3];^1385^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1386^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^return  ( c1 > c2 ) ;^1386^1387^1388^^^1379^1501^[ADD] if  ( c1 != c2 )  { return  ( c1 > c2 ) ; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return true ;^1387^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1387^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[i1  ==  1];^1392^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i2  <  1];^1393^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1393^^^^^1379^1501^[ADD] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1394^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1394^1395^1396^^^1379^1501^[ADD] if  ( c1 != c2 )  { return  ( c1 > c2 ) ; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  !=  c2 ) ;;^1395^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1395^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[i1  !=  1];^1400^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i + 2]; ;^1401^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1402^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1402^1403^1404^^^1379^1501^[ADD] if  ( c1 != c2 )  { return  ( c1 > c2 ) ; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false ;^1403^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1403^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c4 = block[i4  |  4];^1408^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i2  !=  1];^1409^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1410^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REMOVE]^if  ( n > 0 )  {     break; }^1410^^^^^1379^1501^[REMOVE] ^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false ;^1411^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1411^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i + 2]; ;^1416^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i + 2]; ;^1417^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1418^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^return  ( c1 > c2 ) ;^1418^1419^1420^^^1379^1501^[ADD] if  ( c1 != c2 )  { return  ( c1 > c2 ) ; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1419^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 * 0 = block[i1 * 0  ^  1 * 0];^1424^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i2  &  0];^1425^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c1 )  {^1426^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1426^1427^1428^^^1379^1501^[ADD] if  ( c1 != c2 )  { return  ( c1 > c2 ) ; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  !=  c2 ) ;;^1427^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^k =workLimit + 1;^1432^^^^^1379^1501^[REPLACE] k = last + 1;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1437^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^return  ( c1 > c2 ) ;^1437^1438^1439^^^1379^1501^[ADD] if  ( c1 != c2 )  { return  ( c1 > c2 ) ; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false ;^1438^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( s1  ==  s2 )  {^1442^^^^^1379^1501^[REPLACE] if  ( s1 != s2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( ss  ;^1443^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1450^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1450^1451^1452^^^1379^1501^[ADD] if  ( c1 != c2 )  { return  ( c1 > c2 ) ; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false ;^1451^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( s1  ==  s2 )  {^1455^^^^^1379^1501^[REPLACE] if  ( s1 != s2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false ;^1456^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1463^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1464^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (ss  ==  s2 )  {^1468^^^^^1379^1501^[REPLACE] if  ( s1 != s2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( ss  ;^1469^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( c1  ==  c2 )  {^1476^^^^^1379^1501^[REPLACE] if  ( c1 != c2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return true ;^1477^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( s1  ==  s2 )  {^1481^^^^^1379^1501^[REPLACE] if  ( s1 != s2 )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( ss  ;^1482^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i1  !=  last )  {^1487^^^^^1379^1501^[REPLACE] if  ( i1 > last )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1487^1488^1489^1490^^1379^1501^[ADD] if  ( i1 > last )  { i1 -= last; i1--; }^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i2 -= last; ;^1488^^^^^1379^1501^[REPLACE] i1 -= last;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  ( i2  ==  last )  {^1491^^^^^1379^1501^[REPLACE] if  ( i2 > last )  {^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^i1 -= last; ;^1492^^^^^1379^1501^[REPLACE] i2 -= last;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c3 = block[i3  !=  3];^1435^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1435^^^^^1379^1501^[ADD] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i2  >=  3];^1436^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1436^^^^^1379^1501^[ADD] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s2 = quadrant[i2]; ;^1440^^^^^1379^1501^[REPLACE] s1 = quadrant[i1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s1 = quadrant[i1]; ;^1441^^^^^1379^1501^[REPLACE] s2 = quadrant[i2];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[i1  >  1];^1448^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i2  ||  1];^1449^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s2 = quadrant[i2]; ;^1453^^^^^1379^1501^[REPLACE] s1 = quadrant[i1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1453^^^^^1379^1501^[ADD] s1 = quadrant[i1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s1 = quadrant[i1]; ;^1454^^^^^1379^1501^[REPLACE] s2 = quadrant[i2];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1454^^^^^1379^1501^[ADD] s2 = quadrant[i2];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[i1  >  1];^1461^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1461^1462^^^^1379^1501^[ADD] c1 = block[i1 + 1]; c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i2  <=  3];^1462^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1462^^^^^1379^1501^[ADD] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s2 = quadrant[i2]; ;^1466^^^^^1379^1501^[REPLACE] s1 = quadrant[i1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s1 = quadrant[i1]; ;^1467^^^^^1379^1501^[REPLACE] s2 = quadrant[i2];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c1 = block[i1 +workLimit];^1474^^^^^1379^1501^[REPLACE] c1 = block[i1 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^c2 = block[i + 2]; ;^1475^^^^^1379^1501^[REPLACE] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1475^^^^^1379^1501^[ADD] c2 = block[i2 + 1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s2 = quadrant[i2]; ;^1479^^^^^1379^1501^[REPLACE] s1 = quadrant[i1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1479^^^^^1379^1501^[ADD] s1 = quadrant[i1];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^s1 = quadrant[i1]; ;^1480^^^^^1379^1501^[REPLACE] s2 = quadrant[i2];^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^k -= 7;^1496^^^^^1379^1501^[REPLACE] k -= 4;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( s1  ;^1443^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  !=  c1 ) ;;^1451^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( s1  ;^1456^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return false ;^1469^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( c1  ;^1477^^^^^1379^1501^[REPLACE] return  ( c1 > c2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return  ( s1  ;^1482^^^^^1379^1501^[REPLACE] return  ( s1 > s2 ) ;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^return true;^1500^^^^^1379^1501^[REPLACE] return false;^[METHOD] fullGtU [TYPE] boolean [PARAMETER] int i1 int i2 [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char c1  c2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^int n = true  ;^1514^^^^^1513^1540^[REPLACE] int n = baseBlockSize * blockSize100k;^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^block = new char[ ( n + 3 + NUM_OVERSHOOT_BYTES ) ];^1515^^^^^1513^1540^[REPLACE] block = new char[ ( n + 1 + NUM_OVERSHOOT_BYTES ) ];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^quadrant = new int[ ( n + NUM_OVERSHOOT_BYTES ) ];^1515^1516^^^^1513^1540^[ADD] block = new char[ ( n + 1 + NUM_OVERSHOOT_BYTES ) ]; quadrant = new int[ ( n + NUM_OVERSHOOT_BYTES ) ];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^quadrant =workDoneew int[ ( n + NUM_OVERSHOOT_BYTES ) ];^1516^^^^^1513^1540^[REPLACE] quadrant = new int[ ( n + NUM_OVERSHOOT_BYTES ) ];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^zptr =  workDoneew iworkDonet[workDone];^1517^^^^^1513^1540^[REPLACE] zptr = new int[n];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^ftab = new int[65537 + 2];^1518^^^^^1513^1540^[REPLACE] ftab = new int[65537];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1518^^^^^1513^1540^[ADD] ftab = new int[65537];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^if  (  quadrant == false || zptr == false ||true )  {^1520^1521^^^^1513^1540^[REPLACE] if  ( block == null || quadrant == null || zptr == null || ftab == null )  {^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^szptr = new short[2  ;^1539^^^^^1513^1540^[REPLACE] szptr = new short[2 * n];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[ADD]^^1539^^^^^1513^1540^[ADD] szptr = new short[2 * n];^[METHOD] allocateCompressStructures [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  yy  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq 
[REPLACE]^char[] yy = new char[104];^1543^^^^^1542^1638^[REPLACE] char[] yy = new char[256];^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^int sp, lo, hi, d;^1544^^^^^1542^1638^[REPLACE] int  i, j;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^char tmp2;^1545^^^^^1542^1638^[REPLACE] char tmp;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^char tmp;^1546^^^^^1542^1638^[REPLACE] char tmp2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^int sp, lo, hi, d;^1547^^^^^1542^1638^[REPLACE] int zPend;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^int v;^1548^^^^^1542^1638^[REPLACE] int wr;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^int i, j, ss, sb;^1549^^^^^1542^1638^[REPLACE] int EOB;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^finish (  ) ;^1551^^^^^1542^1638^[REPLACE] makeMaps (  ) ;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^EOB =workDone + 1;^1552^^^^^1542^1638^[REPLACE] EOB = nInUse + 1;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^for  (workLimit = 0; i  ==  EOB; i++ )  {^1554^^^^^1542^1638^[REPLACE] for  ( i = 0; i <= EOB; i++ )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^mtfFreq[i] = 4;^1555^^^^^1542^1638^[REPLACE] mtfFreq[i] = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^for  ( i = 3; i <= EOB; i++ )  {^1554^^^^^1542^1638^[REPLACE] for  ( i = 0; i <= EOB; i++ )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1554^1555^1556^^^1542^1638^[ADD] for  ( i = 0; i <= EOB; i++ )  { mtfFreq[i] = 0; }^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^mtfFreq[i] = 0L;^1555^^^^^1542^1638^[REPLACE] mtfFreq[i] = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1555^^^^^1542^1638^[ADD] mtfFreq[i] = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^wr = 4;^1558^^^^^1542^1638^[REPLACE] wr = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1558^^^^^1542^1638^[ADD] wr = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend = 3;^1559^^^^^1542^1638^[REPLACE] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1559^^^^^1542^1638^[ADD] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^for  ( i = 0; i  == workLimit; i++ )  {^1560^^^^^1542^1638^[REPLACE] for  ( i = 0; i < nInUse; i++ )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^pos[i] =  ( char )  i; ;^1561^^^^^1542^1638^[REPLACE] yy[i] =  ( char )  i;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1561^^^^^1542^1638^[ADD] yy[i] =  ( char )  i;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^for  ( i = 4; i < nInUse; i++ )  {^1560^^^^^1542^1638^[REPLACE] for  ( i = 0; i < nInUse; i++ )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^while  ( ll_i  ==  tmp )  {^1572^^^^^1542^1638^[REPLACE] while  ( ll_i != tmp )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^tmp2 =  null;^1574^^^^^1542^1638^[REPLACE] tmp2 = tmp;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1574^^^^^1542^1638^[ADD] tmp2 = tmp;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^tmp = pos[j]; ;^1575^^^^^1542^1638^[REPLACE] tmp = yy[j];^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1575^^^^^1542^1638^[ADD] tmp = yy[j];^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^pos[j] = tmp2; ;^1576^^^^^1542^1638^[REPLACE] yy[j] = tmp2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^while  ( false )  {^1585^^^^^1542^1638^[REPLACE] while  ( true )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  (zz  !=  2 )  {^1598^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )  EOB; ;^1588^^^^^1542^1638^[REPLACE] szptr[wr] =  ( short )  RUNA;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )  EOB; ;^1593^^^^^1542^1638^[REPLACE] szptr[wr] =  ( short )  RUNB;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  ( zPend - 2 )   ;^1601^^^^^1542^1638^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( j  &&  0 )  {^1580^^^^^1542^1638^[REPLACE] if  ( j == 0 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^zPend++;zPend--;^1580^1581^1582^1583^1584^1542^1638^[ADD] if  ( j == 0 )  { zPend++; } else { if  ( zPend > 0 )  { zPend--;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^while  ( false )  {^1585^^^^^1580^1608^[REPLACE] while  ( true )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1585^1586^1587^^^1580^1608^[ADD] while  ( true )  { switch  ( zPend % 2 )  { case 0:^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  ==  2 / 3 )  {^1598^^^^^1580^1608^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )  EOB; ;^1588^^^^^1580^1608^[REPLACE] szptr[wr] =  ( short )  RUNA;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )  EOB; ;^1593^^^^^1580^1608^[REPLACE] szptr[wr] =  ( short )  RUNB;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  ( zPend - 2 )   ;^1601^^^^^1580^1608^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  == zz )  {^1583^^^^^1580^1608^[REPLACE] if  ( zPend > 0 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  (zz  >  2 )  {^1598^^^^^1580^1608^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^break;^1598^1599^1600^^^1580^1608^[ADD] if  ( zPend < 2 )  { break; }^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  ( zz )   ;^1601^^^^^1580^1608^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  <=  2 )  {^1598^^^^^1580^1608^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REMOVE]^if  ( n > 0 )  {     break; }^1598^^^^^1580^1608^[REMOVE] ^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend = 0 >>> 0;^1603^^^^^1580^1608^[REPLACE] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  == zz )  {^1598^^^^^1580^1608^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1588^^^^^1580^1608^[ADD] szptr[wr] =  ( short )  RUNA;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1593^^^^^1580^1608^[ADD] szptr[wr] =  ( short )  RUNB;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  (zz )   ;^1601^^^^^1580^1608^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1601^^^^^1580^1608^[ADD] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend = 3;^1603^^^^^1580^1608^[REPLACE] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )   ( j  <  1 ) ;^1605^^^^^1580^1608^[REPLACE] szptr[wr] =  ( short )   ( j + 1 ) ;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1605^^^^^1580^1608^[ADD] szptr[wr] =  ( short )   ( j + 1 ) ;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zz  != zz )  {^1583^^^^^1542^1638^[REPLACE] if  ( zPend > 0 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  > zz )  {^1598^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^break;^1598^1599^1600^^^1542^1638^[ADD] if  ( zPend < 2 )  { break; }^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1601^^^^^1542^1638^[ADD] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  (zz  <=  4 )  {^1598^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1598^1599^1600^^^1542^1638^[ADD] if  ( zPend < 2 )  { break; }^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  (zz )   ;^1601^^^^^1542^1638^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend = 4;^1603^^^^^1542^1638^[REPLACE] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  ==  2 - 1 )  {^1598^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^for  ( i = 0 / 2; i  !=  last; i++ )  {^1565^^^^^1542^1638^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  <=  2 / 0 )  {^1598^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  ( zPend - 3 )   ;^1601^^^^^1542^1638^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( j  !=  0 )  {^1580^^^^^1542^1638^[REPLACE] if  ( j == 0 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  (zz  >  1 )  {^1598^^^^^1580^1608^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1598^1599^1600^^^1580^1608^[ADD] if  ( zPend < 2 )  { break; }^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  <  0 )  {^1583^^^^^1580^1608^[REPLACE] if  ( zPend > 0 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  >  2 / 3 )  {^1598^^^^^1580^1608^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1593^1594^^^^1580^1608^[ADD] szptr[wr] =  ( short )  RUNB; wr++;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  >= zz )  {^1598^^^^^1580^1608^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend = 0L;^1603^^^^^1580^1608^[REPLACE] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  !=  1 )  {^1598^^^^^1580^1608^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  ( zPend -zz )   ;^1601^^^^^1580^1608^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )   ( j  <=  1 ) ;^1605^^^^^1580^1608^[REPLACE] szptr[wr] =  ( short )   ( j + 1 ) ;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  (zz  ==  0 )  {^1583^^^^^1542^1638^[REPLACE] if  ( zPend > 0 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zz  >  2 )  {^1598^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  ( zz )   ;^1601^^^^^1542^1638^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  >  2 )  {^1598^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1588^^^^^1542^1638^[ADD] szptr[wr] =  ( short )  RUNA;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1593^1594^^^^1542^1638^[ADD] szptr[wr] =  ( short )  RUNB; wr++;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  ( zPend - 2 / 2 )   ;^1601^^^^^1542^1638^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend = 0L;^1603^^^^^1542^1638^[REPLACE] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zz  == zz )  {^1598^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^ll_i =  unseqToSeq[block[zptr[workLimit]]];^1568^^^^^1542^1638^[REPLACE] ll_i = unseqToSeq[block[zptr[i]]];^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^j = 0 >>> 2;^1570^^^^^1542^1638^[REPLACE] j = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1570^1571^^^^1542^1638^[ADD] j = 0; tmp = yy[j];^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^tmp = pos[j]; ;^1571^^^^^1542^1638^[REPLACE] tmp = yy[j];^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^yy[3] = tmp;^1578^^^^^1542^1638^[REPLACE] yy[0] = tmp;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )   ( j  ==  1 % 0 ) ;^1605^^^^^1542^1638^[REPLACE] szptr[wr] =  ( short )   ( j + 1 ) ;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1605^1606^^^^1542^1638^[ADD] szptr[wr] =  ( short )   ( j + 1 ) ; wr++;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^char tmp;^1566^^^^^1542^1638^[REPLACE] char ll_i;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^for  ( i = 0L; i <= last; i++ )  {^1565^^^^^1542^1638^[REPLACE] for  ( i = 0; i <= last; i++ )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^ll_i =  unseqToSeq[block[zptr[null]]];^1568^^^^^1542^1638^[REPLACE] ll_i = unseqToSeq[block[zptr[i]]];^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^j = 0 + 3;^1570^^^^^1542^1638^[REPLACE] j = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^pos[0] = tmp; ;^1578^^^^^1542^1638^[REPLACE] yy[0] = tmp;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend = 2;^1603^^^^^1542^1638^[REPLACE] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1603^^^^^1542^1638^[ADD] zPend = 0;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )   ( j  &  1 ) ;^1605^^^^^1542^1638^[REPLACE] szptr[wr] =  ( short )   ( j + 1 ) ;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1566^^^^^1542^1638^[ADD] char ll_i;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^while  ( false )  {^1613^^^^^1542^1638^[REPLACE] while  ( true )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1613^1614^1615^^^1542^1638^[ADD] while  ( true )  { switch  ( zPend % 2 )  { case 0:^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  (zz  <=  0 )  {^1626^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^break;^1626^1627^1628^^^1542^1638^[ADD] if  ( zPend < 2 )  { break; }^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )  EOB; ;^1616^^^^^1542^1638^[REPLACE] szptr[wr] =  ( short )  RUNA;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )  EOB; ;^1621^^^^^1542^1638^[REPLACE] szptr[wr] =  ( short )  RUNB;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  (zz )   ;^1629^^^^^1542^1638^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1629^^^^^1542^1638^[ADD] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  <=  0 )  {^1611^^^^^1542^1638^[REPLACE] if  ( zPend > 0 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  <=  2 )  {^1626^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  ( zz )   ;^1629^^^^^1542^1638^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  ( zPend  >  2 )  {^1626^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REMOVE]^if  ( n > 0 )  {     break; }^1626^^^^^1542^1638^[REMOVE] ^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^zPend =  ( zPend - 2 )   ;^1629^^^^^1542^1638^[REPLACE] zPend =  ( zPend - 2 )  / 2;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^if  (zz  >=  2 * 1 )  {^1626^^^^^1542^1638^[REPLACE] if  ( zPend < 2 )  {^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^wr++;^1616^1617^^^^1542^1638^[ADD] szptr[wr] =  ( short )  RUNA; wr++;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^szptr[wr] =  ( short )  RUNB; ;^1633^^^^^1542^1638^[REPLACE] szptr[wr] =  ( short )  EOB;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^nMTF =  workLimit;^1637^^^^^1542^1638^[REPLACE] nMTF = wr;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[ADD]^^1637^^^^^1542^1638^[ADD] nMTF = wr;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] BZip2CompressorOutputStream StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
[REPLACE]^short  ll;^998^^^^^^^[REPLACE] int ll;^[METHOD] generateMTFValues [TYPE] void [PARAMETER] [CLASS] StackElem   [TYPE]  boolean blockRandomised  closed  false  firstAttempt  tooLong  true  [TYPE]  CRC mCrc  [TYPE]  OutputStream bsStream  f  inStream  [TYPE]  short[] cost  szptr  [TYPE]  char ll_i  tmp  tmp2  [TYPE]  int[] code  copy  fave  freq  ftab  heap  incs  mtfFreq  parent  quadrant  runningOrder  weight  zptr  [TYPE]  boolean[] bigDone  inUse  inUse16  [TYPE]  int CLEARMASK  DEPTH_THRESH  EOB  GREATER_ICOST  LESSER_ICOST  QSORT_STACK_SIZE  SETMASK  SMALL_THRESH  a2update  aFreq  allowableBlockSize  alphaSize  b  bbSize  bbStart  bc  bigN  blockCRC  blockSize100k  bsBuff  bsLive  bt  bv  bytesOut  c  c1  c2  ch  combinedCRC  count  curr  currentChar  d  dSt  dd  ge  gs  gtHi  h  hh  hi  hiSt  hp  i  i1  i2  inBlockSize  iter  j  k  last  ll  lo  loSt  ltLo  m  maxLen  med  minLen  n  n1  n2  nBlocksRandomised  nGroups  nHeap  nInUse  nMTF  nNodes  nPart  nSelectors  numBits  numQSorted  origPtr  p1  p2  qVal  rNToGo  rTPos  remF  runLength  s1  s2  sb  selCtr  shifts  sp  ss  t  tFreq  temp  tmp  totc  u  unHi  unLo  v  vec  vv  workDone  workFactor  workLimit  wr  yy  zPend  zz  [TYPE]  char[] block  len  length  pos  selector  selectorMtf  seqToUnseq  unseqToSeq  yy 
