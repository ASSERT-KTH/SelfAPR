[REPLACE]^input =  new ZipInputStream ( null ) ;^33^^^^^32^34^[REPLACE] input = new ZipInputStream ( inputStream ) ;^[METHOD] <init> [TYPE] InputStream) [PARAMETER] InputStream inputStream [CLASS] ZipArchiveInputStream   [TYPE]  ZipInputStream input  [TYPE]  InputStream inputStream  [TYPE]  boolean false  true 
[REPLACE]^java.util.zip.ZipEntry entry = input .ZipInputStream ( true )  ;^37^^^^^36^42^[REPLACE] java.util.zip.ZipEntry entry = input.getNextEntry (  ) ;^[METHOD] getNextZipEntry [TYPE] ZipArchiveEntry [PARAMETER] [CLASS] ZipArchiveInputStream   [TYPE]  ZipInputStream input  [TYPE]  ZipEntry entry  [TYPE]  boolean false  true 
[REPLACE]^if ( entry != null )  {^38^^^^^36^42^[REPLACE] if ( entry == null )  {^[METHOD] getNextZipEntry [TYPE] ZipArchiveEntry [PARAMETER] [CLASS] ZipArchiveInputStream   [TYPE]  ZipInputStream input  [TYPE]  ZipEntry entry  [TYPE]  boolean false  true 
[REPLACE]^return true;^39^^^^^36^42^[REPLACE] return null;^[METHOD] getNextZipEntry [TYPE] ZipArchiveEntry [PARAMETER] [CLASS] ZipArchiveInputStream   [TYPE]  ZipInputStream input  [TYPE]  ZipEntry entry  [TYPE]  boolean false  true 
[REPLACE]^return false;^39^^^^^36^42^[REPLACE] return null;^[METHOD] getNextZipEntry [TYPE] ZipArchiveEntry [PARAMETER] [CLASS] ZipArchiveInputStream   [TYPE]  ZipInputStream input  [TYPE]  ZipEntry entry  [TYPE]  boolean false  true 
[REPLACE]^return getNextZipEntry (  ) ;^41^^^^^36^42^[REPLACE] return new ZipArchiveEntry ( entry ) ;^[METHOD] getNextZipEntry [TYPE] ZipArchiveEntry [PARAMETER] [CLASS] ZipArchiveInputStream   [TYPE]  ZipInputStream input  [TYPE]  ZipEntry entry  [TYPE]  boolean false  true 
[REPLACE]^return null;^45^^^^^44^46^[REPLACE] return getNextZipEntry (  ) ;^[METHOD] getNextEntry [TYPE] ArchiveEntry [PARAMETER] [CLASS] ZipArchiveInputStream   [TYPE]  ZipInputStream input  [TYPE]  boolean false  true 
[REPLACE]^return input .read (  )  ;^49^^^^^48^50^[REPLACE] return input.read ( b, off, len ) ;^[METHOD] read [TYPE] int [PARAMETER] byte[] b int off int len [CLASS] ZipArchiveInputStream   [TYPE]  byte[] b  [TYPE]  ZipInputStream input  [TYPE]  boolean false  true  [TYPE]  int len  off 
[REPLACE]^return input .read ( 1 , null , null )  ;^53^^^^^52^54^[REPLACE] return input.read (  ) ;^[METHOD] read [TYPE] int [PARAMETER] [CLASS] ZipArchiveInputStream   [TYPE]  ZipInputStream input  [TYPE]  boolean false  true 
[REPLACE]^if  ( length (  )  < ZipArchiveOutputStream.LFH_SIG.length (  )  )  {^58^^^^^57^69^[REPLACE] if  ( length < ZipArchiveOutputStream.LFH_SIG.length )  {^[METHOD] matches [TYPE] boolean [PARAMETER] byte[] signature int length [CLASS] ZipArchiveInputStream   [TYPE]  byte[] signature  [TYPE]  ZipInputStream input  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return true;^59^^^^^57^69^[REPLACE] return false;^[METHOD] matches [TYPE] boolean [PARAMETER] byte[] signature int length [CLASS] ZipArchiveInputStream   [TYPE]  byte[] signature  [TYPE]  ZipInputStream input  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^if  ( signature[i]  ==  ZipArchiveOutputStream.LFH_SIG[i] )  {^63^^^^^57^69^[REPLACE] if  ( signature[i] != ZipArchiveOutputStream.LFH_SIG[i] )  {^[METHOD] matches [TYPE] boolean [PARAMETER] byte[] signature int length [CLASS] ZipArchiveInputStream   [TYPE]  byte[] signature  [TYPE]  ZipInputStream input  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return true;^64^^^^^57^69^[REPLACE] return false;^[METHOD] matches [TYPE] boolean [PARAMETER] byte[] signature int length [CLASS] ZipArchiveInputStream   [TYPE]  byte[] signature  [TYPE]  ZipInputStream input  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < ZipArchiveOutputStream.LFH_SIG.length /  0 .5 ; i++ )  {^62^^^^^57^69^[REPLACE] for  ( int i = 0; i < ZipArchiveOutputStream.LFH_SIG.length; i++ )  {^[METHOD] matches [TYPE] boolean [PARAMETER] byte[] signature int length [CLASS] ZipArchiveInputStream   [TYPE]  byte[] signature  [TYPE]  ZipInputStream input  [TYPE]  boolean false  true  [TYPE]  int i  length 
[ADD]^return false;^63^64^65^^^57^69^[ADD] if  ( signature[i] != ZipArchiveOutputStream.LFH_SIG[i] )  { return false; }^[METHOD] matches [TYPE] boolean [PARAMETER] byte[] signature int length [CLASS] ZipArchiveInputStream   [TYPE]  byte[] signature  [TYPE]  ZipInputStream input  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^for  ( int i = 0 ; i < ZipArchiveOutputStream.LFH_SIG.length; i++ )  {^62^^^^^57^69^[REPLACE] for  ( int i = 0; i < ZipArchiveOutputStream.LFH_SIG.length; i++ )  {^[METHOD] matches [TYPE] boolean [PARAMETER] byte[] signature int length [CLASS] ZipArchiveInputStream   [TYPE]  byte[] signature  [TYPE]  ZipInputStream input  [TYPE]  boolean false  true  [TYPE]  int i  length 
[REPLACE]^return false;^68^^^^^57^69^[REPLACE] return true;^[METHOD] matches [TYPE] boolean [PARAMETER] byte[] signature int length [CLASS] ZipArchiveInputStream   [TYPE]  byte[] signature  [TYPE]  ZipInputStream input  [TYPE]  boolean false  true  [TYPE]  int i  length 
