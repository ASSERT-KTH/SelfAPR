[REPLACE]^private  final  long  BYTE_MASK = 0xFF;^60^^^^^^^[REPLACE] private static final int BYTE_MASK = 0xFF;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private static final int SHORT ;^61^^^^^^^[REPLACE] private static final int SHORT = 2;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private static  int WORD = 0;^62^^^^^^^[REPLACE] private static final int WORD = 4;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private static  int BUFFER_SIZE = 404;^63^^^^^^^[REPLACE] private static final int BUFFER_SIZE = 512;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private  final int DEFLATER_BLOCK_SIZE = 8192;^71^^^^^^^[REPLACE] private static final int DEFLATER_BLOCK_SIZE = 8192;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static final  long  DEFLATED = java.util.zip.ZipEntry.DEFLATED;^76^^^^^^^[REPLACE] public static final int DEFLATED = java.util.zip.ZipEntry.DEFLATED;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static   short  DEFAULT_COMPRESSION = Deflater.DEFAULT_COMPRESSION;^81^^^^^^^[REPLACE] public static final int DEFAULT_COMPRESSION = Deflater.DEFAULT_COMPRESSION;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static final  short  STORED = java.util.zip.ZipEntry.STORED;^86^^^^^^^[REPLACE] public static final int STORED = java.util.zip.ZipEntry.STORED;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^static   long  DEFAULT_ENCODING = ZipEncodingHelper.UTF8;^91^^^^^^^[REPLACE] static final String DEFAULT_ENCODING = ZipEncodingHelper.UTF8;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static final  short  EFS_FLAG = 1 << 11;^97^^^^^^^[REPLACE] public static final int EFS_FLAG = 1 << 11;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private String comment  = null ;^107^^^^^^^[REPLACE] private String comment = "";^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private int level  = null ;^112^^^^^^^[REPLACE] private int level = DEFAULT_COMPRESSION;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private boolean hasCompressionLevelChanged  = null ;^118^^^^^^^[REPLACE] private boolean hasCompressionLevelChanged = false;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private int method  = null ;^123^^^^^^^[REPLACE] private int method = java.util.zip.ZipEntry.DEFLATED;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private final List entries  = null ;^128^^^^^^^[REPLACE] private final List entries = new LinkedList (  ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private final CRC32 crc  = null ;^133^^^^^^^[REPLACE] private final CRC32 crc = new CRC32 (  ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private long written  = null ;^138^^^^^^^[REPLACE] private long written = 0;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private long dataStart ;^143^^^^^^^[REPLACE] private long dataStart = 0;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private long localDataStart  = null ;^149^^^^^^^[REPLACE] private long localDataStart = 0;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private long cdOffset ;^154^^^^^^^[REPLACE] private long cdOffset = 0;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private long cdLength ;^159^^^^^^^[REPLACE] private long cdLength = 0;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private static final byte[] ZERO ;^164^^^^^^^[REPLACE] private static final byte[] ZERO = {0, 0};^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private static final byte[] LZERO ;^169^^^^^^^[REPLACE] private static final byte[] LZERO = {0, 0, 0, 0};^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private final Map offsets  = null ;^174^^^^^^^[REPLACE] private final Map offsets = new HashMap (  ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private String encoding  = null ;^183^^^^^^^[REPLACE] private String encoding = DEFAULT_ENCODING;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private ZipEncoding zipEncoding ;^191^192^^^^191^192^[REPLACE] private ZipEncoding zipEncoding = ZipEncodingHelper.getZipEncoding ( DEFAULT_ENCODING ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private final Deflater def = new Deflater ( level, true ) ;^198^^^^^^^[REPLACE] protected final Deflater def = new Deflater ( level, true ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private final byte[] buf ;^204^^^^^^^[REPLACE] private final byte[] buf = new byte[BUFFER_SIZE];^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private  OutputStream out;^211^^^^^^^[REPLACE] private final OutputStream out;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private boolean useEFS ;^216^^^^^^^[REPLACE] private boolean useEFS = true;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private boolean fallbackToUTF8  = null ;^221^^^^^^^[REPLACE] private boolean fallbackToUTF8 = false;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private UnicodeExtraFieldPolicy createUnicodeExtraFields ;^226^227^^^^226^227^[REPLACE] private UnicodeExtraFieldPolicy createUnicodeExtraFields = UnicodeExtraFieldPolicy.NEVER;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^static final byte[] LFH_SIG  = null ;^589^^^^^^^[REPLACE] static final byte[] LFH_SIG = ZipLong.getBytes ( 0X04034B50L ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^static final byte[] DD_SIG  = null ;^593^^^^^^^[REPLACE] static final byte[] DD_SIG = ZipLong.getBytes ( 0X08074B50L ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^static final byte[] CFH_SIG  = null ;^597^^^^^^^[REPLACE] static final byte[] CFH_SIG = ZipLong.getBytes ( 0X02014B50L ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^static final byte[] EOCD_SIG  = null ;^601^^^^^^^[REPLACE] static final byte[] EOCD_SIG = ZipLong.getBytes ( 0X06054B50L ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static final UnicodeExtraFieldPolicy ALWAYS  = null ;^923^924^^^^923^924^[REPLACE] public static final UnicodeExtraFieldPolicy ALWAYS = new UnicodeExtraFieldPolicy ( "always" ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static final UnicodeExtraFieldPolicy NEVER ;^928^929^^^^928^929^[REPLACE] public static final UnicodeExtraFieldPolicy NEVER = new UnicodeExtraFieldPolicy ( "never" ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^public static  UnicodeExtraFieldPolicy NOT_ENCODEABLE = new UnicodeExtraFieldPolicy ( "not encodeable" ) ;^934^935^^^^934^935^[REPLACE] public static final UnicodeExtraFieldPolicy NOT_ENCODEABLE = new UnicodeExtraFieldPolicy ( "not encodeable" ) ;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^private final  double  name;^937^^^^^^^[REPLACE] private final String name;^ [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy  
[REPLACE]^OutputStream o = true;^245^^^^^244^263^[REPLACE] OutputStream o = null;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^RandomAccessFile _raf = false;^246^^^^^244^263^[REPLACE] RandomAccessFile _raf = null;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^if  (raf == null )  {^251^^^^^244^263^[REPLACE] if  ( _raf != null )  {^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[ADD]^_raf.close (  ) ;^252^253^254^^256^244^263^[ADD] try { _raf.close (  ) ; } catch  ( IOException inner )  { }^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^_raf.getFilePointer (  ) ;^253^^^^^244^263^[REPLACE] _raf.close (  ) ;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REMOVE]^crc.reset (  )  ;^253^^^^^244^263^[REMOVE] ^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[ADD]^^257^^^^^244^263^[ADD] _raf = null;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[ADD]^_raf = new RandomAccessFile ( file, "rw" ) ;_raf.setLength ( 0 ) ;^247^248^249^250^251^244^263^[ADD] try { _raf = new RandomAccessFile ( file, "rw" ) ; _raf.setLength ( 0 ) ; } catch  ( IOException e )  { if  ( _raf != null )  {^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^_raf =  new RandomAccessFile ( null, "rw" ) ;^248^^^^^244^263^[REPLACE] _raf = new RandomAccessFile ( file, "rw" ) ;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^_raf .getFilePointer (  )  ;^253^^^^^244^263^[REPLACE] _raf.close (  ) ;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^_raf = this;^257^^^^^244^263^[REPLACE] _raf = null;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[ADD]^^259^^^^^244^263^[ADD] o = new FileOutputStream ( file ) ;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^out =  null;^261^^^^^244^263^[REPLACE] out = o;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[ADD]^^262^^^^^244^263^[ADD] raf = _raf;^[METHOD] <init> [TYPE] File) [PARAMETER] File file [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  name  [TYPE]  IOException e  inner  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets  [TYPE]  File file 
[REPLACE]^if  ( entry != null )  {^353^^^^^352^411^[REPLACE] if  ( entry == null )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^353^354^355^^^352^411^[ADD] if  ( entry == null )  { return; }^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return;  ;^354^^^^^352^411^[REPLACE] return;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^357^358^^^^352^411^[ADD] long realCrc = crc.getValue (  ) ; crc.reset (  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.CRC32 (  ) ;^358^^^^^352^411^[REPLACE] crc.reset (  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getMethod (  )   ||  DEFLATED )  {^360^^^^^352^411^[REPLACE] if  ( entry.getMethod (  )  == DEFLATED )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^360^361^362^363^364^352^411^[ADD] if  ( entry.getMethod (  )  == DEFLATED )  { def.finish (  ) ; while  ( !def.finished (  )  )  { deflate (  ) ; }^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^}  else {^373^^^^^352^411^[REPLACE] } else if  ( raf == null )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^}^373^374^375^376^377^352^411^[ADD] else if  ( raf == null )  { if  ( entry.getCrc (  )  != realCrc )  { throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  )^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long size = written size;^390^^^^^373^395^[REPLACE] long size = written - dataStart;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if   (  entry.getCrc  (    )   == -1  )   {  ;^374^^^^^352^411^[REPLACE] if  ( entry.getCrc (  )  != realCrc )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^374^375^376^377^378^352^411^[ADD] if  ( entry.getCrc (  )  != realCrc )  { throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return ;^375^376^377^378^^352^411^[REPLACE] throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ entry.setTime (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^376^377^378^379^^352^411^[REPLACE] + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ Long.toHexString ( entry.getName (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^377^378^379^^^352^411^[REPLACE] + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^377^378^379^^^352^411^[ADD] + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ Long.toHexString ( save )  ) ;^379^^^^^352^411^[REPLACE] + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getSize (  )   ==  written - dataStart )  {^382^^^^^352^411^[REPLACE] if  ( entry.getSize (  )  != written - dataStart )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^383^384^385^386^387^352^411^[ADD] throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ entry.setTime (  )  + ": " + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^384^385^386^387^^352^411^[REPLACE] + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^384^385^386^^^352^411^[ADD] + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ entry .setSize (  )  + " instead of " +  ( written - dataStart )  ) ;^385^386^387^^^352^411^[REPLACE] + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^385^386^387^^^352^411^[ADD] + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return ;^383^384^385^386^^352^411^[REPLACE] throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getCrc (  )   ==  realCrc )  {^374^^^^^352^411^[REPLACE] if  ( entry.getCrc (  )  != realCrc )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ entry .getTime (  )   + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^376^377^378^379^^352^411^[REPLACE] + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^376^377^378^^^352^411^[ADD] + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^( toHexString ( entry.getCrc (  )  )  )  ;^379^^^^^352^411^[REPLACE] + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^+ entry.setSize (  ) + " instead of " +  ( written - dataStart )  ) ;^385^386^387^^^352^411^[REPLACE] + entry.getSize (  ) + " instead of " +  ( written - dataStart )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^390^^^^^352^411^[ADD] long size = written - dataStart;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^375^376^377^378^379^352^411^[ADD] throw new ZipException ( "bad CRC checksum for entry " + entry.getName (  )  + ": " + Long.toHexString ( entry.getCrc (  )  ) + " instead of " + Long.toHexString ( realCrc )  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written + =  written +;^372^^^^^352^411^[REPLACE] written += entry.getCompressedSize (  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^} else if  (_raf != this )  {^373^^^^^352^411^[REPLACE] } else if  ( raf == null )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long size = written  dataStart;^390^^^^^373^395^[REPLACE] long size = written - dataStart;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.setSize (  )   ==  written - dataStart )  {^382^^^^^352^411^[REPLACE] if  ( entry.getSize (  )  != written - dataStart )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.setCrc (  )   ==  realCrc )  {^374^^^^^352^411^[REPLACE] if  ( entry.getCrc (  )  != realCrc )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^382^383^384^385^386^352^411^[ADD] if  ( entry.getSize (  )  != written - dataStart )  { throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long size = written  dataStart;^390^^^^^352^411^[REPLACE] long size = written - dataStart;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^throw new ZipException (  (  (  (  (  ( "bad CRC checksum for entry " +  ( entry.getName (  )  )  )  + ": " )  +  ( toHexString ( entry.getCrc (  )  )  )  )  + " instead of " )  +  ( toHexString ( realCrc )  )  )  )  ;^383^384^385^386^^352^411^[REPLACE] throw new ZipException ( "bad size for entry " + entry.getName (  )  + ": " + entry.getSize (  ) + " instead of "^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if   (  _raf != null  )   {  ;^399^^^^^352^411^[REPLACE] if  ( raf != null )  {^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long save = raf.close (  ) ;^400^^^^^352^411^[REPLACE] long save = raf.getFilePointer (  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^long save = raf .setLength ( realCrc )  ;^400^^^^^352^411^[REPLACE] long save = raf.getFilePointer (  ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  )  ;^409^^^^^352^411^[REPLACE] writeDataDescriptor ( entry ) ;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entry = ze  ;^410^^^^^352^411^[REPLACE] entry = null;^[METHOD] closeEntry [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  )  ;^419^^^^^418^451^[REPLACE] closeEntry (  ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entry =  null;^421^^^^^418^451^[REPLACE] entry = ze;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  )  ;^422^^^^^418^451^[REPLACE] entries.add ( entry ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  (   -0 )  {^424^^^^^418^451^[REPLACE] if  ( entry.getMethod (  )  == -1 )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^if  (  ( entry.getTime (  )  )  ==  ( -1 )  )  {     entry.setTime ( currentTimeMillis (  )  ) ; }^424^^^^^418^451^[REMOVE] ^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entry.setTime ( method ) ;^425^^^^^418^451^[REPLACE] entry.setMethod ( method ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^crc.reset (  )  ;^425^^^^^418^451^[REMOVE] ^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry .setTime ( localDataStart )    !=  -1 )  {^428^^^^^418^451^[REPLACE] if  ( entry.getTime (  )  == -1 )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^428^429^430^^^418^451^[ADD] if  ( entry.getTime (  )  == -1 )  { entry.setTime ( System.currentTimeMillis (  )  ) ; }^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^currentTimeMillis (  )  ;^429^^^^^418^451^[REPLACE] entry.setTime ( System.currentTimeMillis (  )  ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entry.setTime ( currentTimeMillis (  )  )  ;^429^^^^^418^451^[REPLACE] entry.setTime ( System.currentTimeMillis (  )  ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getMethod (  )  != STORED && raf == null )  {^433^^^^^418^451^[REPLACE] if  ( entry.getMethod (  )  == STORED && raf == null )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^433^434^435^436^437^418^451^[ADD] if  ( entry.getMethod (  )  == STORED && raf == null )  { if  ( entry.getSize (  )  == -1 )  { throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.setSize (  )   ) {^434^^^^^418^451^[REPLACE] if  ( entry.getSize (  )  == -1 )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^434^435^436^437^438^418^451^[ADD] if  ( entry.getSize (  )  == -1 )  { throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ; }^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return ;^435^436^437^^^418^451^[REPLACE] throw new ZipException ( "uncompressed size is required for" + " STORED method when not writing to a" + " file" ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getCrc (  )   &&  -1 << 4 )  {^439^^^^^418^451^[REPLACE] if  ( entry.getCrc (  )  == -1 )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^return ;^440^441^^^^418^451^[REPLACE] throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.setSize (  )   ||  -1 )  {^434^^^^^418^451^[REPLACE] if  ( entry.getSize (  )  == -1 )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.getCrc (  )   !=  -1 )  {^439^^^^^418^451^[REPLACE] if  ( entry.getCrc (  )  == -1 )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^440^441^442^^^418^451^[ADD] throw new ZipException ( "crc checksum is required for STORED" + " method when not writing to a file" ) ; }^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( entry.setMethod (  )  == DEFLATED || hasCompressionLevelChanged )  {^446^^^^^418^451^[REPLACE] if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  {^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^446^447^448^449^^418^451^[ADD] if  ( entry.getMethod (  )  == DEFLATED && hasCompressionLevelChanged )  { def.setLevel ( level ) ; hasCompressionLevelChanged = false; }^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^448^^^^^418^451^[ADD] hasCompressionLevelChanged = false;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  )  ;^450^^^^^418^451^[REPLACE] writeLocalFileHeader ( entry ) ;^[METHOD] putNextEntry [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  level  method  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if   (  entry.getMethod  (    )   == -1  )   {  ;^497^^^^^496^523^[REPLACE] if  ( entry.getMethod (  )  == DEFLATED )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^497^498^499^500^501^496^523^[ADD] if  ( entry.getMethod (  )  == DEFLATED )  { if  ( length > 0 )  { if  ( !def.finished (  )  )  { if  ( length <= DEFLATER_BLOCK_SIZE )  { def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += extra.length  ;^520^^^^^497^521^[REPLACE] written += length;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length %  2 > 0  )  {^498^^^^^496^523^[REPLACE] if  ( length > 0 )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( def.finished (  )  )  {^499^^^^^496^523^[REPLACE] if  ( !def.finished (  )  )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length - 4 <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^[REPLACE] if  ( length <= DEFLATER_BLOCK_SIZE )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length (  )  )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^504^^^^^500^515^[ADD] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 2; i < fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length /  ( DEFLATER_BLOCK_SIZE )  ;^510^^^^^500^515^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( b, offset, length )  ;^501^^^^^496^523^[REPLACE] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^501^^^^^496^523^[ADD] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  )  ;^502^^^^^496^523^[REPLACE] deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length + 2 )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, length /  0.5  - done ) ;^512^^^^^496^523^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^crc.reset (  )  ;^513^^^^^496^523^[REPLACE] deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^504^^^^^496^523^[ADD] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0L; i < fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length /  ( DEFLATER_BLOCK_SIZE )  ;^510^^^^^496^523^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length + 5 <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^[REPLACE] if  ( length <= DEFLATER_BLOCK_SIZE )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length %  0.5  )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^511^512^513^514^^500^515^[ADD] if  ( done < length )  { def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = fullblocks *  ( DEFLATER_BLOCK_SIZE )  ;^504^^^^^500^515^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^510^^^^^500^515^[ADD] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.deflate ( b, offset, method ) ;^501^^^^^496^523^[REPLACE] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^502^^^^^496^523^[ADD] deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^511^512^513^514^^496^523^[ADD] if  ( done < length )  { def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, length - 2 - done ) ;^512^^^^^496^523^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^505^506^507^508^509^496^523^[ADD] for  ( int i = 0; i < fullblocks; i++ )  { def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ; deflateUntilInputIsNeeded (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = fullblocks  DEFLATER_BLOCK_SIZE;^510^^^^^496^523^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length (  )  <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^[REPLACE] if  ( length <= DEFLATER_BLOCK_SIZE )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length + 5 )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0L; i < fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = fullblocks  DEFLATER_BLOCK_SIZE;^510^^^^^500^515^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, level, length ) ;^501^^^^^496^523^[REPLACE] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length *  0.5  )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length (  )  / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length %  2 <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^[REPLACE] if  ( length <= DEFLATER_BLOCK_SIZE )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length + 2 )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length - 5 / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = method  DEFLATER_BLOCK_SIZE;^510^^^^^500^515^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.deflate ( b, offset, length ) ;^501^^^^^496^523^[REPLACE] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^def.getTotalOut (  )  ;^502^^^^^496^523^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length *  2 )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, length *  2 - done ) ;^512^^^^^496^523^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done = fullblocks *  ( DEFLATER_BLOCK_SIZE )  ;^504^^^^^496^523^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0 % 0; i < fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length (  )  > 0  )  {^498^^^^^496^523^[REPLACE] if  ( length > 0 )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( fullblocks < length + 2 )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^505^506^507^508^509^500^515^[ADD] for  ( int i = 0; i < fullblocks; i++ )  { def.setInput ( b, offset + i * DEFLATER_BLOCK_SIZE, DEFLATER_BLOCK_SIZE ) ; deflateUntilInputIsNeeded (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset, method ) ;^501^^^^^496^523^[REPLACE] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length %  2 )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^def.setInput ( b, offset + done, length - done ) ;deflateUntilInputIsNeeded (  ) ;^511^512^513^514^^496^523^[ADD] if  ( done < length )  { def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, level + done, length + 5 - done ) ;^512^^^^^496^523^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^def.getTotalOut (  )  ;^513^^^^^496^523^[REMOVE] ^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 1; i < fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^510^^^^^496^523^[ADD] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^def.setInput ( b, offset, length ) ;deflateUntilInputIsNeeded (  ) ;final int fullblocks = length / DEFLATER_BLOCK_SIZE;^500^501^502^503^504^496^523^[ADD] if  ( length <= DEFLATER_BLOCK_SIZE )  { def.setInput ( b, offset, length ) ; deflateUntilInputIsNeeded (  ) ; } else { final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^def.setInput ( b, offset + done, length - done ) ;deflateUntilInputIsNeeded (  ) ;^511^512^513^514^^500^515^[ADD] if  ( done < length )  { def.setInput ( b, offset + done, length - done ) ; deflateUntilInputIsNeeded (  ) ; }^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = method /  0.5  / DEFLATER_BLOCK_SIZE;^504^^^^^500^515^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 1; i < fullblocks; i++ )  {^505^^^^^500^515^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length %  0.5  )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, method *  2 - done ) ;^512^^^^^496^523^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int fullblocks = length %  2 / DEFLATER_BLOCK_SIZE;^504^^^^^496^523^[REPLACE] final int fullblocks = length / DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0 - 2; i < fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length *  2 )  {^511^^^^^500^515^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length (  )  )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.setInput ( b, offset + done, length (  )  - done ) ;^512^^^^^496^523^[REPLACE] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 0 * 4; i < fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int done =length  DEFLATER_BLOCK_SIZE;^510^^^^^496^523^[REPLACE] final int done = fullblocks * DEFLATER_BLOCK_SIZE;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( length *  0.5  <= DEFLATER_BLOCK_SIZE )  {^500^^^^^496^523^[REPLACE] if  ( length <= DEFLATER_BLOCK_SIZE )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^def.deflate ( b, level, length ) ;^501^^^^^496^523^[REPLACE] def.setInput ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( done < length + 1 )  {^511^^^^^496^523^[REPLACE] if  ( done < length )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^512^^^^^496^523^[ADD] def.setInput ( b, offset + done, length - done ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^513^^^^^496^523^[ADD] deflateUntilInputIsNeeded (  ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += extra.length  ;^520^^^^^496^523^[REPLACE] written += length;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^for  ( int i = 4; i < fullblocks; i++ )  {^505^^^^^496^523^[REPLACE] for  ( int i = 0; i < fullblocks; i++ )  {^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( b, offset, length )  ;^522^^^^^496^523^[REPLACE] crc.update ( b, offset, length ) ;^[METHOD] write [TYPE] void [PARAMETER] byte[] b int offset int length [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  done  fullblocks  i  length  level  method  offset  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  [TYPE]  boolean b  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^621^^^^^619^716^[ADD] boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^623^^^^^619^716^[ADD] final ZipEncoding entryEncoding;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( encodable && fallbackToUTF8 )  {^625^^^^^619^716^[REPLACE] if  ( !encodable && fallbackToUTF8 )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^this.encoding = encoding  ;^628^^^^^625^629^[REPLACE] entryEncoding = zipEncoding;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entryEncoding  =  entryEncoding ;^626^^^^^619^716^[REPLACE] entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^626^^^^^619^716^[ADD] entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^628^^^^^619^716^[ADD] entryEncoding = zipEncoding;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer commentB = entryEncoding.encode ( comm )  ;^631^^^^^619^716^[REPLACE] ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  (NOT_ENCODEABLE  ==  UnicodeExtraFieldPolicy.NEVER )  {^633^^^^^619^716^[REPLACE] if  ( createUnicodeExtraFields != UnicodeExtraFieldPolicy.NEVER )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || true )  {^635^636^^^^619^716^[REPLACE] if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ze.addExtraField ( new UnicodePathExtraField ( ze .getTime (  )  , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^637^638^639^640^^635^641^[REPLACE] ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^name.arrayOffset (  ) , commentB.arrayOffset (  ) , name.limit (  )  )  ) ;^638^639^640^^^635^641^[REPLACE] name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^638^639^640^^^635^641^[ADD] name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^name.arrayOffset (  ) , commentB.limit (  )  )  ) ;^639^640^^^^635^641^[REPLACE] name.arrayOffset (  ) , name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^data.limit (  )  ;^640^^^^^635^641^[REPLACE] name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^crc.reset (  )  ;^640^^^^^635^641^[REMOVE] ^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  (  !"".equals ( comm )  )  {^644^^^^^619^716^[REPLACE] if  ( comm != null && !"".equals ( comm )  )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^if  (  ( createUnicodeExtraFields )  !=  ( NEVER )  )  {     if  (  (  ( createUnicodeExtraFields )  ==  ( ALWAYS )  )  ||  ( !encodable )  )  {         ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;     }     String comm = ze.getComment (  ) ;     if  (  ( comm != null )  &&  ( ! ( "".equals ( comm )  )  )  )  {         boolean commentEncodable = canEncode ( comm ) ;         if  (  (  ( createUnicodeExtraFields )  ==  ( ALWAYS )  )  ||  ( !commentEncodable )  )  {             ByteBuffer commentB = entryEncoding.encode ( comm ) ;             ze.addExtraField ( new UnicodeCommentExtraField ( comm, commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )  ) ;         }     } }^644^^^^^619^716^[REMOVE] ^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || commentEncodable )  {^648^649^^^^619^716^[REPLACE] if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  )  ;^650^^^^^648^656^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^boolean nameentEncodable = this.zipEncoding.canEncode ( comm ) ;^646^^^^^619^716^[REPLACE] boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer nameentB = entryEncoding .canEncode (  )  ;^650^^^^^619^716^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if   (  createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable  )   {  ;^648^649^^^^619^716^[REPLACE] if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer commentB = entryEncoding .canEncode (  )  ;^650^^^^^648^656^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^643^^^^^619^716^[ADD] String comm = ze.getComment (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^boolean nameentEncodable = this.zipEncoding.encode ( comm ) ;^646^^^^^619^716^[REPLACE] boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  )  ;^650^^^^^619^716^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || encodable )  {^635^636^^^^619^716^[REPLACE] if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !encodable )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name .array (  )  , name.limit (  )  )  ) ;^637^638^639^640^^635^641^[REPLACE] ze.addExtraField ( new UnicodePathExtraField ( ze.getName (  ) , name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^name.array (  ) , commentB.arrayOffset (  ) , name.limit (  )  )  ) ;^638^639^640^^^635^641^[REPLACE] name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( name == false ) {^644^^^^^619^716^[REPLACE] if  ( comm != null && !"".equals ( comm )  )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^boolean commentEncodable = this.zipEncoding.encode ( comm ) ;^646^^^^^619^716^[REPLACE] boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer nameentB = entryEncoding.canEncode ( comm ) ;^650^^^^^619^716^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  (  commentEncodable )  {^648^649^^^^619^716^[REPLACE] if  ( createUnicodeExtraFields == UnicodeExtraFieldPolicy.ALWAYS || !commentEncodable )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer nameentB = entryEncoding.encode ( comm ) ;^650^^^^^648^656^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^String comm = ze.getName (  ) ;^643^^^^^619^716^[REPLACE] String comm = ze.getComment (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^646^^^^^619^716^[ADD] boolean commentEncodable = this.zipEncoding.canEncode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer commentB = zipEncoding.encode ( comm ) ;^650^^^^^619^716^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^660^^^^^619^716^[REPLACE] offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^660^^^^^619^716^[REPLACE] offsets.put ( ze, ZipLong.getBytes ( written )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^662^^^^^619^716^[REPLACE] writeOut ( LFH_SIG ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^662^^^^^619^716^[ADD] writeOut ( LFH_SIG ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT  ;^663^^^^^619^716^[REPLACE] written += WORD;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int zipMethod = ze.getTime (  ) ;^666^^^^^619^716^[REPLACE] final int zipMethod = ze.getMethod (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !true ;^668^669^670^^^619^716^[REPLACE] writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^buff[0] =  (  ( byte )   ( b &  ( BYTE_MASK )  )  )  ;^671^^^^^619^716^[REPLACE] written += WORD;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( offset )  ) ;^674^^^^^619^716^[REPLACE] writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( length )  ) ;^674^^^^^619^716^[REPLACE] writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^getBytes ( commentB.limit (  )  )  ;^674^^^^^619^716^[REMOVE] ^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += WORD  ;^675^^^^^619^716^[REPLACE] written += SHORT;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipUtil.adjustToLong ( ze.getTime (  )  )  ) ;^678^^^^^619^716^[REPLACE] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^678^679^^^^619^716^[ADD] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ; written += WORD;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipUtil.toDosTime ( ze.getName (  )  )  ) ;^678^^^^^619^716^[REPLACE] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^( entry.getSize (  )  )  ;^678^^^^^619^716^[REMOVE] ^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT  ;^679^^^^^619^716^[REPLACE] written += WORD;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^dataStart = written  ;^684^^^^^619^716^[REPLACE] localDataStart = written;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( zipMethod != DEFLATED || raf != null )  {^685^^^^^619^716^[REPLACE] if  ( zipMethod == DEFLATED || raf != null )  {^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.getName (  )  )  ) ;^690^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ze.getTime (  )  ;^690^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.setSize (  )  )  ) ;^691^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^691^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^692^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.setSize (  )  )  ) ;^692^^^^^685^693^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^crc.reset (  )  ;^692^^^^^685^693^[REMOVE] ^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^686^^^^^619^716^[REPLACE] writeOut ( LZERO ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^687^^^^^619^716^[REPLACE] writeOut ( LZERO ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^688^^^^^619^716^[REPLACE] writeOut ( LZERO ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^695^^^^^619^716^[ADD] written += 12;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^699^^^^^619^716^[REPLACE] writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^699^^^^^619^716^[REPLACE] writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^699^700^^^^619^716^[ADD] writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ; written += SHORT;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += WORD  ;^700^^^^^619^716^[REPLACE] written += SHORT;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^byte[] extra = ze.getCentralDirectoryExtra (  ) ;^703^^^^^619^716^[REPLACE] byte[] extra = ze.getLocalFileDataExtra (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^704^^^^^619^716^[REPLACE] writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^getBytes ( commentB.limit (  )  )  ;^704^^^^^619^716^[REMOVE] ^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^705^^^^^619^716^[ADD] written += SHORT;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^708^^^^^619^716^[REPLACE] writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^708^709^^^^619^716^[ADD] writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ; written += name.limit (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^708^^^^^619^716^[ADD] writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += commentB.limit (  )  ;^709^^^^^619^716^[REPLACE] written += name.limit (  ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZERO ) ;^712^^^^^619^716^[REPLACE] writeOut ( extra ) ;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length  ;^713^^^^^619^716^[REPLACE] written += extra.length;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^localDataStart = written  ;^715^^^^^619^716^[REPLACE] dataStart = written;^[METHOD] writeLocalFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^742^^^^^741^832^[REPLACE] writeOut ( CFH_SIG ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT  ;^743^^^^^741^832^[REPLACE] written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^747^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^getBytes ( commentB.limit (  )  )  ;^747^^^^^741^832^[REMOVE] ^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes (  ( ze.setCrc (  )  << 8 )  & 20 )  ) ;^747^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes (  ( ze.setCrc (  )  << 8 )  | 20 )  ) ;^747^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes (  ( ze.getPlatform (  )  << 8 )  | 20 )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += WORD  ;^748^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final int zipMethod = ze.getTime (  ) ;^750^^^^^741^832^[REPLACE] final int zipMethod = ze.getMethod (  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^final boolean encodable = zipEncoding.canEncode ( ze .getTime (  )   ) ;^751^^^^^741^832^[REPLACE] final boolean encodable = zipEncoding.canEncode ( ze.getName (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, encodable ;^752^753^754^^^741^832^[REPLACE] writeVersionNeededToExtractAndGeneralPurposeBits ( zipMethod, !encodable && fallbackToUTF8 ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^755^^^^^741^832^[ADD] written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( method )  ) ;^758^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^758^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( zipMethod )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += WORD  ;^759^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^762^^^^^741^832^[REPLACE] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipUtil.toDosTime ( ze .setTime ( cdOffset )   )  ) ;^762^^^^^741^832^[REPLACE] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^762^^^^^741^832^[ADD] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipUtil.toDosTime ( ze.getName (  )  )  ) ;^762^^^^^741^832^[REPLACE] writeOut ( ZipUtil.toDosTime ( ze.getTime (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT  ;^763^^^^^741^832^[REPLACE] written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^768^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^768^^^^^741^832^[ADD] writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ze.getTime (  )  ;^768^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCrc (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^769^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze .setCompressedSize (  )   )  ) ;^769^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getCompressedSize (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze .setSize (  )   )  ) ;^770^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.setSize (  )  )  ) ;^770^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getSize (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^772^^^^^741^832^[ADD] written += 12;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^776^^^^^741^832^[ADD] final ZipEncoding entryEncoding;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( hasCompressionLevelChanged ) {^778^^^^^741^832^[REPLACE] if  ( !encodable && fallbackToUTF8 )  {^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^781^^^^^778^782^[ADD] entryEncoding = zipEncoding;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^entryEncoding  =  entryEncoding ;^779^^^^^741^832^[REPLACE] entryEncoding = ZipEncodingHelper.UTF8_ZIP_ENCODING;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^this.encoding = encoding  ;^781^^^^^741^832^[REPLACE] entryEncoding = zipEncoding;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer commentB = entryEncoding.encode ( comm )  ;^784^^^^^741^832^[REPLACE] ByteBuffer name = entryEncoding.encode ( ze.getName (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^786^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^786^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^786^787^^^^741^832^[ADD] writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ; written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^data.limit (  )  ;^786^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( name.limit (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += WORD  ;^787^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^byte[] extra = ze.getLocalFileDataExtra (  ) ;^790^^^^^741^832^[REPLACE] byte[] extra = ze.getCentralDirectoryExtra (  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( ZERO.length )  ) ;^791^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( extra.length )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += WORD  ;^792^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^String comm = ze .getName (  )  ;^795^^^^^741^832^[REPLACE] String comm = ze.getComment (  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  (name != false )  {^796^^^^^741^832^[REPLACE] if  ( comm == null )  {^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^797^^^^^741^832^[ADD] comm = "";^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ByteBuffer name = entryEncoding.encode ( ze.getName (  )  )  ;^800^^^^^741^832^[REPLACE] ByteBuffer commentB = entryEncoding.encode ( comm ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^802^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^802^^^^^741^832^[ADD] writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^802^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^commentB.array (  )  ;^802^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( commentB.limit (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^803^^^^^741^832^[ADD] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^806^^^^^741^832^[REPLACE] writeOut ( ZERO ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += WORD  ;^807^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^810^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^810^811^^^^741^832^[ADD] writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ; written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( ze .getExternalAttributes (  )   )  ) ;^810^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^810^^^^^741^832^[ADD] writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^ze.getExternalAttributes (  )  ;^810^^^^^741^832^[REPLACE] writeOut ( ZipShort.getBytes ( ze.getInternalAttributes (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += WORD  ;^811^^^^^741^832^[REPLACE] written += SHORT;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^814^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipLong.getBytes ( ze.getInternalAttributes (  )  )  ) ;^814^^^^^741^832^[REPLACE] writeOut ( ZipLong.getBytes ( ze.getExternalAttributes (  )  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^ze.getCrc (  )  ;^814^^^^^741^832^[REMOVE] ^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += SHORT  ;^815^^^^^741^832^[REPLACE] written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^(  ( byte[] )   ( offsets.get ( ze )  )  )  ;^818^^^^^741^832^[REPLACE] writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REMOVE]^writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )  ;^818^^^^^741^832^[REMOVE] ^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut (  ( byte[] )  offsets.clear ( ze )  ) ;^818^^^^^741^832^[REPLACE] writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^818^^^^^741^832^[ADD] writeOut (  ( byte[] )  offsets.get ( ze )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^buff[0] =  (  ( byte )   ( b &  ( BYTE_MASK )  )  )  ;^819^^^^^741^832^[REPLACE] written += WORD;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( commentB.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^822^^^^^741^832^[REPLACE] writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^name.arrayOffset (  )  ;^822^^^^^741^832^[REPLACE] writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^822^^^^^741^832^[ADD] writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^data.limit (  )  ;^822^^^^^741^832^[REPLACE] writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^823^^^^^741^832^[ADD] written += name.limit (  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( num )  ;^826^^^^^741^832^[REPLACE] writeOut ( extra ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^written += extra.length;^826^827^^^^741^832^[ADD] writeOut ( extra ) ; written += extra.length;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += length  ;^827^^^^^741^832^[REPLACE] written += extra.length;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( name.array (  ) , name.arrayOffset (  ) , name.limit (  )  )  ;^830^^^^^741^832^[REPLACE] writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( name.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^830^^^^^741^832^[REPLACE] writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^830^^^^^741^832^[ADD] writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^830^831^^^^741^832^[ADD] writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  ) ; written += commentB.limit (  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^written += name.limit (  )  ;^831^^^^^741^832^[REPLACE] written += commentB.limit (  ) ;^[METHOD] writeCentralFileHeader [TYPE] void [PARAMETER] ZipArchiveEntry ze [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer commentB  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^839^^^^^838^858^[REPLACE] writeOut ( EOCD_SIG ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^842^^^^^838^858^[REPLACE] writeOut ( ZERO ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^842^^^^^838^858^[ADD] writeOut ( ZERO ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( getBytes ( name.limit (  )  )  )  ;^843^^^^^838^858^[REPLACE] writeOut ( ZERO ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^byte[] num = ZipShort.getBytes ( entries.clear (  )  ) ;^846^^^^^838^858^[REPLACE] byte[] num = ZipShort.getBytes ( entries.size (  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( buff ) ;^847^^^^^838^858^[REPLACE] writeOut ( num ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( extra )  ;^848^^^^^838^858^[REPLACE] writeOut ( num ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^851^^^^^838^858^[REPLACE] writeOut ( ZipLong.getBytes ( cdLength )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^852^^^^^838^858^[REPLACE] writeOut ( ZipLong.getBytes ( cdOffset )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^855^856^^^^838^858^[ADD] ByteBuffer data = this.zipEncoding.encode ( comment ) ; writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^856^^^^^838^858^[REPLACE] writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^name.limit (  )  ;^856^^^^^838^858^[REPLACE] writeOut ( ZipShort.getBytes ( data.limit (  )  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( commentB.array (  ) , commentB.arrayOffset (  ) , commentB.limit (  )  )  ;^857^^^^^838^858^[REPLACE] writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^name.array (  )  ;^857^^^^^838^858^[REPLACE] writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( data.array (  ) , data.array (  ) , data.limit (  )  ) ;^857^^^^^838^858^[REPLACE] writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^name.limit (  )  ;^857^^^^^838^858^[REPLACE] writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^857^^^^^838^858^[ADD] writeOut ( data.array (  ) , data.arrayOffset (  ) , data.limit (  )  ) ;^[METHOD] writeCentralDirectoryEnd [TYPE] void [PARAMETER] [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  ByteBuffer data  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  i  len  length  level  method  offset  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^898^^^^^895^913^[ADD] int versionNeededToExtract = 10;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^int generalPurposeFlag  =  EFS_FLAG ;^899^^^^^895^913^[REPLACE] int generalPurposeFlag =  ( useEFS || utfFallback )  ? EFS_FLAG : 0;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^if  ( zipMethod != DEFLATED && raf == null )  {^900^^^^^895^913^[REPLACE] if  ( zipMethod == DEFLATED && raf == null )  {^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^versionNeededToExtract =  20 + 0;^903^^^^^895^913^[REPLACE] versionNeededToExtract =  20;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^905^^^^^895^913^[ADD] generalPurposeFlag |= 8;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^versionNeededToExtract =  20 - 0;^903^^^^^895^913^[REPLACE] versionNeededToExtract =  20;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( method )  ) ;^910^^^^^895^913^[REPLACE] writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( len )  ) ;^910^^^^^895^913^[REPLACE] writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[ADD]^^910^^^^^895^913^[ADD] writeOut ( ZipShort.getBytes ( versionNeededToExtract )  ) ;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^writeOut ( ZipShort.getBytes ( length )  ) ;^912^^^^^895^913^[REPLACE] writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^getBytes ( commentB.limit (  )  )  ;^912^^^^^895^913^[REPLACE] writeOut ( ZipShort.getBytes ( generalPurposeFlag )  ) ;^[METHOD] writeVersionNeededToExtractAndGeneralPurposeBits [TYPE] void [PARAMETER] final int zipMethod final boolean utfFallback [CLASS] ZipArchiveOutputStream UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^public static  UnicodeExtraFieldPolicy ALWAYS = new UnicodeExtraFieldPolicy ( "always" ) ;^923^924^^^^923^924^[REPLACE] public static final UnicodeExtraFieldPolicy ALWAYS = new UnicodeExtraFieldPolicy ( "always" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^public static final UnicodeExtraFieldPolicy NEVER  = null ;^928^929^^^^928^929^[REPLACE] public static final UnicodeExtraFieldPolicy NEVER = new UnicodeExtraFieldPolicy ( "never" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^public static final UnicodeExtraFieldPolicy NOT_ENCODEABLE  = null ;^934^935^^^^934^935^[REPLACE] public static final UnicodeExtraFieldPolicy NOT_ENCODEABLE = new UnicodeExtraFieldPolicy ( "not encodeable" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
[REPLACE]^private  String name;^937^^^^^^^[REPLACE] private final String name;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] UnicodeExtraFieldPolicy   [TYPE]  ZipEncoding entryEncoding  zipEncoding  [TYPE]  UnicodeExtraFieldPolicy ALWAYS  NEVER  NOT_ENCODEABLE  b  createUnicodeExtraFields  [TYPE]  CRC32 crc  [TYPE]  OutputStream o  out  [TYPE]  String DEFAULT_ENCODING  comm  comment  encoding  n  name  [TYPE]  int BUFFER_SIZE  BYTE_MASK  DEFAULT_COMPRESSION  DEFLATED  DEFLATER_BLOCK_SIZE  EFS_FLAG  SHORT  STORED  WORD  b  done  fullblocks  generalPurposeFlag  i  len  length  level  method  offset  versionNeededToExtract  zipMethod  [TYPE]  long cdLength  cdOffset  dataStart  localDataStart  realCrc  save  size  written  [TYPE]  byte[] CFH_SIG  DD_SIG  EOCD_SIG  LFH_SIG  LZERO  ZERO  b  buf  buff  data  extra  num  [TYPE]  boolean b  commentEncodable  encodable  fallbackToUTF8  false  hasCompressionLevelChanged  true  useEFS  utfFallback  [TYPE]  Deflater def  [TYPE]  RandomAccessFile _raf  raf  [TYPE]  ZipArchiveEntry entry  ze  [TYPE]  List entries  [TYPE]  Map offsets 
