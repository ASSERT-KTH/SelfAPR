[REPLACE]^private final Set changes ;^35^36^^^^35^36^[REPLACE] private final Set changes = Collections .synchronizedSet ( new LinkedHashSet (  )  ) ;^ [CLASS] ChangeSet  
[REPLACE]^String target = change.getEntry (  ) .getName (  ) ;^39^^^^^38^40^[REPLACE] addDeletion ( new Change ( pFilename )  ) ;^[METHOD] delete [TYPE] void [PARAMETER] String pFilename [CLASS] ChangeSet   [TYPE]  Set changes  [TYPE]  String pFilename  [TYPE]  boolean false  true 
[ADD]^^39^^^^^38^40^[ADD] addDeletion ( new Change ( pFilename )  ) ;^[METHOD] delete [TYPE] void [PARAMETER] String pFilename [CLASS] ChangeSet   [TYPE]  Set changes  [TYPE]  String pFilename  [TYPE]  boolean false  true 
[REPLACE]^changes .add ( pEntry , pInput )  ;^47^^^^^46^48^[REPLACE] changes.add ( new Change ( pEntry, pInput )  ) ;^[METHOD] add [TYPE] void [PARAMETER] ArchiveEntry pEntry InputStream pInput [CLASS] ChangeSet   [TYPE]  ArchiveEntry pEntry  [TYPE]  Set changes  [TYPE]  boolean false  true  [TYPE]  InputStream pInput 
[REPLACE]^return;^51^^^^^50^52^[REPLACE] return changes;^[METHOD] asSet [TYPE] Set [PARAMETER] [CLASS] ChangeSet   [TYPE]  Set changes  [TYPE]  boolean false  true 
[REPLACE]^ArchiveEntry entry = this;^56^^^^^55^88^[REPLACE] ArchiveEntry entry = null;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^while  (  ( entry = in.getNextEntry (  )  )  == true )  {^57^^^^^55^88^[REPLACE] while  (  ( entry = in.getNextEntry (  )  )  != null )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^57^58^^^^55^88^[ADD] while  (  ( entry = in.getNextEntry (  )  )  != null )  { boolean copy = true;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^if  ( change.type (  )   !=  Change.TYPE_ADD )  {^63^^^^^55^88^[REPLACE] if  ( change.type (  )  == Change.TYPE_ADD )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^copyStream ( change.getInput (  ) , out, change.getInput (  )  ) ;^64^^^^^55^88^[REPLACE] copyStream ( change.getInput (  ) , out, change.getEntry (  )  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REMOVE]^if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  {^64^^^^^55^88^[REMOVE] ^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^copyStream ( change.getEntry (  ) , out, change.getEntry (  )  ) ;^64^^^^^55^88^[REPLACE] copyStream ( change.getInput (  ) , out, change.getEntry (  )  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^copyStream ( change.getInput (  ) , out, change .getInput (  )   ) ;^64^^^^^55^88^[REPLACE] copyStream ( change.getInput (  ) , out, change.getEntry (  )  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^64^65^^^^55^88^[ADD] copyStream ( change.getInput (  ) , out, change.getEntry (  )  ) ; it.remove (  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^it .next (  )  ;^65^^^^^55^88^[REPLACE] it.remove (  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^if  ( change.type (  )  != Change.TYPE_DELETE && entry.getName (  )  != null )  {^68^69^^^^55^88^[REPLACE] if  ( change.type (  )  == Change.TYPE_DELETE && entry.getName (  )  != null )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REMOVE]^if  (  ( change.type (  )  )  ==  ( Change.TYPE_DELETE )  )  {     String target = change.targetFile (  ) ;     if  ( source.equals ( target )  )  {         return true;     }     return source.matches (  ( target + "/.*" )  ) ; }^68^^^^^55^88^[REMOVE] ^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  {^70^^^^^68^79^[REPLACE] if  ( entry.getName (  ) .equals ( change.targetFile (  )  )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^}  if  ( entry.getName (  ) .matches ( change.targetFile (  )   <=  "/.*" )  )  {^74^75^^^^68^79^[REPLACE] } else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^copy = true;^76^^^^^68^79^[REPLACE] copy = false;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^copy = true;^71^^^^^68^79^[REPLACE] copy = false;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^}  else {^74^75^^^^68^79^[REPLACE] } else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  {^70^^^^^55^88^[REPLACE] if  ( entry.getName (  ) .equals ( change.targetFile (  )  )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   &&  "/.*" )  )  {^74^75^^^^55^88^[REPLACE] } else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^copy = true;^76^^^^^74^78^[REPLACE] copy = false;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^copy = true;^76^^^^^55^88^[REPLACE] copy = false;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^copy = true;^71^^^^^55^88^[REPLACE] copy = false;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^71^^^^^55^88^[ADD] copy = false;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^}  else {^74^75^^^^55^88^[REPLACE] } else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^} else if  ( entry.getName (  ) .matches (^82^^^^^55^88^[REPLACE] if  ( copy )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REMOVE]^if  (  ( change.type (  )  )  ==  ( Change.TYPE_ADD )  )  {     copyStream ( change.getInput (  ) , out, change.getEntry (  )  ) ;     it.remove (  ) ; }^82^^^^^55^88^[REMOVE] ^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^if  ( isDeletedLater ( entry )  )  {^83^^^^^55^88^[REPLACE] if  ( !isDeletedLater ( entry )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^copyStream ( in, out, entry ) ;^83^84^85^^^55^88^[ADD] if  ( !isDeletedLater ( entry )  )  { copyStream ( in, out, entry ) ; }^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^if  ( !isDeletedLater ( entry )  )  { copyStream ( in, out, entry ) ;^84^^^^^55^88^[REPLACE] copyStream ( in, out, entry ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^84^^^^^55^88^[ADD] copyStream ( in, out, entry ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^if  (  entry.getName (  )  != null )  {^68^69^^^^55^88^[REPLACE] if  ( change.type (  )  == Change.TYPE_DELETE && entry.getName (  )  != null )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^}  if  ( entry.getName (  ) .matches ( change.targetFile (  )   ==  "/.*" )  )  {^74^75^^^^68^79^[REPLACE] } else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^}   copy = false;break;^74^75^76^77^78^68^79^[ADD] else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  { copy = false; break; }^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^} else if  ( entry.getName (  ) .matches ( change.targetFile (  )   &&  "/.*" )  )  {^74^75^^^^68^79^[REPLACE] } else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^76^77^^^^68^79^[ADD] copy = false; break;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^}   copy = false;break;^74^75^76^77^78^55^88^[ADD] else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  { copy = false; break; }^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^it.remove (  ) ;^71^72^^^^55^88^[ADD] copy = false; it.remove (  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^76^^^^^55^88^[ADD] copy = false;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^Change change =  ( Change )  it.hasNext (  ) ;^61^^^^^55^88^[REPLACE] Change change =  ( Change )  it.next (  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^71^72^^^^55^88^[ADD] copy = false; it.remove (  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^76^77^^^^55^88^[ADD] copy = false; break;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^boolean copy = false;^58^^^^^55^88^[REPLACE] boolean copy = true;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^for  ( Iterator it = changes .isEmpty (  )  ; it.hasNext (  ) ; )  {^60^^^^^55^88^[REPLACE] for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^60^61^^63^64^55^88^[ADD] for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  { Change change =  ( Change )  it.next (  ) ; if  ( change.type (  )  == Change.TYPE_ADD )  { copyStream ( change.getInput (  ) , out, change.getEntry (  )  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^61^^^^^55^88^[ADD] Change change =  ( Change )  it.next (  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^if  ( change.type (  )   ||  Change.TYPE_ADD )  {^63^^^^^55^88^[REPLACE] if  ( change.type (  )  == Change.TYPE_ADD )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REMOVE]^if  ( copy )  {     if  ( ! ( isDeletedLater ( entry )  )  )  {         copyStream ( in, out, entry ) ;     } }^63^^^^^55^88^[REMOVE] ^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^copyStream ( change .getEntry (  )  , out, change.getEntry (  )  ) ;^64^^^^^55^88^[REPLACE] copyStream ( change.getInput (  ) , out, change.getEntry (  )  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^64^^^^^55^88^[ADD] copyStream ( change.getInput (  ) , out, change.getEntry (  )  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^it.next (  ) ;^65^^^^^55^88^[REPLACE] it.remove (  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^68^69^70^71^72^55^88^[ADD] if  ( change.type (  )  == Change.TYPE_DELETE && entry.getName (  )  != null )  { if  ( entry.getName (  ) .equals ( change.targetFile (  )  )  )  { copy = false; it.remove (  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^}  if  ( entry.getName (  ) .matches ( change.targetFile (  )   &&  "/.*" )  )  {^74^75^^^^68^79^[REPLACE] } else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^}  if  ( entry.getName (  ) .matches ( change.Change (  )   ^  "/.*" )  )  {^74^75^^^^68^79^[REPLACE] } else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^76^^^^^68^79^[ADD] copy = false;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^83^84^85^^^55^88^[ADD] if  ( !isDeletedLater ( entry )  )  { copyStream ( in, out, entry ) ; }^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REMOVE]^if  ( target.matches (  ( source + "/.*" )  )  )  {     it.remove (  ) ; }^74^^^^^68^79^[REMOVE] ^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^71^72^^^^68^79^[ADD] copy = false; it.remove (  ) ;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[ADD]^^71^^^^^68^79^[ADD] copy = false;^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^if  ( entry.getName (  ) .equals ( change.type (  )  )  )  {^70^^^^^55^88^[REPLACE] if  ( entry.getName (  ) .equals ( change.targetFile (  )  )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^}  if  ( entry.getName (  ) .matches ( change.targetFile (  )   |  "/.*" )  )  {^74^75^^^^55^88^[REPLACE] } else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^}  if  ( entry.getName (  ) .matches ( change.targetFile (  )   <=  "/.*" )  )  {^74^75^^^^55^88^[REPLACE] } else if  ( entry.getName (  ) .matches ( change.targetFile (  )  + "/.*" )  )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REMOVE]^if  ( target.matches (  ( source + "/.*" )  )  )  {     it.remove (  ) ; }^74^^^^^55^88^[REMOVE] ^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^while  (  ( entry = in.getNextEntry (  )  )  != null )  { boolean copy = true; ;^57^^^^^55^88^[REPLACE] while  (  ( entry = in.getNextEntry (  )  )  != null )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^for  ( Iterator it = changes.isEmpty (  ) ; it.hasNext (  ) ; )  {^60^^^^^55^88^[REPLACE] for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] perform [TYPE] void [PARAMETER] ArchiveInputStream in ArchiveOutputStream out [CLASS] ChangeSet   [TYPE]  ArchiveInputStream in  [TYPE]  Set changes  [TYPE]  boolean copy  false  true  [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Change change  [TYPE]  ArchiveOutputStream out 
[REPLACE]^if  (  pChange .Change ( source )   != null )  {^91^92^^^^90^113^[REPLACE] if  ( Change.TYPE_DELETE != pChange.type (  ) || pChange.targetFile (  )  == null )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^return changes;^93^^^^^90^113^[REPLACE] return;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^String source = change.type (  ) ;^95^^^^^90^113^[REPLACE] String source = pChange.targetFile (  ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^if  ( changes.isEmpty (  )  )  {^97^^^^^90^113^[REPLACE] if  ( !changes.isEmpty (  )  )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[ADD]^^97^98^99^100^^90^113^[ADD] if  ( !changes.isEmpty (  )  )  { for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  { Change change =  ( Change )  it.next (  ) ; if  ( change.type (  )  == Change.TYPE_ADD^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^if  ( change.type (  )  != Change.TYPE_ADD && change.getEntry (  )  != null )  {^100^101^^^^90^113^[REPLACE] if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[ADD]^^100^101^102^^^90^113^[ADD] if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  { String target = change.getEntry (  ) .getName (  ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^if  ( target.equals ( target )  )  {^104^^^^^90^113^[REPLACE] if  ( source.equals ( target )  )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^}  else {^106^^^^^90^113^[REPLACE] } else if  ( target.matches ( source + "/.*" )  )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^it.next (  ) ;^107^^^^^90^113^[REPLACE] it.remove (  ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^it.next (  ) ;^105^^^^^90^113^[REPLACE] it.remove (  ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[ADD]^^105^^^^^90^113^[ADD] it.remove (  ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( source.matches ( source +target )  )  {^106^^^^^90^113^[REPLACE] } else if  ( target.matches ( source + "/.*" )  )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^it .next (  )  ;^107^^^^^90^113^[REPLACE] it.remove (  ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^String target = pChange.getEntry (  ) .getName (  ) ;^102^^^^^90^113^[REPLACE] String target = change.getEntry (  ) .getName (  ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^if  (target.equals ( target )  )  {^104^^^^^90^113^[REPLACE] if  ( source.equals ( target )  )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( target.matches (target + "/.*" )  )  {^106^^^^^90^113^[REPLACE] } else if  ( target.matches ( source + "/.*" )  )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[ADD]^}   it.remove (  ) ;^106^107^108^^^90^113^[ADD] else if  ( target.matches ( source + "/.*" )  )  { it.remove (  ) ; }^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^if  (  change.getEntry (  )  != null )  {^100^101^^^^90^113^[REPLACE] if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^if  (target.matches ( target )  )  {^104^^^^^90^113^[REPLACE] if  ( source.equals ( target )  )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( target.matches ( source  !=  "/.*" )  )  {^106^^^^^90^113^[REPLACE] } else if  ( target.matches ( source + "/.*" )  )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[ADD]^}^106^107^108^^^90^113^[ADD] else if  ( target.matches ( source + "/.*" )  )  { it.remove (  ) ; }^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^} else if  ( target.matches ( source +target )  )  {^106^^^^^90^113^[REPLACE] } else if  ( target.matches ( source + "/.*" )  )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[ADD]^^104^105^106^107^108^90^113^[ADD] if  ( source.equals ( target )  )  { it.remove (  ) ; } else if  ( target.matches ( source + "/.*" )  )  { it.remove (  ) ; }^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^it .next (  )  ;^105^^^^^90^113^[REPLACE] it.remove (  ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^} else if  ( target.matches ( target + "/.*" )  )  {^106^^^^^90^113^[REPLACE] } else if  ( target.matches ( source + "/.*" )  )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^Change change =  ( Change )  it.hasNext (  ) ;^99^^^^^90^113^[REPLACE] Change change =  ( Change )  it.next (  ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^for  ( Iterator it = changes.isEmpty (  ) ; it.hasNext (  ) ; )  {^98^^^^^90^113^[REPLACE] for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[ADD]^^102^^^^^90^113^[ADD] String target = change.getEntry (  ) .getName (  ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^if  ( change.type (  )  != Change.TYPE_ADD ) {^100^101^^^^90^113^[REPLACE] if  ( change.type (  )  == Change.TYPE_ADD && change.getEntry (  )  != null )  {^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( change.type (  )  )  ==  ( Change.TYPE_DELETE )  )  {     String target = change.targetFile (  ) ;     if  ( source.equals ( target )  )  {         return true;     }     return source.matches (  ( target + "/.*" )  ) ; }^100^^^^^90^113^[REMOVE] ^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[ADD]^it.remove (  ) ;it.remove (  ) ;^104^105^106^107^108^90^113^[ADD] if  ( source.equals ( target )  )  { it.remove (  ) ; } else if  ( target.matches ( source + "/.*" )  )  { it.remove (  ) ; }^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^String target = change.getInput (  ) .getName (  ) ;^102^^^^^90^113^[REPLACE] String target = change.getEntry (  ) .getName (  ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^Change change =  ( Change )  it .hasNext (  )  ;^99^^^^^90^113^[REPLACE] Change change =  ( Change )  it.next (  ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^changes.add ( change ) ;^112^^^^^90^113^[REPLACE] changes.add ( pChange ) ;^[METHOD] addDeletion [TYPE] void [PARAMETER] Change pChange [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  Set changes  [TYPE]  Change change  pChange  [TYPE]  String source  target  [TYPE]  boolean false  true 
[REPLACE]^String target = change.targetFile (  ) ;^116^^^^^115^133^[REPLACE] String source = entry.getName (  ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[ADD]^^116^^^^^115^133^[ADD] String source = entry.getName (  ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^if  ( changes.isEmpty (  )  )  {^118^^^^^115^133^[REPLACE] if  ( !changes.isEmpty (  )  )  {^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[ADD]^^118^119^120^121^122^115^133^[ADD] if  ( !changes.isEmpty (  )  )  { for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  { Change change =  ( Change )  it.next (  ) ; if  ( change.type (  )  == Change.TYPE_DELETE )  { String target = change.targetFile (  ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^if  ( change.type (  )   !=  Change.TYPE_DELETE )  {^121^^^^^115^133^[REPLACE] if  ( change.type (  )  == Change.TYPE_DELETE )  {^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^if  ( source.matches ( target )  )  {^124^^^^^115^133^[REPLACE] if  ( source.equals ( target )  )  {^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^return false;^125^^^^^115^133^[REPLACE] return true;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^return source.matches (source + "/.*" ) ;^128^^^^^115^133^[REPLACE] return source.matches ( target + "/.*" ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^String target = change.type (  ) ;^122^^^^^115^133^[REPLACE] String target = change.targetFile (  ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[ADD]^^124^125^126^^^115^133^[ADD] if  ( source.equals ( target )  )  { return true; }^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^for  ( Iterator it = changes.isEmpty (  ) ; it.hasNext (  ) ; )  {^119^^^^^115^133^[REPLACE] for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  {^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[ADD]^^119^120^121^122^^115^133^[ADD] for  ( Iterator it = changes.iterator (  ) ; it.hasNext (  ) ; )  { Change change =  ( Change )  it.next (  ) ; if  ( change.type (  )  == Change.TYPE_DELETE )  { String target = change.targetFile (  ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^if  ( change.type (  )   &&  Change.TYPE_DELETE )  {^121^^^^^115^133^[REPLACE] if  ( change.type (  )  == Change.TYPE_DELETE )  {^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^String target = change .Change ( source )  ;^122^^^^^115^133^[REPLACE] String target = change.targetFile (  ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[ADD]^^122^^^^^115^133^[ADD] String target = change.targetFile (  ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^return source.matches ( target +source ) ;^128^^^^^115^133^[REPLACE] return source.matches ( target + "/.*" ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^Change change =  ( Change )  it.hasNext (  ) ;^120^^^^^115^133^[REPLACE] Change change =  ( Change )  it.next (  ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^return source .matches (  )  ;^128^^^^^115^133^[REPLACE] return source.matches ( target + "/.*" ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^Change change =  ( Change )  it .hasNext (  )  ;^120^^^^^115^133^[REPLACE] Change change =  ( Change )  it.next (  ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[ADD]^return true;^124^125^126^^^115^133^[ADD] if  ( source.equals ( target )  )  { return true; }^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^if  ( source .getName (  )   )  {^124^^^^^115^133^[REPLACE] if  ( source.equals ( target )  )  {^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[ADD]^^120^^^^^115^133^[ADD] Change change =  ( Change )  it.next (  ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^String target = change .Change ( target )  ;^122^^^^^115^133^[REPLACE] String target = change.targetFile (  ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^return source.matches ( source + "/.*" ) ;^128^^^^^115^133^[REPLACE] return source.matches ( target + "/.*" ) ;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^return true;^132^^^^^115^133^[REPLACE] return false;^[METHOD] isDeletedLater [TYPE] boolean [PARAMETER] ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  Iterator it  [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  String source  target  [TYPE]  Change change  [TYPE]  boolean false  true 
[REPLACE]^out.closeArchiveEntry (  ) ;^137^^^^^135^140^[REPLACE] out.putArchiveEntry ( entry ) ;^[METHOD] copyStream [TYPE] void [PARAMETER] InputStream in ArchiveOutputStream out ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  boolean false  true  [TYPE]  InputStream in  [TYPE]  ArchiveOutputStream out 
[REPLACE]^it.remove (  ) ;^138^^^^^135^140^[REPLACE] IOUtils.copy ( in, out ) ;^[METHOD] copyStream [TYPE] void [PARAMETER] InputStream in ArchiveOutputStream out ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  boolean false  true  [TYPE]  InputStream in  [TYPE]  ArchiveOutputStream out 
[REMOVE]^if  ( !isDeletedLater ( entry )  )  { copyStream ( in, out, entry ) ;^138^^^^^135^140^[REMOVE] ^[METHOD] copyStream [TYPE] void [PARAMETER] InputStream in ArchiveOutputStream out ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  boolean false  true  [TYPE]  InputStream in  [TYPE]  ArchiveOutputStream out 
[REPLACE]^out.putArchiveEntry ( entry ) ;^139^^^^^135^140^[REPLACE] out.closeArchiveEntry (  ) ;^[METHOD] copyStream [TYPE] void [PARAMETER] InputStream in ArchiveOutputStream out ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  boolean false  true  [TYPE]  InputStream in  [TYPE]  ArchiveOutputStream out 
[ADD]^^139^^^^^135^140^[ADD] out.closeArchiveEntry (  ) ;^[METHOD] copyStream [TYPE] void [PARAMETER] InputStream in ArchiveOutputStream out ArchiveEntry entry [CLASS] ChangeSet   [TYPE]  ArchiveEntry entry  [TYPE]  Set changes  [TYPE]  boolean false  true  [TYPE]  InputStream in  [TYPE]  ArchiveOutputStream out 
