[REPLACE]^private static final int BYTE_MASK ;^28^^^^^^^[REPLACE] private static final int BYTE_MASK = 255;^ [CLASS] TarUtils  
[REPLACE]^long    result = 0 - 0;^40^^^^^39^66^[REPLACE] long    result = 0;^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[REPLACE]^boolean stillPadding = false;^41^^^^^39^66^[REPLACE] boolean stillPadding = true;^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[REPLACE]^int     end = offset + length - 3;^42^^^^^39^66^[REPLACE] int     end = offset + length;^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[REPLACE]^if  ( header[i]  ||  0 )  {^45^^^^^39^66^[REPLACE] if  ( header[i] == 0 )  {^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[REPLACE]^if  ( header[i] ==  ( byte )  ' ' ) {^49^^^^^39^66^[REPLACE] if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  {^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[REPLACE]^if  ( true )  {^50^^^^^39^66^[REPLACE] if  ( stillPadding )  {^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[ADD]^^50^51^52^^^39^66^[ADD] if  ( stillPadding )  { continue; }^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[REPLACE]^if  ( header[i]  ) {^54^^^^^39^66^[REPLACE] if  ( header[i] ==  ( byte )  ' ' )  {^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[ADD]^^54^55^56^^^39^66^[ADD] if  ( header[i] ==  ( byte )  ' ' )  { break; }^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[REPLACE]^if   (  value == 0  )   {  ;^50^^^^^39^66^[REPLACE] if  ( stillPadding )  {^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[REPLACE]^if  ( header[i]  ||   ( byte )  ' ' )  {^54^^^^^39^66^[REPLACE] if  ( header[i] ==  ( byte )  ' ' )  {^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[ADD]^break;^54^55^56^^^39^66^[ADD] if  ( header[i] ==  ( byte )  ' ' )  { break; }^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[REPLACE]^stillPadding = true;^59^^^^^39^66^[REPLACE] stillPadding = false;^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[REPLACE]^result =  ( result << 3 )    ( header[i] - '0' ) ;^61^^^^^39^66^[REPLACE] result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[REPLACE]^boolean stillPadding = true  ;^44^^^^^39^66^[REPLACE] for  ( int i = offset; i < end; ++i )  {^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[REPLACE]^return result;  ;^65^^^^^39^66^[REPLACE] return result;^[METHOD] parseOctal [TYPE] long [PARAMETER] byte[] header int offset int length [CLASS] TarUtils   [TYPE]  byte[] header  [TYPE]  boolean false  stillPadding  true  [TYPE]  int BYTE_MASK  end  i  length  offset  [TYPE]  long result 
[ADD]^^124^^^^^123^148^[ADD] int    idx = length - 1;^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[REPLACE]^buf[offset  idx] = 0;^126^^^^^123^148^[REPLACE] buf[offset + idx] = 0;^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[REPLACE]^buf[ (  ( offset + length )  - 1 ) ] =  (  ( byte )   ( ' ' )  )  ;^128^^^^^123^148^[REPLACE] buf[offset + idx] =  ( byte )  ' ';^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[REPLACE]^if  ( value  &&  0 )  {^131^^^^^123^148^[REPLACE] if  ( value == 0 )  {^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[ADD]^^137^^^^^131^141^[ADD] buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[ADD]^^138^^^^^131^141^[ADD] val = val >> 3;^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[REPLACE]^for  ( long val = val; idx >= 0 && val > 0; --idx )  {^135^^^^^131^141^[REPLACE] for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[REPLACE]^buf[offset  idx] =  ( byte )  '0';^132^^^^^123^148^[REPLACE] buf[offset + idx] =  ( byte )  '0';^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[REPLACE]^buf[ ( offset + idx ) ] =  (  ( byte )   ( ' ' )  )  ;^132^^^^^123^148^[REPLACE] buf[offset + idx] =  ( byte )  '0';^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[REPLACE]^buf[offset  idx] =  ( byte )   (  ( byte )  '0'   ( byte )   ( val & 7 )  ) ;^137^^^^^123^148^[REPLACE] buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[REPLACE]^val = val  ==  3 * 3;^138^^^^^123^148^[REPLACE] val = val >> 3;^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[REPLACE]^for  ( long val = val; idx >= 0 && val > 0; --idx )  {^135^^^^^123^148^[REPLACE] for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[ADD]^^144^^^^^123^148^[ADD] buf[offset + idx] =  ( byte )  ' ';^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
[REPLACE]^return offset + length - 1;^147^^^^^123^148^[REPLACE] return offset + length;^[METHOD] getOctalBytes [TYPE] int [PARAMETER] long value byte[] buf int offset int length [CLASS] TarUtils   [TYPE]  byte[] buf  [TYPE]  boolean false  true  [TYPE]  int BYTE_MASK  end  i  idx  length  offset  [TYPE]  long val  value 
