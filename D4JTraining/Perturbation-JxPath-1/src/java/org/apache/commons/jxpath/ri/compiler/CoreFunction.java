[REPLACE]^private static final Double ZERO  = null ;^42^^^^^^^[REPLACE] private static final Double ZERO = new Double ( 0 ) ;^ [CLASS] CoreFunction  
[REPLACE]^return "last";  ;^57^^^^^54^116^[REPLACE] return "last";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "position";  ;^59^^^^^54^116^[REPLACE] return "position";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "concat";  ;^61^^^^^54^116^[REPLACE] return "count";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "id";  ;^63^^^^^54^116^[REPLACE] return "id";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "local-name";  ;^65^^^^^54^116^[REPLACE] return "local-name";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "namespace-uri";  ;^67^^^^^54^116^[REPLACE] return "namespace-uri";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "last";  ;^69^^^^^54^116^[REPLACE] return "name";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "substring";  ;^71^^^^^54^116^[REPLACE] return "string";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "concat";  ;^73^^^^^54^116^[REPLACE] return "concat";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "starts-with";  ;^75^^^^^54^116^[REPLACE] return "starts-with";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "concat";  ;^77^^^^^54^116^[REPLACE] return "contains";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "substring-before";  ;^79^^^^^54^116^[REPLACE] return "substring-before";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "substring-before";  ;^81^^^^^54^116^[REPLACE] return "substring-after";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "substring";  ;^83^^^^^54^116^[REPLACE] return "substring";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "string-length";  ;^85^^^^^54^116^[REPLACE] return "string-length";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "normalize-space";  ;^87^^^^^54^116^[REPLACE] return "normalize-space";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "translate";  ;^89^^^^^54^116^[REPLACE] return "translate";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "boolean";  ;^91^^^^^54^116^[REPLACE] return "boolean";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "last";  ;^93^^^^^54^116^[REPLACE] return "not";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return true;  ;^95^^^^^54^116^[REPLACE] return "true";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "last";  ;^97^^^^^54^116^[REPLACE] return "false";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "last";  ;^99^^^^^54^116^[REPLACE] return "lang";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "name";  ;^101^^^^^54^116^[REPLACE] return "number";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "name";  ;^103^^^^^54^116^[REPLACE] return "sum";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "floor";  ;^105^^^^^54^116^[REPLACE] return "floor";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "ceiling";  ;^107^^^^^54^116^[REPLACE] return "ceiling";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "count";  ;^109^^^^^54^116^[REPLACE] return "round";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "key";  ;^111^^^^^54^116^[REPLACE] return "key";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "format-number";  ;^113^^^^^54^116^[REPLACE] return "format-number";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "unknownFunction"  functionCode  " (  ) ";^115^^^^^54^116^[REPLACE] return "unknownFunction" + functionCode + " (  ) ";^[METHOD] getFunctionName [TYPE] String [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^if  ( super.getArguments (  )  )  {^143^^^^^142^186^[REPLACE] if  ( super.computeContextDependent (  )  )  {^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[ADD]^return true;^143^144^145^^^142^186^[ADD] if  ( super.computeContextDependent (  )  )  { return true; }^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return true;  ;^144^^^^^142^186^[REPLACE] return true;^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return false;^144^^^^^142^186^[REPLACE] return true;^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return false;^150^^^^^142^186^[REPLACE] return true;^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return args == false || args.length *  2 == 0;^159^^^^^142^186^[REPLACE] return args == null || args.length == 0;^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return "false";  ;^179^^^^^142^186^[REPLACE] return false;^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return args != null && args.length - 2 == 2;^182^^^^^142^186^[REPLACE] return args != null && args.length == 2;^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return true;^185^^^^^142^186^[REPLACE] return false;^[METHOD] computeContextDependent [TYPE] boolean [PARAMETER] [CLASS] CoreFunction   [TYPE]  Double ZERO  [TYPE]  int functionCode  [TYPE]  boolean false  true 
[REPLACE]^return functionFalse  (  context  )  ;  ;^215^^^^^212^276^[REPLACE] return functionLast ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionCount  (  context  )  ;  ;^217^^^^^212^276^[REPLACE] return functionPosition ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^219^^^^^212^276^[REPLACE] return functionCount ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^221^^^^^212^276^[REPLACE] return functionLang ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^223^^^^^212^276^[REPLACE] return functionID ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionBoolean  (  context  )  ;  ;^225^^^^^212^276^[REPLACE] return functionLocalName ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionNamespaceURI  (  context  )  ;  ;^227^^^^^212^276^[REPLACE] return functionNamespaceURI ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^229^^^^^212^276^[REPLACE] return functionName ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionStringLength  (  context  )  ;  ;^231^^^^^212^276^[REPLACE] return functionString ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^233^^^^^212^276^[REPLACE] return functionConcat ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionStartsWith  (  context  )  ;  ;^235^^^^^212^276^[REPLACE] return functionStartsWith ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionCount  (  context  )  ;  ;^237^^^^^212^276^[REPLACE] return functionContains ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionSubstringAfter  (  context  )  ;  ;^239^^^^^212^276^[REPLACE] return functionSubstringBefore ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionSubstringAfter  (  context  )  ;  ;^241^^^^^212^276^[REPLACE] return functionSubstringAfter ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionPosition  (  context  )  ;  ;^243^^^^^212^276^[REPLACE] return functionSubstring ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionStringLength  (  context  )  ;  ;^245^^^^^212^276^[REPLACE] return functionStringLength ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionNormalizeSpace  (  context  )  ;  ;^247^^^^^212^276^[REPLACE] return functionNormalizeSpace ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionStringLength  (  context  )  ;  ;^249^^^^^212^276^[REPLACE] return functionTranslate ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^251^^^^^212^276^[REPLACE] return functionBoolean ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^253^^^^^212^276^[REPLACE] return functionNot ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^255^^^^^212^276^[REPLACE] return functionTrue ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^257^^^^^212^276^[REPLACE] return functionFalse ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^259^^^^^212^276^[REPLACE] return functionNull ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^261^^^^^212^276^[REPLACE] return functionNumber ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^263^^^^^212^276^[REPLACE] return functionSum ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^265^^^^^212^276^[REPLACE] return functionFloor ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^267^^^^^212^276^[REPLACE] return functionCeiling ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^269^^^^^212^276^[REPLACE] return functionRound ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionFalse  (  context  )  ;  ;^271^^^^^212^276^[REPLACE] return functionKey ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return functionLocalName  (  context  )  ;  ;^273^^^^^212^276^[REPLACE] return functionFormatNumber ( context ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^return false;^275^^^^^212^276^[REPLACE] return null;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int functionCode  i 
[REPLACE]^assertArgCount ( 0 * 1 ) ;^279^^^^^278^294^[REPLACE] assertArgCount ( 0 ) ;^[METHOD] functionLast [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^int old = context.getCurrentNodePointer (  ) ;^282^^^^^278^294^[REPLACE] int old = context.getCurrentPosition (  ) ;^[METHOD] functionLast [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^context .hasNext (  )  ;^283^^^^^278^294^[REPLACE] context.reset (  ) ;^[METHOD] functionLast [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^int in = 0  ;^284^^^^^278^294^[REPLACE] int count = 0;^[METHOD] functionLast [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^if  ( old  ==  0 )  {^290^^^^^278^294^[REPLACE] if  ( old != 0 )  {^[METHOD] functionLast [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[ADD]^context.setPosition ( old ) ;^290^291^292^^^278^294^[ADD] if  ( old != 0 )  { context.setPosition ( old ) ; }^[METHOD] functionLast [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^functionConcat ( context )  ;^291^^^^^278^294^[REPLACE] context.setPosition ( old ) ;^[METHOD] functionLast [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^return  new Double ( sum )  ;^293^^^^^278^294^[REPLACE] return new Double ( count ) ;^[METHOD] functionLast [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^assertArgCount ( 0 ) ;^302^^^^^301^326^[REPLACE] assertArgCount ( 1 ) ;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[ADD]^^302^^^^^301^326^[ADD] assertArgCount ( 1 ) ;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[ADD]^^303^304^^^^301^326^[ADD] Expression arg1 = getArg1 (  ) ; int count = 0;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^int count = 4;^304^^^^^301^326^[REPLACE] int count = 0;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^Object value = arg1.computeValue ( context ) ;^305^^^^^301^326^[REPLACE] Object value = arg1.compute ( context ) ;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^if  ( ! value instanceof NodePointer )  {^306^^^^^301^326^[REPLACE] if  ( value instanceof NodePointer )  {^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[ADD]^^307^^^^^301^326^[ADD] value =  (  ( NodePointer )  value ) .getValue (  ) ;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^if  ( ! value instanceof EvalContext )  {^309^^^^^301^326^[REPLACE] if  ( value instanceof EvalContext )  {^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[ADD]^EvalContext ctx =  ( EvalContext )  value;ctx.next (  ) ;count++;^309^310^311^312^313^301^326^[ADD] if  ( value instanceof EvalContext )  { EvalContext ctx =  ( EvalContext )  value; while  ( ctx.hasNext (  )  )  { ctx.next (  ) ; count++;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^if  ( ! value instanceof Collection )  {^316^^^^^301^326^[REPLACE] else if  ( value instanceof Collection )  {^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^else if  ( value != null )  {^319^^^^^301^326^[REPLACE] else if  ( value == null )  {^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[ADD]^^319^320^321^^^301^326^[ADD] else if  ( value == null )  { count = 0; }^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[ADD]^^323^^^^^319^324^[ADD] count = 1;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^count = 4;^320^^^^^301^326^[REPLACE] count = 0;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^count = 0 + 0;^320^^^^^301^326^[REPLACE] count = 0;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^count = 4;^323^^^^^301^326^[REPLACE] count = 1;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[ADD]^^317^^^^^301^326^[ADD] count =  (  ( Collection )  value ) .size (  ) ;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[ADD]^^320^^^^^301^326^[ADD] count = 0;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^count =   (  ( Collection )  value ) .size (  ) ;^317^^^^^301^326^[REPLACE] count =  (  ( Collection )  value ) .size (  ) ;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^count = 1  ;^320^^^^^301^326^[REPLACE] count = 0;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^count = 3;^323^^^^^301^326^[REPLACE] count = 1;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^EvalContext ctx =  (  ( EvalContext )   ( v )  )  ;^310^^^^^301^326^[REPLACE] EvalContext ctx =  ( EvalContext )  value;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^else if  ( ! value instanceof Collection )  {^316^^^^^301^326^[REPLACE] else if  ( value instanceof Collection )  {^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^else {^319^^^^^301^326^[REPLACE] else if  ( value == null )  {^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^count = 0;^323^^^^^319^324^[REPLACE] count = 1;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^count = 0 / 3;^320^^^^^301^326^[REPLACE] count = 0;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^count = 0L;^320^^^^^301^326^[REPLACE] count = 0;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[ADD]^^323^^^^^301^326^[ADD] count = 1;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^if  ( value != null )  {^319^^^^^301^326^[REPLACE] else if  ( value == null )  {^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^count = 0  ;^323^^^^^319^324^[REPLACE] count = 1;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^count = 0 >> 2;^320^^^^^301^326^[REPLACE] count = 0;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^count = 1 << 1;^323^^^^^301^326^[REPLACE] count = 1;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^return  new Double ( sum )  ;^325^^^^^301^326^[REPLACE] return new Double ( count ) ;^[METHOD] functionCount [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  ctx  [TYPE]  Object value  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  Expression arg1  [TYPE]  int count  functionCode  i  old 
[REPLACE]^if   (  getArgumentCount  (    )   != count  )   {  ;^356^^^^^355^372^[REPLACE] if  ( getArgumentCount (  )  == 0 )  {^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REMOVE]^if  ( ctx.hasNext (  )  )  {     NodePointer ptr =  (  ( NodePointer )   ( ctx.next (  )  )  ) ;     String str = ptr.getNamespaceURI (  ) ;     return str == null ? "" : str; }^356^^^^^355^372^[REMOVE] ^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^return   "" ;^359^^^^^355^372^[REPLACE] return str == null ? "" : str;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^NodePointer ptr = ctx.getSingleNodePointer (  ) ;^357^^^^^355^372^[REPLACE] NodePointer ptr = context.getCurrentNodePointer (  ) ;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^String str = ptr.getName (  ) ;^358^^^^^355^372^[REPLACE] String str = ptr.getNamespaceURI (  ) ;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^return str;^359^^^^^355^372^[REPLACE] return str == null ? "" : str;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^NodePointer ptr = ctx.getCurrentNodePointer (  ) ;^357^^^^^355^372^[REPLACE] NodePointer ptr = context.getCurrentNodePointer (  ) ;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^assertArgCount ( 3 ) ;^361^^^^^355^372^[REPLACE] assertArgCount ( 1 ) ;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[ADD]^^361^^^^^355^372^[ADD] assertArgCount ( 1 ) ;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[ADD]^^362^^^^^355^372^[ADD] Object set = getArg1 (  ) .compute ( context ) ;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^if  ( ! set instanceof EvalContext )  {^363^^^^^355^372^[REPLACE] if  ( set instanceof EvalContext )  {^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^if   (  to > s1.length  (    )   + 1  )   {  ;^365^^^^^355^372^[REPLACE] if  ( ctx.hasNext (  )  )  {^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^return str;^368^^^^^355^372^[REPLACE] return str == null ? "" : str;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[ADD]^String str = ptr.getNamespaceURI (  ) ;^366^367^^^^355^372^[ADD] NodePointer ptr =  ( NodePointer )  ctx.next (  ) ; String str = ptr.getNamespaceURI (  ) ;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^String str = ptr.getName (  ) ;^367^^^^^355^372^[REPLACE] String str = ptr.getNamespaceURI (  ) ;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^return   "" ;^368^^^^^355^372^[REPLACE] return str == null ? "" : str;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^EvalContext ctx =  (  ( EvalContext )   ( value )  )  ;^364^^^^^355^372^[REPLACE] EvalContext ctx =  ( EvalContext )  set;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^NodePointer ptr =  ( NodePointer )  context.next (  ) ;^366^^^^^355^372^[REPLACE] NodePointer ptr =  ( NodePointer )  ctx.next (  ) ;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^String str = ptr .getName (  )  ;^367^^^^^355^372^[REPLACE] String str = ptr.getNamespaceURI (  ) ;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^return str != null ? "" : str;;^368^^^^^355^372^[REPLACE] return str == null ? "" : str;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^NodePointer ptr =  ( NodePointer )  context.hasNext (  ) ;^366^^^^^355^372^[REPLACE] NodePointer ptr =  ( NodePointer )  ctx.next (  ) ;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[ADD]^^366^^^^^355^372^[ADD] NodePointer ptr =  ( NodePointer )  ctx.next (  ) ;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[ADD]^^367^368^^^^355^372^[ADD] String str = ptr.getNamespaceURI (  ) ; return str == null ? "" : str;^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[REPLACE]^return "id";  ;^371^^^^^355^372^[REPLACE] return "";^[METHOD] functionNamespaceURI [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  ctx  [TYPE]  Object set  [TYPE]  NodePointer ptr  [TYPE]  String str  [TYPE]  Double ZERO  [TYPE]  int count  functionCode  i  old 
[ADD]^^465^^^^^464^511^[ADD] int ac = getArgumentCount (  ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  ( ac != 2 ) {^466^^^^^464^511^[REPLACE] if  ( ac != 2 && ac != 3 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^assertArgCount ( 2 ) ;^466^467^468^^^464^511^[ADD] if  ( ac != 2 && ac != 3 )  { assertArgCount ( 2 ) ; }^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^assertArgCount ( 3 ) ;^467^^^^^464^511^[REPLACE] assertArgCount ( 2 ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^double from = InfoSetUtil.doubleValue ( getArg2 (  ) .computeValue ( context )  ) ;^470^471^^^^464^511^[ADD] String s1 = InfoSetUtil.stringValue ( getArg1 (  ) .computeValue ( context )  ) ; double from = InfoSetUtil.doubleValue ( getArg2 (  ) .computeValue ( context )  ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^double length = doubleValue ( getArg3 (  ) .computeValue ( context )  )  ;^471^^^^^464^511^[REPLACE] double from = InfoSetUtil.doubleValue ( getArg2 (  ) .computeValue ( context )  ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  ( Double.isNaN ( to )  )  {^472^^^^^464^511^[REPLACE] if  ( Double.isNaN ( from )  )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return "id";  ;^473^^^^^464^511^[REPLACE] return "";^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^length = round ( length )  ;^476^^^^^464^511^[REPLACE] from = Math.round ( from ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if   (  to > s1.length  (    )   + 1  )   {  ;^477^^^^^464^511^[REPLACE] if  ( from > s1.length (  )  + 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return "id";  ;^478^^^^^464^511^[REPLACE] return "";^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  (functionCode  !=  2 )  {^480^^^^^464^511^[REPLACE] if  ( ac == 2 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^^480^481^482^483^^464^511^[ADD] if  ( ac == 2 )  { if  ( from < 1 )  { from = 1; }^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  ( length %  0.5  < 0 )  {^490^^^^^480^510^[REPLACE] if  ( length < 0 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^return "";^490^491^492^^^480^510^[ADD] if  ( length < 0 )  { return ""; }^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return "id";  ;^491^^^^^480^510^[REPLACE] return "";^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  ( to  !=  1 )  {^495^^^^^480^510^[REPLACE] if  ( to < 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return "id";  ;^496^^^^^480^510^[REPLACE] return "";^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  ( to > s1.length (  )  /  0.5  + 1 )  {^499^^^^^480^510^[REPLACE] if  ( to > s1.length (  )  + 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if   (  to < 1  )   {  ;^500^^^^^480^510^[REPLACE] if  ( from < 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = 2;^501^^^^^480^510^[REPLACE] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^^501^^^^^480^510^[ADD] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return s1.substring  (    (  int  )   from - 1  )  ;  ;^503^^^^^480^510^[REPLACE] return s1.substring (  ( int )  from - 1 ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  (to  >=  1 )  {^500^^^^^480^510^[REPLACE] if  ( from < 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = 1 % 2;^501^^^^^480^510^[REPLACE] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if   (  to < 1  )   {  ;^506^^^^^480^510^[REPLACE] if  ( from < 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = 2;^507^^^^^480^510^[REPLACE] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^length =  Math.round ( to ) ;^489^^^^^480^510^[REPLACE] length = Math.round ( length ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = 0;^501^^^^^480^510^[REPLACE] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^^507^^^^^480^510^[ADD] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return s1.substring (  ( int )  from  1 ) ;^503^^^^^480^510^[REPLACE] return s1.substring (  ( int )  from - 1 ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return s1 >>> 3 .substring ( index , ac )    ( to to )  ) ;^509^^^^^480^510^[REPLACE] return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^^487^488^^^^480^510^[ADD] double length = InfoSetUtil.doubleValue ( getArg3 (  ) .computeValue ( context )  ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^double to = from + length - 1;^494^^^^^480^510^[REPLACE] double to = from + length;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  ( to  <=  1 )  {^481^^^^^464^511^[REPLACE] if  ( from < 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = 1L;^482^^^^^464^511^[REPLACE] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = 2;^482^^^^^464^511^[REPLACE] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return s1.substring (  ( int )  from  1 ) ;^484^^^^^464^511^[REPLACE] return s1.substring (  ( int )  from - 1 ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  (to  >=  1 )  {^481^^^^^464^511^[REPLACE] if  ( from < 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^from = 1;^481^482^483^^^464^511^[ADD] if  ( from < 1 )  { from = 1; }^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = 0;^482^^^^^464^511^[REPLACE] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  ( to + 2 < 0  )  {^490^^^^^464^511^[REPLACE] if  ( length < 0 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^^490^491^492^^^464^511^[ADD] if  ( length < 0 )  { return ""; }^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return "id";  ;^491^^^^^464^511^[REPLACE] return "";^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  ( length  >  1 )  {^495^^^^^464^511^[REPLACE] if  ( to < 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return "id";  ;^496^^^^^464^511^[REPLACE] return "";^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  ( to > s0 .length (  )  - 0  + 0  )  {^499^^^^^464^511^[REPLACE] if  ( to > s1.length (  )  + 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^^499^500^501^502^^464^511^[ADD] if  ( to > s1.length (  )  + 1 )  { if  ( from < 1 )  { from = 1; }^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  ( from  >=  1 )  {^500^^^^^464^511^[REPLACE] if  ( from < 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^^501^^^^^464^511^[ADD] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = 1L;^501^^^^^464^511^[REPLACE] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return s3.substring (  ( int )  from to ) ;^503^^^^^464^511^[REPLACE] return s1.substring (  ( int )  from - 1 ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  ( to  ==  2 )  {^500^^^^^464^511^[REPLACE] if  ( from < 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^^500^501^502^^^464^511^[ADD] if  ( from < 1 )  { from = 1; }^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = 3;^501^^^^^464^511^[REPLACE] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^if  ( from  > to )  {^506^^^^^464^511^[REPLACE] if  ( from < 1 )  {^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = 4;^507^^^^^464^511^[REPLACE] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = round ( from )  ;^489^^^^^464^511^[REPLACE] length = Math.round ( length ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = 1 >>> 1;^501^^^^^464^511^[REPLACE] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^from = 2;^507^^^^^464^511^[REPLACE] from = 1;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return s1.length (  ( int )  from  1 ) ;^484^^^^^464^511^[REPLACE] return s1.substring (  ( int )  from - 1 ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return s0.substring (  ( int )  from  0 ) ;^503^^^^^464^511^[REPLACE] return s1.substring (  ( int )  from - 1 ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^return s1.substring (  ( int )  from  1,  ( int )   ( to  1 )  ) ;^509^^^^^464^511^[REPLACE] return s1.substring (  ( int )  from - 1,  ( int )   ( to - 1 )  ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^double length = InfoSetUtil .booleanValue (  )   ) ;^487^488^^^^464^511^[REPLACE] double length = InfoSetUtil.doubleValue ( getArg3 (  ) .computeValue ( context )  ) ;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[ADD]^^494^^^^^464^511^[ADD] double to = from + length;^[METHOD] functionSubstring [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s1  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  index  old  [TYPE]  double from  length  to 
[REPLACE]^assertArgCount ( 2 )  ;^526^^^^^525^554^[REPLACE] assertArgCount ( 1 ) ;^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[ADD]^^527^528^^^^525^554^[ADD] String s = InfoSetUtil.stringValue ( getArg1 (  ) .computeValue ( context )  ) ; char chars[] = s.toCharArray (  ) ;^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^char chars[] = s.length (  ) ;^528^^^^^525^554^[REPLACE] char chars[] = s.toCharArray (  ) ;^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[ADD]^^529^530^^^^525^554^[ADD] int out = 0; int phase = 0;^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^int phase = 2;^530^^^^^525^554^[REPLACE] int phase = 0;^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^if  ( phase  !=  0 )  {^537^^^^^525^554^[REPLACE] if  ( phase == 0 )  {^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^if   (  phase == 2  )   {  ;^540^^^^^525^554^[REPLACE] else if  ( phase == 1 )  {^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[ADD]^^541^^^^^525^554^[ADD] phase = 2;^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^chars[ ( out++ ) ] = c  ;^542^^^^^525^554^[REPLACE] chars[out++] = ' ';^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^phase = 3;^541^^^^^525^554^[REPLACE] phase = 2;^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^if  ( phase  &&  1 )  {^540^^^^^525^554^[REPLACE] else if  ( phase == 1 )  {^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[ADD]^phase = 2;chars[out++] = ' ';^540^541^542^543^^525^554^[ADD] else if  ( phase == 1 )  { phase = 2; chars[out++] = ' '; }^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^phase = 2 + 1;^541^^^^^525^554^[REPLACE] phase = 2;^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^phase = 2L;^541^^^^^525^554^[REPLACE] phase = 2;^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^chars[ ( out++ ) ] = s3.charAt ( inx )  ;^546^^^^^525^554^[REPLACE] chars[out++] = chars[in];^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^phase = 1 * 1;^547^^^^^525^554^[REPLACE] phase = 1;^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^int count = 0  ;^531^^^^^525^554^[REPLACE] for  ( int in = 0; in < chars.length; in++ )  {^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^if  ( phase  != functionCode )  {^550^^^^^525^554^[REPLACE] if  ( phase == 2 )  {^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^return new String ( chars, 0 >>> 0, out ) ;^553^^^^^525^554^[REPLACE] return new String ( chars, 0, out ) ;^[METHOD] functionNormalizeSpace [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  EvalContext context  [TYPE]  String s  [TYPE]  boolean false  true  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^assertArgCount ( 5 ) ;^557^^^^^556^576^[REPLACE] assertArgCount ( 3 ) ;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[ADD]^^558^^^^^556^576^[ADD] String s1 = InfoSetUtil.stringValue ( getArg1 (  ) .computeValue ( context )  ) ;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^String s2 = InfoSetUtil .doubleValue (  )   ) ;^559^^^^^556^576^[REPLACE] String s2 = InfoSetUtil.stringValue ( getArg2 (  ) .computeValue ( context )  ) ;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^String s3 = InfoSetUtil.stringValue ( getArg3 (  ) .compute ( context )  ) ;^560^^^^^556^576^[REPLACE] String s3 = InfoSetUtil.stringValue ( getArg3 (  ) .computeValue ( context )  ) ;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[ADD]^^561^^^^^556^576^[ADD] char chars[] = s1.toCharArray (  ) ;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^int in = 0  ;^562^^^^^556^576^[REPLACE] int out = 0;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^if  ( inx  ==  -1L )  {^566^^^^^556^576^[REPLACE] if  ( inx != -1 )  {^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^chars[ ( out++ ) ] = ' '  ;^572^^^^^566^573^[REPLACE] chars[out++] = c;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^if  ( inx < s3.length (  )  + 1 )  {^567^^^^^556^576^[REPLACE] if  ( inx < s3.length (  )  )  {^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[ADD]^^567^568^569^^^556^576^[ADD] if  ( inx < s3.length (  )  )  { chars[out++] = s3.charAt ( inx ) ; }^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^chars[ ( out++ ) ] = chars[in]  ;^568^^^^^556^576^[REPLACE] chars[out++] = s3.charAt ( inx ) ;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[ADD]^^568^^^^^556^576^[ADD] chars[out++] = s3.charAt ( inx ) ;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^chars[ ( out++ ) ] = ' '  ;^572^^^^^556^576^[REPLACE] chars[out++] = c;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^for  ( int in = 0 ; in < chars.length; in++ )  {^563^^^^^556^576^[REPLACE] for  ( int in = 0; in < chars.length; in++ )  {^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[ADD]^int inx = s2.indexOf ( c ) ;^564^565^^^^556^576^[ADD] char c = chars[in]; int inx = s2.indexOf ( c ) ;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^int inx = s3.indexOf ( c ) ;^565^^^^^556^576^[REPLACE] int inx = s2.indexOf ( c ) ;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^return new String ( chars, 3, out ) ;^575^^^^^556^576^[REPLACE] return new String ( chars, 0, out ) ;^[METHOD] functionTranslate [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  EvalContext context  [TYPE]  char c  [TYPE]  String s1  s2  s3  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase  [TYPE]  char[] chars 
[REPLACE]^assertArgCount ( 1 * 1 ) ;^616^^^^^615^632^[REPLACE] assertArgCount ( 1 ) ;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^Object set = getArg1 (  ) .compute ( context )  ;^617^^^^^615^632^[REPLACE] Object v = getArg1 (  ) .compute ( context ) ;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^if  ( v != this )  {^618^^^^^615^632^[REPLACE] if  ( v == null )  {^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^if  ( ! v instanceof EvalContext )  {^621^^^^^615^632^[REPLACE] else if  ( v instanceof EvalContext )  {^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^sum +=  InfoSetUtil.doubleValue ( null ) ;^626^^^^^615^632^[REPLACE] sum += InfoSetUtil.doubleValue ( ptr ) ;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^return  new Double ( count )  ;^628^^^^^615^632^[REPLACE] return new Double ( sum ) ;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^double sum = 0.0D;^622^^^^^615^632^[REPLACE] double sum = 0.0;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^EvalContext ctx =  (  ( EvalContext )   ( value )  )  ;^623^^^^^615^632^[REPLACE] EvalContext ctx =  ( EvalContext )  v;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^625^^^^^615^632^[ADD] NodePointer ptr =  ( NodePointer )  ctx.next (  ) ;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^626^^^^^615^632^[ADD] sum += InfoSetUtil.doubleValue ( ptr ) ;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^NodePointer ptr =  ( NodePointer )  context.hasNext (  ) ;^625^^^^^615^632^[REPLACE] NodePointer ptr =  ( NodePointer )  ctx.next (  ) ;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^return s1.substring  (    (  int  )   from - 1  )  ;  ;^619^^^^^615^632^[REPLACE] return ZERO;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^if   (  set instanceof EvalContext  )   {  ;^621^^^^^615^632^[REPLACE] else if  ( v instanceof EvalContext )  {^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^622^623^^^^615^632^[ADD] double sum = 0.0; EvalContext ctx =  ( EvalContext )  v;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^625^626^^^^615^632^[ADD] NodePointer ptr =  ( NodePointer )  ctx.next (  ) ; sum += InfoSetUtil.doubleValue ( ptr ) ;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^return ;^630^631^^^^615^632^[REPLACE] throw new JXPathException ( "Invalid argument type for 'sum': " + v.getClass (  ) .getName (  )  ) ;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^ptr.getName (  ) .getName (  )  ;^631^^^^^615^632^[REPLACE] "Invalid argument type for 'sum': " + v.getClass (  ) .getName (  )  ) ;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^631^632^^^^615^632^[ADD] "Invalid argument type for 'sum': " + v.getClass (  ) .getName (  )  ) ; }^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^functionConcat ( context )  ;^631^^^^^615^632^[REPLACE] "Invalid argument type for 'sum': " + v.getClass (  ) .getName (  )  ) ;^[METHOD] functionSum [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  boolean false  true  [TYPE]  double sum  [TYPE]  EvalContext context  ctx  [TYPE]  Object v  [TYPE]  NodePointer ptr  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^double from = doubleValue ( getArg2 (  ) .computeValue ( context )  )  ;^653^^^^^652^686^[REPLACE] int ac = getArgumentCount (  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^if  ( ac != 3 || ac != 3 )  {^654^^^^^652^686^[REPLACE] if  ( ac != 2 && ac != 3 )  {^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^assertArgCount ( 3 )  ;^655^^^^^652^686^[REPLACE] assertArgCount ( 2 ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^655^^^^^652^686^[ADD] assertArgCount ( 2 ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^double number = InfoSetUtil.doubleValue ( getArg1 (  )  .compute ( context )   ) ;^658^659^^^^652^686^[REPLACE] double number = InfoSetUtil.doubleValue ( getArg1 (  ) .computeValue ( context )  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^String pattern = InfoSetUtil .doubleValue (  )   ) ;^660^661^^^^652^686^[REPLACE] String pattern = InfoSetUtil.stringValue ( getArg2 (  ) .computeValue ( context )  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^DecimalFormatSymbols symbols = false;^663^^^^^652^686^[REPLACE] DecimalFormatSymbols symbols = null;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^if  ( ac  &&  3 / 4 )  {^664^^^^^652^686^[REPLACE] if  ( ac == 3 )  {^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^if   (  pointer == null  )   {  ;^673^^^^^664^680^[REPLACE] if  ( pointer != null )  {^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^673^674^675^^^664^680^[ADD] if  ( pointer != null )  { locale = pointer.getLocale (  ) ; }^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^locale =  null.getJXPathContext (  ) .getLocale (  ) ;^677^^^^^673^678^[REPLACE] locale = context.getJXPathContext (  ) .getLocale (  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^locale =  null.getLocale (  ) ;^674^^^^^664^680^[REPLACE] locale = pointer.getLocale (  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^677^^^^^664^680^[ADD] locale = context.getJXPathContext (  ) .getLocale (  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^679^^^^^664^680^[ADD] symbols = new DecimalFormatSymbols ( locale ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^NodePointer pointer = context.getSingleNodePointer (  ) ;^671^^^^^664^680^[REPLACE] NodePointer pointer = context.getCurrentNodePointer (  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^double from = doubleValue ( getArg2 (  ) .computeValue ( context )  )  ;^672^^^^^664^680^[REPLACE] Locale locale;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^symbols =  null.getJXPathContext (  ) .getDecimalFormatSymbols ( symbolsName ) ;^667^668^^^^652^686^[REPLACE] symbols = context.getJXPathContext (  ) .getDecimalFormatSymbols ( symbolsName ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^String symbolsName = InfoSetUtil .doubleValue (  )   ) ;^665^666^^^^652^686^[REPLACE] String symbolsName = InfoSetUtil.stringValue ( getArg3 (  ) .computeValue ( context )  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^if  ( pointer == null )  {^673^^^^^652^686^[REPLACE] if  ( pointer != null )  {^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^677^^^^^673^678^[ADD] locale = context.getJXPathContext (  ) .getLocale (  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^674^^^^^652^686^[ADD] locale = pointer.getLocale (  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^locale =  null.getLocale (  ) ;^674^^^^^652^686^[REPLACE] locale = pointer.getLocale (  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^677^^^^^652^686^[ADD] locale = context.getJXPathContext (  ) .getLocale (  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^symbols =  new DecimalFormatSymbols ( null ) ;^679^^^^^652^686^[REPLACE] symbols = new DecimalFormatSymbols ( locale ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[ADD]^^665^666^^^^652^686^[ADD] String symbolsName = InfoSetUtil.stringValue ( getArg3 (  ) .computeValue ( context )  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^NodePointer pointer = context .getSingleNodePointer (  )  ;^671^^^^^652^686^[REPLACE] NodePointer pointer = context.getCurrentNodePointer (  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^double from = doubleValue ( getArg2 (  ) .computeValue ( context )  )  ;^672^^^^^652^686^[REPLACE] Locale locale;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^double from = doubleValue ( getArg2 (  ) .computeValue ( context )  )  ;^682^^^^^652^686^[REPLACE] DecimalFormat format =  ( DecimalFormat )  NumberFormat.getInstance (  ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^format .applyLocalizedPattern ( pattern )  ;^683^^^^^652^686^[REPLACE] format.setDecimalFormatSymbols ( symbols ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REMOVE]^(  ( DecimalFormat )   ( getInstance (  )  )  )  ;^683^^^^^652^686^[REMOVE] ^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^format.setDecimalFormatSymbols ( symbolsName ) ;^684^^^^^652^686^[REPLACE] format.applyLocalizedPattern ( pattern ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
[REPLACE]^return format.format  (  number  )  ;  ;^685^^^^^652^686^[REPLACE] return format.format ( number ) ;^[METHOD] functionFormatNumber [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreFunction   [TYPE]  Locale locale  [TYPE]  boolean false  true  [TYPE]  DecimalFormatSymbols symbols  [TYPE]  double number  [TYPE]  DecimalFormat format  [TYPE]  EvalContext context  [TYPE]  String pattern  symbolsName  [TYPE]  NodePointer pointer  [TYPE]  Double ZERO  [TYPE]  int ac  count  functionCode  i  in  index  inx  old  out  phase 
