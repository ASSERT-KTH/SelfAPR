[REPLACE]^private String propertyName ;^30^^^^^^^[REPLACE] private String propertyName = "*";^ [CLASS] NullPropertyPointer  
[REPLACE]^private boolean byNameAttribute ;^31^^^^^^^[REPLACE] private boolean byNameAttribute = false;^ [CLASS] NullPropertyPointer  
[REPLACE]^if  ( parent != null || parent.isContainer (  )  )  {^79^^^^^78^101^[REPLACE] if  ( parent == null || parent.isContainer (  )  )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[ADD]^^79^80^81^82^83^78^101^[ADD] if  ( parent == null || parent.isContainer (  )  )  { throw new JXPathInvalidAccessException ( "Cannot set property " + asPath (  ) + ", the target object is null" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[REPLACE]^else if  ( ! parent instanceof PropertyOwnerPointer ) {^85^86^87^^^78^101^[REPLACE] else if  ( parent instanceof PropertyOwnerPointer && (  ( PropertyOwnerPointer )  parent ) . isDynamicPropertyDeclarationSupported (  )  ) {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[ADD]^^96^97^98^^^85^100^[ADD] throw new JXPathInvalidAccessException ( "Cannot set property " + asPath (  )^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[ADD]^^98^99^^^^85^100^[ADD] + asPath (  ) + ", path does not match a changeable location" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[REPLACE]^PropertyPointer propertyPointer = (  ( PropertyOwnerPointer )  parent ) .getImmediateParentPointer (  ) ;^90^91^^^^85^100^[REPLACE] PropertyPointer propertyPointer = (  ( PropertyOwnerPointer )  parent ) .getPropertyPointer (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[REPLACE]^PropertyPointer propertyPointer = (  ( PropertyOwnerPointer )  parent ) .getImmediateParentPointer (  ) ;^90^91^^^^78^101^[REPLACE] PropertyPointer propertyPointer = (  ( PropertyOwnerPointer )  parent ) .getPropertyPointer (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[REPLACE]^return ;^96^97^98^99^^78^101^[REPLACE] throw new JXPathInvalidAccessException ( "Cannot set property " + asPath (  ) + ", path does not match a changeable location" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[REPLACE]^return ;^80^81^82^83^^78^101^[REPLACE] throw new JXPathInvalidAccessException ( "Cannot set property " + asPath (  ) + ", the target object is null" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[ADD]^^82^83^^^^78^101^[ADD] + asPath (  ) + ", the target object is null" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[REPLACE]^if  ( ! parent instanceof PropertyOwnerPointer && (  ( PropertyOwnerPointer )  parent ) . isDynamicPropertyDeclarationSupported (  )  ) {^85^86^87^^^78^101^[REPLACE] else if  ( parent instanceof PropertyOwnerPointer && (  ( PropertyOwnerPointer )  parent ) . isDynamicPropertyDeclarationSupported (  )  ) {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[ADD]^^80^81^82^^^78^101^[ADD] throw new JXPathInvalidAccessException ( "Cannot set property " + asPath (  )^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[REPLACE]^throw new JXPathInvalidAccessException (  (  ( "Cannot set property " +  ( asPath (  )  )  )  + ", the target object is null" )  )  ;^96^97^98^99^^78^101^[REPLACE] throw new JXPathInvalidAccessException ( "Cannot set property " + asPath (  ) + ", path does not match a changeable location" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] NullPropertyPointer   [TYPE]  Object value  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  PropertyPointer propertyPointer 
[REPLACE]^NodePointer newParent = parent .createPath ( context , this )  ;^104^^^^^103^128^[REPLACE] NodePointer newParent = parent.createPath ( context ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] NullPropertyPointer   [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  NodePointer newParent  [TYPE]  JXPathContext context  [TYPE]  PropertyOwnerPointer pop 
[REPLACE]^else if   (  parent instanceof PropertyOwnerPointer &&  (    (  PropertyOwnerPointer  )   parent  )  .  ;^105^^^^^103^128^[REPLACE] if  ( isAttribute (  )  )  {^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] NullPropertyPointer   [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  NodePointer newParent  [TYPE]  JXPathContext context  [TYPE]  PropertyOwnerPointer pop 
[REPLACE]^if  ( ! newParent instanceof PropertyOwnerPointer )  {^122^^^^^105^127^[REPLACE] if  ( newParent instanceof PropertyOwnerPointer )  {^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] NullPropertyPointer   [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  NodePointer newParent  [TYPE]  JXPathContext context  [TYPE]  PropertyOwnerPointer pop 
[REPLACE]^newParent =  null.getPropertyPointer (  ) ;^124^^^^^105^127^[REPLACE] newParent = pop.getPropertyPointer (  ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] NullPropertyPointer   [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  NodePointer newParent  [TYPE]  JXPathContext context  [TYPE]  PropertyOwnerPointer pop 
[REPLACE]^PropertyPointer propertyPointer =  (  ( PropertyOwnerPointer )   ( parent )  ) .getPropertyPointer (  )  ;^123^^^^^105^127^[REPLACE] PropertyOwnerPointer pop =  ( PropertyOwnerPointer )  newParent;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] NullPropertyPointer   [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  NodePointer newParent  [TYPE]  JXPathContext context  [TYPE]  PropertyOwnerPointer pop 
[REPLACE]^return newParent.createChild  (  context, getName  (    )  , index, value  )  ;  ;^126^^^^^105^127^[REPLACE] return newParent.createChild ( context, getName (  ) , getIndex (  )  ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] NullPropertyPointer   [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  NodePointer newParent  [TYPE]  JXPathContext context  [TYPE]  PropertyOwnerPointer pop 
[REPLACE]^return newParent.createChild ( context, getName (  )  ) ;^106^^^^^103^128^[REPLACE] return newParent.createAttribute ( context, getName (  )  ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] NullPropertyPointer   [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  NodePointer newParent  [TYPE]  JXPathContext context  [TYPE]  PropertyOwnerPointer pop 
[REPLACE]^if  ( ! newParent instanceof PropertyOwnerPointer )  {^122^^^^^103^128^[REPLACE] if  ( newParent instanceof PropertyOwnerPointer )  {^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] NullPropertyPointer   [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  NodePointer newParent  [TYPE]  JXPathContext context  [TYPE]  PropertyOwnerPointer pop 
[REPLACE]^newParent =  null.getPropertyPointer (  ) ;^124^^^^^103^128^[REPLACE] newParent = pop.getPropertyPointer (  ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] NullPropertyPointer   [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  NodePointer newParent  [TYPE]  JXPathContext context  [TYPE]  PropertyOwnerPointer pop 
[REPLACE]^PropertyPointer propertyPointer =  (  ( PropertyOwnerPointer )   ( parent )  ) .getPropertyPointer (  )  ;^123^^^^^103^128^[REPLACE] PropertyOwnerPointer pop =  ( PropertyOwnerPointer )  newParent;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] NullPropertyPointer   [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  NodePointer newParent  [TYPE]  JXPathContext context  [TYPE]  PropertyOwnerPointer pop 
[REPLACE]^return newParent.createAttribute  (  context, getName  (    )    )  ;  ;^106^^^^^103^128^[REPLACE] return newParent.createAttribute ( context, getName (  )  ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] NullPropertyPointer   [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  NodePointer newParent  [TYPE]  JXPathContext context  [TYPE]  PropertyOwnerPointer pop 
[REPLACE]^return newParent.createChild  (  context, getName  (    )  , index, value  )  ;  ;^126^^^^^103^128^[REPLACE] return newParent.createChild ( context, getName (  ) , getIndex (  )  ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] NullPropertyPointer   [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String propertyName  [TYPE]  NodePointer newParent  [TYPE]  JXPathContext context  [TYPE]  PropertyOwnerPointer pop 
[ADD]^^206^^^^^205^223^[ADD] int index = string.indexOf ( '\'' ) ;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] NullPropertyPointer   [TYPE]  int index  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String attributeValue  propertyName  string 
[REPLACE]^string = string.substring ( 0, index )  "&apos;"  string.substring ( index  1 ) ;^208^209^210^211^^205^223^[REPLACE] string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] NullPropertyPointer   [TYPE]  int index  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String attributeValue  propertyName  string 
[ADD]^^212^^^^^205^223^[ADD] index = string.indexOf ( '\'' ) ;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] NullPropertyPointer   [TYPE]  int index  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String attributeValue  propertyName  string 
[REPLACE]^index = string.indexOf ( '\'' )  ;^214^^^^^205^223^[REPLACE] index = string.indexOf ( '\"' ) ;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] NullPropertyPointer   [TYPE]  int index  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String attributeValue  propertyName  string 
[REPLACE]^string = string.substring ( 2, index )  "&quot;"  string.substring ( index  1 ) ;^216^217^218^219^^205^223^[REPLACE] string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] NullPropertyPointer   [TYPE]  int index  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String attributeValue  propertyName  string 
[REPLACE]^index = string.indexOf ( '\'' )  ;^220^^^^^205^223^[REPLACE] index = string.indexOf ( '\"' ) ;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] NullPropertyPointer   [TYPE]  int index  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String attributeValue  propertyName  string 
[REPLACE]^return propertyName;^222^^^^^205^223^[REPLACE] return string;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] NullPropertyPointer   [TYPE]  int index  [TYPE]  boolean byNameAttribute  false  true  [TYPE]  String attributeValue  propertyName  string 
