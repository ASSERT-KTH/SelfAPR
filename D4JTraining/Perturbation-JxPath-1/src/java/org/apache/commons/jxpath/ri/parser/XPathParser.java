[REPLACE]^private XPathParserTokenManager token_source;^3508^^^^^^^[REPLACE] public XPathParserTokenManager token_source;^ [CLASS] XPathParser JJCalls  
[REPLACE]^private Token token, jj_nt;^3510^^^^^^^[REPLACE] public Token token, jj_nt;^ [CLASS] XPathParser JJCalls  
[REPLACE]^private  short  jj_la;^3512^^^^^^^[REPLACE] private int jj_la;^ [CLASS] XPathParser JJCalls  
[REPLACE]^public boolean lookingAhead ;^3513^^^^^^^[REPLACE] public boolean lookingAhead = false;^ [CLASS] XPathParser JJCalls  
[REPLACE]^final private int[] jj_la1  = null ;^3516^^^^^^^[REPLACE] final private int[] jj_la1 = new int[39];^ [CLASS] XPathParser JJCalls  
[REPLACE]^final private JJCalls[] jj_2_rtns  = null ;^3534^^^^^^^[REPLACE] final private JJCalls[] jj_2_rtns = new JJCalls[6];^ [CLASS] XPathParser JJCalls  
[REPLACE]^private boolean jj_rescan  = null ;^3535^^^^^^^[REPLACE] private boolean jj_rescan = false;^ [CLASS] XPathParser JJCalls  
[REPLACE]^private int jj_gc ;^3536^^^^^^^[REPLACE] private int jj_gc = 0;^ [CLASS] XPathParser JJCalls  
[REPLACE]^private java.util.Vector jj_expentries  = null ;^3655^^^^^^^[REPLACE] private java.util.Vector jj_expentries = new java.util.Vector (  ) ;^ [CLASS] XPathParser JJCalls  
[REPLACE]^private int jj_kind ;^3657^^^^^^^[REPLACE] private int jj_kind = -1;^ [CLASS] XPathParser JJCalls  
[REPLACE]^private int[] jj_lasttokens  = null ;^3658^^^^^^^[REPLACE] private int[] jj_lasttokens = new int[100];^ [CLASS] XPathParser JJCalls  
[REPLACE]^private  long  jj_endpos;^3659^^^^^^^[REPLACE] private int jj_endpos;^ [CLASS] XPathParser JJCalls  
[REPLACE]^jj_la1[16] = jj_gen  ;^141^^^^^29^147^[REPLACE] jj_la1[0] = jj_gen;^[METHOD] NCName [TYPE] String [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^return ;^143^^^^^29^147^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] NCName [TYPE] String [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( false )  return token.image;}^145^^^^^29^147^[REPLACE] {if  ( true )  return token.image;}^[METHOD] NCName [TYPE] String [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^if   (  jj_3R_128  (    )    )   return true;  ;^145^^^^^29^147^[REPLACE] {if  ( true )  return token.image;}^[METHOD] NCName [TYPE] String [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^return ;^146^^^^^29^147^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] NCName [TYPE] String [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^jj_la1[16] = jj_gen  ;^167^^^^^149^173^[REPLACE] jj_la1[1] = jj_gen;^[METHOD] NCName_Without_CoreFunctions [TYPE] String [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^169^^^^^149^173^[ADD] throw new ParseException  (" ")  ;^[METHOD] NCName_Without_CoreFunctions [TYPE] String [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( false )  return token.image;}^171^^^^^149^173^[REPLACE] {if  ( true )  return token.image;}^[METHOD] NCName_Without_CoreFunctions [TYPE] String [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^171^172^173^^^149^173^[ADD] {if  ( true )  return token.image;} throw new Error ( "Missing return statement in function" ) ; }^[METHOD] NCName_Without_CoreFunctions [TYPE] String [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^if   (  jj_3R_128  (    )    )   return true;  ;^171^^^^^149^173^[REPLACE] {if  ( true )  return token.image;}^[METHOD] NCName_Without_CoreFunctions [TYPE] String [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^172^^^^^149^173^[ADD] throw new Error ( "Missing return statement in function" ) ;^[METHOD] NCName_Without_CoreFunctions [TYPE] String [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^int code = 0  ;^176^^^^^175^305^[REPLACE] int code;^[METHOD] CoreFunctionName [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^jj_la1[3] = jj_gen;^299^^^^^175^305^[REPLACE] jj_la1[2] = jj_gen;^[METHOD] CoreFunctionName [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^301^^^^^175^305^[ADD] throw new ParseException  (" ")  ;^[METHOD] CoreFunctionName [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if   (  true  )   return ex;} }  ;^303^^^^^175^305^[REPLACE] {if  ( true )  return code;}^[METHOD] CoreFunctionName [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return jj_gen;}^303^^^^^175^305^[REPLACE] {if  ( true )  return code;}^[METHOD] CoreFunctionName [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^304^^^^^175^305^[ADD] throw new Error ( "Missing return statement in function" ) ;^[METHOD] CoreFunctionName [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^308^309^^^^307^326^[ADD] String nc1, nc2 = null; nc1 = NCName (  ) ;^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^308^^^^^307^326^[ADD] String nc1, nc2 = null;^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^nc2 = NCName (  )  ;^309^^^^^307^326^[REPLACE] nc1 = NCName (  ) ;^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^nc1 = NCName (  )  ;^313^^^^^307^326^[REPLACE] nc2 = NCName (  ) ;^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^jj_la1[3 * 2] = jj_gen;^316^^^^^307^326^[REPLACE] jj_la1[3] = jj_gen;^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^if  ( nc2 != null ) {^319^^^^^307^326^[REPLACE] if  ( nc2 == null ) {^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^319^320^^^^307^326^[ADD] if  ( nc2 == null ) { {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( false )  return compiler.qname ( nc1, nc2 ) ;}^323^^^^^319^324^[REPLACE] {if  ( true )  return compiler.qname ( nc1, nc2 ) ;}^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return compiler .nodeNameTest ( null )  ;}^323^^^^^319^324^[REPLACE] {if  ( true )  return compiler.qname ( nc1, nc2 ) ;}^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if   (  true  )   return compiler.qname  (  nc1, nc2  )  ;} }  ;^320^^^^^307^326^[REPLACE] {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^320^321^^^^307^326^[ADD] {if  ( true )  return compiler.qname ( null, nc1 ) ;} }^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return compiler.qname ( this, nc1 ) ;}^320^^^^^307^326^[REPLACE] {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return compiler.qname ( true, nc1 ) ;}^320^^^^^307^326^[REPLACE] {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( false )  return compiler.qname ( null, nc2 ) ;}^320^^^^^307^326^[REPLACE] {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( false )  return compiler.qname ( nc1, nc2 ) ;}^323^^^^^307^326^[REPLACE] {if  ( true )  return compiler.qname ( nc1, nc2 ) ;}^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^if   (  jj_3R_128  (    )    )   return true;  ;^323^^^^^307^326^[REPLACE] {if  ( true )  return compiler.qname ( nc1, nc2 ) ;}^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return compiler .nodeNameTest ( this )  ;}^320^^^^^307^326^[REPLACE] {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return compiler .nodeNameTest ( false )  ;}^323^^^^^307^326^[REPLACE] {if  ( true )  return compiler.qname ( nc1, nc2 ) ;}^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^return ;^325^^^^^307^326^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] QName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^String nc2 = null  ;^329^^^^^328^356^[REPLACE] String nc1, nc2 = null;^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^String nc1  ;^329^^^^^328^356^[REPLACE] String nc1, nc2 = null;^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^if  ( jj_2_1 ( 0 )  )  {^330^^^^^328^356^[REPLACE] if  ( jj_2_1 ( 2147483647 )  )  {^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^qname = QName_Without_CoreFunctions (  )  ;^341^^^^^330^348^[REPLACE] nc1 = NCName_Without_CoreFunctions (  ) ;^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^jj_la1[4 * 2] = jj_gen;^344^^^^^330^348^[REPLACE] jj_la1[4] = jj_gen;^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^return ;^346^^^^^330^348^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^nc2 = NCName (  )  ;^331^^^^^328^356^[REPLACE] nc1 = NCName (  ) ;^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^nc1 = NCName (  )  ;^333^^^^^328^356^[REPLACE] nc2 = NCName (  ) ;^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^qname = QName_Without_CoreFunctions (  )  ;^341^^^^^328^356^[REPLACE] nc1 = NCName_Without_CoreFunctions (  ) ;^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^jj_la1[4 / 4] = jj_gen;^344^^^^^328^356^[REPLACE] jj_la1[4] = jj_gen;^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^return ;^346^^^^^328^356^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^if  ( nc2 != null ) {^349^^^^^328^356^[REPLACE] if  ( nc2 == null ) {^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^349^350^^^^328^356^[ADD] if  ( nc2 == null ) { {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( false )  return compiler.qname ( nc1, nc2 ) ;}^353^^^^^349^354^[REPLACE] {if  ( true )  return compiler.qname ( nc1, nc2 ) ;}^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^if   (  jj_3R_128  (    )    )   return true;  ;^353^^^^^349^354^[REPLACE] {if  ( true )  return compiler.qname ( nc1, nc2 ) ;}^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( false )  return compiler.qname ( null, nc2 ) ;}^350^^^^^328^356^[REPLACE] {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return compiler.qname ( false, nc1 ) ;}^350^^^^^328^356^[REPLACE] {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return compiler.qname ( this, nc1 ) ;}^350^^^^^328^356^[REPLACE] {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( false )  return compiler .nodeNameTest ( null )  ;}^350^^^^^328^356^[REPLACE] {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return compiler .nodeNameTest ( true )  ;}^350^^^^^328^356^[REPLACE] {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( false )  return compiler.qname ( nc1, nc2 ) ;}^353^^^^^328^356^[REPLACE] {if  ( true )  return compiler.qname ( nc1, nc2 ) ;}^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return compiler .nodeNameTest ( true )  ;}^353^^^^^328^356^[REPLACE] {if  ( true )  return compiler.qname ( nc1, nc2 ) ;}^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return compiler.qname ( true, nc1 ) ;}^350^^^^^328^356^[REPLACE] {if  ( true )  return compiler.qname ( null, nc1 ) ;}^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^if   (  jj_3R_128  (    )    )   return true;  ;^353^^^^^328^356^[REPLACE] {if  ( true )  return compiler.qname ( nc1, nc2 ) ;}^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^return ;^355^^^^^328^356^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] QName_Without_CoreFunctions [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^438^^^^^437^509^[ADD] Object ex = null;^[METHOD] LocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^496^497^^^^437^509^[ADD] ex = RelativeLocationPath (  ) ; break;^[METHOD] LocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^ex = RelativeLocationPath (  )  ;^500^^^^^437^509^[REPLACE] ex = AbsoluteLocationPath (  ) ;^[METHOD] LocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^503^^^^^437^509^[ADD] jj_la1[5] = jj_gen;^[METHOD] LocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^return ;^505^^^^^437^509^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] LocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( false )  return ex;}^507^^^^^437^509^[REPLACE] {if  ( true )  return ex;}^[METHOD] LocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^return t;  ;^507^^^^^437^509^[REPLACE] {if  ( true )  return ex;}^[METHOD] LocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^return ;^508^^^^^437^509^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] LocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^ArrayList ps = new ArrayList (  )  ;^514^^^^^513^543^[REPLACE] ArrayList steps = new ArrayList (  ) ;^[METHOD] AbsoluteLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^if   (  jj_2_5  (  2147483647  )    )   {  ;^515^^^^^513^543^[REPLACE] if  ( jj_2_2 ( 2147483647 )  )  {^[METHOD] AbsoluteLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^jj_la1[16] = jj_gen  ;^536^^^^^515^540^[REPLACE] jj_la1[7] = jj_gen;^[METHOD] AbsoluteLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^return ;^538^^^^^515^540^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] AbsoluteLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^jj_la1[4] = jj_gen;^525^^^^^513^543^[REPLACE] jj_la1[6] = jj_gen;^[METHOD] AbsoluteLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^jj_la1[7] = jj_gen;^525^^^^^513^543^[REPLACE] jj_la1[6] = jj_gen;^[METHOD] AbsoluteLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^jj_la1[9] = jj_gen;^536^^^^^513^543^[REPLACE] jj_la1[7] = jj_gen;^[METHOD] AbsoluteLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^538^^^^^513^543^[ADD] throw new ParseException  (" ")  ;^[METHOD] AbsoluteLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return compiler.locationPath ( false, steps .ArrayList (  )   ) ;}^541^^^^^513^543^[REPLACE] {if  ( true )  return compiler.locationPath ( true, steps.toArray (  )  ) ;}^[METHOD] AbsoluteLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( true )  return compiler.locationPath ( false, steps.toArray (  )  ) ;}^541^^^^^513^543^[REPLACE] {if  ( true )  return compiler.locationPath ( true, steps.toArray (  )  ) ;}^[METHOD] AbsoluteLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( false )  return compiler.locationPath ( true, steps.toArray (  )  ) ;}^541^^^^^513^543^[REPLACE] {if  ( true )  return compiler.locationPath ( true, steps.toArray (  )  ) ;}^[METHOD] AbsoluteLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^return ;^542^^^^^513^543^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] AbsoluteLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^NodeTest ( steps ) ;^547^548^^^^546^564^[ADD] ArrayList steps = new ArrayList (  ) ; NodeTest ( steps ) ;^[METHOD] RelativeLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^OrExpr (  )  ;^548^^^^^546^564^[REPLACE] NodeTest ( steps ) ;^[METHOD] RelativeLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^548^^^^^546^564^[ADD] NodeTest ( steps ) ;^[METHOD] RelativeLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^jj_la1[3] = jj_gen;^557^^^^^546^564^[REPLACE] jj_la1[8] = jj_gen;^[METHOD] RelativeLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if   (  true  )   return compiler.function  (  code, args.toArray  (    )    )  ;} }  ;^562^^^^^546^564^[REPLACE] {if  ( true )  return compiler.locationPath ( false, steps.toArray (  )  ) ;}^[METHOD] RelativeLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^{if  ( false )  return compiler.locationPath ( false, steps.toArray (  )  ) ;}^562^^^^^546^564^[REPLACE] {if  ( true )  return compiler.locationPath ( false, steps.toArray (  )  ) ;}^[METHOD] RelativeLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^if   (  jj_3R_128  (    )    )   return true;  ;^562^^^^^546^564^[REPLACE] {if  ( true )  return compiler.locationPath ( false, steps.toArray (  )  ) ;}^[METHOD] RelativeLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^if   (  jj_3R_128  (    )    )   return true;  ;^563^^^^^546^564^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] RelativeLocationPath [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^Object name  ;^576^^^^^575^594^[REPLACE] Object t;^[METHOD] LocationStep [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object s  t  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^577^^^^^575^594^[ADD] Object s;^[METHOD] LocationStep [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object s  t  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^jj_la1[16] = jj_gen  ;^589^^^^^575^594^[REPLACE] jj_la1[9] = jj_gen;^[METHOD] LocationStep [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object s  t  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[ADD]^^591^^^^^575^594^[ADD] throw new ParseException  (" ")  ;^[METHOD] LocationStep [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object s  t  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^OrExpr (  )  ;^593^^^^^575^594^[REPLACE] NodeTest ( steps ) ;^[METHOD] LocationStep [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object s  t  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la 
[REPLACE]^int axis = 0  ;^598^^^^^597^760^[REPLACE] int axis;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^int type = -1 >> 1;^599^^^^^597^760^[REPLACE] int type = -1;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^String instruction = this;^600^^^^^597^760^[REPLACE] String instruction = null;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^Object name = true;^601^^^^^597^760^[REPLACE] Object name = null;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^Object name  ;^602^^^^^597^760^[REPLACE] Object s;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[ADD]^^603^^^^^597^760^[ADD] Object p;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^ArrayList steps = new ArrayList (  )  ;^604^^^^^597^760^[REPLACE] ArrayList ps = new ArrayList (  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^if   (  jj_2_5  (  2147483647  )    )   {  ;^661^^^^^597^760^[REPLACE] if  ( jj_2_3 ( 2147483647 )  )  {^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^if   (  jj_2_5  (  2147483647  )    )   {  ;^665^^^^^597^760^[REPLACE] } else if  ( jj_2_4 ( 2147483647 )  )  {^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[ADD]^^713^^^^^665^720^[ADD] name = WildcardName (  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^jj_la1[5] = jj_gen;^716^^^^^665^720^[REPLACE] jj_la1[10] = jj_gen;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^return ;^718^^^^^665^720^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^ex = compiler.literal ( unescape ( substring ( 1,  (  ( length (  )  )  - 1 )  )  )  )  ;^669^^^^^597^760^[REPLACE] instruction = unescape ( token.image.substring ( 1, token.image.length (  )  - 1 )  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^name  =  name ;^713^^^^^597^760^[REPLACE] name = WildcardName (  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^jj_la1[7] = jj_gen;^716^^^^^597^760^[REPLACE] jj_la1[10] = jj_gen;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^return ;^718^^^^^597^760^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^type ;^662^^^^^597^760^[REPLACE] type = NodeType (  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^}  else {^665^^^^^597^760^[REPLACE] } else if  ( jj_2_4 ( 2147483647 )  )  {^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[ADD]^}   jj_consume_token ( 80 ) ;jj_consume_token ( Literal ) ;instruction = unescape ( token.image.substring ( 1, token.image.length (  )  - 1 )  ) ;^665^666^667^668^669^597^760^[ADD] else if  ( jj_2_4 ( 2147483647 )  )  { jj_consume_token ( PI ) ; jj_consume_token ( 80 ) ; jj_consume_token ( Literal ) ; instruction = unescape ( token.image.substring ( 1, token.image.length (  )  - 1 )  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^name  =  name ;^713^^^^^665^720^[REPLACE] name = WildcardName (  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^jj_la1[16] = jj_gen  ;^716^^^^^665^720^[REPLACE] jj_la1[10] = jj_gen;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[ADD]^^660^661^662^663^664^597^760^[ADD] axis = AxisSpecifier (  ) ; if  ( jj_2_3 ( 2147483647 )  )  { type = NodeType (  ) ; jj_consume_token ( 80 ) ; jj_consume_token ( 81 ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^name ;^713^^^^^597^760^[REPLACE] name = WildcardName (  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^jj_la1[2] = jj_gen;^716^^^^^597^760^[REPLACE] jj_la1[10] = jj_gen;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^jj_la1[0] = jj_gen;^733^^^^^597^760^[REPLACE] jj_la1[11] = jj_gen;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[ADD]^^735^^^^^597^760^[ADD] throw new ParseException  (" ")  ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^jj_la1[2] = jj_gen;^744^^^^^597^760^[REPLACE] jj_la1[12] = jj_gen;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[ADD]^^747^^^^^597^760^[ADD] p = Predicate (  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^if  ( name == this ) {^750^^^^^597^760^[REPLACE] if  ( name != null ) {^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^else {^753^^^^^597^760^[REPLACE] else if  ( instruction != null ) {^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^s = compiler.nodeNameTest ( name )  ;^757^^^^^753^758^[REPLACE] s = compiler.nodeTypeTest ( type ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[ADD]^^754^^^^^597^760^[ADD] s = compiler.processingInstructionTest ( instruction ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^s =  compiler.processingInstructionTest ( null ) ;^754^^^^^597^760^[REPLACE] s = compiler.processingInstructionTest ( instruction ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[ADD]^^757^^^^^597^760^[ADD] s = compiler.nodeTypeTest ( type ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[ADD]^^751^^^^^597^760^[ADD] s = compiler.nodeNameTest ( name ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^if  ( instruction == null ) {^753^^^^^597^760^[REPLACE] else if  ( instruction != null ) {^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[ADD]^^757^^^^^753^758^[ADD] s = compiler.nodeTypeTest ( type ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^compiler.step ( axis, s, ps.toArray (  )  )  ;^759^^^^^597^760^[REPLACE] steps.add ( compiler.step ( axis, s, ps.toArray (  )  )  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^steps.add ( compiler.step ( axis, s, ps.toArray (  )  )  )  ;^759^^^^^597^760^[REPLACE] steps.add ( compiler.step ( axis, s, ps.toArray (  )  )  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[ADD]^^759^^^^^597^760^[ADD] steps.add ( compiler.step ( axis, s, ps.toArray (  )  )  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^list.toArray (  )  ;^759^^^^^597^760^[REPLACE] steps.add ( compiler.step ( axis, s, ps.toArray (  )  )  ) ;^[METHOD] NodeTest [TYPE] void [PARAMETER] ArrayList steps [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  String instruction  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  Object name  p  s  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries 
[REPLACE]^int axis = 0  ;^764^^^^^763^787^[REPLACE] int axis;^[METHOD] AxisSpecifier [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^axis  =  axis ;^779^^^^^763^787^[REPLACE] axis = AxisName (  ) ;^[METHOD] AxisSpecifier [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[16] = jj_gen  ;^782^^^^^763^787^[REPLACE] jj_la1[13] = jj_gen;^[METHOD] AxisSpecifier [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^783^784^^^^763^787^[ADD] axis = AbbreviatedAxisSpecifier (  ) ; }^[METHOD] AxisSpecifier [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return axis;}^785^^^^^763^787^[REPLACE] {if  ( true )  return axis;}^[METHOD] AxisSpecifier [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( true )  return jj_kind;}^785^^^^^763^787^[REPLACE] {if  ( true )  return axis;}^[METHOD] AxisSpecifier [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^786^^^^^763^787^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] AxisSpecifier [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^int axis = 2;^798^^^^^797^859^[REPLACE] int axis = 0;^[METHOD] AxisName [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[16] = jj_gen  ;^853^^^^^797^859^[REPLACE] jj_la1[14] = jj_gen;^[METHOD] AxisName [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^855^^^^^797^859^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] AxisName [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if   (  true  )   return ex;} }  ;^857^^^^^797^859^[REPLACE] {if  ( true )  return axis;}^[METHOD] AxisName [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( true )  return jj_kind;}^857^^^^^797^859^[REPLACE] {if  ( true )  return axis;}^[METHOD] AxisName [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if   (  jj_3R_128  (    )    )   return true;  ;^858^^^^^797^859^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] AxisName [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^926^^^^^925^1000^[ADD] Object ex = null;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if   (  jj_2_3  (  2147483647  )    )   {  ;^946^^^^^925^1000^[REPLACE] if  ( jj_2_5 ( 2147483647 )  )  {^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = CoreFunctionCall (  )  ;^989^^^^^946^996^[REPLACE] ex = FunctionCall (  ) ;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[16] = jj_gen  ;^992^^^^^946^996^[REPLACE] jj_la1[17] = jj_gen;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^994^^^^^946^996^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = FunctionCall (  )  ;^947^^^^^925^1000^[REPLACE] ex = CoreFunctionCall (  ) ;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex  =  ex ;^929^^^^^925^1000^[REPLACE] ex = VariableReference (  ) ;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex  =  ex ;^933^^^^^925^1000^[REPLACE] ex = Expression (  ) ;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^938^^^^^925^1000^[ADD] ex = compiler.literal ( unescape ( token.image.substring ( 1, token.image.length (  )  - 1 )  )  ) ;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex  =  ex ;^942^^^^^925^1000^[REPLACE] ex = compiler.number ( token.image ) ;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[3] = jj_gen;^945^^^^^925^1000^[REPLACE] jj_la1[16] = jj_gen;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^947^^^^^925^1000^[ADD] ex = CoreFunctionCall (  ) ;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = CoreFunctionCall (  )  ;^989^^^^^925^1000^[REPLACE] ex = FunctionCall (  ) ;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^992^^^^^925^1000^[ADD] jj_la1[17] = jj_gen;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^994^^^^^925^1000^[ADD] throw new ParseException  (" ")  ;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return ex;}^998^^^^^925^1000^[REPLACE] {if  ( true )  return ex;}^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^998^^^^^925^1000^[REPLACE] {if  ( true )  return ex;}^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if   (  jj_3R_128  (    )    )   return true;  ;^999^^^^^925^1000^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] PrimaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ArrayList list = null  ;^1036^^^^^1035^1127^[REPLACE] ArrayList args = null;^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1037^^^^^1035^1127^[ADD] Object arg;^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_consume_token ( 3 ) ;^1038^^^^^1035^1127^[REPLACE] jj_consume_token ( 80 ) ;^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1038^^^^^1035^1127^[ADD] jj_consume_token ( 80 ) ;^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^args = ArgumentList (  )  ;^1103^^^^^1035^1127^[REPLACE] arg = Argument (  ) ;^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^list = new ArrayList (  )  ;^1104^^^^^1035^1127^[REPLACE] args = new ArrayList (  ) ; args.add ( arg ) ;^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[18 + 4] = jj_gen;^1112^^^^^1035^1127^[REPLACE] jj_la1[18] = jj_gen;^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^args = ArgumentList (  )  ;^1116^^^^^1035^1127^[REPLACE] arg = Argument (  ) ;^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[19 >>> 1] = jj_gen;^1121^^^^^1035^1127^[REPLACE] jj_la1[19] = jj_gen;^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_consume_token ( 81 >> 0 ) ;^1124^^^^^1035^1127^[REPLACE] jj_consume_token ( 81 ) ;^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return args;}^1125^^^^^1035^1127^[REPLACE] {if  ( true )  return args;}^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if   (  jj_3R_128  (    )    )   return true;  ;^1125^^^^^1035^1127^[REPLACE] {if  ( true )  return args;}^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if   (  jj_3R_128  (    )    )   return true;  ;^1126^^^^^1035^1127^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] ArgumentList [TYPE] ArrayList [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList args  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object arg  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^Object name  ;^1143^^^^^1142^1169^[REPLACE] Object ex, r;^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ArrayList args = null  ;^1144^^^^^1142^1169^[REPLACE] ArrayList list = null;^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^r = PathExpr (  )  ;^1145^^^^^1142^1169^[REPLACE] ex = PathExpr (  ) ;^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if  ( list != null ) {^1158^^^^^1142^1169^[REPLACE] if  ( list == null ) {^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^args = new ArrayList (  )  ;^1159^^^^^1142^1169^[REPLACE] list = new ArrayList (  ) ;^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[16] = jj_gen  ;^1153^^^^^1142^1169^[REPLACE] jj_la1[20] = jj_gen;^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^r = AndExpr (  )  ;^1157^^^^^1142^1169^[REPLACE] r = PathExpr (  ) ;^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1159^1160^^^^1142^1169^[ADD] list = new ArrayList (  ) ; list.add ( ex ) ;^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if  ( list == null ) {^1164^^^^^1142^1169^[REPLACE] if  ( list != null ) {^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1164^1165^1166^^^1142^1169^[ADD] if  ( list != null ) { ex = compiler.union ( list.toArray (  )  ) ; }^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.and ( list.toArray (  )  )  ;^1165^^^^^1142^1169^[REPLACE] ex = compiler.union ( list.toArray (  )  ) ;^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return ex;}^1167^^^^^1142^1169^[REPLACE] {if  ( true )  return ex;}^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^1167^^^^^1142^1169^[REPLACE] {if  ( true )  return ex;}^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1168^^^^^1142^1169^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] UnionExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^Object ex = true;^1173^^^^^1172^1247^[REPLACE] Object ex = null;^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[REPLACE]^Object name  ;^1174^^^^^1172^1247^[REPLACE] Object[] steps;^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[REPLACE]^if   (  jj_2_5  (  2147483647  )    )   {  ;^1175^^^^^1172^1247^[REPLACE] if  ( jj_2_6 ( 2147483647 )  )  {^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[REPLACE]^ex = RelativeLocationPath (  )  ;^1237^^^^^1175^1244^[REPLACE] ex = LocationPath (  ) ;^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[REPLACE]^jj_la1[21 >> 2] = jj_gen;^1240^^^^^1175^1244^[REPLACE] jj_la1[21] = jj_gen;^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[REPLACE]^return ;^1242^^^^^1175^1244^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[REPLACE]^ex = OrExpr (  )  ;^1176^^^^^1172^1247^[REPLACE] ex = FilterExpr (  ) ;^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[REPLACE]^ex = RelativeLocationPath (  )  ;^1237^^^^^1172^1247^[REPLACE] ex = LocationPath (  ) ;^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[REPLACE]^jj_la1[21 * 2] = jj_gen;^1240^^^^^1172^1247^[REPLACE] jj_la1[21] = jj_gen;^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[REPLACE]^return ;^1242^^^^^1172^1247^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[REPLACE]^{if  ( false )  return ex;}^1245^^^^^1172^1247^[REPLACE] {if  ( true )  return ex;}^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[REPLACE]^return t;  ;^1245^^^^^1172^1247^[REPLACE] {if  ( true )  return ex;}^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[ADD]^^1246^^^^^1172^1247^[ADD] throw new Error ( "Missing return statement in function" ) ;^[METHOD] PathExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  [TYPE]  Object[] steps 
[REPLACE]^Object name  ;^1251^^^^^1250^1291^[REPLACE] Object ex, p;^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ArrayList steps = new ArrayList (  )  ;^1252^^^^^1250^1291^[REPLACE] ArrayList ps = new ArrayList (  ) ;^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1253^1254^^^^1250^1291^[ADD] boolean path = false; ArrayList steps = new ArrayList (  ) ;^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1254^^^^^1250^1291^[ADD] ArrayList steps = new ArrayList (  ) ;^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = UnaryExpr (  )  ;^1255^^^^^1250^1291^[REPLACE] ex = PrimaryExpr (  ) ;^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[22 >> 4] = jj_gen;^1263^^^^^1250^1291^[REPLACE] jj_la1[22] = jj_gen;^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^p  =  p ;^1266^^^^^1250^1291^[REPLACE] p = Predicate (  ) ;^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^path = false;^1267^^^^^1250^1291^[REPLACE] path = true;^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[16] = jj_gen  ;^1278^^^^^1250^1291^[REPLACE] jj_la1[23] = jj_gen;^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^path = false;^1282^^^^^1250^1291^[REPLACE] path = true;^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if  ( lookingAhead ) {^1284^^^^^1250^1291^[REPLACE] if  ( path ) {^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1284^1285^^^^1250^1291^[ADD] if  ( path ) { {if  ( true )  return compiler.expressionPath ( ex, ps.toArray (  ) , steps.toArray (  )  ) ;}^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return ex;}^1288^^^^^1284^1289^[REPLACE] {if  ( true )  return ex;}^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1288^1289^^^^1284^1289^[ADD] {if  ( true )  return ex;} }^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^1288^^^^^1284^1289^[REPLACE] {if  ( true )  return ex;}^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if   (  true  )   return compiler.expressionPath  (  ex, ps.toArray  (    )  , steps.toArray  (    )    )  ;} }  ;^1285^^^^^1250^1291^[REPLACE] {if  ( true )  return compiler.expressionPath ( ex, ps.toArray (  ) , steps.toArray (  )  ) ;}^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( true )  return compiler.expressionPath ( ex, ps.toArray (  ) , ps.toArray (  )  ) ;}^1285^^^^^1250^1291^[REPLACE] {if  ( true )  return compiler.expressionPath ( ex, ps.toArray (  ) , steps.toArray (  )  ) ;}^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( true )  return compiler.lessThanOrEqual ( ex, ps.toArray (  ) , steps.toArray (  )  ) ;}^1285^^^^^1250^1291^[REPLACE] {if  ( true )  return compiler.expressionPath ( ex, ps.toArray (  ) , steps.toArray (  )  ) ;}^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( true )  return compiler.expressionPath ( ex, ps.ArrayList (  ) , steps.toArray (  )  ) ;}^1285^^^^^1250^1291^[REPLACE] {if  ( true )  return compiler.expressionPath ( ex, ps.toArray (  ) , steps.toArray (  )  ) ;}^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return ex;}^1288^^^^^1250^1291^[REPLACE] {if  ( true )  return ex;}^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^1288^^^^^1250^1291^[REPLACE] {if  ( true )  return ex;}^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1290^^^^^1250^1291^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] FilterExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList ps  steps  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  p  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^ArrayList list = null;^1299^1300^^^^1298^1325^[ADD] Object ex, r; ArrayList list = null;^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^Object name  ;^1299^^^^^1298^1325^[REPLACE] Object ex, r;^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ArrayList args = null  ;^1300^^^^^1298^1325^[REPLACE] ArrayList list = null;^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = UnaryExpr (  )  ;^1301^^^^^1298^1325^[REPLACE] ex = AndExpr (  ) ;^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if  ( list != true ) {^1314^^^^^1298^1325^[REPLACE] if  ( list == null ) {^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^args = new ArrayList (  )  ;^1315^^^^^1298^1325^[REPLACE] list = new ArrayList (  ) ;^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1309^^^^^1298^1325^[ADD] jj_la1[24] = jj_gen;^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^r = PathExpr (  )  ;^1313^^^^^1298^1325^[REPLACE] r = AndExpr (  ) ;^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1315^^^^^1298^1325^[ADD] list = new ArrayList (  ) ;^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if   (  args == null  )  {  ;^1320^^^^^1298^1325^[REPLACE] if  ( list != null ) {^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.and ( list.toArray (  )  )  ;^1321^^^^^1298^1325^[REPLACE] ex = compiler.or ( list.toArray (  )  ) ;^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return ex;}^1323^^^^^1298^1325^[REPLACE] {if  ( true )  return ex;}^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^1323^^^^^1298^1325^[REPLACE] {if  ( true )  return ex;}^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1324^^^^^1298^1325^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] OrExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1329^^^^^1328^1355^[ADD] Object ex, r;^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^Object name  ;^1329^^^^^1328^1355^[REPLACE] Object ex, r;^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ArrayList args = null  ;^1330^^^^^1328^1355^[REPLACE] ArrayList list = null;^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^r = EqualityExpr (  )  ;^1331^^^^^1328^1355^[REPLACE] ex = EqualityExpr (  ) ;^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if   (  args == null  )  {  ;^1344^^^^^1328^1355^[REPLACE] if  ( list == null ) {^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1345^1346^^^^1328^1355^[ADD] list = new ArrayList (  ) ; list.add ( ex ) ;^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1339^1340^^^^1328^1355^[ADD] jj_la1[25] = jj_gen; break label_9;^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1343^^^^^1328^1355^[ADD] r = EqualityExpr (  ) ;^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^args = new ArrayList (  )  ;^1345^^^^^1328^1355^[REPLACE] list = new ArrayList (  ) ;^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if  ( list == true ) {^1350^^^^^1328^1355^[REPLACE] if  ( list != null ) {^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.or ( list.toArray (  )  )  ;^1351^^^^^1328^1355^[REPLACE] ex = compiler.and ( list.toArray (  )  ) ;^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return ex;}^1353^^^^^1328^1355^[REPLACE] {if  ( true )  return ex;}^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1353^1354^1355^^^1328^1355^[ADD] {if  ( true )  return ex;} throw new Error ( "Missing return statement in function" ) ; }^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^1353^^^^^1328^1355^[REPLACE] {if  ( true )  return ex;}^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1354^^^^^1328^1355^[ADD] throw new Error ( "Missing return statement in function" ) ;^[METHOD] AndExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^Object name  ;^1359^^^^^1358^1391^[REPLACE] Object ex, r;^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1359^1360^^^^1358^1391^[ADD] Object ex, r; ex = RelationalExpr (  ) ;^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^r = RelationalExpr (  )  ;^1360^^^^^1358^1391^[REPLACE] ex = RelationalExpr (  ) ;^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[26 % 2] = jj_gen;^1369^^^^^1358^1391^[REPLACE] jj_la1[26] = jj_gen;^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = RelationalExpr (  )  ;^1375^^^^^1358^1391^[REPLACE] r = RelationalExpr (  ) ;^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.multiply ( ex, r )  ;^1376^^^^^1358^1391^[REPLACE] ex = compiler.equal ( ex, r ) ;^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = RelationalExpr (  )  ;^1380^^^^^1358^1391^[REPLACE] r = RelationalExpr (  ) ;^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.multiply ( ex, r )  ;^1381^^^^^1358^1391^[REPLACE] ex = compiler.notEqual ( ex, r ) ;^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[16] = jj_gen  ;^1384^^^^^1358^1391^[REPLACE] jj_la1[27] = jj_gen;^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1386^^^^^1358^1391^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return ex;}^1389^^^^^1358^1391^[REPLACE] {if  ( true )  return ex;}^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^1389^^^^^1358^1391^[REPLACE] {if  ( true )  return ex;}^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1390^^^^^1358^1391^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] EqualityExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^Object name  ;^1396^^^^^1395^1440^[REPLACE] Object ex, r;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1397^^^^^1395^1440^[ADD] ex = AdditiveExpr (  ) ;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1408^1409^^^^1395^1440^[ADD] jj_la1[28] = jj_gen; break label_11;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1414^^^^^1395^1440^[ADD] r = AdditiveExpr (  ) ;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^break;^1415^1416^^^^1395^1440^[ADD] ex = compiler.lessThan ( ex, r ) ; break;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^r = SubtractiveExpr (  )  ;^1419^^^^^1395^1440^[REPLACE] r = AdditiveExpr (  ) ;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.multiply ( ex, r )  ;^1420^^^^^1395^1440^[REPLACE] ex = compiler.greaterThan ( ex, r ) ;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1424^1425^^^^1395^1440^[ADD] r = AdditiveExpr (  ) ; ex = compiler.lessThanOrEqual ( ex, r ) ;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.lessThan ( ex, r )  ;^1425^^^^^1395^1440^[REPLACE] ex = compiler.lessThanOrEqual ( ex, r ) ;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1429^1430^^^^1395^1440^[ADD] r = AdditiveExpr (  ) ; ex = compiler.greaterThanOrEqual ( ex, r ) ;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.greaterThan ( ex, r )  ;^1430^^^^^1395^1440^[REPLACE] ex = compiler.greaterThanOrEqual ( ex, r ) ;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[2] = jj_gen;^1433^^^^^1395^1440^[REPLACE] jj_la1[29] = jj_gen;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1435^^^^^1395^1440^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return ex;}^1438^^^^^1395^1440^[REPLACE] {if  ( true )  return ex;}^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1438^1439^1440^^^1395^1440^[ADD] {if  ( true )  return ex;} throw new Error ( "Missing return statement in function" ) ; }^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^1438^^^^^1395^1440^[REPLACE] {if  ( true )  return ex;}^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1439^^^^^1395^1440^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] RelationalExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^Object name  ;^1448^^^^^1447^1474^[REPLACE] Object ex, r;^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1449^1450^^^^1447^1474^[ADD] ArrayList list = null; ex = SubtractiveExpr (  ) ;^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^r = SubtractiveExpr (  )  ;^1450^^^^^1447^1474^[REPLACE] ex = SubtractiveExpr (  ) ;^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if  ( list != null ) {^1463^^^^^1447^1474^[REPLACE] if  ( list == null ) {^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1463^1464^1465^1466^^1447^1474^[ADD] if  ( list == null ) { list = new ArrayList (  ) ; list.add ( ex ) ; }^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^args = new ArrayList (  )  ;^1464^^^^^1447^1474^[REPLACE] list = new ArrayList (  ) ;^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[16] = jj_gen  ;^1458^^^^^1447^1474^[REPLACE] jj_la1[30] = jj_gen;^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = SubtractiveExpr (  )  ;^1462^^^^^1447^1474^[REPLACE] r = SubtractiveExpr (  ) ;^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if  ( list == null ) {^1469^^^^^1447^1474^[REPLACE] if  ( list != null ) {^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1470^^^^^1447^1474^[ADD] ex = compiler.sum ( list.toArray (  )  ) ;^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return ex;}^1472^^^^^1447^1474^[REPLACE] {if  ( true )  return ex;}^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^1472^^^^^1447^1474^[REPLACE] {if  ( true )  return ex;}^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1473^^^^^1447^1474^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] AdditiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  ArrayList list  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1477^^^^^1476^1495^[ADD] Object ex, r = null;^[METHOD] SubtractiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^Object ex, r = this;^1477^^^^^1476^1495^[REPLACE] Object ex, r = null;^[METHOD] SubtractiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1478^^^^^1476^1495^[ADD] ex = MultiplicativeExpr (  ) ;^[METHOD] SubtractiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[31 * 3] = jj_gen;^1486^^^^^1476^1495^[REPLACE] jj_la1[31] = jj_gen;^[METHOD] SubtractiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^r = SubtractiveExpr (  )  ;^1490^^^^^1476^1495^[REPLACE] r = MultiplicativeExpr (  ) ;^[METHOD] SubtractiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.multiply ( ex, r )  ;^1491^^^^^1476^1495^[REPLACE] ex = compiler.minus ( ex, r ) ;^[METHOD] SubtractiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return ex;}^1493^^^^^1476^1495^[REPLACE] {if  ( true )  return ex;}^[METHOD] SubtractiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^1493^^^^^1476^1495^[REPLACE] {if  ( true )  return ex;}^[METHOD] SubtractiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if   (  jj_3R_128  (    )    )   return true;  ;^1494^^^^^1476^1495^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] SubtractiveExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^Object name  ;^1500^^^^^1499^1538^[REPLACE] Object ex, r;^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = UnionExpr (  )  ;^1501^^^^^1499^1538^[REPLACE] ex = UnaryExpr (  ) ;^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[28] = jj_gen;^1511^^^^^1499^1538^[REPLACE] jj_la1[32] = jj_gen;^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^r = PathExpr (  )  ;^1517^^^^^1499^1538^[REPLACE] r = UnaryExpr (  ) ;^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.lessThan ( ex, r )  ;^1518^^^^^1499^1538^[REPLACE] ex = compiler.multiply ( ex, r ) ;^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^r = PathExpr (  )  ;^1522^^^^^1499^1538^[REPLACE] r = UnaryExpr (  ) ;^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.multiply ( ex, r )  ;^1523^^^^^1499^1538^[REPLACE] ex = compiler.divide ( ex, r ) ;^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^r = PathExpr (  )  ;^1527^^^^^1499^1538^[REPLACE] r = UnaryExpr (  ) ;^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.multiply ( ex, r )  ;^1528^^^^^1499^1538^[REPLACE] ex = compiler.mod ( ex, r ) ;^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[16] = jj_gen  ;^1531^^^^^1499^1538^[REPLACE] jj_la1[33] = jj_gen;^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1533^^^^^1499^1538^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return ex;}^1536^^^^^1499^1538^[REPLACE] {if  ( true )  return ex;}^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^1536^^^^^1499^1538^[REPLACE] {if  ( true )  return ex;}^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1537^^^^^1499^1538^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] MultiplicativeExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  r  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^Object name  ;^1542^^^^^1541^1620^[REPLACE] Object ex;^[METHOD] UnaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = UnaryExpr (  )  ;^1606^^^^^1541^1620^[REPLACE] ex = UnionExpr (  ) ;^[METHOD] UnaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = UnionExpr (  )  ;^1610^^^^^1541^1620^[REPLACE] ex = UnaryExpr (  ) ;^[METHOD] UnaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^ex = compiler.minus ( ex, r )  ;^1611^^^^^1541^1620^[REPLACE] ex = compiler.minus ( ex ) ;^[METHOD] UnaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[3] = jj_gen;^1614^^^^^1541^1620^[REPLACE] jj_la1[34] = jj_gen;^[METHOD] UnaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1616^^^^^1541^1620^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] UnaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return ex;}^1618^^^^^1541^1620^[REPLACE] {if  ( true )  return ex;}^[METHOD] UnaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1618^1619^1620^^^1541^1620^[ADD] {if  ( true )  return ex;} throw new Error ( "Missing return statement in function" ) ; }^[METHOD] UnaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^1618^^^^^1541^1620^[REPLACE] {if  ( true )  return ex;}^[METHOD] UnaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1619^^^^^1541^1620^[ADD] throw new Error ( "Missing return statement in function" ) ;^[METHOD] UnaryExpr [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object ex  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^Object name  ;^1674^^^^^1673^1794^[REPLACE] Object qn;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^String nc2 = null  ;^1675^^^^^1673^1794^[REPLACE] String nc1, nc2 = null;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1675^^^^^1673^1794^[ADD] String nc1, nc2 = null;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[27] = jj_gen;^1722^^^^^1673^1794^[REPLACE] jj_la1[35] = jj_gen;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1724^^^^^1673^1794^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1726^^^^^1673^1794^[ADD] nc1 = token.image;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1776^1777^^^^1673^1794^[ADD] jj_la1[36] = jj_gen; jj_consume_token ( -1 ) ;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^nc1 = token.image  ;^1780^^^^^1673^1794^[REPLACE] nc2 = token.image;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[0] = jj_gen;^1783^^^^^1673^1794^[REPLACE] jj_la1[37] = jj_gen;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1778^^^^^1673^1794^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^if  (nc1 == this ) {^1786^^^^^1673^1794^[REPLACE] if  ( nc2 != null ) {^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^qn = compiler.qname ( nc1, nc2 ) ;^1786^1787^1788^^^1673^1794^[ADD] if  ( nc2 != null ) { qn = compiler.qname ( nc1, nc2 ) ; }^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^qn = compiler.qname ( true, nc1 ) ;^1790^^^^^1786^1791^[REPLACE] qn = compiler.qname ( null, nc1 ) ;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^qn = compiler.qname ( null, nc1 )  ;^1787^^^^^1673^1794^[REPLACE] qn = compiler.qname ( nc1, nc2 ) ;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1787^^^^^1673^1794^[ADD] qn = compiler.qname ( nc1, nc2 ) ;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^qn = compiler.qname ( false, nc1 ) ;^1790^^^^^1673^1794^[REPLACE] qn = compiler.qname ( null, nc1 ) ;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return qn;}^1792^^^^^1673^1794^[REPLACE] {if  ( true )  return qn;}^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1792^1793^1794^^^1673^1794^[ADD] {if  ( true )  return qn;} throw new Error ( "Missing return statement in function" ) ; }^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return t;  ;^1792^^^^^1673^1794^[REPLACE] {if  ( true )  return qn;}^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1793^^^^^1673^1794^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] WildcardName [TYPE] Object [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  Object qn  [TYPE]  String nc1  nc2  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^boolean path = false  ;^1798^^^^^1797^1823^[REPLACE] int type;^[METHOD] NodeType [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^jj_la1[38 >>> 3] = jj_gen;^1817^^^^^1797^1823^[REPLACE] jj_la1[38] = jj_gen;^[METHOD] NodeType [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1819^^^^^1797^1823^[REPLACE] throw new ParseException  (" ")  ;^[METHOD] NodeType [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( false )  return type;}^1821^^^^^1797^1823^[REPLACE] {if  ( true )  return type;}^[METHOD] NodeType [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1821^1822^1823^^^1797^1823^[ADD] {if  ( true )  return type;} throw new Error ( "Missing return statement in function" ) ; }^[METHOD] NodeType [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^{if  ( true )  return jj_gen;}^1821^^^^^1797^1823^[REPLACE] {if  ( true )  return type;}^[METHOD] NodeType [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[REPLACE]^return ;^1822^^^^^1797^1823^[REPLACE] throw new Error ( "Missing return statement in function" ) ;^[METHOD] NodeType [TYPE] int [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type 
[ADD]^^1898^^^^^1897^1990^[ADD] Token xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^xsp  =  xsp ;^1899^^^^^1897^1990^[REPLACE] xsp = jj_scanpos;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1900^^^^^1897^1990^[REPLACE] if  ( jj_3R_62 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1900^1901^1902^1903^^1897^1990^[ADD] if  ( jj_3R_62 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_63 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1988^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1988^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1902^^^^^1897^1990^[REPLACE] if  ( jj_3R_63 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1987^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1987^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1904^^^^^1897^1990^[REPLACE] if  ( jj_3R_64 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1986^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1986^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1906^^^^^1897^1990^[REPLACE] if  ( jj_3R_65 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1985^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1985^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1908^^^^^1897^1990^[REPLACE] if  ( jj_3R_66 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1984^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1910^^^^^1897^1990^[REPLACE] if  ( jj_3R_67 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1983^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1983^1984^1985^1986^1987^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1983^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1912^^^^^1897^1990^[REPLACE] if  ( jj_3R_68 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1982^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1982^1983^1984^1985^1986^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1982^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1914^^^^^1897^1990^[REPLACE] if  ( jj_3R_69 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1914^1915^1916^1917^^1897^1990^[ADD] if  ( jj_3R_69 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_70 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1981^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1981^1982^1983^1984^1985^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1981^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1981^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1916^^^^^1897^1990^[REPLACE] if  ( jj_3R_70 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1916^1917^1918^1919^^1897^1990^[ADD] if  ( jj_3R_70 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_71 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1980^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1980^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1918^^^^^1897^1990^[REPLACE] if  ( jj_3R_71 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1979^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1979^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1920^^^^^1897^1990^[REPLACE] if  ( jj_3R_72 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1920^1921^1922^1923^^1897^1990^[ADD] if  ( jj_3R_72 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_73 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1978^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1978^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1922^^^^^1897^1990^[REPLACE] if  ( jj_3R_73 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1977^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1977^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1924^^^^^1897^1990^[REPLACE] if  ( jj_3R_74 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1926^^^^^1897^1990^[REPLACE] if  ( jj_3R_75 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1926^1927^1928^1929^^1897^1990^[ADD] if  ( jj_3R_75 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_76 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1975^1976^1977^1978^1979^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1928^^^^^1897^1990^[REPLACE] if  ( jj_3R_76 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1930^^^^^1897^1990^[REPLACE] if  ( jj_3R_77 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1932^^^^^1897^1990^[REPLACE] if  ( jj_3R_78 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1932^1933^1934^1935^^1897^1990^[ADD] if  ( jj_3R_78 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_79 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1934^^^^^1897^1990^[REPLACE] if  ( jj_3R_79 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1934^1935^1936^1937^^1897^1990^[ADD] if  ( jj_3R_79 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_80 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1936^^^^^1897^1990^[REPLACE] if  ( jj_3R_80 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1938^^^^^1897^1990^[REPLACE] if  ( jj_3R_81 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1940^^^^^1897^1990^[REPLACE] if  ( jj_3R_82 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1968^1969^1970^1971^1972^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1942^^^^^1897^1990^[REPLACE] if  ( jj_3R_83 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1944^^^^^1897^1990^[REPLACE] if  ( jj_3R_84 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1944^1945^1946^1947^^1897^1990^[ADD] if  ( jj_3R_84 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_85 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1946^^^^^1897^1990^[REPLACE] if  ( jj_3R_85 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1946^1947^1948^1949^^1897^1990^[ADD] if  ( jj_3R_85 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_86 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1948^^^^^1897^1990^[REPLACE] if  ( jj_3R_86 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1948^1949^1950^1951^^1897^1990^[ADD] if  ( jj_3R_86 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_87 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1964^1965^1966^1967^1968^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1950^^^^^1897^1990^[REPLACE] if  ( jj_3R_87 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1952^^^^^1897^1990^[REPLACE] if  ( jj_3R_88 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1952^1953^1954^1955^^1897^1990^[ADD] if  ( jj_3R_88 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_89 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1954^^^^^1897^1990^[REPLACE] if  ( jj_3R_89 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if   (  jj_3R_32  (    )    )   {  ;^1956^^^^^1897^1990^[REPLACE] if  ( jj_3R_90 (  )  )  {^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1960^1961^1962^1963^1964^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_3R_91 (  )  )  return false;^1958^^^^^1897^1990^[REPLACE] if  ( jj_3R_91 (  )  )  return true;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return t;  ;^1958^^^^^1897^1990^[REPLACE] if  ( jj_3R_91 (  )  )  return true;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return true;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1957^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1958^1959^1960^1961^1962^1897^1990^[ADD] if  ( jj_3R_91 (  )  )  return true; if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1955^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1959^1960^1961^1962^1963^1897^1990^[ADD] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  (retval || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1959^1960^1961^1962^1963^1897^1990^[ADD] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1960^1961^1962^1963^1964^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1953^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1955^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1957^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1961^1962^1963^1964^1965^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1951^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1957^1958^^^^1897^1990^[ADD] jj_scanpos = xsp; if  ( jj_3R_91 (  )  )  return true;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;if  ( jj_3R_91 (  )  )  return true;^1954^1955^1956^1957^1958^1897^1990^[ADD] if  ( jj_3R_89 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_90 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_91 (  )  )  return true;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1954^1955^1956^1957^1958^1897^1990^[ADD] if  ( jj_3R_89 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_90 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_91 (  )  )  return true;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1949^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1951^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1961^1962^1963^1964^1965^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;if  ( jj_3R_91 (  )  )  return true;if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1956^1957^1958^1959^1960^1897^1990^[ADD] if  ( jj_3R_90 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_91 (  )  )  return true; if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1958^1959^1960^1961^1962^1897^1990^[ADD] if  ( jj_3R_91 (  )  )  return true; if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1953^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^if  ( jj_3R_91 (  )  )  return true;^1957^1958^^^^1897^1990^[ADD] jj_scanpos = xsp; if  ( jj_3R_91 (  )  )  return true;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1962^1963^1964^1965^1966^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1947^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1964^1965^1966^1967^1968^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1956^1957^1958^1959^1960^1897^1990^[ADD] if  ( jj_3R_90 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_91 (  )  )  return true; if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( retval || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1949^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 2 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1962^1963^1964^1965^1966^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  (path || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1945^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1947^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1952^1953^1954^1955^^1897^1990^[ADD] if  ( jj_3R_88 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_89 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1963^1964^1965^1966^1967^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1963^1964^1965^1966^1967^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 1 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1965^1966^1967^1968^1969^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1966^1967^1968^1969^1970^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1943^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1945^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1950^1951^1952^1953^^1897^1990^[ADD] if  ( jj_3R_87 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_88 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0L ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 4 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1950^1951^1952^1953^^1897^1990^[ADD] if  ( jj_3R_87 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_88 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1965^1966^1967^1968^1969^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1948^1949^1950^1951^^1897^1990^[ADD] if  ( jj_3R_86 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_87 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 0 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1967^1968^1969^1970^1971^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1941^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1943^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 4 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0L ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1946^1947^1948^1949^^1897^1990^[ADD] if  ( jj_3R_85 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_86 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 3 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( path || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 1 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1966^1967^1968^1969^1970^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1939^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1941^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1940^1941^1942^1943^^1897^1990^[ADD] if  ( jj_3R_82 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_83 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 4 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 4 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 0 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 1 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 4 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 1 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1944^1945^1946^1947^^1897^1990^[ADD] if  ( jj_3R_84 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_85 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 3 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1937^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1939^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 3 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 1 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1942^1943^1944^1945^^1897^1990^[ADD] if  ( jj_3R_83 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_84 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 2 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 1 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 2 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 3 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1967^1968^1969^1970^1971^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 0 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1968^1969^1970^1971^1972^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1935^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1969^1970^1971^1972^1973^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 0 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 1 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 1 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 2 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1937^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 2 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 1 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 1 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 0 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1933^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1935^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1971^1972^1973^1974^1975^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1938^1939^1940^1941^^1897^1990^[ADD] if  ( jj_3R_81 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_82 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1940^1941^1942^1943^^1897^1990^[ADD] if  ( jj_3R_82 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_83 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 4 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 4 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 3 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 4 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 3 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 0 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 1 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 3 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 3 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1936^1937^1938^1939^^1897^1990^[ADD] if  ( jj_3R_80 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_81 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1938^1939^1940^1941^^1897^1990^[ADD] if  ( jj_3R_81 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_82 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 0 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 0 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 0 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1969^1970^1971^1972^1973^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 0 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 2 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 3 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 3 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1931^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1933^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1972^1973^1974^1975^1976^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1934^1935^1936^1937^^1897^1990^[ADD] if  ( jj_3R_79 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_80 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 0 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1942^1943^1944^1945^^1897^1990^[ADD] if  ( jj_3R_83 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_84 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 2 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 3 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1970^1971^1972^1973^1974^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 2 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 2 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 4 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 2 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 3 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 2 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 3 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 2 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 4 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1973^1974^1975^1976^1977^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1929^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 1 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 1 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 1 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 2 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 1 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1971^1972^1973^1974^1975^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 4 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 0 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 1 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 3 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 4 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 * 4 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1931^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 4 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1970^1971^1972^1973^1974^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 0 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 - 2 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 3 ||retval )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1927^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 + 4 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 3 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 3 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 2 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 1 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 3 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1936^1937^1938^1939^^1897^1990^[ADD] if  ( jj_3R_80 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_81 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 1 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 2 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1972^1973^1974^1975^1976^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 % 2 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 << 0 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 0 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1973^1974^1975^1976^1977^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1925^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 4 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >>> 4 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 0 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1932^1933^1934^1935^^1897^1990^[ADD] if  ( jj_3R_78 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_79 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 / 4 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1974^1975^1976^1977^1978^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||retval )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1929^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1976^1977^1978^1979^1980^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1923^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1924^1925^1926^1927^^1897^1990^[ADD] if  ( jj_3R_74 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_75 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||path )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1930^1931^1932^1933^^1897^1990^[ADD] if  ( jj_3R_77 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_78 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^if  ( jj_la == 0 >> 2 ||path )  return false;^1959^^^^^1897^1990^[REPLACE] if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1977^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1977^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1921^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1923^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1977^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1928^1929^1930^1931^^1897^1990^[ADD] if  ( jj_3R_76 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_77 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1927^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1930^1931^1932^1933^^1897^1990^[ADD] if  ( jj_3R_77 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_78 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 ||retval )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||path )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1977^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1978^1979^1980^1981^1982^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1919^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1925^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1977^1978^1979^1980^1981^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1975^1976^1977^1978^1979^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||path )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||path )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 ||path )  return false;^1960^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1976^1977^1978^1979^1980^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||path )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||retval )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1921^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1977^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1928^1929^1930^1931^^1897^1990^[ADD] if  ( jj_3R_76 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_77 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||path )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||retval )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( retval || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (path || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1974^1975^1976^1977^1978^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 ||retval )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 ||path )  return false;^1978^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1978^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1917^^^^^1897^1990^[ADD] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1919^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1918^1919^1920^1921^^1897^1990^[ADD] if  ( jj_3R_71 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_72 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 || jj_scanpos == jj_lastpos )  return false;^1978^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1924^1925^1926^1927^^1897^1990^[ADD] if  ( jj_3R_74 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_75 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1926^1927^1928^1929^^1897^1990^[ADD] if  ( jj_3R_75 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_76 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( path || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||path )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 0 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||path )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( retval || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 ||path )  return false;^1961^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 ||retval )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||path )  return false;^1978^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||path )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||path )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 4 ||retval )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 2 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||path )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 1 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 4 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^^1922^1923^1924^1925^^1897^1990^[ADD] if  ( jj_3R_73 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_74 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1977^1978^1979^1980^1981^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||retval )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||path )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 3 ||path )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 ||path )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 || jj_scanpos == jj_lastpos )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 1 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 0 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 ||path )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||retval )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 ||path )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 3 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 3 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 4 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 1 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  (retval || jj_scanpos == jj_lastpos )  return false;^1978^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1979^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^return false;  ;^1980^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1915^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^jj_scanpos = token  ;^1917^^^^^1897^1990^[REPLACE] jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^else if   (  jj_la == 0 && jj_scanpos == jj_lastpos  )   return false; return false;  ;^1979^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1979^1980^1981^1982^1983^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1978^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 0 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 0 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||retval )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 ||retval )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 0 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 0 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 4 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( path || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 3 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 4 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 1 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 2 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 3 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0L ||retval )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 3 ||retval )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 2 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 4 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^jj_scanpos = xsp;jj_scanpos = xsp;^1922^1923^1924^1925^^1897^1990^[ADD] if  ( jj_3R_73 (  )  )  { jj_scanpos = xsp; if  ( jj_3R_74 (  )  )  { jj_scanpos = xsp;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1977^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 ||path )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 2 ||retval )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 1 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L || jj_scanpos == jj_lastpos )  return false;^1974^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 / 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 3 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 3 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0L ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||retval )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 2 || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 0 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 1 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 4 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 4 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >> 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 2 ||retval )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 1 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 1 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 >>> 4 ||path )  return false;^1963^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 2 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 4 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||retval )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1978^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[ADD]^}   } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;} else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^1978^1979^1980^1981^1982^1897^1990^[ADD] else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false; } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (retval || jj_scanpos == jj_lastpos )  return false;^1977^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 3 || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 4 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 0 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 4 ||path )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 2 || jj_scanpos == jj_lastpos )  return false;^1975^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 3 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 2 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >>> 3 || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 0 ||retval )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 << 1 || jj_scanpos == jj_lastpos )  return false;^1968^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 << 3 || jj_scanpos == jj_lastpos )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 * 2 ||retval )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 - 2 || jj_scanpos == jj_lastpos )  return false;^1972^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 % 1 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 >> 3 ||retval )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 / 0 || jj_scanpos == jj_lastpos )  return false;^1969^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 0 ||path )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 % 0 ||path )  return false;^1962^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 2 || jj_scanpos == jj_lastpos )  return false;^1970^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  (path || jj_scanpos == jj_lastpos )  return false;^1976^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 1 ||retval )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 4 ||path )  return false;^1966^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 1 || jj_scanpos == jj_lastpos )  return false;^1973^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 1 ||path )  return false;^1964^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 * 4 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 - 2 ||retval )  return false;^1967^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^}  if  ( jj_la == 0 + 0 || jj_scanpos == jj_lastpos )  return false;^1971^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
[REPLACE]^} else if  ( jj_la == 0 + 1 ||path )  return false;^1965^^^^^1897^1990^[REPLACE] } else if  ( jj_la == 0 && jj_scanpos == jj_lastpos )  return false;^[METHOD] jj_3R_18 [TYPE] boolean [PARAMETER] [CLASS] XPathParser JJCalls   [TYPE]  Compiler compiler  [TYPE]  boolean false  jj_rescan  jj_semLA  lookingAhead  path  retval  true  [TYPE]  XPathParserTokenManager tm  token_source  [TYPE]  JJCalls next  [TYPE]  SimpleCharStream jj_input_stream  [TYPE]  Token first  jj_lastpos  jj_nt  jj_scanpos  token  xsp  [TYPE]  int[] jj_expentry  jj_la1  jj_la1_0  jj_la1_1  jj_la1_2  jj_lasttokens  [TYPE]  JJCalls[] jj_2_rtns  [TYPE]  Vector jj_expentries  [TYPE]  int arg  axis  code  gen  i  index  jj_endpos  jj_gc  jj_gen  jj_kind  jj_la  type  xla 
