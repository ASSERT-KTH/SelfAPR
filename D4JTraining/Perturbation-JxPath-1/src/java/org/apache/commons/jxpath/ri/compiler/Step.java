[REPLACE]^private  long  axis;^26^^^^^^^[REPLACE] private int axis;^ [CLASS] Step  
[ADD]^^60^^^^^59^102^[ADD] StringBuffer buffer = new StringBuffer (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^int i = 0  ;^61^^^^^59^102^[REPLACE] int axis = getAxis (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer .toString (  )  ;^89^^^^^81^92^[REPLACE] buffer.append ( axisToString ( axis )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[ADD]^^89^^^^^81^92^[ADD] buffer.append ( axisToString ( axis )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer.append ( iToString ( axis )  ) ;^89^^^^^81^92^[REPLACE] buffer.append ( axisToString ( axis )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[ADD]^buffer.append ( "::" ) ;^89^90^^^^81^92^[ADD] buffer.append ( axisToString ( axis )  ) ; buffer.append ( "::" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer.append ( "." )  ;^90^^^^^81^92^[REPLACE] buffer.append ( "::" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[ADD]^^90^^^^^81^92^[ADD] buffer.append ( "::" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer.append ( "." )  ;^91^^^^^81^92^[REPLACE] buffer.append ( nodeTest ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer.append ( "." )  ;^86^^^^^81^92^[REPLACE] buffer.append ( "" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer.append ( "." )  ;^79^^^^^75^92^[REPLACE] buffer.append ( ".." ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[ADD]^^79^^^^^75^92^[ADD] buffer.append ( ".." ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer.append ( axisToString ( axis )  )  ;^89^^^^^81^92^[REPLACE] buffer.append ( axisToString ( axis )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[ADD]^^86^^^^^81^92^[ADD] buffer.append ( "" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer.append ( '[' )  ;^73^^^^^69^92^[REPLACE] buffer.append ( "." ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^axisToString ( axis )  ;^89^^^^^81^92^[REPLACE] buffer.append ( axisToString ( axis )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer .toString (  )  ;^79^^^^^75^92^[REPLACE] buffer.append ( ".." ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REMOVE]^buffer.append ( "." )  ;^79^^^^^75^92^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer.append ( "." )  ;^66^^^^^59^102^[REPLACE] buffer.append ( '@' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer.append ( "." )  ;^67^^^^^59^102^[REPLACE] buffer.append ( nodeTest ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REMOVE]^buffer.append ( axisToString ( axis )  )  ;^89^^^^^81^92^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[ADD]^^89^90^^^^81^92^[ADD] buffer.append ( axisToString ( axis )  ) ; buffer.append ( "::" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer .toString (  )  ;^90^^^^^81^92^[REPLACE] buffer.append ( "::" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[ADD]^^91^^^^^81^92^[ADD] buffer.append ( nodeTest ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REMOVE]^buffer.append ( '[' )  ;^73^^^^^69^92^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer .toString (  )  ;^86^^^^^81^92^[REPLACE] buffer.append ( "" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REMOVE]^buffer.append ( predicates[i] )  ;^89^^^^^81^92^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer.append ( "." )  ;^63^^^^^59^102^[REPLACE] buffer.append ( nodeTest ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer .toString (  )  ;^73^^^^^69^92^[REPLACE] buffer.append ( "." ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer .toString (  )  ;^66^^^^^59^102^[REPLACE] buffer.append ( '@' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[ADD]^^66^67^^^^59^102^[ADD] buffer.append ( '@' ) ; buffer.append ( nodeTest ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer .toString (  )  ;^67^^^^^59^102^[REPLACE] buffer.append ( nodeTest ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^buffer .toString (  )  ;^91^^^^^81^92^[REPLACE] buffer.append ( nodeTest ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REMOVE]^buffer.append ( "." )  ;^90^^^^^81^92^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[ADD]^^93^^^^^59^102^[ADD] Expression[] predicates = getPredicates (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^if  ( predicates == false )  {^94^^^^^59^102^[REPLACE] if  ( predicates != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^for  ( int i = 0 ; i < predicates.length; i++ )  {^95^^^^^59^102^[REPLACE] for  ( int i = 0; i < predicates.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return buffer .StringBuffer (  )  ;^101^^^^^59^102^[REPLACE] return buffer.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Step   [TYPE]  StringBuffer buffer  [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "self";  ;^107^^^^^104^134^[REPLACE] return "self";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "child";  ;^109^^^^^104^134^[REPLACE] return "child";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "parent";  ;^111^^^^^104^134^[REPLACE] return "parent";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "ancestor";  ;^113^^^^^104^134^[REPLACE] return "ancestor";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "attribute";  ;^115^^^^^104^134^[REPLACE] return "attribute";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "namespace";  ;^117^^^^^104^134^[REPLACE] return "namespace";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "preceding";  ;^119^^^^^104^134^[REPLACE] return "preceding";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "following";  ;^121^^^^^104^134^[REPLACE] return "following";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "descendant";  ;^123^^^^^104^134^[REPLACE] return "descendant";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "ancestor-or-self";  ;^125^^^^^104^134^[REPLACE] return "ancestor-or-self";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "preceding-sibling";  ;^127^^^^^104^134^[REPLACE] return "following-sibling";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "preceding-sibling";  ;^129^^^^^104^134^[REPLACE] return "preceding-sibling";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "descendant-or-self";  ;^131^^^^^104^134^[REPLACE] return "descendant-or-self";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
[REPLACE]^return "UNKNOWN";  ;^133^^^^^104^134^[REPLACE] return "UNKNOWN";^[METHOD] axisToString [TYPE] String [PARAMETER] int axis [CLASS] Step   [TYPE]  boolean false  true  [TYPE]  Expression[] predicates  [TYPE]  int axis  i  [TYPE]  NodeTest nodeTest 
