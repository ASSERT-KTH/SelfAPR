[REPLACE]^private int position  = null ;^40^^^^^^^[REPLACE] private int position = 0;^ [CLASS] JDOMNamespaceIterator  
[REPLACE]^Namespace ns = element.getParent (  ) ;^56^^^^^55^73^[REPLACE] Namespace ns = element.getNamespace (  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[REPLACE]^if  ( ns == this && !prefixes.contains ( ns.getURI (  )  )  )  {^57^^^^^55^73^[REPLACE] if  ( ns != null && !prefixes.contains ( ns.getPrefix (  )  )  )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[REPLACE]^namespaces.get ( ns ) ;^58^^^^^55^73^[REPLACE] namespaces.add ( ns ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[REPLACE]^prefixes.add ( ns.getURI (  )  ) ;^59^^^^^55^73^[REPLACE] prefixes.add ( ns.getPrefix (  )  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[REPLACE]^List others = element.getNamespace (  ) ;^61^^^^^55^73^[REPLACE] List others = element.getAdditionalNamespaces (  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[REPLACE]^if  ( ns == null && !prefixes.contains ( ns.getPrefix (  )  )  )  {^64^^^^^55^73^[REPLACE] if  ( ns != null && !prefixes.contains ( ns.getPrefix (  )  )  )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[REPLACE]^namespaces.get ( ns ) ;^65^^^^^55^73^[REPLACE] namespaces.add ( ns ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[REPLACE]^( prefixes.contains ( ns.getPrefix (  )  )  )  ;^66^^^^^55^73^[REPLACE] prefixes.add ( ns.getPrefix (  )  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[REPLACE]^prefixes.add ( ns .getURI (  )   ) ;^66^^^^^55^73^[REPLACE] prefixes.add ( ns.getPrefix (  )  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[REPLACE]^ns =   ( Namespace )  namespaces.get ( i ) ;^63^^^^^55^73^[REPLACE] ns =  ( Namespace )  others.get ( i ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[REPLACE]^for  ( int i = 0 ; i < others.size (  ) ; i++ )  {^62^^^^^55^73^[REPLACE] for  ( int i = 0; i < others.size (  ) ; i++ )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[ADD]^^69^^^^^55^73^[ADD] Object parent = element.getParent (  ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[REPLACE]^if  ( ! parent instanceof Element )  {^70^^^^^55^73^[REPLACE] if  ( parent instanceof Element )  {^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[REPLACE]^collectNamespaces (  (  ( Element )   ( node )  )  )  ;^71^^^^^55^73^[REPLACE] collectNamespaces (  ( Element ) parent ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
[ADD]^^71^^^^^55^73^[ADD] collectNamespaces (  ( Element ) parent ) ;^[METHOD] collectNamespaces [TYPE] void [PARAMETER] Element element [CLASS] JDOMNamespaceIterator   [TYPE]  Set prefixes  [TYPE]  boolean false  true  [TYPE]  Element element  [TYPE]  List namespaces  others  [TYPE]  Object parent  [TYPE]  NodePointer parent  [TYPE]  int i  position  [TYPE]  Namespace ns 
