[REPLACE]^private static final Object UNINITIALIZED  = null ;^99^^^^^^^[REPLACE] private static final Object UNINITIALIZED = new Object (  ) ;^ [CLASS] PropertyOwnerPointer  
[REPLACE]^private Object value  = null ;^101^^^^^^^[REPLACE] private Object value = UNINITIALIZED;^ [CLASS] PropertyOwnerPointer  
[REPLACE]^return createNodeIterator ( true, reverse, startWith ) ;^66^^^^^64^67^[REPLACE] return createNodeIterator ( null, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return createNodeIterator ( this, reverse, startWith ) ;^66^^^^^44^70^[REPLACE] return createNodeIterator ( null, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return createNodeIterator ( false, reverse, startWith ) ;^66^^^^^44^70^[REPLACE] return createNodeIterator ( null, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^if  ( isDefaultNamespace ( testName.getPrefix (  )  )  )  {^52^^^^^44^70^[REPLACE] if  ( !isDefaultNamespace ( testName.getPrefix (  )  )  )  {^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^else {^55^^^^^44^70^[REPLACE] else if  ( nodeNameTest.isWildcard (  )  )  {^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^property =  null.getName (  ) ;^59^^^^^55^60^[REPLACE] property = testName.getName (  ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^property = true;^56^^^^^44^70^[REPLACE] property = null;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[ADD]^^56^^^^^44^70^[ADD] property = null;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[ADD]^^59^^^^^44^70^[ADD] property = testName.getName (  ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return this;^53^^^^^44^70^[REPLACE] return null;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^property = false;^56^^^^^44^70^[REPLACE] property = null;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^property =  null.getName (  ) ;^59^^^^^44^70^[REPLACE] property = testName.getName (  ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return createNodeIterator  (  null, reverse, startWith  )  ;  ;^61^^^^^44^70^[REPLACE] return createNodeIterator ( property, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^QName testName = nodeNameTest.getNodeName (  )  ;^49^^^^^44^70^[REPLACE] NodeNameTest nodeNameTest =  ( NodeNameTest )  test;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^QName testName = nodeNameTest .isWildcard (  )  ;^50^^^^^44^70^[REPLACE] QName testName = nodeNameTest.getNodeName (  ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^QName testName = nodeNameTest.getNodeName (  )  ;^51^^^^^44^70^[REPLACE] String property;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[ADD]^property = null;^55^56^57^^^44^70^[ADD] else if  ( nodeNameTest.isWildcard (  )  )  { property = null; }^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return true;^53^^^^^44^70^[REPLACE] return null;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^if   (  !isDefaultNamespace  (  testName.getPrefix  (    )    )    )   {  ;^55^^^^^44^70^[REPLACE] else if  ( nodeNameTest.isWildcard (  )  )  {^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[ADD]^^59^^^^^55^60^[ADD] property = testName.getName (  ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return createNodeIterator  (  null, reverse, startWith  )  ;  ;^66^^^^^64^67^[REPLACE] return createNodeIterator ( null, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return createNodeIterator ( true, reverse, startWith ) ;^66^^^^^44^70^[REPLACE] return createNodeIterator ( null, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return createNodeIterator ( false, reverse, startWith ) ;^66^^^^^64^67^[REPLACE] return createNodeIterator ( null, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return false;^53^^^^^44^70^[REPLACE] return null;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[ADD]^^49^50^^^^44^70^[ADD] NodeNameTest nodeNameTest =  ( NodeNameTest )  test; QName testName = nodeNameTest.getNodeName (  ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return createNodeIterator  (  null, reverse, startWith  )  ;  ;^46^^^^^44^70^[REPLACE] return createNodeIterator ( null, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^if   (  parent != null  )   {  ;^52^^^^^44^70^[REPLACE] if  ( !isDefaultNamespace ( testName.getPrefix (  )  )  )  {^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return null;  ;^53^^^^^44^70^[REPLACE] return null;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^else if  ( nodeNameTest .getNodeName (  )   )  {^55^^^^^44^70^[REPLACE] else if  ( nodeNameTest.isWildcard (  )  )  {^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^property = this;^56^^^^^44^70^[REPLACE] property = null;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^if  ( nodeNameTest.isWildcard (  )  )  {^55^^^^^44^70^[REPLACE] else if  ( nodeNameTest.isWildcard (  )  )  {^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return createNodeIterator ( false, reverse, startWith ) ;^46^^^^^44^70^[REPLACE] return createNodeIterator ( null, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return createNodeIterator ( property, true, startWith ) ;^61^^^^^44^70^[REPLACE] return createNodeIterator ( property, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return createNodeIterator ( true, true, startWith ) ;^66^^^^^44^70^[REPLACE] return createNodeIterator ( null, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^QName testName = nodeNameTest.isWildcard (  ) ;^50^^^^^44^70^[REPLACE] QName testName = nodeNameTest.getNodeName (  ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^return true;^69^^^^^44^70^[REPLACE] return null;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] PropertyOwnerPointer   [TYPE]  boolean false  reverse  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Object UNINITIALIZED  value  [TYPE]  NodePointer startWith  [TYPE]  String property  [TYPE]  NodeTest test 
[REPLACE]^this.value = null  ;^121^^^^^120^140^[REPLACE] this.value = value;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^if   (  !isDefaultNamespace  (  testName.getPrefix  (    )    )    )   {  ;^122^^^^^120^140^[REPLACE] if  ( parent.isContainer (  )  )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^if   (  parent != null  )   {  ;^125^^^^^120^140^[REPLACE] else if  ( parent != null )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[ADD]^^137^138^^^^125^139^[ADD] throw new UnsupportedOperationException ( "Cannot replace the root object" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( index  &&  WHOLE_COLLECTION )  {^126^^^^^120^140^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^return ;^132^133^^^^126^134^[REPLACE] throw new JXPathInvalidAccessException ( "The specified collection element does not exist: " + this ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^return ;^127^128^129^^^120^140^[REPLACE] throw new UnsupportedOperationException ( "Cannot setValue of an object that is not " + "some other object's property" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^return ;^132^133^^^^120^140^[REPLACE] throw new JXPathInvalidAccessException ( "The specified collection element does not exist: " + this ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( index  !=  WHOLE_COLLECTION )  {^126^^^^^120^140^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^throw new UnsupportedOperationException ( "Cannot replace the root object" )  ;^127^128^129^^^120^140^[REPLACE] throw new UnsupportedOperationException ( "Cannot setValue of an object that is not " + "some other object's property" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^return ;^137^138^^^^120^140^[REPLACE] throw new UnsupportedOperationException ( "Cannot replace the root object" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^parent.setValue ( UNINITIALIZED ) ;^123^^^^^120^140^[REPLACE] parent.setValue ( value ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[ADD]^^123^^^^^120^140^[ADD] parent.setValue ( value ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( this == null )  {^125^^^^^120^140^[REPLACE] else if  ( parent != null )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^if  ( index  ) {^126^^^^^120^140^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[ADD]^^132^133^^^^126^134^[ADD] throw new JXPathInvalidAccessException ( "The specified collection element does not exist: " + this ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[ADD]^^127^128^129^^^120^140^[ADD] throw new UnsupportedOperationException ( "Cannot setValue of an object that is not " + "some other object's property" ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
[REPLACE]^if  (true  !=  WHOLE_COLLECTION )  {^126^^^^^120^140^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] PropertyOwnerPointer   [TYPE]  Object UNINITIALIZED  value  [TYPE]  boolean false  true 
