[REPLACE]^private int position  = null ;^40^^^^^^^[REPLACE] private int position = 0;^ [CLASS] DOMAttributeIterator  
[ADD]^^43^44^^^^42^66^[ADD] this.parent = parent; this.name = name;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^44^^^^^42^66^[ADD] this.name = name;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^attributes  =  attributes ;^45^^^^^42^66^[REPLACE] attributes = new ArrayList (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testPrefix = testName.getPrefix (  )  ;^46^^^^^42^66^[REPLACE] Node node =  ( Node )  parent.getNode (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( node.getNodeType (  )   ||  Node.ELEMENT_NODE )  {^47^^^^^42^66^[REPLACE] if  ( node.getNodeType (  )  == Node.ELEMENT_NODE )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( lname.equals ( "*" )  )  {^49^^^^^42^66^[REPLACE] if  ( !lname.equals ( "*" )  )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if   (  attr != null  )   {  ;^60^^^^^49^64^[REPLACE] if  ( testAttr ( attr, name )  )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^NamedNodeMap map = node.getNodeType (  ) ;^56^^^^^49^64^[REPLACE] NamedNodeMap map = node.getAttributes (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^int count = map .item ( count )  ;^57^^^^^49^64^[REPLACE] int count = map.getLength (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 0L; i < count; i++ )  {^58^^^^^49^64^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^59^^^^^49^64^[ADD] Attr attr =  ( Attr )  map.item ( i ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if   (  testNS != null  )   {  ;^51^^^^^42^66^[REPLACE] if  ( attr != null )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^( node.getNodeType (  )  )  ;^52^^^^^42^66^[REPLACE] attributes.add ( attr ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testPrefix = testName.getPrefix (  )  ;^50^^^^^42^66^[REPLACE] Attr attr = getAttribute (  ( Element )  node, name ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( attr == null )  {^51^^^^^42^66^[REPLACE] if  ( attr != null )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^attributes.get ( attr ) ;^52^^^^^42^66^[REPLACE] attributes.add ( attr ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if   (  attr != null  )   {  ;^60^^^^^42^66^[REPLACE] if  ( testAttr ( attr, name )  )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^attributes.get ( attr ) ;^61^^^^^42^66^[REPLACE] attributes.add ( attr ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String lname = name.getPrefix (  ) ;^48^^^^^42^66^[REPLACE] String lname = name.getName (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^NamedNodeMap map = node.getNodeType (  ) ;^56^^^^^42^66^[REPLACE] NamedNodeMap map = node.getAttributes (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testPrefix = testName.getPrefix (  )  ;^57^^^^^42^66^[REPLACE] int count = map.getLength (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^58^59^60^61^62^42^66^[ADD] for  ( int i = 0; i < count; i++ )  { Attr attr =  ( Attr )  map.item ( i ) ; if  ( testAttr ( attr, name )  )  { attributes.add ( attr ) ; }^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr =  ( Attr )  map .getLength (  )  ;^59^^^^^42^66^[REPLACE] Attr attr =  ( Attr )  map.item ( i ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^Attr attr = getAttribute (  ( Element )  node, name ) ;attributes.add ( attr ) ;^49^50^51^52^53^42^66^[ADD] if  ( !lname.equals ( "*" )  )  { Attr attr = getAttribute (  ( Element )  node, name ) ; if  ( attr != null )  { attributes.add ( attr ) ; }^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^60^61^62^^^49^64^[ADD] if  ( testAttr ( attr, name )  )  { attributes.add ( attr ) ; }^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^int count = map .item ( position )  ;^57^^^^^49^64^[REPLACE] int count = map.getLength (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( attr == false )  {^51^^^^^42^66^[REPLACE] if  ( attr != null )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^attributes.add ( attr ) ;^51^52^53^^^42^66^[ADD] if  ( attr != null )  { attributes.add ( attr ) ; }^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^50^^^^^42^66^[ADD] Attr attr = getAttribute (  ( Element )  node, name ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( attr == this  )  {^51^^^^^42^66^[REPLACE] if  ( attr != null )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^60^61^62^^^42^66^[ADD] if  ( testAttr ( attr, name )  )  { attributes.add ( attr ) ; }^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String lname = name .getPrefix ( attr )  ;^48^^^^^42^66^[REPLACE] String lname = name.getName (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^56^^^^^42^66^[ADD] NamedNodeMap map = node.getAttributes (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^57^^^^^42^66^[ADD] int count = map.getLength (  ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 0L; i < count; i++ )  {^58^^^^^42^66^[REPLACE] for  ( int i = 0; i < count; i++ )  {^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr =  ( Attr )  map.item ( position ) ;^59^^^^^42^66^[REPLACE] Attr attr =  ( Attr )  map.item ( i ) ;^[METHOD] <init> [TYPE] QName) [PARAMETER] NodePointer parent QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  QName name  [TYPE]  Node node  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String lname  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String nodePrefix = DOMNodePointer.getLocalName ( attr ) ;^69^^^^^68^100^[REPLACE] String nodePrefix = DOMNodePointer.getPrefix ( attr ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^70^^^^^68^100^[ADD] String nodeLocalName = DOMNodePointer.getLocalName ( attr ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( testPrefix == null && nodePrefix.equals ( "xmlns" )  )  {^72^^^^^68^100^[REPLACE] if  ( nodePrefix != null && nodePrefix.equals ( "xmlns" )  )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return true;^73^^^^^68^100^[REPLACE] return false;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( nodePrefix != null ) {^76^^^^^68^100^[REPLACE] if  ( nodePrefix == null && nodeLocalName.equals ( "xmlns" )  )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^return false;^76^77^78^^^68^100^[ADD] if  ( nodePrefix == null && nodeLocalName.equals ( "xmlns" )  )  { return false; }^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return true;^77^^^^^68^100^[REPLACE] return false;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^80^^^^^68^100^[ADD] String testLocalName = name.getName (  ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( testLocalName.equals ( "*" )  && testLocalName.equals ( nodeLocalName )  )  {^81^^^^^68^100^[REPLACE] if  ( testLocalName.equals ( "*" )  || testLocalName.equals ( nodeLocalName )  )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if   (  testAttr  (  attr, name  )    )   {  ;^84^^^^^68^100^[REPLACE] if  ( equalStrings ( testPrefix, nodePrefix )  )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return false;^85^^^^^68^100^[REPLACE] return true;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( testNS == null )  {^89^^^^^68^100^[REPLACE] if  ( testPrefix != null )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^89^90^91^^^68^100^[ADD] if  ( testPrefix != null )  { testNS = parent.getNamespaceURI ( testPrefix ) ; }^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^nodeNS = parent.getNamespaceURI ( nodePrefix )  ;^90^^^^^68^100^[REPLACE] testNS = parent.getNamespaceURI ( testPrefix ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if   (  testPrefix != null  )   {  ;^94^^^^^68^100^[REPLACE] if  ( nodePrefix != null )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^95^^^^^68^100^[ADD] nodeNS = parent.getNamespaceURI ( nodePrefix ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^testNS = parent.getNamespaceURI ( testPrefix )  ;^95^^^^^68^100^[REPLACE] nodeNS = parent.getNamespaceURI ( nodePrefix ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return false;  ;^97^^^^^68^100^[REPLACE] return equalStrings ( testNS, nodeNS ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testPrefix = name.getPrefix (  )  ;^82^^^^^68^100^[REPLACE] String testPrefix = testName.getPrefix (  ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String nodeNS = null  ;^88^^^^^68^100^[REPLACE] String testNS = null;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testNS = null  ;^93^^^^^68^100^[REPLACE] String nodeNS = null;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( equalStrings ( testNS, nodePrefix )  )  {^84^^^^^68^100^[REPLACE] if  ( equalStrings ( testPrefix, nodePrefix )  )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  (testNS == null )  {^89^^^^^68^100^[REPLACE] if  ( testPrefix != null )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  (testPrefix == null )  {^94^^^^^68^100^[REPLACE] if  ( nodePrefix != null )  {^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^90^^^^^68^100^[ADD] testNS = parent.getNamespaceURI ( testPrefix ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return equalStrings ( testPrefix, nodeNS ) ;^97^^^^^68^100^[REPLACE] return equalStrings ( testNS, nodeNS ) ;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testNS = false;^88^^^^^68^100^[REPLACE] String testNS = null;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String nodeNS = this;^93^^^^^68^100^[REPLACE] String nodeNS = null;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return false;  ;^99^^^^^68^100^[REPLACE] return false;^[METHOD] testAttr [TYPE] boolean [PARAMETER] Attr attr QName testName [CLASS] DOMAttributeIterator   [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String nodeLocalName  nodeNS  nodePrefix  testLocalName  testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testPrefix = testName.getPrefix (  ) ;^113^^^^^112^141^[REPLACE] String testPrefix = name.getPrefix (  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^String testNS = this;^114^^^^^112^141^[REPLACE] String testNS = null;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  (testNS == true )  {^116^^^^^112^141^[REPLACE] if  ( testPrefix != null )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^nodeNS = parent.getNamespaceURI ( nodePrefix )  ;^117^^^^^112^141^[REPLACE] testNS = parent.getNamespaceURI ( testPrefix ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  (testPrefix == null )  {^120^^^^^112^141^[REPLACE] if  ( testNS != null )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return element.getAttributeNode  (  name.getName  (    )    )  ;  ;^139^^^^^120^140^[REPLACE] return element.getAttributeNode ( name.getName (  )  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( attr == null )  {^122^^^^^112^141^[REPLACE] if  ( attr != null )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return attr;  ;^123^^^^^112^141^[REPLACE] return attr;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if  ( testAttr ( attr, testName )  )  {^132^^^^^112^141^[REPLACE] if  ( testAttr ( attr, name )  )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return attr;  ;^133^^^^^112^141^[REPLACE] return attr;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^attr =   ( Attr )  null.item ( i ) ;^131^^^^^112^141^[REPLACE] attr =  ( Attr )  nnm.item ( i ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return true;^136^^^^^112^141^[REPLACE] return null;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^Attr attr = element .getAttributeNode ( testNS )  ;^121^^^^^112^141^[REPLACE] Attr attr = element.getAttributeNodeNS ( testNS, name.getName (  )  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^NamedNodeMap nnm = element .getNodeType (  )  ;^129^^^^^112^141^[REPLACE] NamedNodeMap nnm = element.getAttributes (  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 1; i < nnm.getLength (  ) ; i++ )  {^130^^^^^112^141^[REPLACE] for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^if   (  attr != null  )   {  ;^132^^^^^112^141^[REPLACE] if  ( testAttr ( attr, name )  )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return false;^136^^^^^112^141^[REPLACE] return null;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^return element.getAttributeNode ( name .getPrefix ( attr )   ) ;^139^^^^^112^141^[REPLACE] return element.getAttributeNode ( name.getName (  )  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[ADD]^^121^^^^^112^141^[ADD] Attr attr = element.getAttributeNodeNS ( testNS, name.getName (  )  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^NamedNodeMap map = node.getAttributes (  )  ;^129^^^^^112^141^[REPLACE] NamedNodeMap nnm = element.getAttributes (  ) ;^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
[REPLACE]^for  ( int i = 0L; i < nnm.getLength (  ) ; i++ )  {^130^^^^^112^141^[REPLACE] for  ( int i = 0; i < nnm.getLength (  ) ; i++ )  {^[METHOD] getAttribute [TYPE] Attr [PARAMETER] Element element QName name [CLASS] DOMAttributeIterator   [TYPE]  NamedNodeMap nnm  [TYPE]  boolean false  true  [TYPE]  QName name  testName  [TYPE]  Element element  [TYPE]  List attributes  [TYPE]  NodePointer parent  [TYPE]  String testNS  testPrefix  [TYPE]  int count  i  position  [TYPE]  Attr attr 
