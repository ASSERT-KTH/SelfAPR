[REPLACE]^public static final  short  WHOLE_COLLECTION = Integer.MIN_VALUE;^44^^^^^^^[REPLACE] public static final int WHOLE_COLLECTION = Integer.MIN_VALUE;^ [CLASS] NodePointer  
[REPLACE]^protected int index ;^45^^^^^^^[REPLACE] protected int index = WHOLE_COLLECTION;^ [CLASS] NodePointer  
[REPLACE]^public static  String UNKNOWN_NAMESPACE = "<<unknown namespace>>";^46^^^^^^^[REPLACE] public static final String UNKNOWN_NAMESPACE = "<<unknown namespace>>";^ [CLASS] NodePointer  
[REPLACE]^private boolean attribute  = null ;^47^^^^^^^[REPLACE] private boolean attribute = false;^ [CLASS] NodePointer  
[ADD]^^60^^^^^59^77^[ADD] NodePointer pointer = null;^[METHOD] newNodePointer [TYPE] NodePointer [PARAMETER] QName name Object bean Locale locale [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^if  ( rootNode != null )  {^61^^^^^59^77^[REPLACE] if  ( bean == null )  {^[METHOD] newNodePointer [TYPE] NodePointer [PARAMETER] QName name Object bean Locale locale [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^pointer =  new NullPointer ( null, locale ) ;^62^^^^^59^77^[REPLACE] pointer = new NullPointer ( name, locale ) ;^[METHOD] newNodePointer [TYPE] NodePointer [PARAMETER] QName name Object bean Locale locale [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^return parent;^63^^^^^59^77^[REPLACE] return pointer;^[METHOD] newNodePointer [TYPE] NodePointer [PARAMETER] QName name Object bean Locale locale [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^if   (  parent != null  )   {  ;^70^^^^^59^77^[REPLACE] if  ( pointer != null )  {^[METHOD] newNodePointer [TYPE] NodePointer [PARAMETER] QName name Object bean Locale locale [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^return parent;^71^^^^^59^77^[REPLACE] return pointer;^[METHOD] newNodePointer [TYPE] NodePointer [PARAMETER] QName name Object bean Locale locale [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^pointer =  null[i].createNodePointer ( name, bean, locale ) ;^69^^^^^59^77^[REPLACE] pointer = factories[i].createNodePointer ( name, bean, locale ) ;^[METHOD] newNodePointer [TYPE] NodePointer [PARAMETER] QName name Object bean Locale locale [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^for  ( int i = 0 ; i < factories.length; i++ )  {^68^^^^^59^77^[REPLACE] for  ( int i = 0; i < factories.length; i++ )  {^[METHOD] newNodePointer [TYPE] NodePointer [PARAMETER] QName name Object bean Locale locale [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[ADD]^^74^75^76^^^59^77^[ADD] throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[METHOD] newNodePointer [TYPE] NodePointer [PARAMETER] QName name Object bean Locale locale [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^+ bean.equals (  )  ) ;^76^^^^^59^77^[REPLACE] + bean.getClass (  )  ) ;^[METHOD] newNodePointer [TYPE] NodePointer [PARAMETER] QName name Object bean Locale locale [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^if  ( pointer == true )  {^93^^^^^87^100^[REPLACE] if  ( pointer != null )  {^[METHOD] newChildNodePointer [TYPE] NodePointer [PARAMETER] NodePointer parent QName name Object bean [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[ADD]^^93^94^95^^^87^100^[ADD] if  ( pointer != null )  { return pointer; }^[METHOD] newChildNodePointer [TYPE] NodePointer [PARAMETER] NodePointer parent QName name Object bean [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^return parent;^94^^^^^87^100^[REPLACE] return pointer;^[METHOD] newChildNodePointer [TYPE] NodePointer [PARAMETER] NodePointer parent QName name Object bean [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[ADD]^^90^91^92^93^94^87^100^[ADD] for  ( int i = 0; i < factories.length; i++ )  { NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ; if  ( pointer != null )  { return pointer;^[METHOD] newChildNodePointer [TYPE] NodePointer [PARAMETER] NodePointer parent QName name Object bean [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^NodePointer pointer = factories[i].createNodePointer ( parent, name, rootNode ) ;^91^92^^^^87^100^[REPLACE] NodePointer pointer = factories[i].createNodePointer ( parent, name, bean ) ;^[METHOD] newChildNodePointer [TYPE] NodePointer [PARAMETER] NodePointer parent QName name Object bean [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^throw new JXPathException (  (  (  (  ( "Cannot compare pointers that do not belong to the same tree: '" + p1 )  + "' and '" )  + p2 )  + "'" )  )  ;^97^98^99^^^87^100^[REPLACE] throw new JXPathException ( "Could not allocate a NodePointer for object of " + bean.getClass (  )  ) ;^[METHOD] newChildNodePointer [TYPE] NodePointer [PARAMETER] NodePointer parent QName name Object bean [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^+ rootNode.equals (  )  ) ;^99^^^^^87^100^[REPLACE] + bean.getClass (  )  ) ;^[METHOD] newChildNodePointer [TYPE] NodePointer [PARAMETER] NodePointer parent QName name Object bean [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  NodePointerFactory[] factories  [TYPE]  boolean attribute  false  true  [TYPE]  QName name  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  [TYPE]  String UNKNOWN_NAMESPACE  [TYPE]  NodePointer parent  pointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^return index;  ;^375^^^^^373^376^[REPLACE] return isNode (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^return index;  ;^375^^^^^343^379^[REPLACE] return isNode (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if   (  parent != null  )   {  ;^348^^^^^343^379^[REPLACE] if  ( isContainer (  )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^return true;^349^^^^^343^379^[REPLACE] return false;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if   (  namespace == null  )   {  ;^354^^^^^343^379^[REPLACE] if  ( nodeName == null )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[ADD]^^354^355^356^^^343^379^[ADD] if  ( nodeName == null )  { return false; }^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^return true;^355^^^^^343^379^[REPLACE] return false;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if  ( equalStrings ( testPrefix, nodePrefix )  )  {^360^^^^^343^379^[REPLACE] if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[ADD]^String testNS = getNamespaceURI ( testPrefix ) ;String nodeNS = getNamespaceURI ( nodePrefix ) ;return false;^360^361^362^363^364^343^379^[ADD] if  ( !equalStrings ( testPrefix, nodePrefix )  )  { String testNS = getNamespaceURI ( testPrefix ) ; String nodeNS = getNamespaceURI ( nodePrefix ) ; if  ( !equalStrings ( testNS, nodeNS )  )  { return false;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if  ( !equalStrings ( testPrefix, nodeNS )  )  {^363^^^^^343^379^[REPLACE] if  ( !equalStrings ( testNS, nodeNS )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[ADD]^return false;^363^364^365^^^343^379^[ADD] if  ( !equalStrings ( testNS, nodeNS )  )  { return false; }^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^return true;^364^^^^^343^379^[REPLACE] return false;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^String nodeNS = getNamespaceURI ( nodePrefix )  ;^361^^^^^343^379^[REPLACE] String testNS = getNamespaceURI ( testPrefix ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^String nodeNS = getNamespaceURI ( testPrefix ) ;^362^^^^^343^379^[REPLACE] String nodeNS = getNamespaceURI ( nodePrefix ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[ADD]^^363^364^365^^^343^379^[ADD] if  ( !equalStrings ( testNS, nodeNS )  )  { return false; }^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if  ( nodeNameTest .getNodeName (  )   )  {^367^^^^^343^379^[REPLACE] if  ( nodeNameTest.isWildcard (  )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^return false;^368^^^^^343^379^[REPLACE] return true;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^return ptr;  ;^368^^^^^343^379^[REPLACE] return true;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^return testName.getName  (    )  .equals  (  nodeName.getName  (    )    )  ;  ;^370^^^^^343^379^[REPLACE] return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[ADD]^^351^352^^^^343^379^[ADD] NodeNameTest nodeNameTest =  ( NodeNameTest )  test; QName testName = nodeNameTest.getNodeName (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^QName testName = nodeNameTest.isWildcard (  ) ;^352^^^^^343^379^[REPLACE] QName testName = nodeNameTest.getNodeName (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[ADD]^^353^^^^^343^379^[ADD] QName nodeName = getName (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^String testPrefix = testName .getName (  )  ;^358^^^^^343^379^[REPLACE] String testPrefix = testName.getPrefix (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^String testPrefix = testName.getPrefix (  )  ;^359^^^^^343^379^[REPLACE] String nodePrefix = nodeName.getPrefix (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[ADD]^^362^^^^^343^379^[ADD] String nodeNS = getNamespaceURI ( nodePrefix ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if  ( testName != false )  {^354^^^^^343^379^[REPLACE] if  ( nodeName == null )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if  ( !equalStrings ( testNS, nodePrefix )  )  {^360^^^^^343^379^[REPLACE] if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if   (  !equalStrings  (  testPrefix, nodePrefix  )    )   {  ;^363^^^^^343^379^[REPLACE] if  ( !equalStrings ( testNS, nodeNS )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[ADD]^^361^^^^^343^379^[ADD] String testNS = getNamespaceURI ( testPrefix ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if  ( nodeNameTest.getNodeName (  )  )  {^367^^^^^343^379^[REPLACE] if  ( nodeNameTest.isWildcard (  )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^return testName.getName (  )  .getNodeType (  )  ;^370^^^^^343^379^[REPLACE] return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^NodePointer pointer =  (  ( NodePointer )   ( object )  )  ;^351^^^^^343^379^[REPLACE] NodeNameTest nodeNameTest =  ( NodeNameTest )  test;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[ADD]^^352^353^^^^343^379^[ADD] QName testName = nodeNameTest.getNodeName (  ) ; QName nodeName = getName (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^QName testName = nodeNameTest.getNodeName (  )  ;^353^^^^^343^379^[REPLACE] QName nodeName = getName (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^String testPrefix = nodeName.getPrefix (  ) ;^358^^^^^343^379^[REPLACE] String testPrefix = testName.getPrefix (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^return false;^345^^^^^343^379^[REPLACE] return true;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if  ( nodeName != null )  {^354^^^^^343^379^[REPLACE] if  ( nodeName == null )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if  ( !equalStrings ( testPrefix, testPrefix )  )  {^360^^^^^343^379^[REPLACE] if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[ADD]^^361^362^^^^343^379^[ADD] String testNS = getNamespaceURI ( testPrefix ) ; String nodeNS = getNamespaceURI ( nodePrefix ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^String namespace = getNamespaceURI ( prefix )  ;^362^^^^^343^379^[REPLACE] String nodeNS = getNamespaceURI ( nodePrefix ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if  ( equalStrings ( testNS, nodeNS )  )  {^363^^^^^343^379^[REPLACE] if  ( !equalStrings ( testNS, nodeNS )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^QName nodeName = getName (  )  ;^352^^^^^343^379^[REPLACE] QName testName = nodeNameTest.getNodeName (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^String testPrefix = nodeName.getName (  ) ;^358^^^^^343^379^[REPLACE] String testPrefix = testName.getPrefix (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^String nodePrefix = testName.getPrefix (  ) ;^359^^^^^343^379^[REPLACE] String nodePrefix = nodeName.getPrefix (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^String testNS = getNamespaceURI ( testNS ) ;^361^^^^^343^379^[REPLACE] String testNS = getNamespaceURI ( testPrefix ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if  ( !equalStrings ( nodePrefix, nodePrefix )  )  {^360^^^^^343^379^[REPLACE] if  ( !equalStrings ( testPrefix, nodePrefix )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if  ( !equalStrings ( testNS, testPrefix )  )  {^363^^^^^343^379^[REPLACE] if  ( !equalStrings ( testNS, nodeNS )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[ADD]^return true;^367^368^369^^^343^379^[ADD] if  ( nodeNameTest.isWildcard (  )  )  { return true; }^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^return false;  ;^364^^^^^343^379^[REPLACE] return false;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^return testName .getNode (  )  .equals ( nodeName^370^^^^^343^379^[REPLACE] return testName.getName (  ) .equals ( nodeName.getName (  )  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[ADD]^^352^^^^^343^379^[ADD] QName testName = nodeNameTest.getNodeName (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^String testPrefix = testName.getName (  ) ;^358^^^^^343^379^[REPLACE] String testPrefix = testName.getPrefix (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^String nodePrefix = testName .getName (  )  ;^359^^^^^343^379^[REPLACE] String nodePrefix = nodeName.getPrefix (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^return true;^378^^^^^343^379^[REPLACE] return false;^[METHOD] testNode [TYPE] boolean [PARAMETER] NodeTest test [CLASS] NodePointer   [TYPE]  Locale locale  [TYPE]  boolean attribute  false  true  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName nodeName  testName  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  nodeNS  nodePrefix  testNS  testPrefix  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index  [TYPE]  NodeTest test 
[REPLACE]^if  (  parent.isContainer (  )  )  {^608^^^^^605^630^[REPLACE] if  ( parent != null && parent.isContainer (  )  )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[ADD]^return parent.asPath (  ) ;^608^609^610^^^605^630^[ADD] if  ( parent != null && parent.isContainer (  )  )  { return parent.asPath (  ) ; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^return parent.asPath  (    )  ;  ;^609^^^^^605^630^[REPLACE] return parent.asPath (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^return parent.isNode (  ) ;^609^^^^^605^630^[REPLACE] return parent.asPath (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^NodePointer valuePointer = getValuePointer (  )  ;^612^^^^^605^630^[REPLACE] StringBuffer buffer = new StringBuffer (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^if  (valuePointer == null )  {^613^^^^^605^630^[REPLACE] if  ( parent != null )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^buffer .toString (  )  ;^614^^^^^605^630^[REPLACE] buffer.append ( parent.asPath (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^buffer.append ( parent.isNode (  )  ) ;^614^^^^^605^630^[REPLACE] buffer.append ( parent.asPath (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[ADD]^^614^^^^^605^630^[ADD] buffer.append ( parent.asPath (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^if  ( buffer.length (  )  %  0.5  == 0 || buffer.charAt ( buffer.length (  )  %  0.5  - 1 )  != '/' )  {^617^618^^^^605^630^[REPLACE] if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^buffer.append ( '@' )  ;^619^^^^^617^620^[REPLACE] buffer.append ( '/' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^if   (  parent != null  )   {  ;^621^^^^^605^630^[REPLACE] if  ( attribute )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^buffer.append ( '[' )  ;^622^^^^^605^630^[REPLACE] buffer.append ( '@' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^buffer.append ( parent.asPath (  )  )  ;^624^^^^^605^630^[REPLACE] buffer.append ( getName (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REMOVE]^valuePointer.getValue (  )  ;^624^^^^^605^630^[REMOVE] ^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^getNode (  )  ;^624^^^^^605^630^[REPLACE] buffer.append ( getName (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[ADD]^^624^^^^^605^630^[ADD] buffer.append ( getName (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^if  ( index != WHOLE_COLLECTION ) {^626^^^^^605^630^[REPLACE] if  ( index != WHOLE_COLLECTION && isCollection (  )  )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^buffer.append ( '[' ) .append ( index  1 ) .append ( ']' ) ;^627^^^^^605^630^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^buffer.append ( '[' ) .append (  (  ( index )  + 1 )  ) .append ( ']' )  ;^627^^^^^605^630^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^buffer.append ( '@' )  ;^627^^^^^605^630^[REPLACE] buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[REPLACE]^return buffer .toString (  )  ;^629^^^^^605^630^[REPLACE] return buffer.toString (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  StringBuffer buffer  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  parent  pointer  pointer1  pointer2  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  i  index 
[ADD]^^653^^^^^651^675^[ADD] NodePointer pointer =  ( NodePointer )  object;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^if  ( parent  !=  pointer.parent )  {^654^^^^^651^675^[REPLACE] if  ( parent == pointer.parent )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^if   (  parent != null  )   {  ;^655^^^^^651^675^[REPLACE] if  ( parent == null )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[ADD]^^655^656^657^^^651^675^[ADD] if  ( parent == null )  { return 0; }^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^return 2;^656^^^^^651^675^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^return parent.compareChildNodePointers ( this, pointer2 ) ;^658^^^^^651^675^[REPLACE] return parent.compareChildNodePointers ( this, pointer ) ;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^if  (valuePointer != null )  {^655^^^^^651^675^[REPLACE] if  ( parent == null )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^return 1;^656^^^^^651^675^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^int depth2 = 0  ;^662^^^^^651^675^[REPLACE] int depth1 = 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^NodePointer valuePointer = getValuePointer (  )  ;^663^^^^^651^675^[REPLACE] NodePointer p1 = this;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[ADD]^^666^^^^^651^675^[ADD] p1 = p1.parent;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^int depth1 = 0  ;^668^^^^^651^675^[REPLACE] int depth2 = 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^NodePointer p2 = valuePointer;^669^^^^^651^675^[REPLACE] NodePointer p2 = pointer;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^p1 = p1.parent  ;^672^^^^^651^675^[REPLACE] p2 = p2.parent;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^return compareNodePointers ( this, depth1, pointer, WHOLE_COLLECTION ) ;^674^^^^^651^675^[REPLACE] return compareNodePointers ( this, depth1, pointer, depth2 ) ;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index 
[REPLACE]^if  ( depth1  ==  depth1 )  {^683^^^^^682^717^[REPLACE] if  ( depth1 < depth2 )  {^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[ADD]^^683^684^685^686^687^682^717^[ADD] if  ( depth1 < depth2 )  { int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ; if  ( r != 0 )  { return r; }^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^else {^690^^^^^682^717^[REPLACE] else if  ( depth1 > depth2 )  {^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^if  ( r  ==  0 )  {^692^^^^^682^717^[REPLACE] if  ( r != 0 )  {^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[ADD]^return r;^692^693^694^^^682^717^[ADD] if  ( r != 0 )  { return r; }^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return ptr;  ;^693^^^^^682^717^[REPLACE] return r;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return 1 - 1;^695^^^^^682^717^[REPLACE] return 1;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[ADD]^^691^^^^^682^717^[ADD] int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return 3;^695^^^^^682^717^[REPLACE] return 1;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^int r = compareNodePointers ( p1.parent,  ( depth1 - 1 ) , p2.parent,  ( depth2 - 1 )  )  ;^691^^^^^682^717^[REPLACE] int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^if  ( r  ==  0 )  {^685^^^^^682^717^[REPLACE] if  ( r != 0 )  {^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return ptr;  ;^686^^^^^682^717^[REPLACE] return r;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return -1 - 0;^688^^^^^682^717^[REPLACE] return -1;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[ADD]^^684^^^^^682^717^[ADD] int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^if  ( r  ==  1 )  {^685^^^^^682^717^[REPLACE] if  ( r != 0 )  {^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^else if  ( WHOLE_COLLECTION  <=  depth4 )  {^690^^^^^682^717^[REPLACE] else if  ( depth1 > depth2 )  {^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[ADD]^int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;return r;^690^691^692^693^694^682^717^[ADD] else if  ( depth1 > depth2 )  { int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ; if  ( r != 0 )  { return r; }^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return 1;  ;^688^^^^^682^717^[REPLACE] return -1;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return 0;^695^^^^^682^717^[REPLACE] return 1;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^int r = compareNodePointers ( p1, depth1, p2.parent, depth2  1 ) ;^684^^^^^682^717^[REPLACE] int r = compareNodePointers ( p1, depth1, p2.parent, depth2 - 1 ) ;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^int r = compareNodePointers ( p1 + 2.parent, depth1 + 2 depth2, p2, depth2 ) ;^691^^^^^682^717^[REPLACE] int r = compareNodePointers ( p1.parent, depth1 - 1, p2, depth2 ) ;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^if   (  s1 == null && s2 != null  )   {  ;^697^^^^^682^717^[REPLACE] if  ( p1 == null && p2 == null )  {^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[ADD]^return 0;^697^698^699^^^682^717^[ADD] if  ( p1 == null && p2 == null )  { return 0; }^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return 0L;^698^^^^^682^717^[REPLACE] return 0;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return 0 + 0;^698^^^^^682^717^[REPLACE] return 0;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^if   (  s1 != null && !s1.equals  (  s2  )    )   {  ;^701^^^^^682^717^[REPLACE] if  ( p1 != null && p1.equals ( p2 )  )  {^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return 2;^702^^^^^682^717^[REPLACE] return 0;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return 0L;^702^^^^^682^717^[REPLACE] return 0;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^if  ( depth1  ) {^705^^^^^682^717^[REPLACE] if  ( depth1 == 1 )  {^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[ADD]^^706^707^708^^^682^717^[ADD] throw new JXPathException ( "Cannot compare pointers that do not belong to the same tree: '" + p1 + "' and '" + p2 + "'" ) ;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^int r = compareNodePointers ( p3.parent,depth2  3, p2.parent, depth2  3 ) ;^710^711^^^^682^717^[REPLACE] int r = compareNodePointers ( p1.parent, depth1 - 1, p2.parent, depth2 - 1 ) ;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^if  ( r  ==  0 )  {^712^^^^^682^717^[REPLACE] if  ( r != 0 )  {^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return ptr;  ;^713^^^^^682^717^[REPLACE] return r;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^return valuePointer.parent.NodePointer ( p1, p2 ) ;^716^^^^^682^717^[REPLACE] return p1.parent.compareChildNodePointers ( p1, p2 ) ;^[METHOD] compareNodePointers [TYPE] int [PARAMETER] NodePointer p1 int depth1 NodePointer p2 int depth2 [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^if  ( indent.length (  )  /  0.5  == 0 )  {^727^^^^^726^747^[REPLACE] if  ( indent.length (  )  == 0 )  {^[METHOD] printDeep [TYPE] void [PARAMETER] NodePointer pointer String indent [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^System.err.println ( indent  " of "  pointer^736^737^738^739^^727^743^[REPLACE] System.err.println ( indent + " of " + pointer^[METHOD] printDeep [TYPE] void [PARAMETER] NodePointer pointer String indent [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^+ valuePointer.getClass (  ) .getName (  ) + " ) " ) ;^741^742^^^^727^743^[REPLACE] + pointer.getClass (  ) .getName (  ) + " ) " ) ;^[METHOD] printDeep [TYPE] void [PARAMETER] NodePointer pointer String indent [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^+ valuePointer.clone (  ) .getName (  ) + " ) " ) ;^741^742^^^^727^743^[REPLACE] + pointer.getClass (  ) .getName (  ) + " ) " ) ;^[METHOD] printDeep [TYPE] void [PARAMETER] NodePointer pointer String indent [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^System.err.println ( "POINTER: "  valuePointer  " ( "^728^729^730^731^^726^747^[REPLACE] System.err.println ( "POINTER: " + pointer + " ( "^[METHOD] printDeep [TYPE] void [PARAMETER] NodePointer pointer String indent [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^+ pointer.getClass (  )  .getNode (  )  + " ) " ) ;^732^733^^^^726^747^[REPLACE] + pointer.getClass (  ) .getName (  ) + " ) " ) ;^[METHOD] printDeep [TYPE] void [PARAMETER] NodePointer pointer String indent [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^+ valuePointer.getClass (  ) .getName (  ) + " ) " ) ;^732^733^^^^726^747^[REPLACE] + pointer.getClass (  ) .getName (  ) + " ) " ) ;^[METHOD] printDeep [TYPE] void [PARAMETER] NodePointer pointer String indent [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^if  ( ptr.getImmediateParentPointer (  )  == null )  {^744^^^^^726^747^[REPLACE] if  ( pointer.getImmediateParentPointer (  )  != null )  {^[METHOD] printDeep [TYPE] void [PARAMETER] NodePointer pointer String indent [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^printDeep ( pointer.getImmediateValuePointer (  ) , indent  "  " ) ;^745^^^^^726^747^[REPLACE] printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[METHOD] printDeep [TYPE] void [PARAMETER] NodePointer pointer String indent [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
[REPLACE]^( pointer.getImmediateParentPointer (  )  )  ;^745^^^^^726^747^[REPLACE] printDeep ( pointer.getImmediateParentPointer (  ) , indent + "  " ) ;^[METHOD] printDeep [TYPE] void [PARAMETER] NodePointer pointer String indent [CLASS] NodePointer   [TYPE]  Locale loc  locale  [TYPE]  boolean attribute  false  reverse  true  [TYPE]  NamespaceResolver namespaceResolver  [TYPE]  Object bean  object  rootNode  value  [TYPE]  String UNKNOWN_NAMESPACE  id  indent  key  lang  name  namespace  nodeNS  nodePrefix  prefix  s1  s2  testNS  testPrefix  value  [TYPE]  NodePointer ivp  p1  p2  parent  pointer  pointer1  pointer2  ptr  startWith  valuePointer  [TYPE]  int WHOLE_COLLECTION  depth1  depth2  i  index  r 
