[REPLACE]^if   (  name == null  )   {  ;^70^^^^^69^88^[REPLACE] if  ( names == null )  {^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[ADD]^^70^71^72^73^74^69^88^[ADD] if  ( names == null )  { DynaClass dynaClass = dynaBean.getDynaClass (  ) ; DynaProperty properties[] = dynaClass.getDynaProperties (  ) ; int count = properties.length; boolean hasClass = dynaClass.getDynaProperty ( "class" )  != null;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^if  ( false )  {^75^^^^^69^88^[REPLACE] if  ( hasClass )  {^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^if  ( hasClass || !name.equals ( "class" )  )  {^81^^^^^69^88^[REPLACE] if  ( !hasClass || !name.equals ( "class" )  )  {^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^names[j++] =  null;^82^^^^^69^88^[REPLACE] names[j++] = name;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^names =  new String[null];^78^^^^^69^88^[REPLACE] names = new String[count];^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^DynaClass dynaClass = dynaBean .get ( name )  ;^71^^^^^69^88^[REPLACE] DynaClass dynaClass = dynaBean.getDynaClass (  ) ;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^DynaProperty properties[] = dynaClass .getDynaProperty ( name )  ;^72^^^^^69^88^[REPLACE] DynaProperty properties[] = dynaClass.getDynaProperties (  ) ;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[ADD]^^73^74^^^^69^88^[ADD] int count = properties.length; boolean hasClass = dynaClass.getDynaProperty ( "class" )  != null;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^boolean hasClass = dynaClass.getDynaProperty ( "class" )  == null;^74^^^^^69^88^[REPLACE] boolean hasClass = dynaClass.getDynaProperty ( "class" )  != null;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^for  ( int i = 0 , j = 0 ; i < properties.length; i++ )  {^79^^^^^69^88^[REPLACE] for  ( int i = 0, j = 0; i < properties.length; i++ )  {^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^int i = 0  ;^79^^^^^69^88^[REPLACE] for  ( int i = 0, j = 0; i < properties.length; i++ )  {^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^String name = properties[i].getType (  ) ;^80^^^^^69^88^[REPLACE] String name = properties[i].getName (  ) ;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[ADD]^^81^82^83^^^69^88^[ADD] if  ( !hasClass || !name.equals ( "class" )  )  { names[j++] = name; }^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[ADD]^^82^^^^^69^88^[ADD] names[j++] = name;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^boolean hasClass =  ( dynaClass.getDynaProperty ( "class" )  )  != null  ;^71^^^^^69^88^[REPLACE] DynaClass dynaClass = dynaBean.getDynaClass (  ) ;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^DynaProperty property = dynaClass.getDynaProperty ( name )  ;^72^^^^^69^88^[REPLACE] DynaProperty properties[] = dynaClass.getDynaProperties (  ) ;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^boolean hasClass =  ( dynaClass.getDynaProperty ( "class" )  )  != null  ;^73^^^^^69^88^[REPLACE] int count = properties.length;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[ADD]^^79^80^81^82^83^69^88^[ADD] for  ( int i = 0, j = 0; i < properties.length; i++ )  { String name = properties[i].getName (  ) ; if  ( !hasClass || !name.equals ( "class" )  )  { names[j++] = name; }^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[ADD]^^80^^^^^69^88^[ADD] String name = properties[i].getName (  ) ;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^return names;  ;^87^^^^^69^88^[REPLACE] return names;^[METHOD] getPropertyNames [TYPE] String[] [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaClass dynaClass  [TYPE]  boolean false  hasClass  true  [TYPE]  DynaBean dynaBean  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  DynaProperty[] properties  [TYPE]  int count  i  j 
[REPLACE]^String name = properties[i].getName (  )  ;^151^^^^^150^186^[REPLACE] String name = getPropertyName (  ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if  ( propertyName.equals ( "*" )  )  {^152^^^^^150^186^[REPLACE] if  ( name.equals ( "*" )  )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^return null;  ;^153^^^^^150^186^[REPLACE] return null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^return this;^153^^^^^150^186^[REPLACE] return null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^boolean hasClass =  ( dynaClass.getDynaProperty ( "class" )  )  != null  ;^156^^^^^150^186^[REPLACE] Object value;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if  ( index  !=  WHOLE_COLLECTION )  {^157^^^^^150^186^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^else {^160^^^^^150^186^[REPLACE] else if  ( isIndexedProperty (  )  )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^^160^161^^^^150^186^[ADD] else if  ( isIndexedProperty (  )  )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if  ( ValueUtils.remove ( value )  )  {^178^^^^^160^184^[REPLACE] if  ( ValueUtils.isCollection ( value )  )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^value = ValueUtils.getValue ( value, index ) ;^178^179^180^^^160^184^[ADD] if  ( ValueUtils.isCollection ( value )  )  { value = ValueUtils.getValue ( value, index ) ; }^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if  ( 0  ==  0 )  {^181^^^^^160^184^[REPLACE] else if  ( index != 0 )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value = true;^182^^^^^160^184^[REPLACE] value = null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^name = null  ;^182^^^^^160^184^[REPLACE] value = null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^^179^^^^^160^184^[ADD] value = ValueUtils.getValue ( value, index ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if  ( index  ==  0L )  {^181^^^^^160^184^[REPLACE] else if  ( index != 0 )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value = false;^182^^^^^160^184^[REPLACE] value = null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value =  dynaBean.get ( propertyName ) ;^177^^^^^160^184^[REPLACE] value = dynaBean.get ( name ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value = getValue ( dynaBean.get ( name )  )  ;^179^^^^^160^184^[REPLACE] value = ValueUtils.getValue ( value, index ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^value = ValueUtils.getValue ( dynaBean.get ( name, index )  ) ;^165^166^167^^^150^186^[ADD] try { value = ValueUtils.getValue ( dynaBean.get ( name, index )  ) ; }^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value = getValue ( value, index )  ;^166^^^^^150^186^[REPLACE] value = ValueUtils.getValue ( dynaBean.get ( name, index )  ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^name = null  ;^169^^^^^150^186^[REPLACE] value = null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value =  dynaBean.get ( propertyName ) ;^172^^^^^150^186^[REPLACE] value = dynaBean.get ( name ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value = getValue ( dynaBean.get ( name )  )  ;^173^^^^^150^186^[REPLACE] value = ValueUtils.getValue ( value, index ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^^168^169^^^^150^186^[ADD] catch  ( ArrayIndexOutOfBoundsException ex )  { value = null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if  ( ValueUtils.remove ( value )  )  {^178^^^^^150^186^[REPLACE] if  ( ValueUtils.isCollection ( value )  )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if  ( index  ==  0 )  {^181^^^^^150^186^[REPLACE] else if  ( index != 0 )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^name = null  ;^182^^^^^150^186^[REPLACE] value = null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^^182^^^^^150^186^[ADD] value = null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value = getValue ( dynaBean.get ( name )  )  ;^179^^^^^150^186^[REPLACE] value = ValueUtils.getValue ( value, index ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^^166^^^^^150^186^[ADD] value = ValueUtils.getValue ( dynaBean.get ( name, index )  ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^^169^^^^^150^186^[ADD] value = null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value =  dynaBean.get ( null ) ;^177^^^^^150^186^[REPLACE] value = dynaBean.get ( name ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^^158^^^^^150^186^[ADD] value = ValueUtils.getValue ( dynaBean.get ( name )  ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if   (  type.isArray  (    )    )   {  ;^178^^^^^160^184^[REPLACE] if  ( ValueUtils.isCollection ( value )  )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^^178^179^180^^^160^184^[ADD] if  ( ValueUtils.isCollection ( value )  )  { value = ValueUtils.getValue ( value, index ) ; }^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if  ( index  == false )  {^181^^^^^160^184^[REPLACE] else if  ( index != 0 )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value = this;^182^^^^^160^184^[REPLACE] value = null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^else if   (  index == 0  )   {  ;^181^^^^^160^184^[REPLACE] else if  ( index != 0 )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^^181^182^183^^^160^184^[ADD] else if  ( index != 0 )  { value = null; }^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^^172^^^^^150^186^[ADD] value = dynaBean.get ( name ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[ADD]^^171^172^^^^150^186^[ADD] catch  ( IllegalArgumentException ex )  { value = dynaBean.get ( name ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if   (  type.isArray  (    )    )   {  ;^178^^^^^150^186^[REPLACE] if  ( ValueUtils.isCollection ( value )  )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^else {^181^^^^^150^186^[REPLACE] else if  ( index != 0 )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value = true;^182^^^^^150^186^[REPLACE] value = null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^else if   (  index == 0  )   {  ;^181^^^^^150^186^[REPLACE] else if  ( index != 0 )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value = getValue ( value, index )  ;^158^^^^^150^186^[REPLACE] value = ValueUtils.getValue ( dynaBean.get ( name )  ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value =  dynaBean.get ( propertyName ) ;^177^^^^^150^186^[REPLACE] value = dynaBean.get ( name ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^value = false;^182^^^^^150^186^[REPLACE] value = null;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^return value;  ;^185^^^^^150^186^[REPLACE] return value;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] DynaBeanPropertyPointer   [TYPE]  boolean false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  String name  propertyName  [TYPE]  String[] names  [TYPE]  ArrayIndexOutOfBoundsException ex  [TYPE]  IllegalArgumentException ex 
[REPLACE]^DynaClass dynaClass =  ( DynaClass )  dynaBean .get ( string )  ;^242^^^^^241^263^[REPLACE] DynaClass dynaClass =  ( DynaClass )  dynaBean.getDynaClass (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[REPLACE]^DynaProperty property = dynaClass.getDynaProperty ( name )  ;^243^^^^^241^263^[REPLACE] DynaProperty property = dynaClass.getDynaProperty ( getPropertyName (  )  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[ADD]^^244^^^^^241^263^[ADD] Class type = property.getType (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[REPLACE]^if   (  type.isArray  (    )    )   {  ;^245^^^^^241^263^[REPLACE] if  ( element )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[REPLACE]^else if   (  isIndexedProperty  (    )    )   {  ;^246^^^^^241^263^[REPLACE] if  ( type.isArray (  )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[REPLACE]^return value;  ;^250^^^^^246^251^[REPLACE] return value;^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[REPLACE]^type =  null.getComponentType (  ) ;^247^^^^^241^263^[REPLACE] type = type.getComponentType (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[REPLACE]^return value;  ;^250^^^^^241^263^[REPLACE] return value;^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[REPLACE]^if  ( type.getName (  )  )  {^246^^^^^241^263^[REPLACE] if  ( type.isArray (  )  )  {^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[ADD]^return TypeUtils.convert ( value, type ) ;^254^255^256^^^241^263^[ADD] try { return TypeUtils.convert ( value, type ) ; }^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[REPLACE]^return dynaBean.get  (  getPropertyName  (    )    )  ;  ;^255^^^^^241^263^[REPLACE] return TypeUtils.convert ( value, type ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[REPLACE]^return TypeUtils .isIndexedProperty (  )  ;^255^^^^^241^263^[REPLACE] return TypeUtils.convert ( value, type ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[ADD]^^258^^^^^241^263^[ADD] String string = value == null ? "null" : value.getClass (  ) .getName (  ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
[REPLACE]^return ;^259^260^261^^^241^263^[REPLACE] throw new JXPathTypeConversionException ( "Cannot convert value of class " + string + " to type " + type, ex ) ;^[METHOD] convert [TYPE] Object [PARAMETER] Object value boolean element [CLASS] DynaBeanPropertyPointer   [TYPE]  DynaProperty property  [TYPE]  DynaClass dynaClass  [TYPE]  boolean element  false  true  [TYPE]  DynaBean dynaBean  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  String name  propertyName  string  [TYPE]  String[] names  [TYPE]  Exception ex 
