[REPLACE]^static final int LEXICAL_ERROR = 0 << 3;^16^^^^^^^[REPLACE] static final int LEXICAL_ERROR = 0;^ [CLASS] TokenMgrError  
[REPLACE]^static final int STATIC_LEXER_ERROR = 1 << 2;^21^^^^^^^[REPLACE] static final int STATIC_LEXER_ERROR = 1;^ [CLASS] TokenMgrError  
[REPLACE]^static final int INVALID_LEXICAL_STATE  = null ;^26^^^^^^^[REPLACE] static final int INVALID_LEXICAL_STATE = 2;^ [CLASS] TokenMgrError  
[REPLACE]^static final int LOOP_DETECTED ;^31^^^^^^^[REPLACE] static final int LOOP_DETECTED = 3;^ [CLASS] TokenMgrError  
[REPLACE]^return super.getMessage (  ) ;^129^^^^^128^131^[REPLACE] super ( message ) ;^[METHOD] <init> [TYPE] String,int) [PARAMETER] String message int reason [CLASS] TokenMgrError   [TYPE]  char character  [TYPE]  String message  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  position  reason 
[REPLACE]^errorCode =  null;^130^^^^^128^131^[REPLACE] errorCode = reason;^[METHOD] <init> [TYPE] String,int) [PARAMETER] String message int reason [CLASS] TokenMgrError   [TYPE]  char character  [TYPE]  String message  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  position  reason 
[REPLACE]^this ( LexicalError ( EOFSeen, lexState, reason, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^[REPLACE] this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[METHOD] <init> [TYPE] String,char,int) [PARAMETER] boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [CLASS] TokenMgrError   [TYPE]  char character  curChar  [TYPE]  boolean EOFSeen  false  true  [TYPE]  String errorAfter  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason 
[REPLACE]^this ( LexicalError ( true, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^[REPLACE] this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[METHOD] <init> [TYPE] String,char,int) [PARAMETER] boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [CLASS] TokenMgrError   [TYPE]  char character  curChar  [TYPE]  boolean EOFSeen  false  true  [TYPE]  String errorAfter  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason 
[ADD]^^134^^^^^133^139^[ADD] this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[METHOD] <init> [TYPE] String,char,int) [PARAMETER] boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [CLASS] TokenMgrError   [TYPE]  char character  curChar  [TYPE]  boolean EOFSeen  false  true  [TYPE]  String errorAfter  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason 
[REPLACE]^position = reason - 0;^137^^^^^133^139^[REPLACE] position = errorColumn - 1;^[METHOD] <init> [TYPE] String,char,int) [PARAMETER] boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [CLASS] TokenMgrError   [TYPE]  char character  curChar  [TYPE]  boolean EOFSeen  false  true  [TYPE]  String errorAfter  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason 
[REPLACE]^character =  null;^138^^^^^133^139^[REPLACE] character = curChar;^[METHOD] <init> [TYPE] String,char,int) [PARAMETER] boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [CLASS] TokenMgrError   [TYPE]  char character  curChar  [TYPE]  boolean EOFSeen  false  true  [TYPE]  String errorAfter  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason 
[REPLACE]^String s = "0000" + Integer.toString ( ch, 16 ) ;^44^^^^^43^86^[REPLACE] StringBuffer retval = new StringBuffer (  ) ;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^StringBuffer retval = new StringBuffer (  ) ;^45^^^^^43^86^[REPLACE] char ch;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^if  (  ( ch = str.charAt ( i )  )  < 0x20 ) {^76^^^^^43^86^[REPLACE] if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^retval.append ( curChar ) ;^80^^^^^76^81^[REPLACE] retval.append ( ch ) ;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[ADD]^^80^^^^^76^81^[ADD] retval.append ( ch ) ;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^String s = "0000"  |  Integer .toString ( lexState , LEXICAL_ERROR )  ;^77^^^^^43^86^[REPLACE] String s = "0000" + Integer.toString ( ch, 16 ) ;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^for  ( positionnt i = 0 ; i < str.length (  )  - 4; i++ )  {^46^^^^^43^86^[REPLACE] for  ( int i = 0; i < str.length (  ) ; i++ )  {^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^if  (  ch > 0x7e )  {^76^^^^^43^86^[REPLACE] if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^retval .toString ( errorLine , errorLine )  ;^80^^^^^76^81^[REPLACE] retval.append ( ch ) ;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^String s = "0000"  ||  Integer.toString ( curChar, 16 ) ;^77^^^^^43^86^[REPLACE] String s = "0000" + Integer.toString ( ch, 16 ) ;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[ADD]^^77^^^^^43^86^[ADD] String s = "0000" + Integer.toString ( ch, 16 ) ;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^if  (  ( ch =  s.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^76^^^^^43^86^[REPLACE] if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^String s = "0000"  &    curChar, 16   ;^77^^^^^43^86^[REPLACE] String s = "0000" + Integer.toString ( ch, 16 ) ;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[ADD]^String s = "0000" + Integer.toString ( ch, 16 ) ;retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;retval.append ( ch ) ;^76^77^78^79^80^43^86^[ADD] if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  { String s = "0000" + Integer.toString ( ch, 16 ) ; retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ; } else { retval.append ( ch ) ;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^for  ( int i = 0 ; i < str.length (  ) ; i++ )  {^46^^^^^43^86^[REPLACE] for  ( int i = 0; i < str.length (  ) ; i++ )  {^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^String s = "0000"  ||    ch, 16   ;^77^^^^^43^86^[REPLACE] String s = "0000" + Integer.toString ( ch, 16 ) ;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[ADD]^^77^78^^^^43^86^[ADD] String s = "0000" + Integer.toString ( ch, 16 ) ; retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^return super.getMessage (  ) ;^85^^^^^43^86^[REPLACE] return retval.toString (  ) ;^[METHOD] addEscapes [TYPE] String [PARAMETER] String str [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  StringBuffer retval  [TYPE]  String s  str  [TYPE]  boolean false  true  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? ";^101^102^103^104^^100^106^[REPLACE] return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[METHOD] LexicalError [TYPE] String [PARAMETER] boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  boolean EOFSeen  false  true  [TYPE]  String errorAfter  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason 
[REPLACE]^return position;^118^^^^^117^119^[REPLACE] return super.getMessage (  ) ;^[METHOD] getMessage [TYPE] String [PARAMETER] [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  [TYPE]  boolean false  true 
[REPLACE]^return super.getMessage (  ) ;^147^^^^^146^148^[REPLACE] return position;^[METHOD] getPosition [TYPE] int [PARAMETER] [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  [TYPE]  boolean false  true 
[REPLACE]^return super.getMessage (  ) ;^151^^^^^150^152^[REPLACE] return character;^[METHOD] getCharacter [TYPE] char [PARAMETER] [CLASS] TokenMgrError   [TYPE]  char ch  character  curChar  [TYPE]  int INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  [TYPE]  boolean false  true 
