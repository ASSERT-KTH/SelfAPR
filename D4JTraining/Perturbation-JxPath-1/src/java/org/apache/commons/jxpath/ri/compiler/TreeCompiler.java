[REPLACE]^private static  QName QNAME_NAME = new QName ( null, "name" ) ;^28^^^^^^^[REPLACE] private static final QName QNAME_NAME = new QName ( null, "name" ) ;^ [CLASS] TreeCompiler  
[REPLACE]^if  ( ! ! ( arg instanceof LocationPath )  )  {^191^^^^^190^210^[REPLACE] if  ( ! ( arg instanceof LocationPath )  )  {^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^return true;^192^^^^^190^210^[REPLACE] return false;^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^Step[] steps =  (  ( LocationPath )  arg )  .getAxis (  )  ;^195^^^^^190^210^[REPLACE] Step[] steps =  (  ( LocationPath )  arg ) .getSteps (  ) ;^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^if  ( steps.length (  )  != 1 )  {^196^^^^^190^210^[REPLACE] if  ( steps.length != 1 )  {^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^return true;^197^^^^^190^210^[REPLACE] return false;^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^return false;  ;^197^^^^^190^210^[REPLACE] return false;^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^return true;^200^^^^^190^210^[REPLACE] return false;^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^return false;  ;^200^^^^^190^210^[REPLACE] return false;^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^NodeTest test = steps[2].getNodeTest (  ) ;^202^^^^^190^210^[REPLACE] NodeTest test = steps[0].getNodeTest (  ) ;^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^if  ( ! ! ( test instanceof NodeNameTest )  )  {^203^^^^^190^210^[REPLACE] if  ( ! ( test instanceof NodeNameTest )  )  {^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^return true;^204^^^^^190^210^[REPLACE] return false;^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^return false;  ;^204^^^^^190^210^[REPLACE] return false;^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^if  ( ! (  ( NodeNameTest )  test ) .getNodeName (  )  .getAxis (  )   )  {^206^^^^^190^210^[REPLACE] if  ( ! (  ( NodeNameTest )  test ) .getNodeName (  ) .equals ( QNAME_NAME )  )  {^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^return true;^207^^^^^190^210^[REPLACE] return false;^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
[REPLACE]^return false;^209^^^^^190^210^[REPLACE] return true;^[METHOD] isNameAttributeTest [TYPE] boolean [PARAMETER] Expression arg [CLASS] TreeCompiler   [TYPE]  Step[] steps  [TYPE]  boolean false  true  [TYPE]  Expression arg  [TYPE]  QName QNAME_NAME  [TYPE]  NodeTest test 
