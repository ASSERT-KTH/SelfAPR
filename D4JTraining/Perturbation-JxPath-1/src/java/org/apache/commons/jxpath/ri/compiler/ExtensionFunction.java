[ADD]^^76^^^^^75^92^[ADD] Object[] parameters = null;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^if  ( args == null )  {^77^^^^^75^92^[REPLACE] if  ( args != null )  {^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^parameters  = null ;^78^^^^^75^92^[REPLACE] parameters = new Object[args.length];^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^parameters[i]  = null ;^80^^^^^75^92^[REPLACE] parameters[i] = convert ( args[i].compute ( context )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < args.length; i++ )  {^79^^^^^75^92^[REPLACE] for  ( int i = 0; i < args.length; i++ )  {^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^parameters[i]  =  parameters[i] ;^80^^^^^75^92^[REPLACE] parameters[i] = convert ( args[i].compute ( context )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^Function function = context.getRootContext (  ) .compute ( functionName, parameters ) ;^84^85^^^^75^92^[REPLACE] Function function = context.getRootContext (  ) .getFunction ( functionName, parameters ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^if  ( function != null )  {^86^^^^^75^92^[REPLACE] if  ( function == null )  {^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[ADD]^^87^88^^^^75^92^[ADD] throw new JXPathFunctionNotFoundException ( "No such function: " + functionName + Arrays.asList ( parameters )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^buffer.append ( args[i] )  ;^88^^^^^75^92^[REPLACE] + functionName + Arrays.asList ( parameters )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
[REPLACE]^return function.invoke  (  context, parameters  )  ;  ;^91^^^^^75^92^[REPLACE] return function.invoke ( context, parameters ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] ExtensionFunction   [TYPE]  EvalContext context  [TYPE]  Function function  [TYPE]  boolean false  true  [TYPE]  QName functionName  [TYPE]  Object[] parameters  [TYPE]  int i 
