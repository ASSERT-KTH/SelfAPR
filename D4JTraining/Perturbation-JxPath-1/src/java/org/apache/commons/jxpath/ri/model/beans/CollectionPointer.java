[REPLACE]^super ( this, locale ) ;^43^^^^^42^45^[REPLACE] super ( null, locale ) ;^[METHOD] <init> [TYPE] Locale) [PARAMETER] Object collection Locale locale [CLASS] CollectionPointer   [TYPE]  Locale locale  [TYPE]  Object collection  [TYPE]  NodePointer valuePointer  [TYPE]  boolean false  true 
[REPLACE]^this.collection =  null;^44^^^^^42^45^[REPLACE] this.collection = collection;^[METHOD] <init> [TYPE] Locale) [PARAMETER] Object collection Locale locale [CLASS] CollectionPointer   [TYPE]  Locale locale  [TYPE]  Object collection  [TYPE]  NodePointer valuePointer  [TYPE]  boolean false  true 
[ADD]^^44^^^^^42^45^[ADD] this.collection = collection;^[METHOD] <init> [TYPE] Locale) [PARAMETER] Object collection Locale locale [CLASS] CollectionPointer   [TYPE]  Locale locale  [TYPE]  Object collection  [TYPE]  NodePointer valuePointer  [TYPE]  boolean false  true 
[REPLACE]^super ( valuePointer ) ;^48^^^^^47^50^[REPLACE] super ( parent ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] NodePointer parent Object collection [CLASS] CollectionPointer   [TYPE]  Object collection  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^48^^^^^47^50^[ADD] super ( parent ) ;^[METHOD] <init> [TYPE] Object) [PARAMETER] NodePointer parent Object collection [CLASS] CollectionPointer   [TYPE]  Object collection  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^this.collection =  null;^49^^^^^47^50^[REPLACE] this.collection = collection;^[METHOD] <init> [TYPE] Object) [PARAMETER] NodePointer parent Object collection [CLASS] CollectionPointer   [TYPE]  Object collection  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^49^^^^^47^50^[ADD] this.collection = collection;^[METHOD] <init> [TYPE] Object) [PARAMETER] NodePointer parent Object collection [CLASS] CollectionPointer   [TYPE]  Object collection  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return this;^53^^^^^52^54^[REPLACE] return null;^[METHOD] getName [TYPE] QName [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return ptr.createPath ( context ) ;^57^^^^^56^58^[REPLACE] return collection;^[METHOD] getBaseValue [TYPE] Object [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return false;^61^^^^^60^62^[REPLACE] return true;^[METHOD] isCollection [TYPE] boolean [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return ValueUtils .getValue ( collection )  ;^65^^^^^64^66^[REPLACE] return ValueUtils.getLength ( getBaseValue (  )  ) ;^[METHOD] getLength [TYPE] int [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^NodePointer parent = getImmediateParentPointer (  ) ;^69^^^^^68^72^[REPLACE] Object value = getNode (  ) ;^[METHOD] isLeaf [TYPE] boolean [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^69^^^^^68^72^[ADD] Object value = getNode (  ) ;^[METHOD] isLeaf [TYPE] boolean [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return collection == false || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .setIndex (  ) ;^70^71^^^^68^72^[REPLACE] return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[METHOD] isLeaf [TYPE] boolean [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return true ;^75^^^^^74^76^[REPLACE] return index != WHOLE_COLLECTION;^[METHOD] isContainer [TYPE] boolean [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( index  ==  WHOLE_COLLECTION )  {^79^^^^^78^85^[REPLACE] if  ( index != WHOLE_COLLECTION )  {^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^79^80^81^^^78^85^[ADD] if  ( index != WHOLE_COLLECTION )  { return ValueUtils.getValue ( collection, index ) ; }^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return ValueUtils.getValue ( collection, index ) ;^83^^^^^78^85^[REPLACE] return ValueUtils.getValue ( collection ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return ValueUtils .setValue ( value )  ;^80^^^^^78^85^[REPLACE] return ValueUtils.getValue ( collection, index ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return ValueUtils.setValue ( collection, index ) ;^80^^^^^78^85^[REPLACE] return ValueUtils.getValue ( collection, index ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return ValueUtils.getLength ( collection ) ;^83^^^^^78^85^[REPLACE] return ValueUtils.getValue ( collection ) ;^[METHOD] getImmediateNode [TYPE] Object [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( index  != null )  {^88^^^^^87^94^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^ValueUtils.setValue ( collection, index, collection ) ;^92^^^^^87^94^[REPLACE] ValueUtils.setValue ( collection, index, value ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^92^^^^^87^94^[ADD] ValueUtils.setValue ( collection, index, value ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^value   ;^89^^^^^87^94^[REPLACE] parent.setValue ( value ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^super.append ( index ) ;^97^^^^^96^99^[REPLACE] super.setIndex ( index ) ;^[METHOD] setIndex [TYPE] void [PARAMETER] int index [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true  [TYPE]  int index 
[REPLACE]^valuePointer = this; ;^98^^^^^96^99^[REPLACE] valuePointer = null;^[METHOD] setIndex [TYPE] void [PARAMETER] int index [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true  [TYPE]  int index 
[REPLACE]^if  ( collectionPointer !=parent )  {^102^^^^^101^113^[REPLACE] if  ( valuePointer == null )  {^[METHOD] getValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( index  && null )  {^103^^^^^101^113^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] getValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^103^104^105^^^101^113^[ADD] if  ( index == WHOLE_COLLECTION )  { valuePointer = this; }^[METHOD] getValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^valuePointer =  NodePointer.newChildNodePointer ( this, getName (  ) , collection ) ;^108^109^^^^101^113^[REPLACE] valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[METHOD] getValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^108^109^^^^101^113^[ADD] valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[METHOD] getValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^NodePointer ptr =  ( NodePointer )  clone (  ) ;^107^^^^^101^113^[REPLACE] Object value = getImmediateNode (  ) ;^[METHOD] getValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^valuePointer = null; ;^104^^^^^101^113^[REPLACE] valuePointer = this;^[METHOD] getValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( index  &&  WHOLE_COLLECTION )  {^103^^^^^101^113^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] getValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^valuePointer = this;^103^104^105^^^101^113^[ADD] if  ( index == WHOLE_COLLECTION )  { valuePointer = this; }^[METHOD] getValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[ADD]^^107^^^^^101^113^[ADD] Object value = getImmediateNode (  ) ;^[METHOD] getValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return getValuePointer (  ) .attributeIterator ( name ) ;^112^^^^^101^113^[REPLACE] return valuePointer;^[METHOD] getValuePointer [TYPE] NodePointer [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^NodePointer parent = getImmediateParentPointer (  ) ;^116^^^^^115^121^[REPLACE] Object collection = getBaseValue (  ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context 
[REPLACE]^if  ( ValueUtils.getLength ( value )   ==  index )  {^117^^^^^115^121^[REPLACE] if  ( ValueUtils.getLength ( collection )  <= index )  {^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context 
[REPLACE]^collection = ValueUtils.expandCollection ( getNode (  ) , index +null ) ;^118^^^^^115^121^[REPLACE] collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context 
[REPLACE]^collection = ValueUtils.expandCollection ( getNode (  ) ,true + 1 ) ;^118^^^^^115^121^[REPLACE] collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context 
[REPLACE]^return null;^120^^^^^115^121^[REPLACE] return this;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context 
[REPLACE]^CollectionPointer other =  ( CollectionPointer )  object;^124^^^^^123^127^[REPLACE] NodePointer ptr = createPath ( context ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context Object value [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context 
[REPLACE]^parent.setValue ( value ) ;^125^^^^^123^127^[REPLACE] ptr.setValue ( value ) ;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context Object value [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context 
[REPLACE]^return valuePointer;^126^^^^^123^127^[REPLACE] return ptr;^[METHOD] createPath [TYPE] NodePointer [PARAMETER] JXPathContext context Object value [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context 
[REPLACE]^CollectionPointer other =  ( CollectionPointer )  object;^135^^^^^129^138^[REPLACE] NodePointer ptr =  ( NodePointer )  clone (  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index Object value [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  int index 
[REPLACE]^ptr.setValue ( index ) ;^136^^^^^129^138^[REPLACE] ptr.setIndex ( index ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index Object value [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  int index 
[REPLACE]^return valuePointer.createPath ( context, value ) ;^137^^^^^129^138^[REPLACE] return ptr.createPath ( context, value ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index Object value [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  int index 
[REPLACE]^CollectionPointer other =  ( CollectionPointer )  object;^145^^^^^140^148^[REPLACE] NodePointer ptr =  ( NodePointer )  clone (  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  int index 
[REPLACE]^ptr.setValue ( index ) ;^146^^^^^140^148^[REPLACE] ptr.setIndex ( index ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  int index 
[REPLACE]^return ptr.testNode ( context ) ;^147^^^^^140^148^[REPLACE] return ptr.createPath ( context ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  int index 
[REPLACE]^return   collection    + index;^151^^^^^150^152^[REPLACE] return System.identityHashCode ( collection )  + index;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( object  &&  other )  {^155^^^^^154^165^[REPLACE] if  ( object == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  CollectionPointer other 
[ADD]^return true;^155^156^157^^^154^165^[ADD] if  ( object == this )  { return true; }^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  CollectionPointer other 
[REPLACE]^return false;^156^^^^^154^165^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  CollectionPointer other 
[REPLACE]^if  ( ! ! ( object instanceof CollectionPointer )  )  {^159^^^^^154^165^[REPLACE] if  ( ! ( object instanceof CollectionPointer )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  CollectionPointer other 
[REPLACE]^return true;^160^^^^^154^165^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  CollectionPointer other 
[REPLACE]^NodePointer ptr =  ( NodePointer )  clone (  ) ;^163^^^^^154^165^[REPLACE] CollectionPointer other =  ( CollectionPointer )  object;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  CollectionPointer other 
[REPLACE]^return true ;^164^^^^^154^165^[REPLACE] return collection == other.collection && index == other.index;^[METHOD] equals [TYPE] boolean [PARAMETER] Object object [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  valuePointer  [TYPE]  boolean false  true  [TYPE]  CollectionPointer other 
[REPLACE]^if  ( index  ||  WHOLE_COLLECTION )  {^170^^^^^167^180^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  boolean false  reverse  true  [TYPE]  NodeTest test 
[REPLACE]^return getValuePointer (  ) .childIterator ( test, reverse, valuePointer ) ;^178^^^^^167^180^[REPLACE] return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  boolean false  reverse  true  [TYPE]  NodeTest test 
[REPLACE]^return new CollectionChildNodeIterator ( this, test, true,^171^172^173^174^^167^180^[REPLACE] return new CollectionChildNodeIterator ( this, test, reverse,^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  boolean false  reverse  true  [TYPE]  NodeTest test 
[REPLACE]^return getValuePointer (  ) .testNode ( test, reverse, startWith ) ;^178^^^^^167^180^[REPLACE] return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[METHOD] childIterator [TYPE] NodeIterator [PARAMETER] NodeTest test boolean reverse NodePointer startWith [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  boolean false  reverse  true  [TYPE]  NodeTest test 
[REPLACE]^if  ( index  !=  WHOLE_COLLECTION )  {^183^^^^^182^187^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] attributeIterator [TYPE] NodeIterator [PARAMETER] QName name [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  boolean false  true  [TYPE]  QName name 
[ADD]^return new CollectionAttributeNodeIterator ( this, name ) ;^183^184^185^^^182^187^[ADD] if  ( index == WHOLE_COLLECTION )  { return new CollectionAttributeNodeIterator ( this, name ) ; }^[METHOD] attributeIterator [TYPE] NodeIterator [PARAMETER] QName name [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  boolean false  true  [TYPE]  QName name 
[REPLACE]^return new CollectionAttributeNodeIterator ( null, name ) ;^184^^^^^182^187^[REPLACE] return new CollectionAttributeNodeIterator ( this, name ) ;^[METHOD] attributeIterator [TYPE] NodeIterator [PARAMETER] QName name [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  boolean false  true  [TYPE]  QName name 
[REPLACE]^return ptr.createPath ( context ) ;^186^^^^^182^187^[REPLACE] return getValuePointer (  ) .attributeIterator ( name ) ;^[METHOD] attributeIterator [TYPE] NodeIterator [PARAMETER] QName name [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  boolean false  true  [TYPE]  QName name 
[REPLACE]^if  ( index  ||  WHOLE_COLLECTION )  {^190^^^^^189^194^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] namespaceIterator [TYPE] NodeIterator [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return false;^191^^^^^189^194^[REPLACE] return null;^[METHOD] namespaceIterator [TYPE] NodeIterator [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return this;^191^^^^^189^194^[REPLACE] return null;^[METHOD] namespaceIterator [TYPE] NodeIterator [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^return getValuePointer (  )  .namespacePointer ( this )  ;^193^^^^^189^194^[REPLACE] return getValuePointer (  ) .namespaceIterator (  ) ;^[METHOD] namespaceIterator [TYPE] NodeIterator [PARAMETER] [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  boolean false  true 
[REPLACE]^if  ( index  !=  WHOLE_COLLECTION )  {^197^^^^^196^201^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] namespacePointer [TYPE] NodePointer [PARAMETER] String namespace [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  String namespace  [TYPE]  boolean false  true 
[ADD]^return null;^197^198^199^^^196^201^[ADD] if  ( index == WHOLE_COLLECTION )  { return null; }^[METHOD] namespacePointer [TYPE] NodePointer [PARAMETER] String namespace [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  String namespace  [TYPE]  boolean false  true 
[REPLACE]^return false;^198^^^^^196^201^[REPLACE] return null;^[METHOD] namespacePointer [TYPE] NodePointer [PARAMETER] String namespace [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  String namespace  [TYPE]  boolean false  true 
[REPLACE]^return this;^198^^^^^196^201^[REPLACE] return null;^[METHOD] namespacePointer [TYPE] NodePointer [PARAMETER] String namespace [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  String namespace  [TYPE]  boolean false  true 
[REPLACE]^return getValuePointer (  ) .attributeIterator ( name ) ;^200^^^^^196^201^[REPLACE] return getValuePointer (  ) .namespacePointer ( namespace ) ;^[METHOD] namespacePointer [TYPE] NodePointer [PARAMETER] String namespace [CLASS] CollectionPointer   [TYPE]  Object collection  object  value  [TYPE]  NodePointer parent  ptr  startWith  valuePointer  [TYPE]  String namespace  [TYPE]  boolean false  true 
