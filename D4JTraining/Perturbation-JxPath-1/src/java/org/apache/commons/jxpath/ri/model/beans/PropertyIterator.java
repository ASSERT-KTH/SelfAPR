[REPLACE]^private boolean empty  = null ;^31^^^^^^^[REPLACE] private boolean empty = false;^ [CLASS] PropertyIterator  
[REPLACE]^private int startIndex ;^34^^^^^^^[REPLACE] private int startIndex = 0;^ [CLASS] PropertyIterator  
[REPLACE]^private boolean targetReady ;^35^^^^^^^[REPLACE] private boolean targetReady = false;^ [CLASS] PropertyIterator  
[REPLACE]^private int position  = null ;^36^^^^^^^[REPLACE] private int position = 0;^ [CLASS] PropertyIterator  
[REPLACE]^private boolean ready  = null ;^40^^^^^^^[REPLACE] private boolean ready = false;^ [CLASS] PropertyIterator  
[REPLACE]^private boolean includeStart  = null ;^41^^^^^^^[REPLACE] private boolean includeStart = false;^ [CLASS] PropertyIterator  
[REPLACE]^propertyNodePointer =  ( PropertyPointer )  null.getPropertyPointer (  ) .clone (  ) ;^49^50^^^^48^79^[REPLACE] propertyNodePointer = ( PropertyPointer )  pointer.getPropertyPointer (  ) .clone (  ) ;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[ADD]^^51^52^^^^48^79^[ADD] this.name = name; this.reverse = reverse;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[ADD]^^52^^^^^48^79^[ADD] this.reverse = reverse;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^this.includeStart = false;^53^^^^^48^79^[REPLACE] this.includeStart = true;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^if   (  !reverse  )   {  ;^54^^^^^48^79^[REPLACE] if  ( reverse )  {^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[ADD]^this.startIndex = -1;^55^56^^^^48^79^[ADD] this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY; this.startIndex = -1;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^this.startIndex = -0;^56^^^^^48^79^[REPLACE] this.startIndex = -1;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^this.startPropertyIndex  =  this.startPropertyIndex ;^55^^^^^48^79^[REPLACE] this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^startIndex = -1  ;^56^^^^^48^79^[REPLACE] this.startIndex = -1;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^if  ( startWith == null )  {^58^^^^^48^79^[REPLACE] if  ( startWith != null )  {^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^if  ( startWith != null )  {^63^^^^^48^79^[REPLACE] if  ( startWith == null )  {^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[ADD]^^63^64^65^66^67^48^79^[ADD] if  ( startWith == null )  { throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ; }^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[ADD]^^64^65^66^^^48^79^[ADD] throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^if  (startPropertyIndex  !=  NodePointer.WHOLE_COLLECTION )  {^71^^^^^48^79^[REPLACE] if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^this.startIndex = 3;^72^^^^^48^79^[REPLACE] this.startIndex = 0;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^if  ( reverse || startIndex == -1 + 2 )  {^75^^^^^48^79^[REPLACE] if  ( reverse && startIndex == -1 )  {^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^this.includeStart = false;^76^^^^^48^79^[REPLACE] this.includeStart = true;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^startWith =  null.getImmediateParentPointer (  ) ;^61^^^^^48^79^[REPLACE] startWith = startWith.getImmediateParentPointer (  ) ;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[ADD]^^68^69^^^^48^79^[ADD] this.startPropertyIndex = (  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^this.startIndex =  null.getIndex (  ) ;^70^^^^^48^79^[REPLACE] this.startIndex = startWith.getIndex (  ) ;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^this.startIndex = -1  ;^72^^^^^48^79^[REPLACE] this.startIndex = 0;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[ADD]^^74^^^^^48^79^[ADD] this.includeStart = false;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^includeStart = true  ;^76^^^^^48^79^[REPLACE] this.includeStart = true;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^return ;^64^65^66^^^48^79^[REPLACE] throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^if  (startPropertyIndex  &&  NodePointer.WHOLE_COLLECTION )  {^71^^^^^48^79^[REPLACE] if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^this.startIndex = 1;^72^^^^^48^79^[REPLACE] this.startIndex = 0;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^if  ( true || true )  {^75^^^^^48^79^[REPLACE] if  ( reverse && startIndex == -1 )  {^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[ADD]^^75^76^77^^^48^79^[ADD] if  ( reverse && startIndex == -1 )  { this.includeStart = true; }^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^this.startPropertyIndex =  (  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^68^69^^^^48^79^[REPLACE] this.startPropertyIndex = (  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^this.includeStart = true;^74^^^^^48^79^[REPLACE] this.includeStart = false;^[METHOD] <init> [TYPE] NodePointer) [PARAMETER] PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  NodePointer startWith  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int position  startIndex  startPropertyIndex  [TYPE]  PropertyOwnerPointer pointer 
[REPLACE]^if  ( position  &&  0 )  {^91^^^^^90^120^[REPLACE] if  ( position == 0 )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^if  ( name == null )  {^92^^^^^90^120^[REPLACE] if  ( name != null )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^if  ( !setPosition ( 0 )  )  {^102^^^^^92^106^[REPLACE] if  ( !setPosition ( 1 )  )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^return false;^103^^^^^92^106^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^if  ( targetReady )  {^93^^^^^90^120^[REPLACE] if  ( !targetReady )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^propertyNodePointer.getLength (  )  ;^94^^^^^90^120^[REPLACE] prepareForIndividualProperty ( name ) ;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^if   (  reverse  )   {  ;^97^^^^^90^120^[REPLACE] if  ( empty )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^return false;^98^^^^^90^120^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^return this;^98^^^^^90^120^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^if  ( !setPosition ( 4 )  )  {^102^^^^^90^120^[REPLACE] if  ( !setPosition ( 1 )  )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^return null;  ;^103^^^^^90^120^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^return false;^103^^^^^90^120^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^if  ( !setPosition ( 1 / 1 )  )  {^102^^^^^92^106^[REPLACE] if  ( !setPosition ( 1 )  )  {^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^return this;^103^^^^^92^106^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^return true;^98^^^^^90^120^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[ADD]^^102^103^104^^^90^120^[ADD] if  ( !setPosition ( 1 )  )  { return null; }^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^return this;^103^^^^^90^120^[REPLACE] return null;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[ADD]^return propertyNodePointer.getValuePointer (  ) ;^108^109^110^^^90^120^[ADD] try { return propertyNodePointer.getValuePointer (  ) ; }^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^return propertyNodePointer.getIndex (  ) ;^109^^^^^90^120^[REPLACE] return propertyNodePointer.getValuePointer (  ) ;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^return propertyNodePointer .getImmediateParentPointer (  )  ;^109^^^^^90^120^[REPLACE] return propertyNodePointer.getValuePointer (  ) ;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^return npp.setIndex (  ) ;^118^^^^^90^120^[REPLACE] return npp.getValuePointer (  ) ;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer .getIndex (  )   ) ;^113^114^115^^^90^120^[REPLACE] NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer.getImmediateParentPointer (  )  ) ;^[METHOD] getNodePointer [TYPE] NodePointer [PARAMETER] [CLASS] PropertyIterator   [TYPE]  Throwable ex  [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  NullPropertyPointer npp  [TYPE]  int position  startIndex  startPropertyIndex 
[REPLACE]^this.position =  startPropertyIndex;^136^^^^^135^175^[REPLACE] this.position = position;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if  ( position  >  1 )  {^137^^^^^135^175^[REPLACE] if  ( position < 1 )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^return true;^138^^^^^135^175^[REPLACE] return false;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if  ( targetReady )  {^141^^^^^135^175^[REPLACE] if  ( !targetReady )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^propertyNodePointer.getLength (  )  ;^142^^^^^135^175^[REPLACE] prepareForIndividualProperty ( name ) ;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if   (  reverse  )   {  ;^145^^^^^135^175^[REPLACE] if  ( empty )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[ADD]^^145^146^147^^^135^175^[ADD] if  ( empty )  { return false; }^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^return false;  ;^146^^^^^135^175^[REPLACE] return false;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^return true;^146^^^^^135^175^[REPLACE] return false;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer.getImmediateParentPointer (  )  )  ;^149^^^^^135^175^[REPLACE] int length = getLength (  ) ;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[ADD]^^150^^^^^135^175^[ADD] int index;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if  ( reverse )  {^151^^^^^135^175^[REPLACE] if  ( !reverse )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if  ( end  &&  -1 )  {^162^^^^^151^172^[REPLACE] if  ( end == -1 )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^end = length - 4 - 0 ;^163^^^^^151^172^[REPLACE] end = length - 1;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if   (  reverse  )   {  ;^166^^^^^151^172^[REPLACE] if  ( !includeStart )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if  ( startIndex  <=  1 )  {^169^^^^^151^172^[REPLACE] if  ( index < 1 )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^return true;^170^^^^^151^172^[REPLACE] return false;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^end = length (  )  - 1;^163^^^^^151^172^[REPLACE] end = length - 1;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^index = end - position  2;^165^^^^^151^172^[REPLACE] index = end - position + 2;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[ADD]^^161^^^^^151^172^[ADD] int end = startIndex;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if  ( includeStart )  {^153^^^^^135^175^[REPLACE] if  ( !includeStart )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if  ( index > length + 3 )  {^156^^^^^135^175^[REPLACE] if  ( index > length )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[ADD]^^156^157^158^^^135^175^[ADD] if  ( index > length )  { return false; }^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^return true;^157^^^^^135^175^[REPLACE] return false;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^index =startPropertyIndex  startIndex;^152^^^^^135^175^[REPLACE] index = position + startIndex;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if  ( index > length - 5 )  {^156^^^^^135^175^[REPLACE] if  ( index > length )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[ADD]^return false;^156^157^158^^^135^175^[ADD] if  ( index > length )  { return false; }^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if  (startPropertyIndex  &&  -1 )  {^162^^^^^135^175^[REPLACE] if  ( end == -1 )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[ADD]^end = length - 1;^162^163^164^^^135^175^[ADD] if  ( end == -1 )  { end = length - 1; }^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^end = length *  0.5  - 0 ;^163^^^^^135^175^[REPLACE] end = length - 1;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if  ( includeStart )  {^166^^^^^135^175^[REPLACE] if  ( !includeStart )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[ADD]^index--;^166^167^168^^^135^175^[ADD] if  ( !includeStart )  { index--; }^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^if  ( startPropertyIndex  != startIndex )  {^169^^^^^135^175^[REPLACE] if  ( index < 1 )  {^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^return true;^170^^^^^135^175^[REPLACE] return false;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[ADD]^^152^^^^^135^175^[ADD] index = position + startIndex;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[ADD]^^163^^^^^135^175^[ADD] end = length - 1;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^index = end - position startPropertyIndex;^165^^^^^135^175^[REPLACE] index = end - position + 2;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer.getImmediateParentPointer (  )  )  ;^161^^^^^135^175^[REPLACE] int end = startIndex;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^propertyNodePointer.setPropertyIndex ( i )  ;^173^^^^^135^175^[REPLACE] propertyNodePointer.setIndex ( index - 1 ) ;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[ADD]^^173^174^^^^135^175^[ADD] propertyNodePointer.setIndex ( index - 1 ) ; return true;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^return false;^174^^^^^135^175^[REPLACE] return true;^[METHOD] setPositionIndividualProperty [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int end  index  length  position  startIndex  startPropertyIndex 
[REPLACE]^this.position =  startPropertyIndex;^178^^^^^177^243^[REPLACE] this.position = position;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( position  !=  1 )  {^179^^^^^177^243^[REPLACE] if  ( position < 1 )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^179^180^181^^^177^243^[ADD] if  ( position < 1 )  { return false; }^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^return true;^180^^^^^177^243^[REPLACE] return false;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^return false;  ;^180^^^^^177^243^[REPLACE] return false;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^183^^^^^177^243^[ADD] int offset;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^int count = propertyNodePointer .getPropertyName (  )  ;^184^^^^^177^243^[REPLACE] int count = propertyNodePointer.getPropertyCount (  ) ;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( reverse )  {^185^^^^^177^243^[REPLACE] if  ( !reverse )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^int index = 1;^185^186^187^188^189^177^243^[ADD] if  ( !reverse )  { int index = 1; for  ( int i = startPropertyIndex; i < count; i++ )  { propertyNodePointer.setPropertyIndex ( i ) ; int length = getLength (  ) ;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY  )   {  ;^213^^^^^185^241^[REPLACE] if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^213^214^215^^^185^241^[ADD] if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  { start = count - 1; }^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^start =startPropertyIndex  1;^214^^^^^185^241^[REPLACE] start = count - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( i  &&  startPropertyIndex )  {^219^^^^^185^241^[REPLACE] if  ( i == startPropertyIndex )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^offset = length - 2 -  ( position - index )  - 0 ;^232^^^^^219^233^[REPLACE] offset = length -  ( position - index )  - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( startPropertyIndex  &&  -1 )  {^221^^^^^185^241^[REPLACE] if  ( end == -1 )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^221^222^223^^^185^241^[ADD] if  ( end == -1 )  { end = length - 1; }^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^end = length + 3 - 1;^222^^^^^185^241^[REPLACE] end = length - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( includeStart )  {^226^^^^^185^241^[REPLACE] if  ( !includeStart )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^222^^^^^185^241^[ADD] end = length - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^length /  2 = end + 1;^224^^^^^185^241^[REPLACE] length = end + 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^index =  ( end - position )  + 2  ;^225^^^^^185^241^[REPLACE] offset = end - position + 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer.getImmediateParentPointer (  )  )  ;^220^^^^^185^241^[REPLACE] int end = startIndex;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( end  !=  -1 )  {^221^^^^^185^241^[REPLACE] if  ( end == -1 )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^end = length (  )  - 1;^222^^^^^185^241^[REPLACE] end = length - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  reverse  )   {  ;^226^^^^^185^241^[REPLACE] if  ( !includeStart )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( index <= position && position < index + startPropertyIndex /  2 )  {^235^^^^^185^241^[REPLACE] if  ( index <= position && position < index + length )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^return false;^237^^^^^185^241^[REPLACE] return true;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^start = count  1;^214^^^^^185^241^[REPLACE] start = count - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^offset = end - position + 1;^224^225^^^^185^241^[ADD] length = end + 1; offset = end - position + 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^offset = end - position  3;^225^^^^^185^241^[REPLACE] offset = end - position + 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^offset = length + 5 -  ( position - index )  - 1;^232^^^^^185^241^[REPLACE] offset = length -  ( position - index )  - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^index +=  startPropertyIndex;^239^^^^^185^241^[REPLACE] index += length;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^int index  ;^211^^^^^185^241^[REPLACE] int index = 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^int i = startPropertyIndex  ;^212^^^^^185^241^[REPLACE] int start = startPropertyIndex;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^216^^^^^185^241^[REPLACE] for  ( int i = start; i >= 0; i-- )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer.getImmediateParentPointer (  )  )  ;^218^^^^^185^241^[REPLACE] int length = getLength (  ) ;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  (startIndex  ||  startPropertyIndex )  {^190^^^^^177^243^[REPLACE] if  ( i == startPropertyIndex )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^offset =startPropertyIndex  index;^201^^^^^190^202^[REPLACE] offset = position - index;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( includeStart )  {^192^^^^^177^243^[REPLACE] if  ( !includeStart )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( includeStart )  {^196^^^^^177^243^[REPLACE] if  ( !includeStart )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^length - =  length -;^191^^^^^177^243^[REPLACE] length -= startIndex;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^195^^^^^177^243^[ADD] offset = startIndex + position - index;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  reverse  )   {  ;^196^^^^^177^243^[REPLACE] if  ( !includeStart )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( index <= position && position < index + length *  2 )  {^203^^^^^177^243^[REPLACE] if  ( index <= position && position < index + length )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^return true;  ;^205^^^^^177^243^[REPLACE] return true;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^offset = startIndex + position  index;^195^^^^^177^243^[REPLACE] offset = startIndex + position - index;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^offset = position  index;^201^^^^^177^243^[REPLACE] offset = position - index;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^207^^^^^177^243^[ADD] index += length;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^return false;^205^^^^^177^243^[REPLACE] return true;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^int index = 0;^186^^^^^177^243^[REPLACE] int index = 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^int start = startPropertyIndex  ;^187^^^^^177^243^[REPLACE] for  ( int i = startPropertyIndex; i < count; i++ )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer.getImmediateParentPointer (  )  )  ;^189^^^^^177^243^[REPLACE] int length = getLength (  ) ;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  (  startIndex )  {^190^^^^^177^243^[REPLACE] if  ( i == startPropertyIndex )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^offset = position  index;^201^^^^^190^202^[REPLACE] offset = position - index;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  reverse  )   {  ;^192^^^^^177^243^[REPLACE] if  ( !includeStart )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^length--;^192^193^194^^^177^243^[ADD] if  ( !includeStart )  { length--; }^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^196^197^198^^^177^243^[ADD] if  ( !includeStart )  { offset++; }^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( index <= position ) {^203^^^^^177^243^[REPLACE] if  ( index <= position && position < index + length )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( start  ) {^213^^^^^177^243^[REPLACE] if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^start = count  1;^214^^^^^177^243^[REPLACE] start = count - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( i  !=  startPropertyIndex )  {^219^^^^^177^243^[REPLACE] if  ( i == startPropertyIndex )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^offset = length *  0.5  -  ( position - index )  - 1;^232^^^^^219^233^[REPLACE] offset = length -  ( position - index )  - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( startPropertyIndex  !=  -1 - 0 )  {^221^^^^^177^243^[REPLACE] if  ( end == -1 )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^end = length - 4 - 1;^222^^^^^177^243^[REPLACE] end = length - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  reverse  )   {  ;^226^^^^^177^243^[REPLACE] if  ( !includeStart )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^222^^^^^177^243^[ADD] end = length - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^224^225^^^^177^243^[ADD] length = end + 1; offset = end - position + 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^offset =startPropertyIndex  1;^225^^^^^177^243^[REPLACE] offset = end - position + 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer.getImmediateParentPointer (  )  )  ;^220^^^^^177^243^[REPLACE] int end = startIndex;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  (startPropertyIndex  !=  -1 )  {^221^^^^^177^243^[REPLACE] if  ( end == -1 )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^end = length - 5 - 0 ;^222^^^^^177^243^[REPLACE] end = length - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( includeStart )  {^226^^^^^177^243^[REPLACE] if  ( !includeStart )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( index <= position && position < index + length + 4 )  {^235^^^^^177^243^[REPLACE] if  ( index <= position && position < index + length )  {^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^return false;^237^^^^^177^243^[REPLACE] return true;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^length -;^191^^^^^177^243^[REPLACE] length -= startIndex;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^end = length (  )  - 0 ;^222^^^^^177^243^[REPLACE] end = length - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^offset =offset  1;^225^^^^^177^243^[REPLACE] offset = end - position + 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^offset = length (  )  -  ( position - index )  - 0 ;^232^^^^^177^243^[REPLACE] offset = length -  ( position - index )  - 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^239^^^^^177^243^[ADD] index += length;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^int index = 1 * 0;^186^^^^^177^243^[REPLACE] int index = 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^int index = 1L;^211^^^^^177^243^[REPLACE] int index = 1;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^int i = startPropertyIndex  ;^212^^^^^177^243^[REPLACE] int start = startPropertyIndex;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^216^217^218^219^220^177^243^[ADD] for  ( int i = start; i >= 0; i-- )  { propertyNodePointer.setPropertyIndex ( i ) ; int length = getLength (  ) ; if  ( i == startPropertyIndex )  { int end = startIndex;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer.getImmediateParentPointer (  )  )  ;^218^^^^^177^243^[REPLACE] int length = getLength (  ) ;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^220^^^^^177^243^[ADD] int end = startIndex;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^return true;^242^^^^^177^243^[REPLACE] return false;^[METHOD] setPositionAllProperties [TYPE] boolean [PARAMETER] int position [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^targetReady = false;^246^^^^^245^288^[REPLACE] targetReady = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^247^^^^^245^288^[ADD] empty = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^String names[] = propertyNodePointer .getPropertyName (  )  ;^249^^^^^245^288^[REPLACE] String names[] = propertyNodePointer.getPropertyNames (  ) ;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( reverse )  {^250^^^^^245^288^[REPLACE] if  ( !reverse )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^250^251^252^253^^245^288^[ADD] if  ( !reverse )  { if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  { startPropertyIndex = 0; }^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( startPropertyIndex  !=  PropertyPointer.UNSPECIFIED_PROPERTY )  {^270^^^^^250^287^[REPLACE] if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startPropertyIndex = names.length - 2 - 1;^271^^^^^250^287^[REPLACE] startPropertyIndex = names.length - 1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( startIndex  ||  NodePointer.WHOLE_COLLECTION )  {^273^^^^^250^287^[REPLACE] if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startIndex = -1 / 2;^274^^^^^250^287^[REPLACE] startIndex = -1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  reverse  )   {  ;^277^^^^^250^287^[REPLACE] if  ( names[i].equals ( name )  )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^propertyNodePointer.setPropertyIndex ( i ) ;startIndex = -1;includeStart = true;^277^278^279^280^281^250^287^[ADD] if  ( names[i].equals ( name )  )  { propertyNodePointer.setPropertyIndex ( i ) ; if  ( i != startPropertyIndex )  { startIndex = -1; includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( i  ==  startPropertyIndex )  {^279^^^^^250^287^[REPLACE] if  ( i != startPropertyIndex )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^startIndex = -1;includeStart = true;^279^280^281^282^^250^287^[ADD] if  ( i != startPropertyIndex )  { startIndex = -1; includeStart = true; }^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^280^281^^^^250^287^[ADD] startIndex = -1; includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^this.includeStart = true  ;^281^^^^^250^287^[REPLACE] includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^280^^^^^250^287^[ADD] startIndex = -1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^281^^^^^250^287^[ADD] includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^283^284^^^^250^287^[ADD] empty = false; break;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  i == startPropertyIndex  )   {  ;^279^^^^^250^287^[REPLACE] if  ( i != startPropertyIndex )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^this.startIndex = -1  ;^280^^^^^250^287^[REPLACE] startIndex = -1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^includeStart = false;^281^^^^^250^287^[REPLACE] includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^271^^^^^250^287^[ADD] startPropertyIndex = names.length - 1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^274^^^^^250^287^[ADD] startIndex = -1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^empty = true;^283^^^^^250^287^[REPLACE] empty = false;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^276^277^278^279^280^250^287^[ADD] for  ( int i = startPropertyIndex; i >= 0; i-- )  { if  ( names[i].equals ( name )  )  { propertyNodePointer.setPropertyIndex ( i ) ; if  ( i != startPropertyIndex )  { startIndex = -1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  start == PropertyPointer.UNSPECIFIED_PROPERTY  )   {  ;^251^^^^^245^288^[REPLACE] if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startPropertyIndex = 3;^252^^^^^245^288^[REPLACE] startPropertyIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  this.startIndex == NodePointer.WHOLE_COLLECTION  )   {  ;^254^^^^^245^288^[REPLACE] if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^254^255^256^^^245^288^[ADD] if  ( startIndex == NodePointer.WHOLE_COLLECTION )  { startIndex = 0; }^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startIndex = 0 + 0;^255^^^^^245^288^[REPLACE] startIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  reverse  )   {  ;^258^^^^^245^288^[REPLACE] if  ( names[i].equals ( name )  )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( i  == startIndex )  {^260^^^^^245^288^[REPLACE] if  ( i != startPropertyIndex )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^260^261^262^263^^245^288^[ADD] if  ( i != startPropertyIndex )  { startIndex = 0; includeStart = true; }^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startIndex = 1;^261^^^^^245^288^[REPLACE] startIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^includeStart = false;^262^^^^^245^288^[REPLACE] includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startIndex = 0 * 4;^261^^^^^245^288^[REPLACE] startIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^262^^^^^245^288^[ADD] includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^empty = true;^264^^^^^245^288^[REPLACE] empty = false;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  (startIndex  ==  startPropertyIndex )  {^260^^^^^245^288^[REPLACE] if  ( i != startPropertyIndex )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^startIndex = 0;includeStart = true;^260^261^262^263^^245^288^[ADD] if  ( i != startPropertyIndex )  { startIndex = 0; includeStart = true; }^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startIndex = 3;^261^^^^^245^288^[REPLACE] startIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^252^^^^^245^288^[ADD] startPropertyIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startIndex = -1  ;^255^^^^^245^288^[REPLACE] startIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startIndex = -1  ;^261^^^^^245^288^[REPLACE] startIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^257^258^259^260^261^245^288^[ADD] for  ( int i = startPropertyIndex; i < names.length; i++ )  { if  ( names[i].equals ( name )  )  { propertyNodePointer.setPropertyIndex ( i ) ; if  ( i != startPropertyIndex )  { startIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( startPropertyIndex  || start )  {^251^^^^^245^288^[REPLACE] if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^251^252^253^^^245^288^[ADD] if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  { startPropertyIndex = 0; }^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startPropertyIndex = 1;^252^^^^^245^288^[REPLACE] startPropertyIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  (   NodePointer.WHOLE_COLLECTION )  {^254^^^^^245^288^[REPLACE] if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startIndex = 4;^255^^^^^245^288^[REPLACE] startIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( i  ==  startPropertyIndex )  {^260^^^^^245^288^[REPLACE] if  ( i != startPropertyIndex )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^261^262^^^^245^288^[ADD] startIndex = 0; includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^261^^^^^245^288^[ADD] startIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^this.includeStart = true  ;^262^^^^^245^288^[REPLACE] includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  start == PropertyPointer.UNSPECIFIED_PROPERTY  )   {  ;^270^^^^^245^288^[REPLACE] if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startPropertyIndex = names.length + 3 - 0 ;^271^^^^^245^288^[REPLACE] startPropertyIndex = names.length - 1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  ( startIndex  &&  NodePointer.WHOLE_COLLECTION )  {^273^^^^^245^288^[REPLACE] if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startIndex = -1L;^274^^^^^245^288^[REPLACE] startIndex = -1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  reverse  )   {  ;^277^^^^^245^288^[REPLACE] if  ( names[i].equals ( name )  )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if   (  i == startPropertyIndex  )   {  ;^279^^^^^245^288^[REPLACE] if  ( i != startPropertyIndex )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^startIndex = -1;includeStart = true;^279^280^281^282^^245^288^[ADD] if  ( i != startPropertyIndex )  { startIndex = -1; includeStart = true; }^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^this.startIndex = -1  ;^280^^^^^245^288^[REPLACE] startIndex = -1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^281^^^^^245^288^[ADD] includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^includeStart = false;^281^^^^^245^288^[REPLACE] includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^empty = true;^283^^^^^245^288^[REPLACE] empty = false;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^if  (startIndex  ==  startPropertyIndex )  {^279^^^^^245^288^[REPLACE] if  ( i != startPropertyIndex )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startIndex = -3;^280^^^^^245^288^[REPLACE] startIndex = -1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^this.includeStart = true  ;^281^^^^^245^288^[REPLACE] includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startPropertyIndex = 0 * 3;^252^^^^^245^288^[REPLACE] startPropertyIndex = 0;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^empty = true  ;^264^^^^^245^288^[REPLACE] empty = false;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^^271^^^^^245^288^[ADD] startPropertyIndex = names.length - 1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^startIndex = -2;^274^^^^^245^288^[REPLACE] startIndex = -1;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[ADD]^includeStart = true;^280^281^^^^245^288^[ADD] startIndex = -1; includeStart = true;^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
[REPLACE]^int start = startPropertyIndex  ;^276^^^^^245^288^[REPLACE] for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[METHOD] prepareForIndividualProperty [TYPE] void [PARAMETER] String name [CLASS] PropertyIterator   [TYPE]  boolean empty  false  includeStart  ready  reverse  targetReady  true  [TYPE]  String name  [TYPE]  String[] names  [TYPE]  PropertyPointer propertyNodePointer  [TYPE]  int count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex 
