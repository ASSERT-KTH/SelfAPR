[REPLACE]^private boolean atomic ;^37^^^^^^^[REPLACE] private boolean atomic = false;^ [CLASS] JXPathBasicBeanInfo 1  
[REPLACE]^this.clazz =  dynamicPropertyHandlerClass;^44^^^^^43^45^[REPLACE] this.clazz = clazz;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class clazz [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^this.clazz =  dynamicPropertyHandlerClass;^48^^^^^47^50^[REPLACE] this.clazz = clazz;^[METHOD] <init> [TYPE] Class,boolean) [PARAMETER] Class clazz boolean atomic [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^this.atomic = false; ;^49^^^^^47^50^[REPLACE] this.atomic = atomic;^[METHOD] <init> [TYPE] Class,boolean) [PARAMETER] Class clazz boolean atomic [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^this.clazz =  dynamicPropertyHandlerClass;^53^^^^^52^56^[REPLACE] this.clazz = clazz;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class clazz Class dynamicPropertyHandlerClass [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^this.atomic = true;^54^^^^^52^56^[REPLACE] this.atomic = false;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class clazz Class dynamicPropertyHandlerClass [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] propertyDescriptors  [TYPE]  String[] propertyNames 
[ADD]^this.dynamicPropertyHandlerClass = dynamicPropertyHandlerClass;^54^55^^^^52^56^[ADD] this.atomic = false; this.dynamicPropertyHandlerClass = dynamicPropertyHandlerClass;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class clazz Class dynamicPropertyHandlerClass [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^this.dynamicPropertyHandlerClass =  clazz;^55^^^^^52^56^[REPLACE] this.dynamicPropertyHandlerClass = dynamicPropertyHandlerClass;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class clazz Class dynamicPropertyHandlerClass [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^return null;^63^^^^^62^64^[REPLACE] return atomic;^[METHOD] isAtomic [TYPE] boolean [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^return dynamicPropertyHandlerClass ;^70^^^^^69^71^[REPLACE] return dynamicPropertyHandlerClass != null;^[METHOD] isDynamic [TYPE] boolean [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^if  ( propertyDescriptors != null )  {^74^^^^^73^99^[REPLACE] if  ( propertyDescriptors == null )  {^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^if  ( isDynamic (  )  )  {^77^^^^^73^99^[REPLACE] if  ( clazz.isInterface (  )  )  {^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^bi = Introspector.getBeanInfo ( clazz ) ; ;^81^^^^^77^82^[REPLACE] bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^bi = Introspector.getBeanInfo ( clazz, Object.class ) ; ;^78^^^^^73^99^[REPLACE] bi = Introspector.getBeanInfo ( clazz ) ;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[ADD]^BeanInfo bi = null;bi = Introspector.getBeanInfo ( clazz ) ;^75^76^77^78^79^73^99^[ADD] try { BeanInfo bi = null; if  ( clazz.isInterface (  )  )  { bi = Introspector.getBeanInfo ( clazz ) ; }^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[ADD]^bi = Introspector.getBeanInfo ( clazz ) ;^77^78^79^^^73^99^[ADD] if  ( clazz.isInterface (  )  )  { bi = Introspector.getBeanInfo ( clazz ) ; }^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[ADD]^^78^^^^^73^99^[ADD] bi = Introspector.getBeanInfo ( clazz ) ;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^bi = Introspector.getBeanInfo ( clazz ) ; ;^81^^^^^73^99^[REPLACE] bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^propertyDescriptors =  pds;^92^^^^^73^99^[REPLACE] propertyDescriptors = descriptors;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^BeanInfo bi = this;^76^^^^^73^99^[REPLACE] BeanInfo bi = null;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[ADD]^^76^^^^^73^99^[ADD] BeanInfo bi = null;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^PropertyDescriptor[] pds = bi .getPropertyDescriptors (  )  ;^83^^^^^73^99^[REPLACE] PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;^84^^^^^73^99^[REPLACE] PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[ADD]^^92^^^^^73^99^[ADD] propertyDescriptors = descriptors;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^return null;^88^89^^^^73^99^[REPLACE] return  (  ( PropertyDescriptor )  left ) .getName (  ) .compareTo ( (  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^BeanInfo bi = true;^76^^^^^73^99^[REPLACE] BeanInfo bi = null;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[ADD]^^84^^^^^73^99^[ADD] PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[ADD]^^81^^^^^73^99^[ADD] bi = Introspector.getBeanInfo ( clazz, Object.class ) ;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^BeanInfo bi = false;^76^^^^^73^99^[REPLACE] BeanInfo bi = null;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[ADD]^^83^^^^^73^99^[ADD] PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^return propertyDescriptors[i];^98^^^^^73^99^[REPLACE] return propertyDescriptors;^[METHOD] getPropertyDescriptors [TYPE] PropertyDescriptor[] [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  boolean atomic  false  true  [TYPE]  BeanInfo bi  [TYPE]  IntrospectionException ex  [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^return  (  ( PropertyDescriptor )  left ) .getName (  )  .equals ( left )  .getName (  )  ) ;^88^89^^^^87^90^[REPLACE] return  (  ( PropertyDescriptor )  left ) .getName (  ) .compareTo ( (  ( PropertyDescriptor )  right ) .getName (  )  ) ;^[METHOD] compare [TYPE] int [PARAMETER] Object left Object right [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  Object left  right  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] propertyNames 
[REPLACE]^if  ( propertyNames != null )  {^102^^^^^101^123^[REPLACE] if  ( propertyNames == null )  {^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < pds.length + 1; i++ )  {^105^^^^^101^123^[REPLACE] for  ( int i = 0; i < pds.length; i++ )  {^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^names[i]  =  names[i] ;^106^^^^^101^123^[REPLACE] names[i] = pds[i].getName (  ) ;^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^names[i]  = null ;^106^^^^^101^123^[REPLACE] names[i] = pds[i].getName (  ) ;^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[ADD]^^106^^^^^101^123^[ADD] names[i] = pds[i].getName (  ) ;^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^propertyNames =  null;^108^^^^^101^123^[REPLACE] propertyNames = names;^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^PropertyDescriptor[] pds = bi.getPropertyDescriptors (  ) ;^103^^^^^101^123^[REPLACE] PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^PropertyDescriptor[] descriptors = new PropertyDescriptor[pds.length];^104^^^^^101^123^[REPLACE] String[] names = new String[pds.length];^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < pds.length; i++ )  {^105^^^^^101^123^[REPLACE] for  ( int i = 0; i < pds.length; i++ )  {^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < pds.length - 4; i++ )  {^105^^^^^101^123^[REPLACE] for  ( int i = 0; i < pds.length; i++ )  {^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[ADD]^^105^106^107^^^101^123^[ADD] for  ( int i = 0; i < pds.length; i++ )  { names[i] = pds[i].getName (  ) ; }^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^names[i] ;^106^^^^^101^123^[REPLACE] names[i] = pds[i].getName (  ) ;^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[ADD]^^103^104^^^^101^123^[ADD] PropertyDescriptor[] pds = getPropertyDescriptors (  ) ; String[] names = new String[pds.length];^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[ADD]^^104^^^^^101^123^[ADD] String[] names = new String[pds.length];^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^if  ( propertyNames[i]  !=  propertyName )  {^112^^^^^101^123^[REPLACE] if  ( propertyNames[i] == propertyName )  {^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^return propertyDescriptors;^113^^^^^101^123^[REPLACE] return propertyDescriptors[i];^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < propertyNames.length /  0.5 ; i++ )  {^111^^^^^101^123^[REPLACE] for  ( int i = 0; i < propertyNames.length; i++ )  {^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < propertyNames.length; i++ )  {^111^^^^^101^123^[REPLACE] for  ( int i = 0; i < propertyNames.length; i++ )  {^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[ADD]^^111^112^113^114^^101^123^[ADD] for  ( int i = 0; i < propertyNames.length; i++ )  { if  ( propertyNames[i] == propertyName )  { return propertyDescriptors[i]; }^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^if  ( propertyNames[i].compareTo ( propertyName )  )  {^118^^^^^101^123^[REPLACE] if  ( propertyNames[i].equals ( propertyName )  )  {^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^return propertyDescriptors;^119^^^^^101^123^[REPLACE] return propertyDescriptors[i];^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < propertyNames.length (  ) ; i++ )  {^117^^^^^101^123^[REPLACE] for  ( int i = 0; i < propertyNames.length; i++ )  {^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < propertyNames.length; i++ )  {^117^^^^^101^123^[REPLACE] for  ( int i = 0; i < propertyNames.length; i++ )  {^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^return true;^122^^^^^101^123^[REPLACE] return null;^[METHOD] getPropertyDescriptor [TYPE] PropertyDescriptor [PARAMETER] String propertyName [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  String propertyName  [TYPE]  int i 
[REPLACE]^return dynamicPropertyHandlerClass != null;^130^^^^^129^131^[REPLACE] return dynamicPropertyHandlerClass;^[METHOD] getDynamicPropertyHandlerClass [TYPE] Class [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames 
[REPLACE]^String[] names = new String[pds.length];^134^^^^^133^153^[REPLACE] StringBuffer buffer = new StringBuffer (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[ADD]^^134^135^^^^133^153^[ADD] StringBuffer buffer = new StringBuffer (  ) ; buffer.append ( "BeanInfo [class = " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^buffer .toString (  )  ;^135^^^^^133^153^[REPLACE] buffer.append ( "BeanInfo [class = " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^buffer.append ( clazz.isInterface (  )  ) ;^136^^^^^133^153^[REPLACE] buffer.append ( clazz.getName (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[ADD]^^136^^^^^133^153^[ADD] buffer.append ( clazz.getName (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^if  ( isAtomic (  )  )  {^137^^^^^133^153^[REPLACE] if  ( isDynamic (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^buffer.append ( ", atomic" ) ;^138^^^^^133^153^[REPLACE] buffer.append ( ", dynamic" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^if  ( isDynamic (  )  )  {^140^^^^^133^153^[REPLACE] if  ( isAtomic (  )  )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[ADD]^buffer.append ( ", atomic" ) ;^140^141^142^^^133^153^[ADD] if  ( isAtomic (  )  )  { buffer.append ( ", atomic" ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^buffer.append ( ", dynamic" ) ;^141^^^^^133^153^[REPLACE] buffer.append ( ", atomic" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^buffer.append ( "]" ) ;^143^^^^^133^153^[REPLACE] buffer.append ( ", properties = " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[ADD]^^143^^^^^133^153^[ADD] buffer.append ( ", properties = " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^PropertyDescriptor[] pds = getPropertyDescriptors (  ) ;^144^^^^^133^153^[REPLACE] PropertyDescriptor[] jpds = getPropertyDescriptors (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < jpds.length + 3; i++ )  {^145^^^^^133^153^[REPLACE] for  ( int i = 0; i < jpds.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^buffer .toString (  )  ;^146^^^^^133^153^[REPLACE] buffer.append ( "\n    " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^buffer.append ( propertyDescriptors[i].getPropertyType (  )  ) ;^147^^^^^133^153^[REPLACE] buffer.append ( jpds[i].getPropertyType (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[ADD]^^147^148^^^^133^153^[ADD] buffer.append ( jpds[i].getPropertyType (  )  ) ; buffer.append ( ": " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^buffer.append ( "]" ) ;^148^^^^^133^153^[REPLACE] buffer.append ( ": " ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REMOVE]^buffer.append ( "]" ) ;^148^^^^^133^153^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^buffer .toString (  )  ;^149^^^^^133^153^[REPLACE] buffer.append ( jpds[i].getName (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^buffer.append ( "]" ) ;^149^^^^^133^153^[REPLACE] buffer.append ( jpds[i].getName (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REMOVE]^buffer.append ( "]" ) ;^149^^^^^133^153^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < jpds.length; i++ )  {^145^^^^^133^153^[REPLACE] for  ( int i = 0; i < jpds.length; i++ )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^buffer.append ( ": " ) ;^151^^^^^133^153^[REPLACE] buffer.append ( "]" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[ADD]^return buffer.toString (  ) ;^151^152^^^^133^153^[ADD] buffer.append ( "]" ) ; return buffer.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
[REPLACE]^return buffer.StringBuffer (  ) ;^152^^^^^133^153^[REPLACE] return buffer.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JXPathBasicBeanInfo 1   [TYPE]  Class clazz  dynamicPropertyHandlerClass  [TYPE]  StringBuffer buffer  [TYPE]  boolean atomic  false  true  [TYPE]  PropertyDescriptor[] descriptors  jpds  pds  propertyDescriptors  [TYPE]  String[] names  propertyNames  [TYPE]  int i 
