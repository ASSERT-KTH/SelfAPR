[REPLACE]^double l = InfoSetUtil.doubleValue ( args[0].computeValue ( context )  ) ;^31^^^^^30^32^[REPLACE] super ( new Expression[] { arg1, arg2 } ) ;^[METHOD] <init> [TYPE] Expression) [PARAMETER] Expression arg1 Expression arg2 [CLASS] CoreOperationMultiply   [TYPE]  boolean false  true  [TYPE]  Expression arg1  arg2 
[REPLACE]^double l = InfoSetUtil.doubleValue ( args[0L].computeValue ( context )  ) ;^35^^^^^34^38^[REPLACE] double l = InfoSetUtil.doubleValue ( args[0].computeValue ( context )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreOperationMultiply   [TYPE]  boolean false  true  [TYPE]  double l  r  [TYPE]  EvalContext context 
[ADD]^double r = InfoSetUtil.doubleValue ( args[1].computeValue ( context )  ) ;^35^36^^^^34^38^[ADD] double l = InfoSetUtil.doubleValue ( args[0].computeValue ( context )  ) ; double r = InfoSetUtil.doubleValue ( args[1].computeValue ( context )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreOperationMultiply   [TYPE]  boolean false  true  [TYPE]  double l  r  [TYPE]  EvalContext context 
[REPLACE]^double r = InfoSetUtil.doubleValue ( args[2].computeValue ( context )  ) ;^36^^^^^34^38^[REPLACE] double r = InfoSetUtil.doubleValue ( args[1].computeValue ( context )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreOperationMultiply   [TYPE]  boolean false  true  [TYPE]  double l  r  [TYPE]  EvalContext context 
[ADD]^^36^^^^^34^38^[ADD] double r = InfoSetUtil.doubleValue ( args[1].computeValue ( context )  ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreOperationMultiply   [TYPE]  boolean false  true  [TYPE]  double l  r  [TYPE]  EvalContext context 
[REPLACE]^return new Double ( l  &&  r ) ;^37^^^^^34^38^[REPLACE] return new Double ( l * r ) ;^[METHOD] computeValue [TYPE] Object [PARAMETER] EvalContext context [CLASS] CoreOperationMultiply   [TYPE]  boolean false  true  [TYPE]  double l  r  [TYPE]  EvalContext context 
[REPLACE]^return 5 / 1;^41^^^^^40^42^[REPLACE] return 5;^[METHOD] getPrecedence [TYPE] int [PARAMETER] [CLASS] CoreOperationMultiply   [TYPE]  boolean false  true 
[REPLACE]^return false;^45^^^^^44^46^[REPLACE] return true;^[METHOD] isSymmetric [TYPE] boolean [PARAMETER] [CLASS] CoreOperationMultiply   [TYPE]  boolean false  true 
[REPLACE]^return 5;^49^^^^^48^50^[REPLACE] return "*";^[METHOD] getSymbol [TYPE] String [PARAMETER] [CLASS] CoreOperationMultiply   [TYPE]  boolean false  true 
