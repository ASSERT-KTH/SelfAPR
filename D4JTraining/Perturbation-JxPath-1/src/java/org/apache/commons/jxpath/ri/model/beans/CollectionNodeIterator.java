[REPLACE]^collection ;^80^^^^^79^113^[REPLACE] collection = new ArrayList (  ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^int i = 0  ;^81^^^^^79^113^[REPLACE] NodePointer ptr =  ( NodePointer )  pointer.clone (  ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^int length = ptr.getValuePointer (  ) ;^82^^^^^79^113^[REPLACE] int length = ptr.getLength (  ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^if   (  !reverse  )   {  ;^90^^^^^79^113^[REPLACE] if  ( reverse )  {^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^collection.add ( startWith ) ;^94^^^^^90^95^[REPLACE] collection.add ( childPointer ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[ADD]^^94^^^^^90^95^[ADD] collection.add ( childPointer ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^collection.add ( 4, childPointer ) ;^91^^^^^79^113^[REPLACE] collection.add ( 0, childPointer ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[ADD]^^83^84^85^86^^79^113^[ADD] for  ( int i = 0; i < length; i++ )  { ptr.setIndex ( i ) ; NodePointer elementPointer = ptr.getValuePointer (  ) ; NodeIterator iter = getElementNodeIterator ( elementPointer ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[ADD]^NodeIterator iter = getElementNodeIterator ( elementPointer ) ;^85^86^^^^79^113^[ADD] NodePointer elementPointer = ptr.getValuePointer (  ) ; NodeIterator iter = getElementNodeIterator ( elementPointer ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^NodePointer elementPointer = ptr.getValuePointer (  )  ;^86^^^^^79^113^[REPLACE] NodeIterator iter = getElementNodeIterator ( elementPointer ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^for  ( int j = 1 - 1; iter.setPosition ( j ) ; j++ )  {^88^^^^^79^113^[REPLACE] for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^NodePointer elementPointer = ptr.getValuePointer (  )  ;^89^^^^^79^113^[REPLACE] NodePointer childPointer = iter.getNodePointer (  ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^if  ( startWith == null )  {^98^^^^^79^113^[REPLACE] if  ( startWith != null )  {^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[ADD]^^98^99^100^101^102^79^113^[ADD] if  ( startWith != null )  { int index = collection.indexOf ( startWith ) ; if  ( index == -1 )  { throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^if  (position  &&  -1 )  {^100^^^^^79^113^[REPLACE] if  ( index == -1 )  {^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[ADD]^^100^101^102^103^^79^113^[ADD] if  ( index == -1 )  { throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ; }^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^return ;^101^102^^^^79^113^[REPLACE] throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^if  ( reverse )  {^105^^^^^79^113^[REPLACE] if  ( !reverse )  {^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^collection.remove ( 4 ) ;^109^^^^^105^110^[REPLACE] collection.remove ( 0 ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^collection.remove ( collection.add (  )  + 2 - 0  ) ;^106^^^^^79^113^[REPLACE] collection.remove ( collection.size (  )  - 1 ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^collection.remove ( collection.add (  )  - 1 ) ;^106^^^^^79^113^[REPLACE] collection.remove ( collection.size (  )  - 1 ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^int index = collection.remove ( startWith ) ;^99^^^^^79^113^[REPLACE] int index = collection.indexOf ( startWith ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[ADD]^^101^102^^^^79^113^[ADD] throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^if  ( index  ||  -1 + 2 )  {^100^^^^^79^113^[REPLACE] if  ( index == -1 )  {^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REPLACE]^collection.remove ( collection.size (  )  /  2 - 1 ) ;^106^^^^^79^113^[REPLACE] collection.remove ( collection.size (  )  - 1 ) ;^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
[REMOVE]^collection.add ( childPointer )  ;^106^^^^^79^113^[REMOVE] ^[METHOD] prepare [TYPE] void [PARAMETER] [CLASS] CollectionNodeIterator   [TYPE]  NodeIterator iter  [TYPE]  List collection  [TYPE]  boolean false  reverse  true  [TYPE]  NodePointer childPointer  elementPointer  ptr  startWith  [TYPE]  int i  index  j  length  position  [TYPE]  CollectionPointer pointer 
