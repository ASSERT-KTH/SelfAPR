[REPLACE]^private static  long serialVersionUID = -8751046933894857319L;^55^^^^^^^[REPLACE] private static final long serialVersionUID = -8751046933894857319L;^ [CLASS] DOMNodePointer  
[REPLACE]^private  long  defaultNamespace;^59^^^^^^^[REPLACE] private String defaultNamespace;^ [CLASS] DOMNodePointer  
[REPLACE]^public static final String XML_NAMESPACE_URI ;^62^63^64^65^^62^63^[REPLACE] public static final String XML_NAMESPACE_URI = "http: public static final String XMLNS_NAMESPACE_URI = "http:^ [CLASS] DOMNodePointer  
[REPLACE]^public static final String XMLNS_NAMESPACE_URI  = null ;^64^65^66^67^^64^65^[REPLACE] public static final String XMLNS_NAMESPACE_URI = "http:  public DOMNodePointer ( Node node, Locale locale )  {^ [CLASS] DOMNodePointer  
[REPLACE]^else if  ( ! test instanceof ProcessingInstructionTest )  {^128^^^^^87^136^[REPLACE] else if  ( test instanceof ProcessingInstructionTest )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  (   Node.PROCESSING_INSTRUCTION_NODE )  {^129^^^^^87^136^[REPLACE] if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;return testPI.equals ( nodePI ) ;^129^130^131^132^133^87^136^[ADD] if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  { String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ; String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ; return testPI.equals ( nodePI ) ; }^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return testPI.equals  (  nodePI  )  ;  ;^132^^^^^87^136^[REPLACE] return testPI.equals ( nodePI ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String testPI =  (  ( ProcessingInstructionTest )  test ) .getNode (  ) ;^130^^^^^87^136^[REPLACE] String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String nodePI =  (  ( ProcessingInstruction )  node )  .getNode (  )  ;^131^^^^^87^136^[REPLACE] String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return testPI.equals ( namespaceURI ) ;^132^^^^^87^136^[REPLACE] return testPI.equals ( nodePI ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String nodePI =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^131^^^^^87^136^[REPLACE] String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( node.getNodeType (  )   !=  Node.PROCESSING_INSTRUCTION_NODE )  {^129^^^^^87^136^[REPLACE] if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String testPI =  (  ( ProcessingInstructionTest )  test )  .getNode (  )  ;^130^^^^^87^136^[REPLACE] String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return testPI.startsWith ( nodePI ) ;^132^^^^^87^136^[REPLACE] return testPI.equals ( nodePI ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String text =  (  ( ProcessingInstruction )   ( node )  ) .getData (  )  ;^131^^^^^87^136^[REPLACE] String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return nodeType ;^116^117^^^^87^136^[REPLACE] return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return nodeType ;^119^120^^^^87^136^[REPLACE] return nodeType == Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return nodeType  &&  Node.COMMENT_NODE;^122^^^^^87^136^[REPLACE] return nodeType == Node.COMMENT_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return nodeType == Node.PROCESSING_INSTRUCTION_NODE;  ;^124^^^^^87^136^[REPLACE] return nodeType == Node.PROCESSING_INSTRUCTION_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return true;^126^^^^^87^136^[REPLACE] return false;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^113^^^^^87^136^[ADD] int nodeType = node.getNodeType (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( ! test instanceof ProcessingInstructionTest )  {^128^^^^^87^136^[REPLACE] else if  ( test instanceof ProcessingInstructionTest )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( node.cloneNode (  )   ||  Node.PROCESSING_INSTRUCTION_NODE )  {^129^^^^^87^136^[REPLACE] if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return testPrefix .getLocale (  )  ;^132^^^^^87^136^[REPLACE] return testPI.equals ( nodePI ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return true ;^119^120^^^^87^136^[REPLACE] return nodeType == Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return nodeType  ||  Node.PROCESSING_INSTRUCTION_NODE;^124^^^^^87^136^[REPLACE] return nodeType == Node.PROCESSING_INSTRUCTION_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return false;  ;^126^^^^^87^136^[REPLACE] return false;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return testPI.equals ( testPrefix ) ;^132^^^^^87^136^[REPLACE] return testPI.equals ( nodePI ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^int nodeType = node.getNodeName (  ) ;^113^^^^^87^136^[REPLACE] int nodeType = node.getNodeType (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( node.getNodeType (  )   ==  Node.ELEMENT_NODE )  {^92^^^^^87^136^[REPLACE] if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^return false;^92^93^94^^^87^136^[ADD] if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  { return false; }^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return true;^93^^^^^87^136^[REPLACE] return false;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( false && testPI != null )  {^101^^^^^87^136^[REPLACE] if  ( wildcard && testPrefix == null )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^101^102^103^^^87^136^[ADD] if  ( wildcard && testPrefix == null )  { return true; }^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return false;^102^^^^^87^136^[REPLACE] return true;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  (false ) {^105^106^107^^^87^136^[REPLACE] if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return equalStrings ( namespaceURI, nodePI ) ;^109^^^^^105^110^[REPLACE] return equalStrings ( namespaceURI, nodeNS ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String nodeNS = DOMNodePointer.getLocalName ( node ) ;^108^^^^^105^110^[REPLACE] String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return equalStrings ( testPrefix, nodeNS ) ;^109^^^^^87^136^[REPLACE] return equalStrings ( namespaceURI, nodeNS ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^96^^^^^87^136^[REPLACE] NodeNameTest nodeNameTest =  ( NodeNameTest )  test;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^97^98^^^^87^136^[ADD] QName testName = nodeNameTest.getNodeName (  ) ; String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String namespaceURI = nodeNameTest.getNodeName (  ) ;^98^^^^^87^136^[REPLACE] String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^99^100^^^^87^136^[ADD] boolean wildcard = nodeNameTest.isWildcard (  ) ; String testPrefix = testName.getPrefix (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String testPrefix = testName.getName (  ) ;^100^^^^^87^136^[REPLACE] String testPrefix = testName.getPrefix (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^108^^^^^87^136^[ADD] String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( false && testPrefix != false )  {^101^^^^^87^136^[REPLACE] if  ( wildcard && testPrefix == null )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( wildcard && testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^105^106^107^^^87^136^[REPLACE] if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String prefix = getPrefix ( node )  ;^108^^^^^105^110^[REPLACE] String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^else {^128^^^^^87^136^[REPLACE] else if  ( test instanceof ProcessingInstructionTest )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return testPrefix.equals ( nodePI ) ;^132^^^^^87^136^[REPLACE] return testPI.equals ( nodePI ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^131^^^^^87^136^[ADD] String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( node.cloneNode (  )   &&  Node.PROCESSING_INSTRUCTION_NODE )  {^129^^^^^87^136^[REPLACE] if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return testPI .getLocale (  )  ;^132^^^^^87^136^[REPLACE] return testPI.equals ( nodePI ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^130^^^^^87^136^[ADD] String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return   nodeType ;^116^117^^^^87^136^[REPLACE] return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return false ;^119^120^^^^87^136^[REPLACE] return nodeType == Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return nodeType  !=  Node.PROCESSING_INSTRUCTION_NODE;;^124^^^^^87^136^[REPLACE] return nodeType == Node.PROCESSING_INSTRUCTION_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^128^129^130^131^132^87^136^[ADD] else if  ( test instanceof ProcessingInstructionTest )  { if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  { String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ; String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ; return testPI.equals ( nodePI ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( node.getNodeType (  )   ) {^129^^^^^87^136^[REPLACE] if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return testPI.startsWith ( nodeNS ) ;^132^^^^^87^136^[REPLACE] return testPI.equals ( nodePI ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return equalStrings ( namespaceURI, testPrefix ) ;^109^^^^^87^136^[REPLACE] return equalStrings ( namespaceURI, nodeNS ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return nodeType  ||  Node.COMMENT_NODE;^122^^^^^87^136^[REPLACE] return nodeType == Node.COMMENT_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^QName testName = nodeNameTest.getNamespaceURI (  ) ;^97^^^^^87^136^[REPLACE] QName testName = nodeNameTest.getNodeName (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^boolean wildcard = nodeNameTest.getNodeName (  ) ;^99^^^^^87^136^[REPLACE] boolean wildcard = nodeNameTest.isWildcard (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^100^^^^^87^136^[ADD] String testPrefix = testName.getPrefix (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^108^109^^^^87^136^[ADD] String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ; return equalStrings ( namespaceURI, nodeNS ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^int nodeType = node .getNodeName (  )  ;^113^^^^^87^136^[REPLACE] int nodeType = node.getNodeType (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return false;^89^^^^^87^136^[REPLACE] return true;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( node.getNodeType (  )   &&  Node.PROCESSING_INSTRUCTION_NODE )  {^129^^^^^87^136^[REPLACE] if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^129^130^131^132^133^87^136^[ADD] if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  { String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ; String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ; return testPI.equals ( nodePI ) ; }^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^130^131^^^^87^136^[ADD] String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ; String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return testPrefix.startsWith ( nodePI ) ;^132^^^^^87^136^[REPLACE] return testPI.equals ( nodePI ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return true ;^122^^^^^87^136^[REPLACE] return nodeType == Node.COMMENT_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return testPI.equals ( nodeNS ) ;^132^^^^^87^136^[REPLACE] return testPI.equals ( nodePI ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( node.getNodeType (  )   ||  Node.PROCESSING_INSTRUCTION_NODE )  {^129^^^^^87^136^[REPLACE] if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return nodeType == Node.COMMENT_NODE;  ;^122^^^^^87^136^[REPLACE] return nodeType == Node.COMMENT_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( node.cloneNode (  )   ==  Node.ELEMENT_NODE )  {^92^^^^^87^136^[REPLACE] if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( wildcard && testPrefix != false )  {^101^^^^^87^136^[REPLACE] if  ( wildcard && testPrefix == null )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return ptr;  ;^102^^^^^87^136^[REPLACE] return true;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( false && testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^105^106^107^^^87^136^[REPLACE] if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return equalStrings ( namespaceURI, testPrefix ) ;^109^^^^^105^110^[REPLACE] return equalStrings ( namespaceURI, nodeNS ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^98^99^^^^87^136^[ADD] String namespaceURI = nodeNameTest.getNamespaceURI (  ) ; boolean wildcard = nodeNameTest.isWildcard (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String testPrefix = testName .getPrefix (  )  ;^100^^^^^87^136^[REPLACE] String testPrefix = testName.getPrefix (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String nodeNS = DOMNodePointer.getLocalName ( node ) ;^108^^^^^87^136^[REPLACE] String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if   (  child.getNodeType  (    )   == Node.TEXT_NODE  )   {  ;^92^^^^^87^136^[REPLACE] if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( false && testPrefix != null )  {^101^^^^^87^136^[REPLACE] if  ( wildcard && testPrefix == null )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^return true;^101^102^103^^^87^136^[ADD] if  ( wildcard && testPrefix == null )  { return true; }^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  (false && testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^105^106^107^^^87^136^[REPLACE] if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return equalStrings ( testPI, nodeNS ) ;^109^^^^^105^110^[REPLACE] return equalStrings ( namespaceURI, nodeNS ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^108^^^^^105^110^[ADD] String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return testPI.startsWith ( testPrefix ) ;^132^^^^^87^136^[REPLACE] return testPI.equals ( nodePI ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^130^131^^^^87^136^[ADD] String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ; String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return false ;^116^117^^^^87^136^[REPLACE] return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return nodeType  &&  Node.PROCESSING_INSTRUCTION_NODE;^124^^^^^87^136^[REPLACE] return nodeType == Node.PROCESSING_INSTRUCTION_NODE;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return ptr;  ;^89^^^^^87^136^[REPLACE] return true;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[ADD]^^96^97^^^^87^136^[ADD] NodeNameTest nodeNameTest =  ( NodeNameTest )  test; QName testName = nodeNameTest.getNodeName (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String nsURI = getNamespaceURI (  )  ;^98^^^^^87^136^[REPLACE] String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^boolean wildcard = nodeNameTest .getNodeName (  )  ;^99^^^^^87^136^[REPLACE] boolean wildcard = nodeNameTest.isWildcard (  ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^String prefix = getPrefix ( node )  ;^108^^^^^87^136^[REPLACE] String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^return true;^135^^^^^87^136^[REPLACE] return false;^[METHOD] testNode [TYPE] boolean [PARAMETER] Node node NodeTest test [CLASS] DOMNodePointer   [TYPE]  boolean false  true  wildcard  [TYPE]  NodeNameTest nodeNameTest  [TYPE]  QName testName  [TYPE]  Node node  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  NodeTest test  [TYPE]  int nodeType 
[REPLACE]^if  ( testPrefix != null ) {^193^^^^^192^241^[REPLACE] if  ( prefix == null || prefix.equals ( "" )  )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^return getDefaultNamespaceURI  (    )  ;  ;^194^^^^^192^241^[REPLACE] return getDefaultNamespaceURI (  ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( testPrefix.equals ( "xml" )  )  {^197^^^^^192^241^[REPLACE] if  ( prefix.equals ( "xml" )  )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^return XML_NAMESPACE_URI;^197^198^199^^^192^241^[ADD] if  ( prefix.equals ( "xml" )  )  { return XML_NAMESPACE_URI; }^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^return new DOMNodePointer  (  element, getLocale  (    )  , id  )  ;  ;^198^^^^^192^241^[REPLACE] return XML_NAMESPACE_URI;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( testPrefix.equals ( "xmlns" )  )  {^201^^^^^192^241^[REPLACE] if  ( prefix.equals ( "xmlns" )  )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^return new DOMNodePointer  (  element, getLocale  (    )  , id  )  ;  ;^202^^^^^192^241^[REPLACE] return XMLNS_NAMESPACE_URI;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^^205^^^^^192^241^[ADD] String namespace = null;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( namespaces != null )  {^206^^^^^192^241^[REPLACE] if  ( namespaces == null )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^namespace =   ( String )  namespaces.get ( testPrefix ) ;^210^^^^^206^211^[REPLACE] namespace =  ( String )  namespaces.get ( prefix ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^^207^^^^^192^241^[ADD] namespaces = new HashMap (  ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^namespaces  = null ;^207^^^^^192^241^[REPLACE] namespaces = new HashMap (  ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^namespace =   ( String )  namespaces.get ( testPrefix ) ;^210^^^^^192^241^[REPLACE] namespace =  ( String )  namespaces.get ( prefix ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  (testPrefix != null )  {^213^^^^^192^241^[REPLACE] if  ( namespace == null )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( ! node instanceof Document )  {^216^^^^^192^241^[REPLACE] if  ( aNode instanceof Document )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^216^217^218^^^192^241^[ADD] if  ( aNode instanceof Document )  { aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ; }^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^node =  (  ( Document )   ( node )  ) .getDocumentElement (  )  ;^217^^^^^192^241^[REPLACE] aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( aNode.cloneNode (  )   ||  Node.ELEMENT_NODE )  {^220^^^^^192^241^[REPLACE] if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if   (  parent != null  )   {  ;^222^^^^^192^241^[REPLACE] if  ( attr != null )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^defaultNamespace = attr.getValue (  )  ;^223^^^^^192^241^[REPLACE] namespace = attr.getValue (  ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( testPrefix ) ;^221^^^^^192^241^[REPLACE] Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( attr == null )  {^222^^^^^192^241^[REPLACE] if  ( attr != null )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^^222^223^224^225^^192^241^[ADD] if  ( attr != null )  { namespace = attr.getValue (  ) ; break; }^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^^223^^^^^192^241^[ADD] namespace = attr.getValue (  ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( namespace != false || namespace.startsWith ( "" )  )  {^229^^^^^192^241^[REPLACE] if  ( namespace == null || namespace.equals ( "" )  )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^^230^^^^^192^241^[ADD] namespace = NodePointer.UNKNOWN_NAMESPACE;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^n = n.getParentNode (  )  ;^227^^^^^192^241^[REPLACE] aNode = aNode.getParentNode (  ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^namespace  = null ;^230^^^^^192^241^[REPLACE] namespace = NodePointer.UNKNOWN_NAMESPACE;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^String qname = "xmlns:"  prefix;^214^^^^^192^241^[REPLACE] String qname = "xmlns:" + prefix;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^Node n = node  ;^215^^^^^192^241^[REPLACE] Node aNode = node;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( "xmlns" )  ;^221^^^^^192^241^[REPLACE] Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( aNode.getNodeType (  )   ||  Node.ELEMENT_NODE )  {^220^^^^^192^241^[REPLACE] if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^^220^221^222^223^224^192^241^[ADD] if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  { Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ; if  ( attr != null )  { namespace = attr.getValue (  ) ; break;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( attr == this )  {^222^^^^^192^241^[REPLACE] if  ( attr != null )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( namespace != this || namespace.equals ( "" )  )  {^229^^^^^192^241^[REPLACE] if  ( namespace == null || namespace.equals ( "" )  )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^namespace  =  namespace ;^230^^^^^192^241^[REPLACE] namespace = NodePointer.UNKNOWN_NAMESPACE;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^String qname =s2  prefix;^214^^^^^192^241^[REPLACE] String qname = "xmlns:" + prefix;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^^221^^^^^192^241^[ADD] Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^namespaces.put ( prefix, s2 ) ;^234^^^^^192^241^[REPLACE] namespaces.put ( prefix, namespace ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  (testPrefix  &&  UNKNOWN_NAMESPACE )  {^235^^^^^192^241^[REPLACE] if  ( namespace == UNKNOWN_NAMESPACE )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^return true;^236^^^^^192^241^[REPLACE] return null;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^return this;^236^^^^^192^241^[REPLACE] return null;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^return qname;^240^^^^^192^241^[REPLACE] return namespace;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] String prefix [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( defaultNamespace != this )  {^244^^^^^243^265^[REPLACE] if  ( defaultNamespace == null )  {^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if   (  node instanceof Document  )   {  ;^246^^^^^243^265^[REPLACE] if  ( aNode instanceof Document )  {^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^246^247^248^^^243^265^[ADD] if  ( aNode instanceof Document )  { aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ; }^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^node =  (  ( Document )   ( node )  ) .getDocumentElement (  )  ;^247^^^^^243^265^[REPLACE] aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  (1 (  )   ||  Node.ELEMENT_NODE )  {^250^^^^^243^265^[REPLACE] if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if   (  parent != null  )   {  ;^252^^^^^243^265^[REPLACE] if  ( attr != null )  {^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^namespace = attr.getValue (  )  ;^253^^^^^243^265^[REPLACE] defaultNamespace = attr.getValue (  ) ;^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^^251^^^^^243^265^[ADD] Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( attr == null )  {^252^^^^^243^265^[REPLACE] if  ( attr != null )  {^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^n = n.getParentNode (  )  ;^257^^^^^243^265^[REPLACE] aNode = aNode.getParentNode (  ) ;^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^^245^^^^^243^265^[ADD] Node aNode = node;^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( qname )  ;^251^^^^^243^265^[REPLACE] Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( false (  )   &&  Node.ELEMENT_NODE )  {^250^^^^^243^265^[REPLACE] if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if  ( attr == this  )  {^252^^^^^243^265^[REPLACE] if  ( attr != null )  {^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^Node n = node  ;^245^^^^^243^265^[REPLACE] Node aNode = node;^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if   (  namespace == null  )   {  ;^260^^^^^243^265^[REPLACE] if  ( defaultNamespace == null )  {^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[ADD]^^261^^^^^243^265^[ADD] defaultNamespace = "";^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^defaultNamespace  = null ;^261^^^^^243^265^[REPLACE] defaultNamespace = "";^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^return defaultNamespace.equals ( "" )  ? false : defaultNamespace;^264^^^^^243^265^[REPLACE] return defaultNamespace.equals ( "" )  ? null : defaultNamespace;^[METHOD] getDefaultNamespaceURI [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr  [TYPE]  Node aNode  node 
[REPLACE]^if   (  n.getNodeType  (    )   == Node.TEXT_NODE || n.getNodeType  (    )   == Node.CDATA_SECTION_NODE  )   {  ;^326^327^^^^325^367^[REPLACE] if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if  ( ! value instanceof Node )  {^344^^^^^326^366^[REPLACE] if  ( value instanceof Node )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if   (  attr != null && !attr.equals  (  ""  )    )   {  ;^360^^^^^344^365^[REPLACE] if  ( string != null && !string.equals ( "" )  )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^360^361^362^363^364^344^365^[ADD] if  ( string != null && !string.equals ( "" )  )  { Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ; node.appendChild ( textNode ) ; }^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^Node textNode = node.getOwnerDocument (  ) .getElementById ( string ) ;^361^362^^^^344^365^[REPLACE] Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^359^^^^^344^365^[REPLACE] String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^Node textNode = node.getOwnerDocument (  ) .createTextNode ( testPrefix ) ;^361^362^^^^344^365^[REPLACE] Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if  ( ! valueNode instanceof Element ) {^346^347^^^^326^366^[REPLACE] if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^node.appendChild ( child.cloneNode ( true )  )  ;^355^^^^^346^356^[REPLACE] node.appendChild ( valueNode.cloneNode ( true )  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^child.cloneNode ( true )  ;^355^^^^^346^356^[REPLACE] node.appendChild ( valueNode.cloneNode ( true )  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^children =  textNode.getChildNodes (  ) ;^348^^^^^346^356^[REPLACE] children = valueNode.getChildNodes (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 0 + 3; i < children.getLength (  ) ; i++ )  {^349^^^^^346^356^[REPLACE] for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^350^351^^^^346^356^[ADD] Node child = children.item ( i ) ; node.appendChild ( child.cloneNode ( true )  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^348^^^^^326^366^[ADD] children = valueNode.getChildNodes (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^345^^^^^326^366^[ADD] Node valueNode =  ( Node )  value;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^349^350^351^352^^326^366^[ADD] for  ( int i = 0; i < children.getLength (  ) ; i++ )  { Node child = children.item ( i ) ; node.appendChild ( child.cloneNode ( true )  ) ; }^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^Node n = map.item ( i )  ;^350^^^^^326^366^[REPLACE] Node child = children.item ( i ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if  ( ! valueNode instanceof Element || valueNode instanceof Document )  {^346^347^^^^326^366^[REPLACE] if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^node.appendChild ( valueNode .getParentNode (  )   ) ;^355^^^^^346^356^[REPLACE] node.appendChild ( valueNode.cloneNode ( true )  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^node.appendChild ( valueNode.cloneNode ( false )  ) ;^355^^^^^346^356^[REPLACE] node.appendChild ( valueNode.cloneNode ( true )  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 0L; i < children.getLength (  ) ; i++ )  {^349^^^^^346^356^[REPLACE] for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if  ( string == null && !string.equals ( "" )  )  {^360^^^^^326^366^[REPLACE] if  ( string != null && !string.equals ( "" )  )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^Node textNode = node.getOwnerDocument (  ) .createTextNode ( testPI ) ;^361^362^^^^326^366^[REPLACE] Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^children =  textNode.getChildNodes (  ) ;^348^^^^^326^366^[REPLACE] children = valueNode.getChildNodes (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^337^338^^^^326^366^[ADD] NodeList children = node.getChildNodes (  ) ; int count = children.getLength (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^338^^^^^326^366^[REPLACE] int count = children.getLength (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^339^^^^^326^366^[REPLACE] for  ( int i = count; --i >= 0; )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^Node child = children .getLength (  )  ;^340^^^^^326^366^[REPLACE] Node child = children.item ( i ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^Node node1 =  (  ( Node )   ( pointer1.getBaseValue (  )  )  )  ;^345^^^^^326^366^[REPLACE] Node valueNode =  ( Node )  value;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 2; i < children.getLength (  ) ; i++ )  {^349^^^^^326^366^[REPLACE] for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^350^351^^^^326^366^[ADD] Node child = children.item ( i ) ; node.appendChild ( child.cloneNode ( true )  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^359^^^^^326^366^[REPLACE] String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^Node textNode = node.getOwnerDocument (  ) .getElementById ( testPrefix ) ;^361^362^^^^326^366^[REPLACE] Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if  ( string == false && !string.equals ( "" )  )  {^329^^^^^326^366^[REPLACE] if  ( string != null && !string.equals ( "" )  )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^329^330^331^^^326^366^[ADD] if  ( string != null && !string.equals ( "" )  )  { node.setNodeValue ( string ) ; }^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^node.getNodeType (  ) .removeChild ( node ) ;^333^^^^^329^334^[REPLACE] node.getParentNode (  ) .removeChild ( node ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^node.cloneNode ( testPrefix ) ;^330^^^^^326^366^[REPLACE] node.setNodeValue ( string ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^330^^^^^326^366^[ADD] node.setNodeValue ( string ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^328^^^^^326^366^[REPLACE] String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if  (  !string.equals ( "" )  )  {^329^^^^^325^367^[REPLACE] if  ( string != null && !string.equals ( "" )  )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^node.getParentNode (  ) .appendChild ( node ) ;^333^^^^^329^334^[REPLACE] node.getParentNode (  ) .removeChild ( node ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^333^^^^^329^334^[ADD] node.getParentNode (  ) .removeChild ( node ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^node .getNodeType (  )  .removeChild ( node ) ;^333^^^^^329^334^[REPLACE] node.getParentNode (  ) .removeChild ( node ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REMOVE]^getRelativePositionOfTextNode (  )  ;^333^^^^^329^334^[REMOVE] ^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^node.getNodeValue (  )  ;^330^^^^^325^367^[REPLACE] node.setNodeValue ( string ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^330^^^^^325^367^[ADD] node.setNodeValue ( string ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if  ( ! value instanceof Node )  {^344^^^^^325^367^[REPLACE] if  ( value instanceof Node )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if  ( string == null && !string.equals ( "" )  )  {^360^^^^^344^365^[REPLACE] if  ( string != null && !string.equals ( "" )  )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^361^362^^^^344^365^[ADD] Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^359^^^^^344^365^[ADD] String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if  ( ! valueNode instanceof Element ) {^346^347^^^^325^367^[REPLACE] if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^349^350^351^352^^346^356^[ADD] for  ( int i = 0; i < children.getLength (  ) ; i++ )  { Node child = children.item ( i ) ; node.appendChild ( child.cloneNode ( true )  ) ; }^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^348^^^^^325^367^[ADD] children = valueNode.getChildNodes (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^Node node1 =  (  ( Node )   ( pointer1.getBaseValue (  )  )  )  ;^345^^^^^325^367^[REPLACE] Node valueNode =  ( Node )  value;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 0 >>> 2; i < children.getLength (  ) ; i++ )  {^349^^^^^325^367^[REPLACE] for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^350^^^^^325^367^[ADD] Node child = children.item ( i ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if  ( ! valueNode instanceof true || valueNode instanceof true )  {^346^347^^^^325^367^[REPLACE] if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^355^^^^^346^356^[ADD] node.appendChild ( valueNode.cloneNode ( true )  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^348^^^^^346^356^[ADD] children = valueNode.getChildNodes (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^Node child = children .getLength (  )  ;^350^^^^^346^356^[REPLACE] Node child = children.item ( i ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if   (  attr != null && !attr.equals  (  ""  )    )   {  ;^360^^^^^325^367^[REPLACE] if  ( string != null && !string.equals ( "" )  )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^Node textNode = node.getOwnerDocument (  ) .createTextNode ( testPrefix ) ;^361^362^^^^325^367^[REPLACE] Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^children =  node.getChildNodes (  ) ;^348^^^^^325^367^[REPLACE] children = valueNode.getChildNodes (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^328^^^^^325^367^[REPLACE] String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^337^^^^^325^367^[ADD] NodeList children = node.getChildNodes (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^338^^^^^325^367^[ADD] int count = children.getLength (  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^339^^^^^325^367^[REPLACE] for  ( int i = count; --i >= 0; )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^node.removeChild ( child ) ;^340^341^^^^325^367^[ADD] Node child = children.item ( i ) ; node.removeChild ( child ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^^345^^^^^325^367^[ADD] Node valueNode =  ( Node )  value;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^for  ( int i = 2; i < children.getLength (  ) ; i++ )  {^349^^^^^325^367^[REPLACE] for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[ADD]^node.appendChild ( child.cloneNode ( true )  ) ;^350^351^^^^325^367^[ADD] Node child = children.item ( i ) ; node.appendChild ( child.cloneNode ( true )  ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^359^^^^^325^367^[REPLACE] String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[METHOD] setValue [TYPE] void [PARAMETER] Object value [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  NodeList children  [TYPE]  Object value  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int count  i 
[REPLACE]^if  ( index  ) {^374^^^^^373^400^[REPLACE] if  ( index == WHOLE_COLLECTION )  {^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^index = 0 * 2;^375^^^^^373^400^[REPLACE] index = 0;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^index = 0L;^375^^^^^373^400^[REPLACE] index = 0;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^if   (  parent != null  )   {  ;^384^^^^^373^400^[REPLACE] if  ( success )  {^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[ADD]^NodeTest nodeTest;String prefix = name.getPrefix (  ) ;^384^385^386^387^388^373^400^[ADD] if  ( success )  { NodeTest nodeTest; String prefix = name.getPrefix (  ) ; String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix )^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^if  ( it == this && it.setPosition ( index + 1 )  )  {^393^^^^^373^400^[REPLACE] if  ( it != null && it.setPosition ( index + 1 )  )  {^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[ADD]^return it.getNodePointer (  ) ;^393^394^395^^^373^400^[ADD] if  ( it != null && it.setPosition ( index + 1 )  )  { return it.getNodePointer (  ) ; }^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^return it.getNodePointer  (    )  ;  ;^394^^^^^373^400^[REPLACE] return it.getNodePointer (  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^nodeTest =  new NodeNameTest ( null, nullspaceURI ) ;^390^^^^^373^400^[REPLACE] nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^385^^^^^373^400^[REPLACE] NodeTest nodeTest;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[ADD]^^386^^^^^373^400^[ADD] String prefix = name.getPrefix (  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^String namespaceURI  =  context.getNamespaceURI (testPrefix ) ;^387^388^389^^^373^400^[REPLACE] String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^NodeIterator it = childIterator ( nodeTest, true, null ) ;^392^^^^^373^400^[REPLACE] NodeIterator it = childIterator ( nodeTest, false, null ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^if  ( it == false && it.setPosition ( index + 1 )  )  {^393^^^^^373^400^[REPLACE] if  ( it != null && it.setPosition ( index + 1 )  )  {^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^String prefix = name.getName (  ) ;^386^^^^^373^400^[REPLACE] String prefix = name.getPrefix (  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^String namespaceURI  =  context.getNamespaceURI ( testPrefix ) ;^387^388^389^^^373^400^[REPLACE] String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[ADD]^^392^^^^^373^400^[ADD] NodeIterator it = childIterator ( nodeTest, false, null ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^return ;^397^398^399^^^373^400^[REPLACE] throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[METHOD] createChild [TYPE] NodePointer [PARAMETER] JXPathContext context QName name int index [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  success  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  NodeTest nodeTest 
[REPLACE]^if  ( ! ! ( node instanceof Element )  )  {^411^^^^^410^432^[REPLACE] if  ( ! ( node instanceof Element )  )  {^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^return super.NodePointer ( context, name ) ;^412^^^^^410^432^[REPLACE] return super.createAttribute ( context, name ) ;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^return super.createAttribute  (  context, name  )  ;  ;^412^^^^^410^432^[REPLACE] return super.createAttribute ( context, name ) ;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^Element element = document.getElementById ( id )  ;^414^^^^^410^432^[REPLACE] Element element =  ( Element )  node;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[ADD]^^415^^^^^410^432^[ADD] String prefix = name.getPrefix (  ) ;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( prefix == null )  {^416^^^^^410^432^[REPLACE] if  ( prefix != null )  {^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !element.hasAttribute ( name.getPrefix (  )  )  )  {^425^^^^^416^428^[REPLACE] if  ( !element.hasAttribute ( name.getName (  )  )  )  {^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^if  (testPI != this )  {^418^^^^^410^432^[REPLACE] if  ( ns == null )  {^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[ADD]^^419^420^^^^410^432^[ADD] throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^String ns = getNamespaceURI ( testPrefix ) ;^417^^^^^410^432^[REPLACE] String ns = getNamespaceURI ( prefix ) ;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( ns != false )  {^418^^^^^410^432^[REPLACE] if  ( ns == null )  {^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[ADD]^^418^419^420^421^^410^432^[ADD] if  ( ns == null )  { throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ; }^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^return ;^419^420^^^^410^432^[REPLACE] throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !element.hasAttribute ( name.getPrefix (  )  )  )  {^425^^^^^410^432^[REPLACE] if  ( !element.hasAttribute ( name.getName (  )  )  )  {^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[ADD]^^425^426^427^^^410^432^[ADD] if  ( !element.hasAttribute ( name.getName (  )  )  )  { element.setAttribute ( name.getName (  ) , "" ) ; }^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^element.setAttribute ( name.getPrefix (  ) , "" ) ;^426^^^^^410^432^[REPLACE] element.setAttribute ( name.getName (  ) , "" ) ;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^String nsURI = getNamespaceURI (  )  ;^417^^^^^410^432^[REPLACE] String ns = getNamespaceURI ( prefix ) ;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^NodeIterator it = childIterator ( nodeTest, false, null )  ;^429^^^^^410^432^[REPLACE] NodeIterator it = attributeIterator ( name ) ;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^it.setPosition ( 4 ) ;^430^^^^^410^432^[REPLACE] it.setPosition ( 1 ) ;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[ADD]^^430^431^^^^410^432^[ADD] it.setPosition ( 1 ) ; return it.getNodePointer (  ) ;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^return it .setPosition ( false )  ;^431^^^^^410^432^[REPLACE] return it.getNodePointer (  ) ;^[METHOD] createAttribute [TYPE] NodePointer [PARAMETER] JXPathContext context QName name [CLASS] DOMNodePointer   [TYPE]  NodeIterator it  [TYPE]  boolean false  true  [TYPE]  JXPathContext context  [TYPE]  QName name  [TYPE]  Node aNode  child  n  node  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( id == null )  {^443^^^^^442^505^[REPLACE] if  ( id != null )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^443^444^445^^^442^505^[ADD] if  ( id != null )  { return "id ( '" + escape ( id )  + "' ) "; }^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^return "id  (  '" + escape  (  id  )   + "'  )  ";  ;^444^^^^^442^505^[REPLACE] return "id ( '" + escape ( id )  + "' ) ";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^return "id ( '"  escape ( id )   "' ) ";^444^^^^^442^505^[REPLACE] return "id ( '" + escape ( id )  + "' ) ";^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^StringBuffer buf = new StringBuffer ( 16 )  ;^447^^^^^442^505^[REPLACE] StringBuffer buffer = new StringBuffer (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^if  ( parent == null )  {^448^^^^^442^505^[REPLACE] if  ( parent != null )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target ) .append ( "' ) " )  ;^449^^^^^442^505^[REPLACE] buffer.append ( parent.asPath (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^( children.getLength (  )  )  ;^449^^^^^442^505^[REPLACE] buffer.append ( parent.asPath (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^if  ( ! parent instanceof DOMNodePointer )  {^456^^^^^442^505^[REPLACE] if  ( parent instanceof DOMNodePointer )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^if  ( buffer.length (  )  %  2 == 0 || buffer.charAt ( buffer.length (  )  %  2 - 1 )  != '/' )  {^457^458^^^^442^505^[REPLACE] if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^459^^^^^457^460^[REPLACE] buffer.append ( '/' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^if   (  parent != null  )   {  ;^463^464^^^^442^505^[REPLACE] if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^463^464^465^466^467^442^505^[ADD] if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  { buffer.append ( ln ) ; buffer.append ( '[' ) ; buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^if  ( prefix == this  )  {^471^^^^^463^485^[REPLACE] if  ( prefix != null )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^480^^^^^471^484^[REPLACE] buffer.append ( "node (  ) " ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^481^^^^^471^484^[REPLACE] buffer.append ( '[' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REMOVE]^buffer.append ( target )  ;^481^^^^^471^484^[REMOVE] ^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' )  ;^482^^^^^471^484^[REPLACE] buffer.append ( getRelativePositionOfElement (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^getRelativePositionOfTextNode (  )  ;^482^^^^^471^484^[REPLACE] buffer.append ( getRelativePositionOfElement (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^483^^^^^471^484^[REPLACE] buffer.append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer .toString (  )  ;^472^^^^^463^485^[REPLACE] buffer.append ( prefix ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^472^^^^^463^485^[ADD] buffer.append ( prefix ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^473^^^^^463^485^[REPLACE] buffer.append ( ':' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^474^^^^^463^485^[REPLACE] buffer.append ( ln ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^475^^^^^463^485^[REPLACE] buffer.append ( '[' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' )  ;^476^^^^^463^485^[REPLACE] buffer.append ( getRelativePositionByName (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^getRelativePositionOfTextNode (  )  ;^476^^^^^463^485^[REPLACE] buffer.append ( getRelativePositionByName (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REMOVE]^getRelativePositionOfTextNode (  )  ;^476^^^^^463^485^[REMOVE] ^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer .toString (  )  ;^477^^^^^463^485^[REPLACE] buffer.append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^String prefix = getNamespaceResolver (  ) .getPrefix ( s1 ) ;^470^^^^^463^485^[REPLACE] String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer .toString (  )  ;^465^^^^^463^485^[REPLACE] buffer.append ( ln ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer .toString (  )  ;^466^^^^^463^485^[REPLACE] buffer.append ( '[' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' )  ;^467^^^^^463^485^[REPLACE] buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^getRelativePositionOfTextNode (  )  ;^467^^^^^463^485^[REPLACE] buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^if  ( prefix ==testPrefix )  {^471^^^^^442^505^[REPLACE] if  ( prefix != null )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^buffer.append ( prefix ) ;buffer.append ( ':' ) ;buffer.append ( ln ) ;buffer.append ( '[' ) ;^471^472^473^474^475^442^505^[ADD] if  ( prefix != null )  { buffer.append ( prefix ) ; buffer.append ( ':' ) ; buffer.append ( ln ) ; buffer.append ( '[' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^472^^^^^442^505^[REPLACE] buffer.append ( prefix ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^472^473^^^^442^505^[ADD] buffer.append ( prefix ) ; buffer.append ( ':' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer .toString (  )  ;^473^^^^^442^505^[REPLACE] buffer.append ( ':' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^474^^^^^442^505^[REPLACE] buffer.append ( ln ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^474^^^^^442^505^[ADD] buffer.append ( ln ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^475^^^^^442^505^[REPLACE] buffer.append ( '[' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' )  ;^476^^^^^442^505^[REPLACE] buffer.append ( getRelativePositionByName (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^getRelativePositionOfTextNode (  )  ;^476^^^^^442^505^[REPLACE] buffer.append ( getRelativePositionByName (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^476^^^^^442^505^[ADD] buffer.append ( getRelativePositionByName (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^477^^^^^442^505^[REPLACE] buffer.append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^477^^^^^442^505^[ADD] buffer.append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^String prefix = getPrefix ( node )  ;^461^^^^^442^505^[REPLACE] String ln = DOMNodePointer.getLocalName ( node ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^462^^^^^442^505^[ADD] String nsURI = getNamespaceURI (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^String prefix = getNamespaceResolver (  ) .getPrefix ( testPrefix ) ;^470^^^^^442^505^[REPLACE] String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^if  ( buffer.length (  )  %  2 == 0  ) {^457^458^^^^442^505^[REPLACE] if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^if   (  parent != null  )   {  ;^471^^^^^463^485^[REPLACE] if  ( prefix != null )  {^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REMOVE]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' )  ;^480^^^^^471^484^[REMOVE] ^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REMOVE]^getRelativePositionOfTextNode (  )  ;^482^^^^^471^484^[REMOVE] ^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^472^^^^^463^485^[REPLACE] buffer.append ( prefix ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( string ) ;^474^^^^^463^485^[REPLACE] buffer.append ( ln ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer .toString (  )  ;^475^^^^^463^485^[REPLACE] buffer.append ( '[' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^475^^^^^463^485^[ADD] buffer.append ( '[' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^477^^^^^463^485^[REPLACE] buffer.append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^470^^^^^463^485^[ADD] String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^465^^^^^463^485^[REPLACE] buffer.append ( ln ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^465^^^^^463^485^[ADD] buffer.append ( ln ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^466^^^^^463^485^[REPLACE] buffer.append ( '[' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^467^^^^^463^485^[ADD] buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^480^^^^^471^484^[ADD] buffer.append ( "node (  ) " ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^buffer.append ( getRelativePositionOfElement (  )  ) ;^481^482^^^^471^484^[ADD] buffer.append ( '[' ) ; buffer.append ( getRelativePositionOfElement (  )  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^buffer.append ( ']' ) ;^482^483^^^^471^484^[ADD] buffer.append ( getRelativePositionOfElement (  )  ) ; buffer.append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( testPrefix ) ;^472^^^^^442^505^[REPLACE] buffer.append ( prefix ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REMOVE]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' )  ;^472^^^^^442^505^[REMOVE] ^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^buffer.append ( target )  ;^473^^^^^442^505^[REPLACE] buffer.append ( ':' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REMOVE]^buffer.append ( target )  ;^473^^^^^442^505^[REMOVE] ^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^buffer.append ( ']' ) ;^476^477^^^^442^505^[ADD] buffer.append ( getRelativePositionByName (  )  ) ; buffer.append ( ']' ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^String nsURI = getNamespaceURI (  ) ;^461^462^^^^442^505^[ADD] String ln = DOMNodePointer.getLocalName ( node ) ; String nsURI = getNamespaceURI (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^462^^^^^442^505^[REPLACE] String nsURI = getNamespaceURI (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^String target =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^495^^^^^442^505^[REPLACE] String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^return buffer .getName (  )  ;^504^^^^^442^505^[REPLACE] return buffer.toString (  ) ;^[METHOD] asPath [TYPE] String [PARAMETER] [CLASS] DOMNodePointer   [TYPE]  StringBuffer buffer  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^int index = testPrefix.indexOf ( '\'' ) ;^508^^^^^507^525^[REPLACE] int index = string.indexOf ( '\'' ) ;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^510^511^512^^^507^525^[ADD] string = string.substring ( 0, index ) + "&apos;"^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^index = string.indexOf ( '\"' )  ;^514^^^^^507^525^[REPLACE] index = string.indexOf ( '\'' ) ;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[ADD]^^516^^^^^507^525^[ADD] index = string.indexOf ( '\"' ) ;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^string = string.substring ( 0, index )  "&quot;"  string.substring ( index  1 ) ;^518^519^520^521^^507^525^[REPLACE] string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^index = string.indexOf ( '\'' )  ;^522^^^^^507^525^[REPLACE] index = string.indexOf ( '\"' ) ;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^return string;  ;^524^^^^^507^525^[REPLACE] return string;^[METHOD] escape [TYPE] String [PARAMETER] String string [CLASS] DOMNodePointer   [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  [TYPE]  boolean false  true  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int index  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode 
[REPLACE]^if  ( ! node instanceof Document )  {^628^^^^^627^659^[REPLACE] if  ( node instanceof Document )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^aNode =  (  ( Document )   ( aNode )  ) .getDocumentElement (  )  ;^629^^^^^627^659^[REPLACE] node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^Element element = document.getElementById ( id )  ;^632^^^^^627^659^[REPLACE] Element element =  ( Element )  node;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^String uri = element.getNodeName (  ) ;^634^^^^^627^659^[REPLACE] String uri = element.getNamespaceURI (  ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^if  (testPrefix == null )  {^635^^^^^627^659^[REPLACE] if  ( uri != null )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^return ptr;  ;^636^^^^^627^659^[REPLACE] return uri;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^return testPrefix;^636^^^^^627^659^[REPLACE] return uri;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^String ln = null  ;^639^^^^^627^659^[REPLACE] String qname;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^String prefix = getPrefix ( valueNode ) ;^640^^^^^627^659^[REPLACE] String prefix = getPrefix ( node ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^if  ( prefix != null )  {^641^^^^^627^659^[REPLACE] if  ( prefix == null )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^qname = "xmlns:"  prefix;^645^^^^^641^646^[REPLACE] qname = "xmlns:" + prefix;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[ADD]^^642^^^^^627^659^[ADD] qname = "xmlns";^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^qname  =  qname ;^642^^^^^627^659^[REPLACE] qname = "xmlns";^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[ADD]^^645^^^^^627^659^[ADD] qname = "xmlns:" + prefix;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[ADD]^^648^^^^^627^659^[ADD] Node aNode = node;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^if  (false (  )   ||  Node.ELEMENT_NODE )  {^650^^^^^627^659^[REPLACE] if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^if  ( attr == null )  {^652^^^^^627^659^[REPLACE] if  ( attr != null )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[ADD]^return attr.getValue (  ) ;^652^653^654^^^627^659^[ADD] if  ( attr != null )  { return attr.getValue (  ) ; }^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^return attr.getValue  (    )  ;  ;^653^^^^^627^659^[REPLACE] return attr.getValue (  ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( "xmlns" )  ;^651^^^^^627^659^[REPLACE] Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^if   (  parent != null  )   {  ;^652^^^^^627^659^[REPLACE] if  ( attr != null )  {^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^n = n.getParentNode (  )  ;^656^^^^^627^659^[REPLACE] aNode = aNode.getParentNode (  ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[ADD]^^651^^^^^627^659^[ADD] Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^return this;^658^^^^^627^659^[REPLACE] return null;^[METHOD] getNamespaceURI [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  Element element  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  Attr attr 
[REPLACE]^int type = node.getNodeType (  )  ;^666^^^^^665^695^[REPLACE] int nodeType = node.getNodeType (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^if  ( nodeType  ) {^667^^^^^665^695^[REPLACE] if  ( nodeType == Node.COMMENT_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^String text =  (  ( Comment )  node ) .getData (  ) ;return text == null ? "" : text.trim (  ) ;^667^668^669^670^^665^695^[ADD] if  ( nodeType == Node.COMMENT_NODE )  { String text =  (  ( Comment )  node ) .getData (  ) ; return text == null ? "" : text.trim (  ) ; }^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^else if  ( nodeType == Node.TEXT_NODE && nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^[REPLACE] else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^if  ( nodeType  &&  Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^[REPLACE] else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^^677^678^679^680^^665^695^[ADD] else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  { String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ; return text == null ? "" : text.trim (  ) ; }^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^if  ( child.getNodeType (  )   !=  Node.TEXT_NODE )  {^686^^^^^677^694^[REPLACE] if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^^686^687^688^^^677^694^[ADD] if  ( child.getNodeType (  )  == Node.TEXT_NODE )  { buf.append ( child.getNodeValue (  )  ) ; }^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^buf.append ( stringValue ( valueNode )  ) ;^690^^^^^686^691^[REPLACE] buf.append ( stringValue ( child )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^^690^^^^^686^691^[ADD] buf.append ( stringValue ( child )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^buf .toString (  )  ;^687^^^^^677^694^[REPLACE] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^buf.append ( valueNode.getNodeValue (  )  ) ;^687^^^^^677^694^[REPLACE] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return buf .getName (  )  .trim (  ) ;^693^^^^^677^694^[REPLACE] return buf.toString (  ) .trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^NodeList list = valueNode.getChildNodes (  ) ;^682^^^^^677^694^[REPLACE] NodeList list = node.getChildNodes (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^StringBuffer buffer = new StringBuffer (  )  ;^683^^^^^677^694^[REPLACE] StringBuffer buf = new StringBuffer ( 16 ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^for  ( int i = 2; i < list.getLength (  ) ; i++ )  {^684^^^^^677^694^[REPLACE] for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^Node n = map.item ( i )  ;^685^^^^^677^694^[REPLACE] Node child = list.item ( i ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return testPrefix.trim (  ) ;^679^^^^^665^695^[REPLACE] return text == null ? "" : text.trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^String text =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^678^^^^^665^695^[REPLACE] String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^if  ( child.cloneNode (  )   ||  Node.TEXT_NODE )  {^686^^^^^665^695^[REPLACE] if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^^686^687^688^^^665^695^[ADD] if  ( child.getNodeType (  )  == Node.TEXT_NODE )  { buf.append ( child.getNodeValue (  )  ) ; }^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^( children.getLength (  )  )  ;^687^^^^^665^695^[REPLACE] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^( child.getNodeType (  )  )  ;^687^^^^^665^695^[REPLACE] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return true ;^679^^^^^665^695^[REPLACE] return text == null ? "" : text.trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return buf.StringBuffer (  ) .trim (  ) ;^693^^^^^665^695^[REPLACE] return buf.toString (  ) .trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^^678^^^^^665^695^[ADD] String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^NodeList list = node.hasChildNodes (  ) ;^682^^^^^665^695^[REPLACE] NodeList list = node.getChildNodes (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^^683^^^^^665^695^[ADD] StringBuffer buf = new StringBuffer ( 16 ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^for  ( int i = 0 * 3; i < list.getLength (  ) ; i++ )  {^684^^^^^665^695^[REPLACE] for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^Node n = map.item ( i )  ;^685^^^^^665^695^[REPLACE] Node child = list.item ( i ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return text == null ? "" : text.trim  (    )  ;  ;^675^^^^^671^694^[REPLACE] return text == null ? "" : text.trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^String text = valueNode.getNodeValue (  ) ;^674^^^^^671^694^[REPLACE] String text = node.getNodeValue (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^else if   (  type == Node.PROCESSING_INSTRUCTION_NODE  )   {  ;^677^^^^^665^695^[REPLACE] else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^if   (  n.getNodeType  (    )   == Node.ELEMENT_NODE  )   {  ;^686^^^^^677^694^[REPLACE] if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^( children.getLength (  )  )  ;^687^^^^^677^694^[REPLACE] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^( child.getNodeType (  )  )  ;^687^^^^^677^694^[REPLACE] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^^687^^^^^677^694^[ADD] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return buf.StringBuffer (  ) .trim (  ) ;^693^^^^^677^694^[REPLACE] return buf.toString (  ) .trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^StringBuffer buf = new StringBuffer ( 16 ) ;^682^683^^^^677^694^[ADD] NodeList list = node.getChildNodes (  ) ; StringBuffer buf = new StringBuffer ( 16 ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^^683^^^^^677^694^[ADD] StringBuffer buf = new StringBuffer ( 16 ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^for  ( int i = 0L; i < list.getLength (  ) ; i++ )  {^684^^^^^677^694^[REPLACE] for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^Node child = list .getLength (  )  ;^685^^^^^677^694^[REPLACE] Node child = list.item ( i ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return   "" ;^679^^^^^665^695^[REPLACE] return text == null ? "" : text.trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^if  ( child.getNodeType (  )   !=  Node.TEXT_NODE )  {^686^^^^^665^695^[REPLACE] if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^stringValue ( node )  ;^690^^^^^686^691^[REPLACE] buf.append ( stringValue ( child )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^buf.append ( valueNode.getNodeName (  )  ) ;^687^^^^^665^695^[REPLACE] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^buf.append ( valueNode.getNodeValue (  )  ) ;^687^^^^^665^695^[REPLACE] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^^687^^^^^665^695^[ADD] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return text == null ? "" : text.trim  (    )  ;  ;^675^^^^^665^695^[REPLACE] return text == null ? "" : text.trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^String text = textNode.getNodeValue (  ) ;^674^^^^^665^695^[REPLACE] String text = node.getNodeValue (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^String nodePI =  (  ( ProcessingInstruction )   ( node )  ) .getTarget (  )  ;^678^^^^^665^695^[REPLACE] String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^NodeList list = textNode.getChildNodes (  ) ;^682^^^^^665^695^[REPLACE] NodeList list = node.getChildNodes (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^for  ( int i = 0 + 2; i < list.getLength (  ) ; i++ )  {^684^^^^^665^695^[REPLACE] for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return   "" ;^669^^^^^665^695^[REPLACE] return text == null ? "" : text.trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^String text =  (  ( ProcessingInstruction )   ( node )  ) .getData (  )  ;^668^^^^^665^695^[REPLACE] String text =  (  ( Comment )  node ) .getData (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^if  ( nodeType == Node.TEXT_NODE && nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^[REPLACE] else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^else {^677^^^^^665^695^[REPLACE] else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^buf.append ( child.getNodeName (  )  ) ;^687^^^^^677^694^[REPLACE] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return buf.toString (  )  .substring ( nodeType , i )  ;^693^^^^^677^694^[REPLACE] return buf.toString (  ) .trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^StringBuffer buf = new StringBuffer ( 0 ) ;^683^^^^^677^694^[REPLACE] StringBuffer buf = new StringBuffer ( 16 ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^for  ( int i = 1; i < list.getLength (  ) ; i++ )  {^684^^^^^677^694^[REPLACE] for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return text.trim (  ) ;^679^^^^^665^695^[REPLACE] return text == null ? "" : text.trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^if  ( valueNode.getNodeType (  )   &&  Node.TEXT_NODE )  {^686^^^^^665^695^[REPLACE] if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^( children.getLength (  )  )  ;^690^^^^^686^691^[REPLACE] buf.append ( stringValue ( child )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^buf.append ( child.getNodeName (  )  ) ;^687^^^^^665^695^[REPLACE] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return text == null ? "" : text.trim  (    )  ;  ;^679^^^^^665^695^[REPLACE] return text == null ? "" : text.trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^Node parent = node.getParentNode (  )  ;^682^^^^^665^695^[REPLACE] NodeList list = node.getChildNodes (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^StringBuffer buffer = new StringBuffer (  )  ;^683^^^^^665^695^[REPLACE] StringBuffer buf = new StringBuffer ( 16 ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^for  ( int i = 3; i < list.getLength (  ) ; i++ )  {^684^^^^^665^695^[REPLACE] for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return text.trim (  ) ;^675^^^^^671^694^[REPLACE] return text == null ? "" : text.trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^if  ( child.getNodeType (  )   &&  Node.TEXT_NODE )  {^686^^^^^677^694^[REPLACE] if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^buf .toString (  )  ;^690^^^^^686^691^[REPLACE] buf.append ( stringValue ( child )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^return buf.toString (  )  .substring ( nodeType , nodeType )  ;^693^^^^^677^694^[REPLACE] return buf.toString (  ) .trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^Node parent = node.getParentNode (  )  ;^682^^^^^677^694^[REPLACE] NodeList list = node.getChildNodes (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^StringBuffer buf = new StringBuffer ( 16 / 1 ) ;^683^^^^^677^694^[REPLACE] StringBuffer buf = new StringBuffer ( 16 ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^^684^685^686^687^688^677^694^[ADD] for  ( int i = 0; i < list.getLength (  ) ; i++ )  { Node child = list.item ( i ) ; if  ( child.getNodeType (  )  == Node.TEXT_NODE )  { buf.append ( child.getNodeValue (  )  ) ; }^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^if  ( valueNode.getNodeType (  )   !=  Node.TEXT_NODE )  {^686^^^^^665^695^[REPLACE] if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^buf .toString (  )  ;^687^^^^^665^695^[REPLACE] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^buf.append ( child .setNodeValue ( testPI )   ) ;^687^^^^^665^695^[REPLACE] buf.append ( child.getNodeValue (  )  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^returntestPrefix.trim (  ) ;^675^^^^^665^695^[REPLACE] return text == null ? "" : text.trim (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[ADD]^^668^^^^^665^695^[ADD] String text =  (  ( Comment )  node ) .getData (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^String text = valueNode.getNodeName (  ) ;^674^^^^^665^695^[REPLACE] String text = node.getNodeValue (  ) ;^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^for  ( int i = 2; i < list.getLength (  ) ; i++ )  {^684^^^^^665^695^[REPLACE] for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[METHOD] stringValue [TYPE] String [PARAMETER] Node node [CLASS] DOMNodePointer   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  n  node  parent  textNode  valueNode  [TYPE]  NodeList list  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  nodeType 
[REPLACE]^Node node1 =  ( Node )  pointer2.getBaseValue (  ) ;^731^^^^^730^772^[REPLACE] Node node1 =  ( Node )  pointer1.getBaseValue (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^^732^^^^^730^772^[ADD] Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if   (  n == node1  )   {  ;^733^^^^^730^772^[REPLACE] if  ( node1 == node2 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 0 / 2;^734^^^^^730^772^[REPLACE] return 0;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 0L;^734^^^^^730^772^[REPLACE] return 0;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^int nodeType = node.getNodeType (  )  ;^737^^^^^730^772^[REPLACE] int t1 = node1.getNodeType (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^int t2 = parent .getNodeName (  )  ;^738^^^^^730^772^[REPLACE] int t2 = node2.getNodeType (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  ( t1 == Node.ATTRIBUTE_NODE || t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^730^772^[REPLACE] if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^return -1;^739^740^741^^^730^772^[ADD] if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  { return -1; }^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^else {^742^^^^^730^772^[REPLACE] else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^^742^743^744^^^730^772^[ADD] else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  { return 1; }^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^else if  ( t1 == Node.ATTRIBUTE_NODE || t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^772^[REPLACE] else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  ( valueNode  ) {^750^^^^^730^772^[REPLACE] if  ( n == node1 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  ( n  != valueNode )  {^753^^^^^730^772^[REPLACE] else if  ( n == node2 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^return 1;^753^754^755^^^730^772^[ADD] else if  ( n == node2 )  { return 1; }^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 2;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 1 / 2;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return -0;^751^^^^^730^772^[REPLACE] return -1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^else {^753^^^^^730^772^[REPLACE] else if  ( n == node2 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 1 % 2;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return -4;^751^^^^^730^772^[REPLACE] return -1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 3;^757^^^^^730^772^[REPLACE] return 0;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^^746^^^^^730^772^[ADD] NamedNodeMap map =  (  ( Node )  getNode (  )  ) .getAttributes (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^int length = map .item ( t2 )  ;^747^^^^^730^772^[REPLACE] int length = map.getLength (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^for  ( int i = 0 ; i < length; i++ )  {^748^^^^^730^772^[REPLACE] for  ( int i = 0; i < length; i++ )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^^749^^^^^730^772^[ADD] Node n = map.item ( i ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if   (  ns == null  )   {  ;^750^^^^^730^772^[REPLACE] if  ( n == node1 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^else if   (  current == node2  )   {  ;^753^^^^^730^772^[REPLACE] else if  ( n == node2 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 0;  ;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return -3;^751^^^^^730^772^[REPLACE] return -1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 1 - 3;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return -2;^751^^^^^730^772^[REPLACE] return -1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 4;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 0 >>> 2;^757^^^^^730^772^[REPLACE] return 0;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^746^^^^^730^772^[REPLACE] NamedNodeMap map =  (  ( Node )  getNode (  )  ) .getAttributes (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^int length = map .item ( i )  ;^747^^^^^730^772^[REPLACE] int length = map.getLength (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^Node n = map .getLength (  )  ;^749^^^^^730^772^[REPLACE] Node n = map.item ( i ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 1L;^743^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  ( t1 == Node.ATTRIBUTE_NODE || t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^772^[REPLACE] else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  ( n  ||  node1 )  {^750^^^^^730^772^[REPLACE] if  ( n == node1 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  (valueNode  ) {^753^^^^^730^772^[REPLACE] else if  ( n == node2 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^^753^754^755^^^730^772^[ADD] else if  ( n == node2 )  { return 1; }^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 0;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 0;  ;^751^^^^^730^772^[REPLACE] return -1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 1;^757^^^^^730^772^[REPLACE] return 0;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^NamedNodeMap map =  (  ( Node )  getNode (  )  ) .getNextSibling (  ) ;^746^^^^^730^772^[REPLACE] NamedNodeMap map =  (  ( Node )  getNode (  )  ) .getAttributes (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^String namespaceURI = nodeNameTest.getNamespaceURI (  )  ;^747^^^^^730^772^[REPLACE] int length = map.getLength (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^Node n = node  ;^749^^^^^730^772^[REPLACE] Node n = map.item ( i ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  ( n  !=  node2 )  {^750^^^^^730^772^[REPLACE] if  ( n == node1 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  (valueNode  ||  node2 )  {^753^^^^^730^772^[REPLACE] else if  ( n == node2 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 1 + 2;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 1 - 0;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return -1 - 4;^751^^^^^730^772^[REPLACE] return -1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 1 - 2;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 2;^743^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return -2;^740^^^^^730^772^[REPLACE] return -1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^^745^746^747^748^749^730^772^[ADD] else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  { NamedNodeMap map =  (  ( Node )  getNode (  )  ) .getAttributes (  ) ; int length = map.getLength (  ) ; for  ( int i = 0; i < length; i++ )  { Node n = map.item ( i ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^^750^751^752^^^730^772^[ADD] if  ( n == node1 )  { return -1; }^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return -1 >> 0;^751^^^^^730^772^[REPLACE] return -1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 1 + 0;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  ( n  != valueNode )  {^750^^^^^730^772^[REPLACE] if  ( n == node1 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 3;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  ( n  !=  node2 )  {^753^^^^^730^772^[REPLACE] else if  ( n == node2 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 1 * 1;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^^746^747^^^^730^772^[ADD] NamedNodeMap map =  (  ( Node )  getNode (  )  ) .getAttributes (  ) ; int length = map.getLength (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  ( n  !=  node1 )  {^750^^^^^730^772^[REPLACE] if  ( n == node1 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 1L;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 1 % 1;^754^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^int length = map.getLength (  ) ;^746^747^^^^730^772^[ADD] NamedNodeMap map =  (  ( Node )  getNode (  )  ) .getAttributes (  ) ; int length = map.getLength (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^^748^749^750^751^752^730^772^[ADD] for  ( int i = 0; i < length; i++ )  { Node n = map.item ( i ) ; if  ( n == node1 )  { return -1; }^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  ( n  ) {^753^^^^^730^772^[REPLACE] else if  ( n == node2 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return -3;^740^^^^^730^772^[REPLACE] return -1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 4;^743^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 0 - 3;^757^^^^^730^772^[REPLACE] return 0;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^Node parent = node.getParentNode (  )  ;^760^^^^^730^772^[REPLACE] Node current = node.getFirstChild (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  (   node1 )  {^762^^^^^730^772^[REPLACE] if  ( current == node1 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if  ( current  ) {^765^^^^^730^772^[REPLACE] else if  ( current == node2 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^^765^766^767^^^730^772^[ADD] else if  ( current == node2 )  { return 1; }^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 2;^766^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 0;  ;^766^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return -0;^763^^^^^730^772^[REPLACE] return -1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^if   (  current == node1  )   {  ;^765^^^^^730^772^[REPLACE] else if  ( current == node2 )  {^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[ADD]^^768^^^^^730^772^[ADD] current = current.getNextSibling (  ) ;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 3;^766^^^^^730^772^[REPLACE] return 1;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
[REPLACE]^return 3;^771^^^^^730^772^[REPLACE] return 0;^[METHOD] compareChildNodePointers [TYPE] int [PARAMETER] NodePointer pointer1 NodePointer pointer2 [CLASS] DOMNodePointer   [TYPE]  NamedNodeMap map  [TYPE]  boolean false  true  [TYPE]  Node aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  [TYPE]  String XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  [TYPE]  NodePointer pointer1  pointer2  [TYPE]  Map namespaces  [TYPE]  long serialVersionUID  [TYPE]  int i  length  t1  t2 
