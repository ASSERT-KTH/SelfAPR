[REPLACE]^public final static  long  SEMI_MONTH = 1001;^33^^^^^^^[REPLACE] public final static int SEMI_MONTH = 1001;^ [CLASS] CalendarUtils 1  
[REPLACE]^private static final int[][] fields ;^35^^^^^35^43^[REPLACE] private static final int[][] fields = {^ [CLASS] CalendarUtils 1  
[REPLACE]^private static DateFormat[] dateFormats ;^45^^^^^45^51^[REPLACE] private static DateFormat[] dateFormats = {^ [CLASS] CalendarUtils 1  
[REPLACE]^public final static int RANGE_WEEK_SUNDAY = 1 * 0;^56^^^^^^^[REPLACE] public final static int RANGE_WEEK_SUNDAY = 1;^ [CLASS] CalendarUtils 1  
[REPLACE]^public final static  short  RANGE_WEEK_MONDAY = 2;^61^^^^^^^[REPLACE] public final static int RANGE_WEEK_MONDAY = 2;^ [CLASS] CalendarUtils 1  
[REPLACE]^public final static int RANGE_WEEK_RELATIVE ;^66^^^^^^^[REPLACE] public final static int RANGE_WEEK_RELATIVE = 3;^ [CLASS] CalendarUtils 1  
[REPLACE]^public final static  long  RANGE_WEEK_CENTER = 7;^71^^^^^^^[REPLACE] public final static int RANGE_WEEK_CENTER = 4;^ [CLASS] CalendarUtils 1  
[REPLACE]^public final static int RANGE_MONTH_SUNDAY ;^76^^^^^^^[REPLACE] public final static int RANGE_MONTH_SUNDAY = 5;^ [CLASS] CalendarUtils 1  
[REPLACE]^public final static int RANGE_MONTH_MONDAY  = null ;^81^^^^^^^[REPLACE] public final static int RANGE_MONTH_MONDAY = 6;^ [CLASS] CalendarUtils 1  
[REPLACE]^Calendar spot ;^419^^^^^^^[REPLACE] Calendar spot = null;^ [CLASS] CalendarUtils 1  
[REPLACE]^boolean roundUp = true;^158^^^^^157^230^[REPLACE] boolean roundUp = false;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( fields[i][j]  ) {^161^^^^^157^230^[REPLACE] if  ( fields[i][j] == field )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  (true || roundUp )  {^163^^^^^157^230^[REPLACE] if  ( round && roundUp )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^163^164^^^^157^230^[ADD] if  ( round && roundUp )  { if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  ||  CalendarUtils.SEMI_MONTH )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( CalendarUtils.fields[i][0],  ( -offset )  )  ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   ||  1 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^end.add ( DATE,  ( -1 )  )  ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.get ( HOUR )  ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^172^^^^^168^173^[ADD] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 15 / 1 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   ) {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^168^169^170^171^172^157^230^[ADD] if  ( val.get ( Calendar.DATE )  == 1 )  { val.add ( Calendar.DATE, 15 ) ; } else { val.add ( Calendar.DATE, -15 ) ; val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 15L ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  (offset  ||  CalendarUtils.SEMI_MONTH )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( fields[i][3], 1 ) ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^177^^^^^164^178^[ADD] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^val.add ( Calendar.DATE, 15 ) ;val.add ( Calendar.DATE, -15 ) ;val.add ( Calendar.MONTH, 1 ) ;^168^169^170^171^172^157^230^[ADD] if  ( val.get ( Calendar.DATE )  == 1 )  { val.add ( Calendar.DATE, 15 ) ; } else { val.add ( Calendar.DATE, -15 ) ; val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -0 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 4 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.get ( HOUR )  ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^val.get ( HOUR )  ;^169^^^^^157^230^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   &&  1 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^val.get ( HOUR )  ;^171^^^^^168^173^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 1 - 2 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 15 * 0 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^return;  ;^180^^^^^157^230^[REPLACE] return;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( round || true )  {^163^^^^^157^230^[REPLACE] if  ( round && roundUp )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( offset  !=  offset )  {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( fields[i][1], 1 ) ;^177^^^^^164^178^[REPLACE] val.add ( fields[i][0], 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   !=  1 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -15L ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val .equals ( this )  ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   || SEMI_MONTH )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -11 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 1 / 2 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  ) {^164^^^^^157^230^[REPLACE] if  ( field == CalendarUtils.SEMI_MONTH )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( val.get ( Calendar.DATE )   || offset )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^if  ( field ==  ( CalendarUtils.SEMI_MONTH )  )  {     if  (  ( val.get ( DATE )  )  == 1 )  {         val.add ( DATE, 15 ) ;     }else {         val.add ( DATE,  ( -15 )  ) ;         val.add ( MONTH, 1 ) ;     } }else {     val.add ( CalendarUtils.fields[i][0], 1 ) ; }^168^^^^^157^230^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, -16 ) ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  (   1 )  {^168^^^^^157^230^[REPLACE] if  ( val.get ( Calendar.DATE )  == 1 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val .equals ( null )  ;^171^^^^^168^173^[REPLACE] val.add ( Calendar.DATE, -15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.MONTH, 1 % 2 ) ;^172^^^^^168^173^[REPLACE] val.add ( Calendar.MONTH, 1 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^val.add ( Calendar.DATE, 15 - 0 ) ;^169^^^^^157^230^[REPLACE] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^169^^^^^157^230^[ADD] val.add ( Calendar.DATE, 15 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  (   Calendar.DATE )  {^189^^^^^157^230^[REPLACE] if  ( fields[i][0] == Calendar.DATE )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  ==  15 + 1 )  {^196^^^^^157^230^[REPLACE] if  ( offset >= 15 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^if  ( monthsAgo <= 0 )  {     monthsAgo += 12; }^196^^^^^157^230^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 15 - 0;^197^^^^^157^230^[REPLACE] offset -= 15;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^193^^^^^157^230^[ADD] offset = val.get ( Calendar.DATE )  - 1;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 0;^197^^^^^157^230^[REPLACE] offset -= 15;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^200^^^^^157^230^[ADD] roundUp = offset > 7;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offsetSet = false;^201^^^^^157^230^[REPLACE] offsetSet = true;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( SEMI_MONTH  > field )  {^196^^^^^157^230^[REPLACE] if  ( offset >= 15 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 12  ;^197^^^^^157^230^[REPLACE] offset -= 15;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if   (  fields[i][0] == Calendar.DATE  )   {  ;^205^^^^^157^230^[REPLACE] if  ( fields[i][0] == Calendar.HOUR )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( offset  <  12 )  {^209^^^^^157^230^[REPLACE] if  ( offset >= 12 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REMOVE]^if  ( monthsAgo <= 0 )  {     monthsAgo += 12; }^209^^^^^157^230^[REMOVE] ^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 1;^210^^^^^157^230^[REPLACE] offset -= 12;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset =  ( val.get ( DATE )  )  - 1  ;^208^^^^^157^230^[REPLACE] offset = val.get ( Calendar.HOUR ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 5;^210^^^^^157^230^[REPLACE] offset -= 12;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp = offset  <=  6;^212^^^^^157^230^[REPLACE] roundUp = offset > 6;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offsetSet = false;^213^^^^^157^230^[REPLACE] offsetSet = true;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( field  <  8 )  {^209^^^^^157^230^[REPLACE] if  ( offset >= 12 )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 15  ;^210^^^^^157^230^[REPLACE] offset -= 12;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^if  ( offsetSet )  {^217^^^^^157^230^[REPLACE] if  ( !offsetSet )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset = val.get ( fields[i][0] )   min;^221^^^^^157^230^[REPLACE] offset = val.get ( fields[i][0] )  - min;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp = offset  !=   (  ( max - min )  / 1 ) ;^223^^^^^157^230^[REPLACE] roundUp = offset >  (  ( max - min )  / 2 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^int max = val.getActualMaximum ( CalendarUtils.fields[i][0] )  ;^218^^^^^157^230^[REPLACE] int min = val.getActualMinimum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^int max = val.getActualMaximum ( fields[i][4] ) ;^219^^^^^157^230^[REPLACE] int max = val.getActualMaximum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^197^^^^^157^230^[ADD] offset -= 15;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp = offset  != field;^200^^^^^157^230^[REPLACE] roundUp = offset > 7;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^offset -= 9;^210^^^^^157^230^[REPLACE] offset -= 12;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp = offset > 7  ;^212^^^^^157^230^[REPLACE] roundUp = offset > 6;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^221^^^^^157^230^[ADD] offset = val.get ( fields[i][0] )  - min;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^roundUp = field  !=   (  ( max - min )  / 2 ) ;^223^^^^^157^230^[REPLACE] roundUp = offset >  (  ( max - min )  / 2 ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^159^160^161^^^157^230^[ADD] for  ( int i = 0; i < fields.length; i++ )  { for  ( int j = 0; j < fields[i].length; j++ )  { if  ( fields[i][j] == field )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^160^161^^163^^157^230^[ADD] for  ( int j = 0; j < fields[i].length; j++ )  { if  ( fields[i][j] == field )  { if  ( round && roundUp )  {^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^int offset = 0 - 3;^184^^^^^157^230^[REPLACE] int offset = 0;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^boolean offsetSet = true;^185^^^^^157^230^[REPLACE] boolean offsetSet = false;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^int max = val.getActualMaximum ( fields[i][0] ) ;^218^219^^^^157^230^[ADD] int min = val.getActualMinimum ( fields[i][0] ) ; int max = val.getActualMaximum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^219^^^^^157^230^[ADD] int max = val.getActualMaximum ( fields[i][0] ) ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[REPLACE]^return ;^228^^^^^157^230^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] modify [TYPE] void [PARAMETER] Calendar val int field boolean round [CLASS] CalendarUtils 1   [TYPE]  int[][] fields  [TYPE]  boolean false  offsetSet  round  roundUp  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  field  i  j  max  min  offset  [TYPE]  Calendar rounded  spot  truncated  val 
[ADD]^^244^^^^^242^347^[ADD] DateFormatSymbols symbols = new DateFormatSymbols ( locale ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^String value = unit.toLowerCase (  )  .substring ( RANGE_WEEK_CENTER , min )  ;^247^^^^^242^347^[REPLACE] String value = original.toLowerCase (  ) .trim (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^250^^^^^242^347^[ADD] Calendar now = Calendar.getInstance (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if   (  offset >= 15  )   {  ;^251^^^^^242^347^[REPLACE] if  ( value.endsWith ( " ago" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( value.startsWith ( "last " )  )  {^294^^^^^242^347^[REPLACE] } else if  ( value.startsWith ( "last " )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   value = value.substring ( 5 ) ;^294^295^^297^^242^347^[ADD] else if  ( value.startsWith ( "last " )  )  {  value = value.substring ( 5 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( value.equals ( "yesterday" )  )  {^327^^^^^242^347^[REPLACE] } else if  ( value.equals ( "yesterday" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^330^^^^^242^347^[REPLACE] } else if  ( value.equals ( "tomorrow" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return now;  ;^332^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return truncated;^332^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return truncated;^329^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( value.equals ( "tomorrow" )  )  {^330^^^^^242^347^[REPLACE] } else if  ( value.equals ( "tomorrow" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if   (  offset >= 15  )   {  ;^301^^^^^242^347^[REPLACE] if  ( value.equalsIgnoreCase ( strings[i] )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( start  >= val )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^daysAgo += 7;^304^305^306^^^242^347^[ADD] if  ( daysAgo <= 0 )  { daysAgo += 7; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7L;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 4;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return truncated;^308^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^minnt daysAgo = now.get ( Calendar.DAY_OF_WEEK )   i;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( daysAgo  <  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^304^305^306^^^242^347^[ADD] if  ( daysAgo <= 0 )  { daysAgo += 7; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if   (  offset >= 15  )   {  ;^313^^^^^242^347^[REPLACE] if  ( value.equalsIgnoreCase ( strings[i] )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( val  ==  0 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 4;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^317^^^^^242^347^[ADD] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return truncated;^320^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now.get ( Calendar.MONTH )   i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  (offset  ==  0 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 2;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( value .equalsIgnoreCase ( value )   )  {^323^^^^^242^347^[REPLACE] if  ( value.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return truncated;^325^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 4 ) ;^297^^^^^242^347^[REPLACE] value = value.substring ( 5 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 3;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^strings =  null.getMonths (  ) ;^311^^^^^242^347^[REPLACE] strings = symbols.getMonths (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return now;  ;^308^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^String[] strings = symbols.getMonths (  ) ;^299^^^^^242^347^[REPLACE] String[] strings = symbols.getWeekdays (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^300^301^^303^^242^347^[ADD] for  ( int i = 0; i < strings.length; i++ )  { if  ( value.equalsIgnoreCase ( strings[i] )  )  { int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo = now.get ( Calendar.DAY_OF_WEEK )   i;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^312^313^^315^^242^347^[ADD] for  ( int i = 0; i < strings.length; i++ )  { if  ( value.equalsIgnoreCase ( strings[i] )  )  { int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int daysAgo =  ( now.get ( DAY_OF_WEEK )  )  - i  ;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( val  >=  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^305^^^^^242^347^[ADD] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( value.equals ( "yesterday" )  )  {     now.add ( DATE,  ( -1 )  ) ;     return now; }else     if  ( value.equals ( "tomorrow" )  )  {         now.add ( DATE, 1 ) ;         return now;     }^313^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if   (  daysAgo <= 0  )   {  ;^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 12L;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return now;  ;^320^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now.get ( Calendar.MONTH )   min;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 9;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( value.endsWith ( "week" )  )  {^323^^^^^242^347^[REPLACE] if  ( value.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.DATE, -1 ) ;return now;now.add ( Calendar.DATE, 1 ) ;^327^328^329^330^331^242^347^[ADD] else if  ( value.equals ( "yesterday" )  )  { now.add ( Calendar.DATE, -1 ) ; return now; } else if  ( value.equals ( "tomorrow" )  )  { now.add ( Calendar.DATE, 1 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if   (  value.equals  (  "yesterday"  )    )   {  ;^330^^^^^242^347^[REPLACE] } else if  ( value.equals ( "tomorrow" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( value .equalsIgnoreCase ( original )   )  {^330^^^^^242^347^[REPLACE] } else if  ( value.equals ( "tomorrow" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 5 * 0 ) ;^297^^^^^242^347^[REPLACE] value = value.substring ( 5 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^311^^^^^242^347^[ADD] strings = symbols.getMonths (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 11;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^String[] strings = symbols .getMonths (  )  ;^299^^^^^242^347^[REPLACE] String[] strings = symbols.getWeekdays (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0 ; i < strings.length; i++ )  {^300^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^303^^^^^242^347^[ADD] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^for  ( int i = 0 ; i < strings.length; i++ )  {^312^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( start  != val )  {^258^^^^^242^347^[REPLACE] if  ( start < 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^259^^^^^242^347^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( value.equals ( "a" )  ) {^265^^^^^242^347^[REPLACE] if  ( value.equals ( "a" )  || value.equals ( "an" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^val =  Integer.parseInt ( null ) ;^268^^^^^265^269^[REPLACE] val = Integer.parseInt ( value ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^val = 3;^266^^^^^242^347^[REPLACE] val = 1;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( unit.equals ( "milliseconds" )  ) {^272^^^^^242^347^[REPLACE] if  ( unit.equals ( "milliseconds" )  || unit.equals ( "millisecond" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "seconds" )  && unit.equals ( "second" )  )  {^274^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.SECOND, -val ) ;now.add ( Calendar.MINUTE, -val ) ;^274^275^276^277^^242^347^[ADD] else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  { now.add ( Calendar.SECOND, -val ) ; } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  { now.add ( Calendar.MINUTE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^276^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.MINUTE, -val ) ;now.add ( Calendar.HOUR, -val ) ;^276^277^278^279^^242^347^[ADD] else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  { now.add ( Calendar.MINUTE, -val ) ; } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  { now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^278^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if   (  unit.equals  (  "fortnights"  )   || unit.equals  (  "fortnight"  )    )   {  ;^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.DATE, -val ) ;now.add ( Calendar.DATE, -val * 7 ) ;^280^281^282^283^^242^347^[ADD] else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  { now.add ( Calendar.DATE, -val ) ; } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  { now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if   (  unit.equals  (  "fortnights"  )   || unit.equals  (  "fortnight"  )    )   {  ;^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.DATE, -val * 7 ) ;^282^283^284^285^^242^347^[ADD] else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  { now.add ( Calendar.DATE, -val * 7 ) ; } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  { now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}^284^285^286^287^^242^347^[ADD] else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  { now.add ( Calendar.DATE, -val * 14 ) ; } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  { now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^throw new RuntimeException (  (  ( "Unable to parse '" + original )  + "'." )  )  ;^291^^^^^288^292^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.YEAR, -start ) ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return ;^291^^^^^242^347^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^end.add ( DATE,  ( -1 )  )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^287^^^^^242^347^[ADD] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return ;^291^^^^^288^292^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^291^^^^^288^292^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^end.add ( DATE,  ( -1 )  )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^val.get ( HOUR )  ;^289^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^throw new RuntimeException (  (  ( "Unable to parse '" + original )  + "'." )  )  ;^291^^^^^242^347^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if   (  unit.equals  (  "fortnights"  )   || unit.equals  (  "fortnight"  )    )   {  ;^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^end.add ( DATE,  ( -1 )  )  ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "fortnights" )  && unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "months" )  ) {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.MONTH, -val ) ;now.add ( Calendar.YEAR, -val ) ;^286^287^288^289^^242^347^[ADD] else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  { now.add ( Calendar.MONTH, -val ) ; } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  { now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MONTH, -start ) ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^289^^^^^242^347^[ADD] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -start ) ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.equals ( "months" )  && unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^val.get ( HOUR )  ;^287^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.YEAR, -max ) ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^291^^^^^242^347^[ADD] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^end.add ( DATE,  ( -1 )  )  ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^285^^^^^242^347^[ADD] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  (  ( unit.equals ( "months" )  )  ||  ( unit.equals ( "month" )  )  )  {     now.add ( MONTH,  ( -val )  ) ; }else     if  (  ( unit.equals ( "years" )  )  ||  ( unit.equals ( "year" )  )  )  {         now.add ( YEAR,  ( -val )  ) ;     }else {         throw new RuntimeException ( "We do not understand that many units ago" ) ;     }^288^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "fortnights" )  && unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "months" )  && unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  (  unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.YEAR, -val ) ;^288^289^290^291^292^242^347^[ADD] else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  { now.add ( Calendar.YEAR, -val ) ; } else { throw new RuntimeException  (" ")  ; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "months" )  && unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.endsWith ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^end.add ( DATE,  ( -1 )  )  ;^279^^^^^242^347^[REPLACE] now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  (  unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if   (  unit.equals  (  "fortnights"  )   || unit.equals  (  "fortnight"  )    )   {  ;^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( this )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.YEAR, -val ) ;^286^287^288^289^^242^347^[ADD] else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  { now.add ( Calendar.MONTH, -val ) ; } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  { now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  1 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}^288^289^290^291^292^242^347^[ADD] else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  { now.add ( Calendar.YEAR, -val ) ; } else { throw new RuntimeException  (" ")  ; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val val ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( value.equals ( "yesterday" )  )  {     now.add ( DATE,  ( -1 )  ) ;     return now; }else     if  ( value.equals ( "tomorrow" )  )  {         now.add ( DATE, 1 ) ;         return now;     }^286^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( unit )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^end.add ( DATE,  ( -1 )  )  ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^val.get ( HOUR )  ;^281^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "weeks" )  && unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if   (  unit.equals  (  "days"  )   || unit.equals  (  "day"  )    )   {  ;^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.equals ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( null )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( original )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MONTH, -max ) ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( false )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "months" )  ) {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^end.add ( DATE,  ( -1 )  )  ;^277^^^^^242^347^[REPLACE] now.add ( Calendar.MINUTE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if   (  unit.equals  (  "fortnights"  )   || unit.equals  (  "fortnight"  )    )   {  ;^278^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.DATE, -val * 7 ) ;^280^281^282^283^^242^347^[ADD] else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  { now.add ( Calendar.DATE, -val ) ; } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  { now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MONTH, -monthsAgo ) ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  9 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "months" )  && unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,start  1 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "fortnights" )  && unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -start  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val val ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( 0 )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( value )   && unit^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "fortnights" )  ) {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  16 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^val.get ( HOUR )  ;^285^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( this )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( true )  ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^283^^^^^242^347^[ADD] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "months" )  && unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit .equalsIgnoreCase ( original )   && unit^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^end.add ( DATE,  ( -1 )  )  ;^275^^^^^242^347^[REPLACE] now.add ( Calendar.SECOND, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "minutes" )  ) {^276^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "hours" )  && unit.equals ( "hour" )  )  {^278^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  (  ( unit.equals ( "weeks" )  )  ||  ( unit.equals ( "week" )  )  )  {     now.add ( DATE,  (  ( -val )  * 7 )  ) ; }else     if  (  ( unit.equals ( "fortnights" )  )  ||  ( unit.equals ( "fortnight" )  )  )  {         now.add ( DATE,  (  ( -val )  * 14 )  ) ;     }else         if  (  ( unit.equals ( "months" )  )  ||  ( unit.equals ( "month" )  )  )  {             now.add ( MONTH,  ( -val )  ) ;         }else             if  (  ( unit.equals ( "years" )  )  ||  ( unit.equals ( "year" )  )  )  {                 now.add ( YEAR,  ( -val )  ) ;             }else {                 throw new RuntimeException ( "We do not understand that many units ago" ) ;             }^284^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  (  unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  14L ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -start  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( 1 )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "months" )  ) {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.equals ( "fortnights" )  && unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  1 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^val.get ( HOUR )  ;^279^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  (  ( unit.equals ( "seconds" )  )  ||  ( unit.equals ( "second" )  )  )  {     now.add ( SECOND,  ( -val )  ) ; }else     if  (  ( unit.equals ( "minutes" )  )  ||  ( unit.equals ( "minute" )  )  )  {         now.add ( MINUTE,  ( -val )  ) ;     }else         if  (  ( unit.equals ( "hours" )  )  ||  ( unit.equals ( "hour" )  )  )  {             now.add ( HOUR,  ( -val )  ) ;         }else             if  (  ( unit.equals ( "days" )  )  ||  ( unit.equals ( "day" )  )  )  {                 now.add ( DATE,  ( -val )  ) ;             }else                 if  (  ( unit.equals ( "weeks" )  )  ||  ( unit.equals ( "week" )  )  )  {                     now.add ( DATE,  (  ( -val )  * 7 )  ) ;                 }else                     if  (  ( unit.equals ( "fortnights" )  )  ||  ( unit.equals ( "fortnight" )  )  )  {                         now.add ( DATE,  (  ( -val )  * 14 )  ) ;                     }else                         if  (  ( unit.equals ( "months" )  )  ||  ( unit.equals ( "month" )  )  )  {                             now.add ( MONTH,  ( -val )  ) ;                         }else                             if  (  ( unit.equals ( "years" )  )  ||  ( unit.equals ( "year" )  )  )  {                                 now.add ( YEAR,  ( -val )  ) ;                             }else {                                 throw new RuntimeException ( "We do not understand that many units ago" ) ;                             }^282^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "fortnights" )  && unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( null )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  14 << 2 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.YEAR, -monthsAgo ) ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "hours" )  && unit.equals ( "hour" )  )  {^278^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.HOUR, -val ) ;now.add ( Calendar.DATE, -val ) ;^278^279^280^281^^242^347^[ADD] else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  { now.add ( Calendar.HOUR, -val ) ; } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  { now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( value )   && unit^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit .equalsIgnoreCase ( value )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit .equalsIgnoreCase ( unit )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( this )  ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( true )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( null )  ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( 1 )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,monthsAgo  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^end.add ( DATE,  ( -1 )  )  ;^273^^^^^242^347^[REPLACE] now.add ( Calendar.MILLISECOND, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^274^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  (  ( unit.equals ( "weeks" )  )  ||  ( unit.equals ( "week" )  )  )  {     now.add ( DATE,  (  ( -val )  * 7 )  ) ; }else     if  (  ( unit.equals ( "fortnights" )  )  ||  ( unit.equals ( "fortnight" )  )  )  {         now.add ( DATE,  (  ( -val )  * 14 )  ) ;     }else         if  (  ( unit.equals ( "months" )  )  ||  ( unit.equals ( "month" )  )  )  {             now.add ( MONTH,  ( -val )  ) ;         }else             if  (  ( unit.equals ( "years" )  )  ||  ( unit.equals ( "year" )  )  )  {                 now.add ( YEAR,  ( -val )  ) ;             }else {                 throw new RuntimeException ( "We do not understand that many units ago" ) ;             }^274^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "days" )  && unit.equals ( "day" )  )  {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  5 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -monthsAgo ) ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val  14 / 3 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( this )  ;^279^^^^^242^347^[REPLACE] now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^279^^^^^242^347^[ADD] now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "weeks" )  && unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "weeks" )  ) {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "years" )  && unit.equals ( "year" )  )  {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( this )  ;^277^^^^^242^347^[REPLACE] now.add ( Calendar.MINUTE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "hours" )  && unit.equals ( "hour" )  )  {^278^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "weeks" )  && unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^val.get ( HOUR )  ;^283^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -max  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^281^^^^^242^347^[ADD] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "weeks" )  && unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val  5 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, monthsAgo  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.HOUR, -start ) ;^279^^^^^242^347^[REPLACE] now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "months" )  && unit.equals ( "month" )  )  {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,val  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  (  unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.SECOND, -start ) ;^275^^^^^242^347^[REPLACE] now.add ( Calendar.SECOND, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "minutes" )  && unit.equals ( "minute" )  )  {^276^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  (  ( unit.equals ( "seconds" )  )  ||  ( unit.equals ( "second" )  )  )  {     now.add ( SECOND,  ( -val )  ) ; }else     if  (  ( unit.equals ( "minutes" )  )  ||  ( unit.equals ( "minute" )  )  )  {         now.add ( MINUTE,  ( -val )  ) ;     }else         if  (  ( unit.equals ( "hours" )  )  ||  ( unit.equals ( "hour" )  )  )  {             now.add ( HOUR,  ( -val )  ) ;         }else             if  (  ( unit.equals ( "days" )  )  ||  ( unit.equals ( "day" )  )  )  {                 now.add ( DATE,  ( -val )  ) ;             }else                 if  (  ( unit.equals ( "weeks" )  )  ||  ( unit.equals ( "week" )  )  )  {                     now.add ( DATE,  (  ( -val )  * 7 )  ) ;                 }else                     if  (  ( unit.equals ( "fortnights" )  )  ||  ( unit.equals ( "fortnight" )  )  )  {                         now.add ( DATE,  (  ( -val )  * 14 )  ) ;                     }else                         if  (  ( unit.equals ( "months" )  )  ||  ( unit.equals ( "month" )  )  )  {                             now.add ( MONTH,  ( -val )  ) ;                         }else                             if  (  ( unit.equals ( "years" )  )  ||  ( unit.equals ( "year" )  )  )  {                                 now.add ( YEAR,  ( -val )  ) ;                             }else {                                 throw new RuntimeException ( "We do not understand that many units ago" ) ;                             }^278^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original .equalsIgnoreCase ( unit )   && unit^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}^282^283^284^285^^242^347^[ADD] else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  { now.add ( Calendar.DATE, -val * 7 ) ; } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  { now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "fortnights" )  && unit.equals ( "fortnight" )  )  {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( null )  ;^281^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( this )  ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.endsWith ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -monthsAgo  14 + 3 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( true )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "days" )  ) {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  14 - 4 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, start  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -monthsAgo  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.HOUR, -monthsAgo ) ;^279^^^^^242^347^[REPLACE] now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  14 % 4 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, val  5 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 0, value.length (  )  *  2 - 4 ) ;^254^^^^^242^347^[REPLACE] value = value.substring ( 0, value.length (  )  - 4 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 1, start ) ;^262^^^^^242^347^[REPLACE] value = value.substring ( 0, start ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^val = 2;^266^^^^^242^347^[REPLACE] val = 1;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^268^^^^^242^347^[ADD] val = Integer.parseInt ( value ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return now;  ;^293^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int start = value.endsWith ( " " ) ;^257^^^^^242^347^[REPLACE] int start = value.indexOf ( " " ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^String unit = value.substring ( val  1 ) ;^261^^^^^242^347^[REPLACE] String unit = value.substring ( start + 1 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^264^^^^^242^347^[ADD] int val = 0;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return ;^259^^^^^242^347^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  (val  >=  0 )  {^258^^^^^242^347^[REPLACE] if  ( start < 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^throw new RuntimeException (  (  ( "Unable to parse '" + original )  + "'." )  )  ;^259^^^^^242^347^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( value.equals ( "a" )  && value.equals ( "an" )  )  {^265^^^^^242^347^[REPLACE] if  ( value.equals ( "a" )  || value.equals ( "an" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^268^^^^^265^269^[ADD] val = Integer.parseInt ( value ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^val = 1L;^266^^^^^242^347^[REPLACE] val = 1;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( original.equals ( "milliseconds" )  && unit.equals ( "millisecond" )  )  {^272^^^^^242^347^[REPLACE] if  ( unit.equals ( "milliseconds" )  || unit.equals ( "millisecond" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  (  ( unit.equals ( "seconds" )  )  ||  ( unit.equals ( "second" )  )  )  {     now.add ( SECOND,  ( -val )  ) ; }else     if  (  ( unit.equals ( "minutes" )  )  ||  ( unit.equals ( "minute" )  )  )  {         now.add ( MINUTE,  ( -val )  ) ;     }else         if  (  ( unit.equals ( "hours" )  )  ||  ( unit.equals ( "hour" )  )  )  {             now.add ( HOUR,  ( -val )  ) ;         }else             if  (  ( unit.equals ( "days" )  )  ||  ( unit.equals ( "day" )  )  )  {                 now.add ( DATE,  ( -val )  ) ;             }else                 if  (  ( unit.equals ( "weeks" )  )  ||  ( unit.equals ( "week" )  )  )  {                     now.add ( DATE,  (  ( -val )  * 7 )  ) ;                 }else                     if  (  ( unit.equals ( "fortnights" )  )  ||  ( unit.equals ( "fortnight" )  )  )  {                         now.add ( DATE,  (  ( -val )  * 14 )  ) ;                     }else                         if  (  ( unit.equals ( "months" )  )  ||  ( unit.equals ( "month" )  )  )  {                             now.add ( MONTH,  ( -val )  ) ;                         }else                             if  (  ( unit.equals ( "years" )  )  ||  ( unit.equals ( "year" )  )  )  {                                 now.add ( YEAR,  ( -val )  ) ;                             }else {                                 throw new RuntimeException ( "We do not understand that many units ago" ) ;                             }^272^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "minutes" )  && unit.equals ( "minute" )  )  {^276^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "weeks" )  && unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val monthsAgo ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.endsWith ( "weeks" )  ) {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.equals ( "days" )  && unit.equals ( "day" )  )  {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "months" )  ) {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.DATE, -val ) ;^278^279^280^281^^242^347^[ADD] else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  { now.add ( Calendar.HOUR, -val ) ; } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  { now.add ( Calendar.DATE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, monthsAgo  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,start  3 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "days" )  && unit.equals ( "day" )  )  {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val start ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.equals ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( value )   && unit^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  3 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "minute" )  )  {^276^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  0 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( false )  ;^287^^^^^242^347^[REPLACE] now.add ( Calendar.MONTH, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  7L ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,start  7 >> 2 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "weeks" )  ) {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( 0 )  ;^289^^^^^242^347^[REPLACE] now.add ( Calendar.YEAR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -max  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( 1 )  ;^277^^^^^242^347^[REPLACE] now.add ( Calendar.MINUTE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.equals ( "days" )  && unit.equals ( "day" )  )  {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  7 * 0 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,monthsAgo  2 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( unit )   && unit^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original .equalsIgnoreCase ( original )   && unit^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.equals ( "months" )  ) {^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MILLISECOND, -max ) ;^273^^^^^242^347^[REPLACE] now.add ( Calendar.MILLISECOND, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.MINUTE, -val ) ;^274^275^276^277^^242^347^[ADD] else if  ( unit.equals ( "seconds" )  || unit.equals ( "second" )  )  { now.add ( Calendar.SECOND, -val ) ; } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  { now.add ( Calendar.MINUTE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "minutes" )  && unit.equals ( "minute" )  )  {^276^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  14 + 4 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now .equals ( null )  ;^279^^^^^242^347^[REPLACE] now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "fortnights" )  ) {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,start  14 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  7 - 1 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,monthsAgo  13 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.MINUTE, -max ) ;^277^^^^^242^347^[REPLACE] now.add ( Calendar.MINUTE, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  (  unit.equals ( "hour" )  )  {^278^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  (  unit.equals ( "day" )  )  {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( unit.equals ( "weeks" )  ) {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  14 % 0 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -start  14 >> 4 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  (  ( unit.equals ( "seconds" )  )  ||  ( unit.equals ( "second" )  )  )  {     now.add ( SECOND,  ( -val )  ) ; }else     if  (  ( unit.equals ( "minutes" )  )  ||  ( unit.equals ( "minute" )  )  )  {         now.add ( MINUTE,  ( -val )  ) ;     }else         if  (  ( unit.equals ( "hours" )  )  ||  ( unit.equals ( "hour" )  )  )  {             now.add ( HOUR,  ( -val )  ) ;         }else             if  (  ( unit.equals ( "days" )  )  ||  ( unit.equals ( "day" )  )  )  {                 now.add ( DATE,  ( -val )  ) ;             }else                 if  (  ( unit.equals ( "weeks" )  )  ||  ( unit.equals ( "week" )  )  )  {                     now.add ( DATE,  (  ( -val )  * 7 )  ) ;                 }else                     if  (  ( unit.equals ( "fortnights" )  )  ||  ( unit.equals ( "fortnight" )  )  )  {                         now.add ( DATE,  (  ( -val )  * 14 )  ) ;                     }else                         if  (  ( unit.equals ( "months" )  )  ||  ( unit.equals ( "month" )  )  )  {                             now.add ( MONTH,  ( -val )  ) ;                         }else                             if  (  ( unit.equals ( "years" )  )  ||  ( unit.equals ( "year" )  )  )  {                                 now.add ( YEAR,  ( -val )  ) ;                             }else {                                 throw new RuntimeException ( "We do not understand that many units ago" ) ;                             }^280^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( value )   && unit^286^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "months" )  || unit.equals ( "month" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit.endsWith ( "fortnights" )  ) {^284^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "fortnights" )  || unit.equals ( "fortnight" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if  ( original.equals ( "years" )  ) {^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( unit .equalsIgnoreCase ( value )   && unit^288^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "years" )  || unit.equals ( "year" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^275^^^^^242^347^[ADD] now.add ( Calendar.SECOND, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^} else if   (  unit.equals  (  "fortnights"  )   || unit.equals  (  "fortnight"  )    )   {  ;^276^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.HOUR, -val ) ;^276^277^278^279^^242^347^[ADD] else if  ( unit.equals ( "minutes" )  || unit.equals ( "minute" )  )  { now.add ( Calendar.MINUTE, -val ) ; } else if  ( unit.equals ( "hours" )  || unit.equals ( "hour" )  )  { now.add ( Calendar.HOUR, -val ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE, -val  14 << 3 ) ;^285^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 14 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  (  unit.equals ( "day" )  )  {^280^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "days" )  || unit.equals ( "day" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  if  ( original.equals ( "weeks" )  && unit.equals ( "week" )  )  {^282^^^^^242^347^[REPLACE] } else if  ( unit.equals ( "weeks" )  || unit.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^now.add ( Calendar.DATE,start  7 ) ;^283^^^^^242^347^[REPLACE] now.add ( Calendar.DATE, -val * 7 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^294^^^^^242^347^[REPLACE] } else if  ( value.startsWith ( "last " )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^}   now.add ( Calendar.DATE, 1 ) ;return now;^330^331^332^333^^242^347^[ADD] else if  ( value.equals ( "tomorrow" )  )  { now.add ( Calendar.DATE, 1 ) ; return now; }^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return now;  ;^329^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( daysAgo  >=  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( monthsAgo <= 0 )  {     monthsAgo += 12; }^304^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7 / 0;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  (start  >  0 )  {^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  (val  ==  0L )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( daysAgo <= 0 )  {     daysAgo += 7; }^316^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 0;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 12 * 0;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^minnt monthsAgo = now.getActualMinimum ( Calendar.MONTH )   i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( monthsAgo  !=  4 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 1;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if   (  offset >= 15  )   {  ;^323^^^^^242^347^[REPLACE] if  ( value.equals ( "week" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return now;  ;^325^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 5 + 1 ) ;^297^^^^^242^347^[REPLACE] value = value.substring ( 5 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^299^^^^^242^347^[ADD] String[] strings = symbols.getWeekdays (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int j = 0  ;^300^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^minnt daysAgo = now.getActualMinimum ( Calendar.DAY_OF_WEEK )   i;^303^^^^^242^347^[REPLACE] int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int j = 0  ;^312^^^^^242^347^[REPLACE] for  ( int i = 0; i < strings.length; i++ )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^315^^^^^242^347^[ADD] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^301^302^303^304^305^242^347^[ADD] if  ( value.equalsIgnoreCase ( strings[i] )  )  {  int daysAgo = now.get ( Calendar.DAY_OF_WEEK )  - i; if  ( daysAgo <= 0 )  { daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if   (  monthsAgo <= 0  )   {  ;^304^^^^^242^347^[REPLACE] if  ( daysAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7 * 3;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^daysAgo += 7 - 0;^305^^^^^242^347^[REPLACE] daysAgo += 7;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  (start  >=  1 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = truncated.get ( Calendar.MONTH )   i;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^if  ( monthsAgo  <  1 )  {^316^^^^^242^347^[REPLACE] if  ( monthsAgo <= 0 )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( value.equals ( "yesterday" )  )  {     now.add ( DATE,  ( -1 )  ) ;     return now; }else     if  ( value.equals ( "tomorrow" )  )  {         now.add ( DATE, 1 ) ;         return now;     }^323^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^}  else {^327^^^^^242^347^[REPLACE] } else if  ( value.equals ( "yesterday" )  )  {^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( field ==  ( CalendarUtils.SEMI_MONTH )  )  {     if  (  ( val.get ( DATE )  )  == 1 )  {         val.add ( DATE, 15 ) ;     }else {         val.add ( DATE,  ( -15 )  ) ;         val.add ( MONTH, 1 ) ;     } }else {     val.add ( CalendarUtils.fields[i][0], 1 ) ; }^327^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REMOVE]^if  ( value.equals ( "yesterday" )  )  {     now.add ( DATE,  ( -1 )  ) ;     return now; }else     if  ( value.equals ( "tomorrow" )  )  {         now.add ( DATE, 1 ) ;         return now;     }^330^^^^^242^347^[REMOVE] ^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 0 , value.length (  )  + 2 - 4 ) ;^254^^^^^242^347^[REPLACE] value = value.substring ( 0, value.length (  )  - 4 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^262^^^^^242^347^[ADD] value = value.substring ( 0, start ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^val = 1 + 4;^266^^^^^242^347^[REPLACE] val = 1;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^val =  Integer.parseInt ( null ) ;^268^^^^^242^347^[REPLACE] val = Integer.parseInt ( value ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^value = value.substring ( 5L ) ;^297^^^^^242^347^[REPLACE] value = value.substring ( 5 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^monthsAgo += 12 + 4;^317^^^^^242^347^[REPLACE] monthsAgo += 12;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return truncated;^293^^^^^242^347^[REPLACE] return now;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^String unit = value.substring (monthsAgo  1 >> 0 ) ;^261^^^^^242^347^[REPLACE] String unit = value.substring ( start + 1 ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int val = 0L;^264^^^^^242^347^[REPLACE] int val = 0;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^int monthsAgo = now.getActualMinimum ( Calendar.MONTH )  monthsAgo;^315^^^^^242^347^[REPLACE] int monthsAgo = now.get ( Calendar.MONTH )  - i;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^Date datetime = dateFormats[i].parse ( original ) ;Calendar cal = Calendar.getInstance (  ) ;cal.setTime ( datetime ) ;return cal;^336^337^338^339^340^242^347^[ADD] try { Date datetime = dateFormats[i].parse ( original ) ; Calendar cal = Calendar.getInstance (  ) ; cal.setTime ( datetime ) ; return cal;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return cal;  ;^340^^^^^242^347^[REPLACE] return cal;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^Date datetime = dateFormats[i].parse ( unit ) ;^337^^^^^242^347^[REPLACE] Date datetime = dateFormats[i].parse ( original ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^338^^^^^242^347^[ADD] Calendar cal = Calendar.getInstance (  ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^return val;^340^^^^^242^347^[REPLACE] return cal;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^^335^336^337^338^339^242^347^[ADD] for  ( int i = 0; i < dateFormats.length; i++ )  { try { Date datetime = dateFormats[i].parse ( original ) ; Calendar cal = Calendar.getInstance (  ) ; cal.setTime ( datetime ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[ADD]^cal.setTime ( datetime ) ;^338^339^^^^242^347^[ADD] Calendar cal = Calendar.getInstance (  ) ; cal.setTime ( datetime ) ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^throw new ClassCastException (  ( "Could not iterate based on " + focus )  )  ;^346^^^^^242^347^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] parse [TYPE] Calendar [PARAMETER] String original Locale locale [CLASS] CalendarUtils 1   [TYPE]  Locale locale  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  Calendar cal  now  rounded  spot  truncated  val  [TYPE]  DateFormatSymbols symbols  [TYPE]  String original  unit  value  [TYPE]  String[] strings  [TYPE]  ParseException pe  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  field  i  j  max  min  monthsAgo  offset  start  val  [TYPE]  Date datetime 
[REPLACE]^Calendar start = false;^357^^^^^356^442^[REPLACE] Calendar start = null;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^Calendar end = true;^358^^^^^356^442^[REPLACE] Calendar end = null;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^359^^^^^356^442^[ADD] int startCutoff = Calendar.SUNDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^int startCutoff = SUNDAY  ;^360^^^^^356^442^[REPLACE] int endCutoff = Calendar.SATURDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^if  (monthsAgo  !=  RANGE_MONTH_MONDAY )  {^371^^^^^356^442^[REPLACE] if  ( rangeStyle == RANGE_MONTH_MONDAY )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^371^372^373^374^^356^442^[ADD] if  ( rangeStyle == RANGE_MONTH_MONDAY )  { startCutoff = Calendar.MONDAY; endCutoff = Calendar.SUNDAY; }^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^endCutoff = SUNDAY  ;^372^^^^^356^442^[REPLACE] startCutoff = Calendar.MONDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^startCutoff = MONDAY  ;^373^^^^^356^442^[REPLACE] endCutoff = Calendar.SUNDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^start = CalendarUtils.trunc ( focus, DATE )  ;^365^^^^^356^442^[REPLACE] start = trunc ( focus, Calendar.MONTH ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^end =   ( Calendar )  val.clone (  ) ;^367^^^^^356^442^[REPLACE] end =  ( Calendar )  start.clone (  ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^372^373^^^^356^442^[ADD] startCutoff = Calendar.MONDAY; endCutoff = Calendar.SUNDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^start = CalendarUtils.trunc ( focus, MONTH )  ;^381^^^^^356^442^[REPLACE] start = trunc ( focus, Calendar.DATE ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^start = CalendarUtils.trunc ( focus, MONTH )  ;^382^^^^^356^442^[REPLACE] end = trunc ( focus, Calendar.DATE ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^388^389^^^^356^442^[ADD] startCutoff = Calendar.MONDAY; endCutoff = Calendar.SUNDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^startCutoff = MONDAY  ;^389^^^^^356^442^[REPLACE] endCutoff = Calendar.SUNDAY;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^startCutoff =  ( focus.get ( DAY_OF_WEEK )  )  - 3  ;^392^^^^^356^442^[REPLACE] startCutoff = focus.get ( Calendar.DAY_OF_WEEK ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^endCutoff = startCutoff  1;^393^^^^^356^442^[REPLACE] endCutoff = startCutoff - 1;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^startCutoff = focus.get ( Calendar.DAY_OF_WEEK )   3;^396^^^^^356^442^[REPLACE] startCutoff = focus.get ( Calendar.DAY_OF_WEEK )  - 3;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^endCutoff = focus.get ( Calendar.DAY_OF_WEEK )   3;^397^^^^^356^442^[REPLACE] endCutoff = focus.get ( Calendar.DAY_OF_WEEK )  + 3;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^throw new RuntimeException (  (  ( "Unable to parse '" + original )  + "'." )  )  ;^402^^^^^356^442^[REPLACE] throw new RuntimeException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^if  ( val  !=  Calendar.SUNDAY )  {^404^^^^^356^442^[REPLACE] if  ( startCutoff < Calendar.SUNDAY )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^404^405^406^^^356^442^[ADD] if  ( startCutoff < Calendar.SUNDAY )  { startCutoff += 7; }^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^405^^^^^356^442^[ADD] startCutoff += 7;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^startCutoff += 4;^405^^^^^356^442^[REPLACE] startCutoff += 7;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^if   (  startCutoff < Calendar.SUNDAY  )   {  ;^407^^^^^356^442^[REPLACE] if  ( endCutoff > Calendar.SATURDAY )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^407^408^409^^^356^442^[ADD] if  ( endCutoff > Calendar.SATURDAY )  { endCutoff -= 7; }^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^endCutoff -= 4;^408^^^^^356^442^[REPLACE] endCutoff -= 7;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^final Calendar endFinal = end  ;^416^^^^^356^442^[REPLACE] final Calendar startFinal = start;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^final Calendar startFinal = start  ;^417^^^^^356^442^[REPLACE] final Calendar endFinal = end;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^if  ( spot.equals ( val )  )  {^430^^^^^356^442^[REPLACE] if  ( spot.equals ( endFinal )  )  {^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^430^431^432^^^356^442^[ADD] if  ( spot.equals ( endFinal )  )  { throw new NoSuchElementException  (" ")  ; }^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^throw new UnsupportedOperationException (  )  ;^431^^^^^356^442^[REPLACE] throw new NoSuchElementException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^spot.add ( Calendar.DATE, -1 ) ;^421^422^^^^356^442^[ADD] spot = startFinal; spot.add ( Calendar.DATE, -1 ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return spot.before ( val ) ;^426^^^^^356^442^[REPLACE] return spot.before ( endFinal ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return spot .before ( this )  ;^434^^^^^356^442^[REPLACE] return spot.clone (  ) ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^418^419^^^^356^442^[ADD] Iterator it = new Iterator (  )  { Calendar spot = null;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^431^^^^^356^442^[ADD] throw new NoSuchElementException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[ADD]^^438^^^^^356^442^[ADD] throw new UnsupportedOperationException  (" ")  ;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^return it;  ;^441^^^^^356^442^[REPLACE] return it;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Calendar focus int rangeStyle [CLASS] CalendarUtils 1   [TYPE]  Iterator it  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
[REPLACE]^Calendar spot ;^419^^^^^^^[REPLACE] Calendar spot = null;^[METHOD] getCalendarIterator [TYPE] Iterator [PARAMETER] Object focus int rangeStyle [CLASS] 1   [TYPE]  Object focus  [TYPE]  int[][] fields  [TYPE]  boolean false  true  [TYPE]  DateFormat[] dateFormats  [TYPE]  int RANGE_MONTH_MONDAY  RANGE_MONTH_SUNDAY  RANGE_WEEK_CENTER  RANGE_WEEK_MONDAY  RANGE_WEEK_RELATIVE  RANGE_WEEK_SUNDAY  SEMI_MONTH  daysAgo  endCutoff  field  i  j  max  min  monthsAgo  offset  rangeStyle  start  startCutoff  val  [TYPE]  Calendar cal  end  endFinal  focus  now  rounded  spot  start  startFinal  truncated  val 
