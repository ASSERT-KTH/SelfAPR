[ADD]^DateFormatter.parseCVS ( null ) ;fail (  ) ;^41^42^43^44^^40^239^[ADD] try { DateFormatter.parseCVS ( null ) ; fail (  ) ; } catch  ( IllegalArgumentException ex )  {}^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^DateFormatter.parseCVS ( this ) ;^42^^^^^40^239^[REPLACE] DateFormatter.parseCVS ( null ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^42^^^^^40^239^[ADD] DateFormatter.parseCVS ( null ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^43^^^^^40^239^[REPLACE] fail (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^DateFormatter.parseCVS ( "gobbledegook" ) ;fail (  ) ;^45^46^47^48^^40^239^[ADD] try { DateFormatter.parseCVS ( "gobbledegook" ) ; fail (  ) ; } catch  ( IllegalArgumentException ex )  {}^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^"gobbledegook"   ;^46^^^^^40^239^[REPLACE] DateFormatter.parseCVS ( "gobbledegook" ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^47^^^^^40^239^[REPLACE] fail (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^48^49^50^^^40^239^[ADD] catch  ( IllegalArgumentException ex )  {} try { DateFormatter.parseCVS ( "ago" ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^DateFormatter.parseCVS ( "ago" ) ;fail (  ) ;^49^50^51^52^^40^239^[ADD] try { DateFormatter.parseCVS ( "ago" ) ; fail (  ) ; } catch  ( IllegalArgumentException ex )  {}^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^"ago"   ;^50^^^^^40^239^[REPLACE] DateFormatter.parseCVS ( "ago" ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^51^^^^^40^239^[REPLACE] fail (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^DateFormatter.parseCVS ( "1 junk ago" ) ;fail (  ) ;^53^54^55^56^^40^239^[ADD] try { DateFormatter.parseCVS ( "1 junk ago" ) ; fail (  ) ; } catch  ( IllegalArgumentException ex )  {}^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^"1 junk ago"   ;^54^^^^^40^239^[REPLACE] DateFormatter.parseCVS ( "1 junk ago" ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^55^^^^^40^239^[REPLACE] fail (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^DateFormatter.parseCVS ( "1month ago" ) ;fail (  ) ;^57^58^59^60^^40^239^[ADD] try { DateFormatter.parseCVS ( "1month ago" ) ; fail (  ) ; } catch  ( IllegalArgumentException ex )  {}^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^"1month ago"   ;^58^^^^^40^239^[REPLACE] DateFormatter.parseCVS ( "1month ago" ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^59^^^^^40^239^[REPLACE] fail (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^DateFormatter.parseCVS ( "last month" ) ;fail (  ) ;^61^62^63^64^^40^239^[ADD] try { DateFormatter.parseCVS ( "last month" ) ; fail (  ) ; } catch  ( IllegalArgumentException ex )  {}^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^"last month"   ;^62^^^^^40^239^[REPLACE] DateFormatter.parseCVS ( "last month" ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^63^^^^^40^239^[REPLACE] fail (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^64^65^66^^^40^239^[ADD] catch  ( IllegalArgumentException ex )  {}^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^Calendar now = false;^73^^^^^40^239^[REPLACE] Calendar now = null;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^76^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.set ( Calendar.MILLISECOND, 3 ) ;^77^^^^^40^239^[REPLACE] now.set ( Calendar.MILLISECOND, 0 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getInstance (  )  )  ) , 50 ) ;^78^79^^^^40^239^[REPLACE] assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^78^79^^81^82^40^239^[ADD] assertEquals ( "parseCVS format M/dd/yy H:mm:ss z", now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ; now = Calendar.getInstance (  ) ; now.set ( Calendar.MILLISECOND, 0 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   new SimpleDateFormat ( "M/dd/yy H:mm:ss z" )   )  ) , 50 ) ;^79^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .parse ( now.getTime (  )  )  ) , 50 ) ;^79^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getInstance (  )  )  ) , 50 ) ;^79^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^79^80^81^82^83^40^239^[ADD] now, DateFormatter.parseCVS ( new SimpleDateFormat ( "M/dd/yy H:mm:ss z" ) .format ( now.getTime (  )  )  ) , 50 ) ;  now = Calendar.getInstance (  ) ; now.set ( Calendar.MILLISECOND, 0 ) ; now.set ( Calendar.SECOND, 0 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^81^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.MILLISECOND, 0 + 1 ) ;^82^^^^^40^239^[REPLACE] now.set ( Calendar.MILLISECOND, 0 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.SECOND, 4 ) ;^83^^^^^40^239^[REPLACE] now.set ( Calendar.SECOND, 0 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now .setTime ( true )   )  ) , 50 ) ;^85^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getInstance (  )  )  ) , 50 ) ;^85^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now .setTime ( this )   )  ) , 50 ) ;^85^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( new SimpleDateFormat ( "MMM d, yyyy h:mm a" ) .format ( now.getTime (  )  )  ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  = null ;^93^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .format ( "16:30 GMT" )  ) ;^94^^^^^40^239^[REPLACE] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REMOVE]^now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^94^^^^^40^239^[REMOVE] ^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.setTime ( new SimpleDateFormat ( "h:mm z" )  .format ( null )   ) ;^94^^^^^40^239^[REPLACE] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "16:30 GMT"   , 50 ) ;^96^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "16:30 GMT" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^97^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .format ( "16:30 EST" )  ) ;^98^^^^^40^239^[REPLACE] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 EST" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "16:30 EST"   , 50 ) ;^100^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "16:30 EST" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^101^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .format ( "16:30 GMT-05:00" )  ) ;^102^^^^^40^239^[REPLACE] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT-05:00" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^102^^^^^40^239^[ADD] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT-05:00" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "16:30 GMT-05:00"   , 50 ) ;^104^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "16:30 GMT-05:00" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^105^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^105^106^^^^40^239^[ADD] now = Calendar.getInstance (  ) ; now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now .getTime (  )   ) ;^106^^^^^40^239^[REPLACE] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^106^^^^^40^239^[ADD] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .format ( "16:30 GMT+01:00" )  ) ;^106^^^^^40^239^[REPLACE] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "16:30 GMT+01:00" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "16:30 GMT+01:00"   , 50 ) ;^108^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^108^^^^^40^239^[ADD] now, DateFormatter.parseCVS ( "16:30 GMT+01:00" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  = null ;^110^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .format ( "06:30 GMT" )  ) ;^111^^^^^40^239^[REPLACE] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^111^^^^^40^239^[ADD] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "06:30 GMT"   , 50 ) ;^113^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "06:30 GMT" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^114^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^114^115^^^^40^239^[ADD] now = Calendar.getInstance (  ) ; now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 EST" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .format ( "06:30 EST" )  ) ;^115^^^^^40^239^[REPLACE] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 EST" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "06:30 EST"   , 50 ) ;^117^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^now = Calendar.getInstance (  ) ;^117^118^^^^40^239^[ADD] now, DateFormatter.parseCVS ( "06:30 EST" ) , 50 ) ; now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^118^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^118^119^^^^40^239^[ADD] now = Calendar.getInstance (  ) ; now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .format ( "06:30 GMT-05:00" )  ) ;^119^^^^^40^239^[REPLACE] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^119^^^^^40^239^[ADD] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT-05:00" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "06:30 GMT-05:00"   , 50 ) ;^121^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^121^^^^^40^239^[ADD] now, DateFormatter.parseCVS ( "06:30 GMT-05:00" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^122^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^122^123^^^^40^239^[ADD] now = Calendar.getInstance (  ) ; now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.setTime ( new SimpleDateFormat ( "h:mm z" ) .format ( "06:30 GMT+01:00" )  ) ;^123^^^^^40^239^[REPLACE] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^123^^^^^40^239^[ADD] now.setTime ( new SimpleDateFormat ( "h:mm z" ) .parse ( "06:30 GMT+01:00" )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "06:30 GMT+01:00"   , 50 ) ;^125^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^125^^^^^40^239^[ADD] now, DateFormatter.parseCVS ( "06:30 GMT+01:00" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  = null ;^127^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.set ( Calendar.WEEK_OF_MONTH, -1 >>> 0 ) ;^128^^^^^40^239^[REPLACE] now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "a week ago"   , 50 ) ;^130^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "a week ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now ;^131^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.WEEK_OF_MONTH, -4 ) ;^132^^^^^40^239^[REPLACE] now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^132^^^^^40^239^[ADD] now.add ( Calendar.WEEK_OF_MONTH, -1 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "an week ago"   , 50 ) ;^134^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "an week ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^136^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.DAY_OF_MONTH, -11 ) ;^137^^^^^40^239^[REPLACE] now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^137^^^^^40^239^[ADD] now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "1 fortnight ago"   , 50 ) ;^139^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "1 fortnight ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^140^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.set ( Calendar.DAY_OF_MONTH, -14L ) ;^141^^^^^40^239^[REPLACE] now.add ( Calendar.DAY_OF_MONTH, -14 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "1 fortnights ago"   , 50 ) ;^143^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "1 fortnights ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  = null ;^145^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^145^^^^^40^239^[ADD] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.MINUTE, -1 - 2 ) ;^146^^^^^40^239^[REPLACE] now.add ( Calendar.MINUTE, -1 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "1 minute ago"   , 50 ) ;^148^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "1 minute ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  = null ;^149^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.set ( Calendar.MINUTE, -8L ) ;^150^^^^^40^239^[REPLACE] now.add ( Calendar.MINUTE, -8 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "8 minutes ago"   , 50 ) ;^152^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^152^^^^^40^239^[ADD] now, DateFormatter.parseCVS ( "8 minutes ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^154^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.MILLISECOND, -1 >> 2 ) ;^155^^^^^40^239^[REPLACE] now.add ( Calendar.MILLISECOND, -1 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "1 millisecond ago"   , 50 ) ;^157^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^157^158^^^^40^239^[ADD] now, DateFormatter.parseCVS ( "1 millisecond ago" ) , 50 ) ; now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  = null ;^158^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.MILLISECOND, -100 + 0 ) ;^159^^^^^40^239^[REPLACE] now.add ( Calendar.MILLISECOND, -100 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "100 milliseconds ago"   , 50 ) ;^161^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^161^^^^^40^239^[ADD] now, DateFormatter.parseCVS ( "100 milliseconds ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now ;^162^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^162^163^^^^40^239^[ADD] now = Calendar.getInstance (  ) ; now.add ( Calendar.SECOND, -30 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.SECOND, -2 ) ;^163^^^^^40^239^[REPLACE] now.add ( Calendar.SECOND, -30 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "30 second ago"   , 50 ) ;^165^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "30 second ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now ;^166^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now .getInstance (  )  ;^167^^^^^40^239^[REPLACE] now.add ( Calendar.SECOND, -30 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "30 seconds ago"   , 50 ) ;^169^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "30 seconds ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  = null ;^170^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.HOUR, -3 ) ;^171^^^^^40^239^[REPLACE] now.add ( Calendar.HOUR, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "2 hour ago"   , 50 ) ;^173^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "2 hour ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^174^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.HOUR, -2L ) ;^175^^^^^40^239^[REPLACE] now.add ( Calendar.HOUR, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^175^^^^^40^239^[ADD] now.add ( Calendar.HOUR, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "2 hours ago"   , 50 ) ;^177^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "2 hours ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now ;^178^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.DAY_OF_MONTH, -4 ) ;^179^^^^^40^239^[REPLACE] now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "2 day ago"   , 50 ) ;^181^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^181^^^^^40^239^[ADD] now, DateFormatter.parseCVS ( "2 day ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now ;^182^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^182^183^^^^40^239^[ADD] now = Calendar.getInstance (  ) ; now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.DAY_OF_MONTH, -0 ) ;^183^^^^^40^239^[REPLACE] now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^183^^^^^40^239^[ADD] now.add ( Calendar.DAY_OF_MONTH, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "2 days ago"   , 50 ) ;^185^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "2 days ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^186^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.set ( Calendar.MONTH, -2 / 4 ) ;^187^^^^^40^239^[REPLACE] now.add ( Calendar.MONTH, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "2 month ago"   , 50 ) ;^189^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^189^190^^^^40^239^[ADD] now, DateFormatter.parseCVS ( "2 month ago" ) , 50 ) ; now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  = null ;^190^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.MONTH, -2 / 4 ) ;^191^^^^^40^239^[REPLACE] now.add ( Calendar.MONTH, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^191^^^^^40^239^[ADD] now.add ( Calendar.MONTH, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "2 months ago"   , 50 ) ;^193^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "2 months ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^194^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^194^195^^^^40^239^[ADD] now = Calendar.getInstance (  ) ; now.add ( Calendar.YEAR, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.YEAR, -2 - 2 ) ;^195^^^^^40^239^[REPLACE] now.add ( Calendar.YEAR, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "2 year ago"   , 50 ) ;^197^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "2 year ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^198^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^now.add ( Calendar.YEAR, -2 ) ;^198^199^^^^40^239^[ADD] now = Calendar.getInstance (  ) ; now.add ( Calendar.YEAR, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.YEAR, -1 ) ;^199^^^^^40^239^[REPLACE] now.add ( Calendar.YEAR, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^199^^^^^40^239^[ADD] now.add ( Calendar.YEAR, -2 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "2 years ago"   , 50 ) ;^201^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "2 years ago" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  = null ;^203^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^now.add ( Calendar.DATE, -1 ) ;^203^204^^^^40^239^[ADD] now = Calendar.getInstance (  ) ; now.add ( Calendar.DATE, -1 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now .getInstance (  )  ;^204^^^^^40^239^[REPLACE] now.add ( Calendar.DATE, -1 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "yesterday"   , 50 ) ;^206^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "yesterday" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^208^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.set ( Calendar.DATE, 4 ) ;^209^^^^^40^239^[REPLACE] now.add ( Calendar.DATE, 1 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "tomorrow"   , 50 ) ;^211^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "tomorrow" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now  =  now ;^213^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if  ( now.get ( Calendar.DAY_OF_WEEK )   &&  1 )  {^215^^^^^40^239^[REPLACE] if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  {^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^215^216^217^218^219^40^239^[ADD] if  ( now.get ( Calendar.DAY_OF_WEEK )  == 1 )  {  now.add ( Calendar.DATE, -7 ) ; } else { now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.DATE,false - now.get ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^215^220^[REPLACE] now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.DATE, 1 - now.setTime ( Calendar.DAY_OF_WEEK )  ) ;^219^^^^^215^220^[REPLACE] now.add ( Calendar.DATE, 1 - now.get ( Calendar.DAY_OF_WEEK )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.DATE, -0 ) ;^217^^^^^40^239^[REPLACE] now.add ( Calendar.DATE, -7 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "last Sunday"   , 50 ) ;^222^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^222^^^^^40^239^[ADD] now, DateFormatter.parseCVS ( "last Sunday" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now ;^224^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^224^^^^^40^239^[ADD] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.set ( Calendar.DATE, -8 ) ;^225^^^^^40^239^[REPLACE] now.add ( Calendar.DATE, -7 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "last week"   , 50 ) ;^227^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^227^^^^^40^239^[ADD] now, DateFormatter.parseCVS ( "last week" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now ;^229^^^^^40^239^[REPLACE] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^229^^^^^40^239^[ADD] now = Calendar.getInstance (  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if  ( now.get ( Calendar.MONTH )   !=  1 )  {^231^^^^^40^239^[REPLACE] if  ( now.get ( Calendar.MONTH )  == 0 )  {^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.MONTH, 0 + 2  >  now.get ( Calendar.MONTH )  ) ;^235^^^^^231^236^[REPLACE] now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.MONTH, 0 - now .set ( this , this )   ) ;^235^^^^^231^236^[REPLACE] now.add ( Calendar.MONTH, 0 - now.get ( Calendar.MONTH )  ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now.add ( Calendar.MONTH, -12 - 3 ) ;^233^^^^^40^239^[REPLACE] now.add ( Calendar.MONTH, -12 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^now,   "last January"   , 50 ) ;^238^^^^^40^239^[REPLACE] now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[ADD]^^238^^^^^40^239^[ADD] now, DateFormatter.parseCVS ( "last January" ) , 50 ) ;^[METHOD] testParseCVS [TYPE] void [PARAMETER] [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar now  [TYPE]  IllegalArgumentException ex 
[REPLACE]^if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )   !=  delta )  {^246^^^^^245^250^[REPLACE] if  ( Math.abs ( cal1.getTime (  ) .getTime (  )  - cal2.getTime (  ) .getTime (  )  )  > delta )  {^[METHOD] assertEquals [TYPE] void [PARAMETER] String message Calendar cal1 Calendar cal2 long delta [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar cal1  cal2  [TYPE]  String message  [TYPE]  long delta 
[REPLACE]^return ;^247^248^^^^245^250^[REPLACE] throw new AssertionFailedError ( message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[METHOD] assertEquals [TYPE] void [PARAMETER] String message Calendar cal1 Calendar cal2 long delta [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar cal1  cal2  [TYPE]  String message  [TYPE]  long delta 
[REPLACE]^message + " expected " + cal2.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^248^^^^^245^250^[REPLACE] message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[METHOD] assertEquals [TYPE] void [PARAMETER] String message Calendar cal1 Calendar cal2 long delta [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar cal1  cal2  [TYPE]  String message  [TYPE]  long delta 
[ADD]^^248^^^^^245^250^[ADD] message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[METHOD] assertEquals [TYPE] void [PARAMETER] String message Calendar cal1 Calendar cal2 long delta [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar cal1  cal2  [TYPE]  String message  [TYPE]  long delta 
[REPLACE]^message + " expected " + cal1.get (  )  + " but got " + cal2.getTime (  )  ) ;^248^^^^^245^250^[REPLACE] message + " expected " + cal1.getTime (  )  + " but got " + cal2.getTime (  )  ) ;^[METHOD] assertEquals [TYPE] void [PARAMETER] String message Calendar cal1 Calendar cal2 long delta [CLASS] DateFormatterTest   [TYPE]  boolean false  true  [TYPE]  Calendar cal1  cal2  [TYPE]  String message  [TYPE]  long delta 
