[REPLACE]^private boolean isEquals ;^92^^^^^^^[REPLACE] private boolean isEquals = true;^ [CLASS] EqualsBuilder  
[REPLACE]^if  ( lhs  &&  rhs )  {^255^^^^^254^300^[REPLACE] if  ( lhs == rhs )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^return true;^255^256^257^^^254^300^[ADD] if  ( lhs == rhs )  { return true; }^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;  ;^256^^^^^254^300^[REPLACE] return true;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return false;^256^^^^^254^300^[REPLACE] return true;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( lhs != null ) {^258^^^^^254^300^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;^259^^^^^254^300^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^265^^^^^254^300^[ADD] Class lhsClass = lhs.getClass (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^Class lhsClass = rhs.getClass (  ) ;^266^^^^^254^300^[REPLACE] Class rhsClass = rhs.getClass (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^EqualsBuilder equalsBuilder = new EqualsBuilder (  )  ;^267^^^^^254^300^[REPLACE] Class testClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if   (  !rhsClass.isInstance  (  lhs  )    )   {  ;^268^^^^^254^300^[REPLACE] if  ( lhsClass.isInstance ( rhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^} else if  ( lhsClass.isInstance ( lhs )  )  {^274^^^^^254^300^[REPLACE] } else if  ( rhsClass.isInstance ( lhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^}   testClass = rhsClass;testClass = lhsClass;^274^275^276^^278^254^300^[ADD] else if  ( rhsClass.isInstance ( lhs )  )  { testClass = rhsClass; if  ( !lhsClass.isInstance ( rhs )  )  { testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;^282^^^^^274^283^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( !lhsClass.isInstance ( lhs )  )  {^276^^^^^254^300^[REPLACE] if  ( !lhsClass.isInstance ( rhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass = rhsClass  ;^278^^^^^254^300^[REPLACE] testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass = lhsClass  ;^275^^^^^254^300^[REPLACE] testClass = rhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if   (  lhsClass.isInstance  (  rhs  )    )   {  ;^276^^^^^254^300^[REPLACE] if  ( !lhsClass.isInstance ( rhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^276^277^278^279^^254^300^[ADD] if  ( !lhsClass.isInstance ( rhs )  )  {  testClass = lhsClass; }^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;^282^^^^^254^300^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( !rhsClass .isArray (  )   )  {^270^^^^^254^300^[REPLACE] if  ( !rhsClass.isInstance ( lhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass = lhsClass  ;^272^^^^^254^300^[REPLACE] testClass = rhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass = rhsClass  ;^269^^^^^254^300^[REPLACE] testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^if  ( !rhsClass.isInstance ( rhs )  )  {^270^^^^^254^300^[REPLACE] if  ( !rhsClass.isInstance ( lhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^272^^^^^254^300^[ADD] testClass = rhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^}  if  ( lhsClass.isInstance ( lhs )  )  {^274^^^^^254^300^[REPLACE] } else if  ( rhsClass.isInstance ( lhs )  )  {^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^}   testClass = lhsClass;^274^275^276^^278^254^300^[ADD] else if  ( rhsClass.isInstance ( lhs )  )  { testClass = rhsClass; if  ( !lhsClass.isInstance ( rhs )  )  { testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return false;  ;^282^^^^^274^283^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^278^^^^^254^300^[ADD] testClass = lhsClass;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return false;  ;^282^^^^^254^300^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^Class lhsClass = lhs.getClass (  )  ;^284^^^^^254^300^[REPLACE] EqualsBuilder equalsBuilder = new EqualsBuilder (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;testClass = testClass.getSuperclass (  ) ;reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^285^286^287^288^289^254^300^[ADD] try { reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ; while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  { testClass = testClass.getSuperclass (  ) ; reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass =  null.getSuperclass (  ) ;^288^^^^^254^300^[REPLACE] testClass = testClass.getSuperclass (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^testClass =  rhsClass.getSuperclass (  ) ;^288^^^^^254^300^[REPLACE] testClass = testClass.getSuperclass (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return true;^297^^^^^254^300^[REPLACE] return false;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[REPLACE]^return equalsBuilder .setEquals ( true )  ;^299^^^^^254^300^[REPLACE] return equalsBuilder.isEquals (  ) ;^[METHOD] reflectionEquals [TYPE] boolean [PARAMETER] Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  reflectUpToClass  rhsClass  testClass  [TYPE]  EqualsBuilder equalsBuilder  [TYPE]  boolean false  isEquals  testTransients  true  [TYPE]  String[] excludeFields  [TYPE]  IllegalArgumentException e 
[ADD]^^320^^^^^319^338^[ADD] Field[] fields = clazz.getDeclaredFields (  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^List excludedFieldList  =  Collections.EMPTY_LIST;^321^^^^^319^338^[REPLACE] List excludedFieldList = excludeFields != null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^AccessibleObject.setAccessible ( fields, false ) ;^322^^^^^319^338^[REPLACE] AccessibleObject.setAccessible ( fields, true ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^322^^^^^319^338^[ADD] AccessibleObject.setAccessible ( fields, true ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^if  ( excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( true ) {^325^326^327^328^^319^338^[REPLACE] if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^329^330^331^^333^325^336^[ADD] try { builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ; } catch  ( IllegalAccessException e )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^334^^^^^325^336^[ADD] throw new InternalError ( "Unexpected IllegalAccessException" ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^331^332^333^^^325^336^[ADD] catch  ( IllegalAccessException e )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^329^330^331^^333^319^338^[ADD] try { builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ; } catch  ( IllegalAccessException e )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.append ( f.get ( lhs ) , f.get ( lhs )  ) ;^330^^^^^319^338^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[ADD]^^330^^^^^319^338^[ADD] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.append ( f.get ( rhs ) , f.get ( rhs )  ) ;^330^^^^^319^338^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^for  ( int i = 0 ; i < fields.length && builder.isEquals; i++ )  {^323^^^^^319^338^[REPLACE] for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^EqualsBuilder equalsBuilder = new EqualsBuilder (  )  ;^324^^^^^319^338^[REPLACE] Field f = fields[i];^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^return ;^334^^^^^319^338^[REPLACE] throw new InternalError ( "Unexpected IllegalAccessException" ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [CLASS] EqualsBuilder   [TYPE]  Field f  [TYPE]  boolean false  isEquals  testTransients  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  EqualsBuilder builder  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  Field[] fields  [TYPE]  int i  [TYPE]  IllegalAccessException e 
[REPLACE]^if  ( isEquals  != useTransients )  {^368^^^^^367^409^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^369^^^^^367^409^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  ||  rhs )  {^371^^^^^367^409^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^372^^^^^367^409^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null ) {^374^^^^^367^409^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return this;  ;^376^^^^^367^409^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^376^^^^^367^409^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^Class rhsClass = rhs.getClass (  )  ;^378^^^^^367^409^[REPLACE] Class lhsClass = lhs.getClass (  ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhsClass.isArray (  )  )  {^379^^^^^367^409^[REPLACE] if  ( !lhsClass.isArray (  )  )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( lhs.getClass (  )   ==  rhs.getClass (  )  )  {^382^^^^^367^409^[REPLACE] } else if  ( lhs.getClass (  )  != rhs.getClass (  )  )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   this.setEquals ( false ) ;^382^383^384^385^^367^409^[ADD] else if  ( lhs.getClass (  )  != rhs.getClass (  )  )  {  this.setEquals ( false ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^else if  ( ! lhs instanceof long[] )  {^388^^^^^367^409^[REPLACE] else if  ( lhs instanceof long[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof int[] )  {^390^^^^^367^409^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof short[] )  {^392^^^^^367^409^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( short[] )  lhs,  ( short[] )  rhs ) ;append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^392^393^394^395^^367^409^[ADD] else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ; } else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if   (  lhs instanceof boolean[]  )   {  ;^394^^^^^367^409^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^394^395^396^397^^367^409^[ADD] else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ; } else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof byte[] )  {^396^^^^^367^409^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof double[] )  {^398^^^^^367^409^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^398^399^400^401^^367^409^[ADD] else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ; } else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^400^^^^^367^409^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof boolean[] )  {^402^^^^^367^409^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^( rhsClass.isInstance ( lhs )  )  ;^406^^^^^402^407^[REPLACE] append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  )  ;^403^^^^^367^409^[REPLACE] append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append ( doubleToLongBits ( lhs ) , doubleToLongBits ( rhs )  )  ;^403^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  )  ;^401^^^^^367^409^[REPLACE] append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^402^^^^^367^409^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^406^^^^^402^407^[ADD] append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  )  ;^399^^^^^367^409^[REPLACE] append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^399^^^^^367^409^[ADD] append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof float[] )  {^400^^^^^367^409^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^403^^^^^367^409^[ADD] append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  (  ( short[] )   ( lhs )  ) ,  (  ( short[] )   ( rhs )  )  )  ;^397^^^^^367^409^[REPLACE] append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^397^^^^^367^409^[ADD] append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof double[] )  {^398^^^^^367^409^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof float[] )  {^400^^^^^367^409^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( float[] )  lhs,  ( float[] )  rhs ) ;append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^400^401^402^403^^367^409^[ADD] else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ; } else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof boolean[] )  {^402^^^^^367^409^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^402^403^404^^406^367^409^[ADD] else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ; } else { append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if   (  lhs instanceof boolean[]  )   {  ;^400^^^^^367^409^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^401^^^^^367^409^[ADD] append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  )  ;^395^^^^^367^409^[REPLACE] append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^402^403^404^^406^367^409^[ADD] else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ; } else { append (  ( Object[] )  lhs,  ( Object[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append ( doubleToLongBits ( lhs ) , doubleToLongBits ( rhs )  )  ;^399^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  )  )  ;^397^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^398^^^^^367^409^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if   (  lhs instanceof byte[]  )   {  ;^402^^^^^367^409^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  )  ;^393^^^^^367^409^[REPLACE] append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof char[] )  {^394^^^^^367^409^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof boolean[] )  {^402^^^^^367^409^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^400^401^402^403^^367^409^[ADD] else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ; } else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if   (  lhs instanceof boolean[]  )   {  ;^396^^^^^367^409^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof double[] )  {^398^^^^^367^409^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof float[] )  {^400^^^^^367^409^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  )  )  ;^401^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( double[] )  lhs,  ( double[] )  rhs ) ;append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^398^399^400^401^^367^409^[ADD] else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ; } else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  )  ;^391^^^^^367^409^[REPLACE] append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^392^^^^^367^409^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^394^^^^^367^409^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^396^^^^^367^409^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof float[] )  {^400^^^^^367^409^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append ( doubleToLongBits ( lhs ) , doubleToLongBits ( rhs )  )  ;^406^^^^^402^407^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  )  )  ;^395^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if   (  lhs instanceof boolean[]  )   {  ;^398^^^^^367^409^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^393^^^^^367^409^[ADD] append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( char[] )  lhs,  ( char[] )  rhs ) ;append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^394^395^396^397^^367^409^[ADD] else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ; } else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^395^^^^^367^409^[ADD] append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof byte[] )  {^396^^^^^367^409^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^396^397^398^399^^367^409^[ADD] else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ; } else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  )  ;^389^^^^^367^409^[REPLACE] append (  ( long[] )  lhs,  ( long[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^390^^^^^367^409^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof short[] )  {^392^^^^^367^409^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof char[] )  {^394^^^^^367^409^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^396^397^398^399^^367^409^[ADD] else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ; } else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof boolean[] )  {^402^^^^^367^409^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^391^^^^^367^409^[ADD] append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof short[] )  {^392^^^^^367^409^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof char[] )  {^394^^^^^367^409^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof double[] )  {^398^^^^^367^409^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^this.setEquals ( true ) ;^384^^^^^367^409^[REPLACE] this.setEquals ( false ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^else {^388^^^^^367^409^[REPLACE] else if  ( lhs instanceof long[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^^388^389^390^391^^367^409^[ADD] else if  ( lhs instanceof long[] )  { append (  ( long[] )  lhs,  ( long[] )  rhs ) ; } else if  ( lhs instanceof int[] )  { append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof int[] )  {^390^^^^^367^409^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! rhs instanceof byte[] )  {^396^^^^^367^409^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  )  )  ;^391^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! rhs instanceof byte[] )  {^396^^^^^367^409^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REMOVE]^append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  )  )  ;^393^^^^^367^409^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals = lhs == rhs  ;^381^^^^^367^409^[REPLACE] isEquals = lhs.equals ( rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  else {^382^^^^^367^409^[REPLACE] } else if  ( lhs.getClass (  )  != rhs.getClass (  )  )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^append (  ( long[] )  lhs,  ( long[] )  rhs ) ;append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^388^389^390^391^^367^409^[ADD] else if  ( lhs instanceof long[] )  { append (  ( long[] )  lhs,  ( long[] )  rhs ) ; } else if  ( lhs instanceof int[] )  { append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^}  if  ( ! lhs instanceof int[] )  {^390^^^^^367^409^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if   (  lhs instanceof boolean[]  )   {  ;^392^^^^^367^409^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^} else if  ( ! lhs instanceof short[] )  {^392^^^^^367^409^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^392^393^394^395^^367^409^[ADD] else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ; } else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[ADD]^}   append (  ( int[] )  lhs,  ( int[] )  rhs ) ;append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^390^391^392^393^^367^409^[ADD] else if  ( lhs instanceof int[] )  { append (  ( int[] )  lhs,  ( int[] )  rhs ) ; } else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^isEquals =  null.equals ( rhs ) ;^381^^^^^367^409^[REPLACE] isEquals = lhs.equals ( rhs ) ;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^return this;  ;^408^^^^^367^409^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object lhs Object rhs [CLASS] EqualsBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClass  [TYPE]  boolean false  isEquals  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  !=  true )  {^556^^^^^555^574^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^556^557^558^^^555^574^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return this;  ;^557^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^557^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  ) {^559^^^^^555^574^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^560^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null ||true )  {^562^^^^^555^574^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^this.setEquals ( false ) ;return this;^562^563^564^565^^555^574^[ADD] if  ( lhs == null || rhs == null )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^564^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return this;  ;^564^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length + 2 != rhs.length + 2 )  {^566^^^^^555^574^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return this;  ;^568^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^568^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^570^^^^^555^574^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^573^^^^^555^574^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] Object[] lhs Object[] rhs [CLASS] EqualsBuilder   [TYPE]  Object[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  &&  false )  {^587^^^^^586^605^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^588^^^^^586^605^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  &&  rhs )  {^590^^^^^586^605^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^return this;^590^591^592^^^586^605^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^591^^^^^586^605^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null || rhs == null )  {^593^^^^^586^605^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^this.setEquals ( false ) ;return this;^593^594^595^596^^586^605^[ADD] if  ( lhs == null || rhs == null )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^595^^^^^586^605^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length (  )  != rhs.length (  )  )  {^597^^^^^586^605^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^597^598^599^600^^586^605^[ADD] if  ( lhs.length != rhs.length )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^599^^^^^586^605^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^601^^^^^586^605^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^604^^^^^586^605^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] EqualsBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  !=  false )  {^618^^^^^617^636^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^619^^^^^617^636^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return this;  ;^619^^^^^617^636^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  ||  rhs )  {^621^^^^^617^636^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^622^^^^^617^636^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  (  rhs == null )  {^624^^^^^617^636^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REMOVE]^if  ( lhs == rhs )  {     return this; }^624^^^^^617^636^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^626^^^^^617^636^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length + 2 != rhs.length + 2 )  {^628^^^^^617^636^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^this.setEquals ( false ) ;return this;^628^629^630^631^^617^636^[ADD] if  ( lhs.length != rhs.length )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^630^^^^^617^636^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^632^^^^^617^636^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^635^^^^^617^636^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] EqualsBuilder   [TYPE]  int[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  != useTransients )  {^649^^^^^648^667^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^650^^^^^648^667^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  !=  rhs )  {^652^^^^^648^667^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^653^^^^^648^667^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return this;  ;^653^^^^^648^667^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null || rhs == null )  {^655^^^^^648^667^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^657^^^^^648^667^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length - 1 != rhs.length - 1 )  {^659^^^^^648^667^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return this;  ;^661^^^^^648^667^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^661^^^^^648^667^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^663^664^665^^^648^667^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^666^^^^^648^667^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] EqualsBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  (   false )  {^680^^^^^679^698^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^681^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^if  ( lhs  &&  rhs )  {^683^^^^^679^698^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^684^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return this;  ;^684^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^if  (  rhs == null )  {^686^^^^^679^698^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[ADD]^^686^687^688^689^^679^698^[ADD] if  ( lhs == null || rhs == null )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^688^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return this;  ;^688^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^if  ( lhs.length /  0.5  != rhs.length /  0.5  )  {^690^^^^^679^698^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return this;  ;^692^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^692^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^694^^^^^679^698^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^return null;^697^^^^^679^698^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  char[] lhs  rhs 
[REPLACE]^if  ( isEquals  ) {^711^^^^^710^729^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^712^^^^^710^729^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  !=  rhs )  {^714^^^^^710^729^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^return this;^714^715^716^^^710^729^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^715^^^^^710^729^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null || rhs == null )  {^717^^^^^710^729^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^717^718^719^720^^710^729^[ADD] if  ( lhs == null || rhs == null )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return this;  ;^719^^^^^710^729^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^719^^^^^710^729^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length /  2 != rhs.length /  2 )  {^721^^^^^710^729^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^this.setEquals ( false ) ;return this;^721^722^723^724^^710^729^[ADD] if  ( lhs.length != rhs.length )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^723^^^^^710^729^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return this;  ;^723^^^^^710^729^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^725^726^727^^^710^729^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^728^^^^^710^729^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] EqualsBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  ||  false )  {^742^^^^^741^760^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^return this;^742^743^744^^^741^760^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^743^^^^^741^760^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs  !=  rhs )  {^745^^^^^741^760^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^746^^^^^741^760^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs != null ) {^748^^^^^741^760^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REMOVE]^if  ( lhs == rhs )  {     return this; }^748^^^^^741^760^[REMOVE] ^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^750^^^^^741^760^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( lhs.length /  0.5  != rhs.length /  0.5  )  {^752^^^^^741^760^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return null;^754^^^^^741^760^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[ADD]^^756^757^758^^^741^760^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^return this;  ;^759^^^^^741^760^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] EqualsBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients 
[REPLACE]^if  ( isEquals  != useTransients )  {^773^^^^^772^791^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^774^^^^^772^791^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^if  (   rhs )  {^776^^^^^772^791^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^777^^^^^772^791^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^if  (  rhs == null )  {^779^^^^^772^791^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^781^^^^^772^791^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^if  ( lhs.length - 3 != rhs.length - 3 )  {^783^^^^^772^791^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[ADD]^this.setEquals ( false ) ;return this;^783^784^785^786^^772^791^[ADD] if  ( lhs.length != rhs.length )  { this.setEquals ( false ) ; return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^785^^^^^772^791^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && isEquals; ++i )  {^787^^^^^772^791^[REPLACE] for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^return null;^790^^^^^772^791^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  float[] lhs  rhs 
[REPLACE]^if  ( isEquals  !=  false )  {^804^^^^^803^822^[REPLACE] if  ( isEquals == false )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[ADD]^return this;^804^805^806^^^803^822^[ADD] if  ( isEquals == false )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^805^^^^^803^822^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^if  ( lhs  !=  rhs )  {^807^^^^^803^822^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[ADD]^^807^808^809^^^803^822^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return this;  ;^808^^^^^803^822^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^808^^^^^803^822^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^if  ( lhs != null || rhs == null )  {^810^^^^^803^822^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^812^^^^^803^822^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return this;  ;^812^^^^^803^822^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^if  ( lhs.length - 3 != rhs.length - 3 )  {^814^^^^^803^822^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^816^^^^^803^822^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[ADD]^^818^819^820^^^803^822^[ADD] for  ( int i = 0; i < lhs.length && isEquals; ++i )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
[REPLACE]^return null;^821^^^^^803^822^[REPLACE] return this;^[METHOD] append [TYPE] EqualsBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] EqualsBuilder   [TYPE]  int i  [TYPE]  boolean false  isEquals  lhs  rhs  superEquals  testTransients  true  useTransients  [TYPE]  boolean[] lhs  rhs 
