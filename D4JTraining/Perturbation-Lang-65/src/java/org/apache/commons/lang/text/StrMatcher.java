[REPLACE]^private static final StrMatcher COMMA_MATCHER ;^36^^^^^^^[REPLACE] private static final StrMatcher COMMA_MATCHER = new CharMatcher ( ',' ) ;^ [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher  
[REPLACE]^private static  StrMatcher TAB_MATCHER = new CharMatcher ( '\t' ) ;^40^^^^^^^[REPLACE] private static final StrMatcher TAB_MATCHER = new CharMatcher ( '\t' ) ;^ [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher  
[REPLACE]^private static final StrMatcher SPACE_MATCHER ;^44^^^^^^^[REPLACE] private static final StrMatcher SPACE_MATCHER = new CharMatcher ( ' ' ) ;^ [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher  
[REPLACE]^private static final StrMatcher SPLIT_MATCHER  = null ;^49^^^^^^^[REPLACE] private static final StrMatcher SPLIT_MATCHER = new CharSetMatcher ( " \t\n\r\f".toCharArray (  )  ) ;^ [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher  
[REPLACE]^private static  StrMatcher TRIM_MATCHER = new TrimMatcher (  ) ;^53^^^^^^^[REPLACE] private static final StrMatcher TRIM_MATCHER = new TrimMatcher (  ) ;^ [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher  
[REPLACE]^private static final StrMatcher SINGLE_QUOTE_MATCHER  = null ;^57^^^^^^^[REPLACE] private static final StrMatcher SINGLE_QUOTE_MATCHER = new CharMatcher ( '\'' ) ;^ [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher  
[REPLACE]^private  final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher ( '"' ) ;^61^^^^^^^[REPLACE] private static final StrMatcher DOUBLE_QUOTE_MATCHER = new CharMatcher ( '"' ) ;^ [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher  
[REPLACE]^private static final StrMatcher QUOTE_MATCHER  = null ;^65^^^^^^^[REPLACE] private static final StrMatcher QUOTE_MATCHER = new CharSetMatcher ( "'\"".toCharArray (  )  ) ;^ [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher  
[REPLACE]^private static final StrMatcher NONE_MATCHER ;^69^^^^^^^[REPLACE] private static final StrMatcher NONE_MATCHER = new NoMatcher (  ) ;^ [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher  
[REPLACE]^this.chars =  ( char[] )  chars.clone (  ) ;^215^^^^^214^216^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] StrMatcher() [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^this.chars =  ( char[] )  chars.clone (  ) ;^259^^^^^258^262^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] StrMatcher$CharSetMatcher(char[]) [PARAMETER] char[] chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REMOVE]^Arrays.sort ( this.chars ) ;^259^^^^^258^262^[REMOVE] ^[METHOD] <init> [TYPE] StrMatcher$CharSetMatcher(char[]) [PARAMETER] char[] chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^this.chars =   ( char[] )  null.clone (  ) ;^260^^^^^258^262^[REPLACE] this.chars =  ( char[] )  chars.clone (  ) ;^[METHOD] <init> [TYPE] StrMatcher$CharSetMatcher(char[]) [PARAMETER] char[] chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[ADD]^^260^261^^^^258^262^[ADD] this.chars =  ( char[] )  chars.clone (  ) ; Arrays.sort ( this.chars ) ;^[METHOD] <init> [TYPE] StrMatcher$CharSetMatcher(char[]) [PARAMETER] char[] chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^this.chars   ;^261^^^^^258^262^[REPLACE] Arrays.sort ( this.chars ) ;^[METHOD] <init> [TYPE] StrMatcher$CharSetMatcher(char[]) [PARAMETER] char[] chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^this.chars =  ( char[] )  chars.clone (  ) ;^292^^^^^291^294^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] StrMatcher$CharMatcher(char) [PARAMETER] char ch [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^this.ch =  null;^293^^^^^291^294^[REPLACE] this.ch = ch;^[METHOD] <init> [TYPE] StrMatcher$CharMatcher(char) [PARAMETER] char ch [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[ADD]^^293^^^^^291^294^[ADD] this.ch = ch;^[METHOD] <init> [TYPE] StrMatcher$CharMatcher(char) [PARAMETER] char ch [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^this.chars =  ( char[] )  chars.clone (  ) ;^324^^^^^323^326^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String str  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[ADD]^^324^^^^^323^326^[ADD] super (  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String str  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^chars =  null.toCharArray (  ) ;^325^^^^^323^326^[REPLACE] chars = str.toCharArray (  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String str  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^this.chars =  ( char[] )  chars.clone (  ) ;^361^^^^^360^362^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] StrMatcher$NoMatcher() [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^this.chars =  ( char[] )  chars.clone (  ) ;^388^^^^^387^389^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] StrMatcher$TrimMatcher() [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[ADD]^^388^^^^^387^389^[ADD] super (  ) ;^[METHOD] <init> [TYPE] StrMatcher$TrimMatcher() [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return NONE_MATCHER;^79^^^^^78^80^[REPLACE] return COMMA_MATCHER;^[METHOD] commaMatcher [TYPE] StrMatcher [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return SPACE_MATCHER;^88^^^^^87^89^[REPLACE] return TAB_MATCHER;^[METHOD] tabMatcher [TYPE] StrMatcher [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return SPLIT_MATCHER;^97^^^^^96^98^[REPLACE] return SPACE_MATCHER;^[METHOD] spaceMatcher [TYPE] StrMatcher [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return SPACE_MATCHER;^107^^^^^106^108^[REPLACE] return SPLIT_MATCHER;^[METHOD] splitMatcher [TYPE] StrMatcher [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return SPLIT_MATCHER;^116^^^^^115^117^[REPLACE] return TRIM_MATCHER;^[METHOD] trimMatcher [TYPE] StrMatcher [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return DOUBLE_QUOTE_MATCHER;^125^^^^^124^126^[REPLACE] return SINGLE_QUOTE_MATCHER;^[METHOD] singleQuoteMatcher [TYPE] StrMatcher [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return SINGLE_QUOTE_MATCHER;^134^^^^^133^135^[REPLACE] return DOUBLE_QUOTE_MATCHER;^[METHOD] doubleQuoteMatcher [TYPE] StrMatcher [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return SPACE_MATCHER;^143^^^^^142^144^[REPLACE] return QUOTE_MATCHER;^[METHOD] quoteMatcher [TYPE] StrMatcher [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return SPACE_MATCHER;^152^^^^^151^153^[REPLACE] return NONE_MATCHER;^[METHOD] noneMatcher [TYPE] StrMatcher [PARAMETER] [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return new CharMatcher ( chars[0] ) ;^162^^^^^161^163^[REPLACE] return new CharMatcher ( ch ) ;^[METHOD] charMatcher [TYPE] StrMatcher [PARAMETER] char ch [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^if  (  chars.length *  0.5  == 0 )  {^172^^^^^171^179^[REPLACE] if  ( chars == null || chars.length == 0 )  {^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] char[] chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return SPACE_MATCHER;^173^^^^^171^179^[REPLACE] return NONE_MATCHER;^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] char[] chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^if  ( chars.length *  2 == 1 )  {^175^^^^^171^179^[REPLACE] if  ( chars.length == 1 )  {^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] char[] chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[ADD]^return new CharMatcher ( chars[0] ) ;^175^176^177^^^171^179^[ADD] if  ( chars.length == 1 )  { return new CharMatcher ( chars[0] ) ; }^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] char[] chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return new CharMatcher ( chars[1] ) ;^176^^^^^171^179^[REPLACE] return new CharMatcher ( chars[0] ) ;^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] char[] chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return new CharMatcher ( chars[0 >> 0] ) ;^176^^^^^171^179^[REPLACE] return new CharMatcher ( chars[0] ) ;^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] char[] chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return  new CharMatcher ( chars[0] )  ;^178^^^^^171^179^[REPLACE] return new CharSetMatcher ( chars ) ;^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] char[] chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^if  ( chars == null || chars.length (  )  *  2 == 0 )  {^188^^^^^187^195^[REPLACE] if  ( chars == null || chars.length (  )  == 0 )  {^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] String chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String chars  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return SPACE_MATCHER;^189^^^^^187^195^[REPLACE] return NONE_MATCHER;^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] String chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String chars  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^if  ( chars.length (  )  /  0.5  == 1 )  {^191^^^^^187^195^[REPLACE] if  ( chars.length (  )  == 1 )  {^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] String chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String chars  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return new CharMatcher ( chars .toCharArray (  )   ) ;^192^^^^^187^195^[REPLACE] return new CharMatcher ( chars.charAt ( 0 )  ) ;^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] String chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String chars  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return  new CharSetMatcher ( chars )    ) ;^192^^^^^187^195^[REPLACE] return new CharMatcher ( chars.charAt ( 0 )  ) ;^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] String chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String chars  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return  new CharSetMatcher ( chars )   ) ;^194^^^^^187^195^[REPLACE] return new CharSetMatcher ( chars.toCharArray (  )  ) ;^[METHOD] charSetMatcher [TYPE] StrMatcher [PARAMETER] String chars [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String chars  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^if  ( str == false || str.length (  )  *  2 == 0 )  {^204^^^^^203^208^[REPLACE] if  ( str == null || str.length (  )  == 0 )  {^[METHOD] stringMatcher [TYPE] StrMatcher [PARAMETER] String str [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String str  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[ADD]^return NONE_MATCHER;^204^205^206^^^203^208^[ADD] if  ( str == null || str.length (  )  == 0 )  { return NONE_MATCHER; }^[METHOD] stringMatcher [TYPE] StrMatcher [PARAMETER] String str [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String str  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return SPACE_MATCHER;^205^^^^^203^208^[REPLACE] return NONE_MATCHER;^[METHOD] stringMatcher [TYPE] StrMatcher [PARAMETER] String str [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String str  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return  new CharSetMatcher ( chars )  ;^207^^^^^203^208^[REPLACE] return new StringMatcher ( str ) ;^[METHOD] stringMatcher [TYPE] StrMatcher [PARAMETER] String str [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  String str  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  char[] chars 
[REPLACE]^return Arrays.sort ( chars, buffer[pos] )  >= 0 ? 1 : 0;^274^^^^^273^275^[REPLACE] return Arrays.binarySearch ( chars, buffer[pos] )  >= 0 ? 1 : 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^return   1 / 2 ;^306^^^^^305^307^[REPLACE] return ch == buffer[pos] ? 1 : 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^for  ( int i = 0; i < chars.length; i++, pos++ )  { if  ( chars[i] != buffer[pos] )  {^338^^^^^337^348^[REPLACE] int len = chars.length;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^if  ( bufferStart + len  !=  len )  {^339^^^^^337^348^[REPLACE] if  ( pos + len > bufferEnd )  {^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^return 4;^340^^^^^337^348^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^return 1;^340^^^^^337^348^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^if  ( chars[i]  ==  buffer[pos] )  {^343^^^^^337^348^[REPLACE] if  ( chars[i] != buffer[pos] )  {^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[ADD]^^343^344^345^^^337^348^[ADD] if  ( chars[i] != buffer[pos] )  { return 0; }^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^return 0L;^344^^^^^337^348^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^for  ( int i = 0; i < chars.length *  2; i++, pos++ )  {^342^^^^^337^348^[REPLACE] for  ( int i = 0; i < chars.length; i++, pos++ )  {^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^return 4;^344^^^^^337^348^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^return 2;^344^^^^^337^348^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^return 0 - 0;^344^^^^^337^348^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^for  ( int i = 0 ; i < chars.length; i++, pos++ )  {^342^^^^^337^348^[REPLACE] for  ( int i = 0; i < chars.length; i++, pos++ )  {^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[ADD]^^342^343^344^345^^337^348^[ADD] for  ( int i = 0; i < chars.length; i++, pos++ )  { if  ( chars[i] != buffer[pos] )  { return 0; }^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^return bufferStart;^347^^^^^337^348^[REPLACE] return len;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^return 1;^374^^^^^373^375^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^return buffer[pos]  ;^401^^^^^400^402^[REPLACE] return buffer[pos] <= 32 ? 1 : 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StrMatcher CharSetMatcher CharMatcher StringMatcher NoMatcher TrimMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  StrMatcher COMMA_MATCHER  DOUBLE_QUOTE_MATCHER  NONE_MATCHER  QUOTE_MATCHER  SINGLE_QUOTE_MATCHER  SPACE_MATCHER  SPLIT_MATCHER  TAB_MATCHER  TRIM_MATCHER  [TYPE]  int bufferEnd  bufferStart  pos  [TYPE]  char[] buffer  chars 
[REPLACE]^this.chars =  ( char[] )  chars.clone (  ) ;^259^^^^^258^262^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] StrMatcher$CharSetMatcher(char[]) [PARAMETER] char[] chars [CLASS] CharSetMatcher   [TYPE]  char[] chars  [TYPE]  boolean false  true 
[REPLACE]^this.chars =   ( char[] )  null.clone (  ) ;^260^^^^^258^262^[REPLACE] this.chars =  ( char[] )  chars.clone (  ) ;^[METHOD] <init> [TYPE] StrMatcher$CharSetMatcher(char[]) [PARAMETER] char[] chars [CLASS] CharSetMatcher   [TYPE]  char[] chars  [TYPE]  boolean false  true 
[REPLACE]^this.chars   ;^261^^^^^258^262^[REPLACE] Arrays.sort ( this.chars ) ;^[METHOD] <init> [TYPE] StrMatcher$CharSetMatcher(char[]) [PARAMETER] char[] chars [CLASS] CharSetMatcher   [TYPE]  char[] chars  [TYPE]  boolean false  true 
[REMOVE]^this.chars =  ( char[] )  chars.clone (  ) ;^261^^^^^258^262^[REMOVE] ^[METHOD] <init> [TYPE] StrMatcher$CharSetMatcher(char[]) [PARAMETER] char[] chars [CLASS] CharSetMatcher   [TYPE]  char[] chars  [TYPE]  boolean false  true 
[REPLACE]^return Arrays.sort ( chars, buffer[pos] )  ;^274^^^^^273^275^[REPLACE] return Arrays.binarySearch ( chars, buffer[pos] )  >= 0 ? 1 : 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] CharSetMatcher   [TYPE]  int bufferEnd  bufferStart  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^private String ch;^284^^^^^^^[REPLACE] private char ch;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] CharMatcher   [TYPE]  int bufferEnd  bufferStart  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^this.ch =  null;^293^^^^^291^294^[REPLACE] this.ch = ch;^[METHOD] <init> [TYPE] StrMatcher$CharMatcher(char) [PARAMETER] char ch [CLASS] CharMatcher   [TYPE]  char ch  [TYPE]  boolean false  true 
[REPLACE]^return 0;^306^^^^^305^307^[REPLACE] return ch == buffer[pos] ? 1 : 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] CharMatcher   [TYPE]  char ch  [TYPE]  boolean false  true  [TYPE]  int bufferEnd  bufferStart  pos  [TYPE]  char[] buffer 
[REPLACE]^chars = str.toCharArray (  ) ;^324^^^^^323^326^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] StringMatcher   [TYPE]  char[] chars  [TYPE]  String str  [TYPE]  boolean false  true 
[REPLACE]^chars =  null.toCharArray (  ) ;^325^^^^^323^326^[REPLACE] chars = str.toCharArray (  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] StringMatcher   [TYPE]  char[] chars  [TYPE]  String str  [TYPE]  boolean false  true 
[ADD]^^325^^^^^323^326^[ADD] chars = str.toCharArray (  ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] StringMatcher   [TYPE]  char[] chars  [TYPE]  String str  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i < chars.length; i++, pos++ )  { if  ( chars[i] != buffer[pos] )  {^338^^^^^337^348^[REPLACE] int len = chars.length;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^if  ( pos + len  >=  len )  {^339^^^^^337^348^[REPLACE] if  ( pos + len > bufferEnd )  {^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^return 0 * 4;^340^^^^^337^348^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^return 4;^340^^^^^337^348^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^if  ( chars[i]  ==  buffer[pos] )  {^343^^^^^337^348^[REPLACE] if  ( chars[i] != buffer[pos] )  {^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^return 1;^344^^^^^337^348^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0; i < chars.length /  0.5 ; i++, pos++ )  {^342^^^^^337^348^[REPLACE] for  ( int i = 0; i < chars.length; i++, pos++ )  {^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^return 0 * 4;^344^^^^^337^348^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^return 4;^344^^^^^337^348^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^return 0L;^344^^^^^337^348^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < chars.length; i++, pos++ )  {^342^^^^^337^348^[REPLACE] for  ( int i = 0; i < chars.length; i++, pos++ )  {^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[ADD]^^342^343^344^345^^337^348^[ADD] for  ( int i = 0; i < chars.length; i++, pos++ )  { if  ( chars[i] != buffer[pos] )  { return 0; }^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^return bufferStart;^347^^^^^337^348^[REPLACE] return len;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] StringMatcher   [TYPE]  int bufferEnd  bufferStart  i  len  pos  [TYPE]  char[] buffer  chars  [TYPE]  boolean false  true 
[REPLACE]^return 0 << 0;^374^^^^^373^375^[REPLACE] return 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] NoMatcher   [TYPE]  boolean false  true  [TYPE]  int bufferEnd  bufferStart  pos  [TYPE]  char[] buffer 
[REPLACE]^return false ;^401^^^^^400^402^[REPLACE] return buffer[pos] <= 32 ? 1 : 0;^[METHOD] isMatch [TYPE] int [PARAMETER] char[] buffer int pos int bufferStart int bufferEnd [CLASS] TrimMatcher   [TYPE]  boolean false  true  [TYPE]  int bufferEnd  bufferStart  pos  [TYPE]  char[] buffer 
