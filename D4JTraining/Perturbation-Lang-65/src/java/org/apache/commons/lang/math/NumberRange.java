[REPLACE]^private static final long serialVersionUID = 71849363892710;^31^^^^^^^[REPLACE] private static final long serialVersionUID = 71849363892710L;^ [CLASS] NumberRange  
[REPLACE]^private  Number min;^36^^^^^^^[REPLACE] private final Number min;^ [CLASS] NumberRange  
[REPLACE]^private transient int hashCode ;^45^^^^^^^[REPLACE] private transient int hashCode = 0;^ [CLASS] NumberRange  
[REPLACE]^private transient String toString ;^49^^^^^^^[REPLACE] private transient String toString = null;^ [CLASS] NumberRange  
[REPLACE]^if  ( num != false )  {^61^^^^^60^76^[REPLACE] if  ( num == null )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  [TYPE]  long serialVersionUID  [TYPE]  int hashCode 
[REMOVE]^if  (  ( num instanceof Float )  &&  (  (  ( Float )   ( num )  ) .isNaN (  )  )  )  {     throw new IllegalArgumentException ( "The number must not be NaN" ) ; }^61^^^^^60^76^[REMOVE] ^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  [TYPE]  long serialVersionUID  [TYPE]  int hashCode 
[REPLACE]^return ;^62^^^^^60^76^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  [TYPE]  long serialVersionUID  [TYPE]  int hashCode 
[REPLACE]^if  ( ! num instanceof Comparable == true )  {^64^^^^^60^76^[REPLACE] if  ( num instanceof Comparable == false )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  [TYPE]  long serialVersionUID  [TYPE]  int hashCode 
[REPLACE]^return ;^65^^^^^60^76^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  [TYPE]  long serialVersionUID  [TYPE]  int hashCode 
[REPLACE]^if  ( ! num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^67^^^^^60^76^[REPLACE] if  ( num instanceof Double &&  (  ( Double )  num ) .isNaN (  )  )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  [TYPE]  long serialVersionUID  [TYPE]  int hashCode 
[REPLACE]^return ;^68^^^^^60^76^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  [TYPE]  long serialVersionUID  [TYPE]  int hashCode 
[REPLACE]^if  ( ! num instanceof Float ) {^70^^^^^60^76^[REPLACE] if  ( num instanceof Float &&  (  ( Float )  num ) .isNaN (  )  )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  [TYPE]  long serialVersionUID  [TYPE]  int hashCode 
[REPLACE]^return ;^71^^^^^60^76^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  [TYPE]  long serialVersionUID  [TYPE]  int hashCode 
[REPLACE]^this.max = num2; ;^74^^^^^60^76^[REPLACE] this.min = num;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  [TYPE]  long serialVersionUID  [TYPE]  int hashCode 
[ADD]^^74^^^^^60^76^[ADD] this.min = num;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  [TYPE]  long serialVersionUID  [TYPE]  int hashCode 
[REPLACE]^this.min = num; ;^75^^^^^60^76^[REPLACE] this.max = num;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  [TYPE]  long serialVersionUID  [TYPE]  int hashCode 
[REPLACE]^if  ( num1 != false ||true )  {^97^^^^^96^127^[REPLACE] if  ( num1 == null || num2 == null )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^97^98^99^^^96^127^[ADD] if  ( num1 == null || num2 == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^return ;^98^^^^^96^127^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^if  ( num.getClass (  )   == false (  )  )  {^100^^^^^96^127^[REPLACE] if  ( num1.getClass (  )  != num2.getClass (  )  )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^100^101^102^^^96^127^[ADD] if  ( num1.getClass (  )  != num2.getClass (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^return ;^101^^^^^96^127^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^101^^^^^96^127^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^if  ( ! num1 instanceof Comparable == false )  {^103^^^^^96^127^[REPLACE] if  ( num1 instanceof Comparable == false )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^103^104^105^^^96^127^[ADD] if  ( num1 instanceof Comparable == false )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^return ;^104^^^^^96^127^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^if  ( ! num1 instanceof Double )  {^106^^^^^96^127^[REPLACE] if  ( num1 instanceof Double )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^}  if  ( ! num2 instanceof Float )  {^110^^^^^96^127^[REPLACE] } else if  ( num1 instanceof Float )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^if  (  (  ( Float )  num1 ) .isNaN (  )  ) {^111^^^^^96^127^[REPLACE] if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^return ;^112^^^^^96^127^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^112^^^^^96^127^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^if  (   (  ( Double )  num2 ) .isNaN (  )  )  {^107^^^^^96^127^[REPLACE] if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^return ;^108^^^^^96^127^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^if  (  (  ( Double )  num1 ) .isNaN (  )  &&  (  ( Double )  num2 ) .isNaN (  )  )  {^107^^^^^96^127^[REPLACE] if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^107^108^109^^^96^127^[ADD] if  (  (  ( Double )  num1 ) .isNaN (  )  ||  (  ( Double )  num2 ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^}  if  ( ! num1 instanceof Float )  {^110^^^^^96^127^[REPLACE] } else if  ( num1 instanceof Float )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^}^110^111^112^113^^96^127^[ADD] else if  ( num1 instanceof Float )  { if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^if  (  (  ( Float )  num1 ) .isNaN (  )  &&  (  ( Float )  num2 ) .isNaN (  )  )  {^111^^^^^96^127^[REPLACE] if  (  (  ( Float )  num1 ) .isNaN (  )  ||  (  ( Float )  num2 ) .isNaN (  )  )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^108^^^^^96^127^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^int compare =  (  ( Comparable )  num1 ) .compareTo ( num1 ) ;^116^^^^^96^127^[REPLACE] int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^if  ( compare  ||  0 )  {^117^^^^^96^127^[REPLACE] if  ( compare == 0 )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^117^118^119^120^121^96^127^[ADD] if  ( compare == 0 )  { this.min = num1; this.max = num1; } else if  ( compare > 0 )  { this.min = num2;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^}  if  ( compare  <=  0 )  {^120^^^^^96^127^[REPLACE] } else if  ( compare > 0 )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^this.min = num; ;^124^^^^^120^126^[REPLACE] this.min = num1;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^this.min = num; ;^125^^^^^120^126^[REPLACE] this.max = num2;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^125^^^^^120^126^[ADD] this.max = num2;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^this.min = num; ;^121^^^^^96^127^[REPLACE] this.min = num2;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^this.min = num; ;^122^^^^^96^127^[REPLACE] this.max = num1;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^121^^^^^96^127^[ADD] this.min = num2;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^this.min = num; ;^124^^^^^96^127^[REPLACE] this.min = num1;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^124^^^^^96^127^[ADD] this.min = num1;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^this.min = num; ;^125^^^^^96^127^[REPLACE] this.max = num2;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^this.min = num; ;^118^^^^^96^127^[REPLACE] this.min = num1;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^118^^^^^96^127^[ADD] this.min = num1;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^this.min = num; ;^119^^^^^96^127^[REPLACE] this.max = num1;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^}  else {^120^^^^^96^127^[REPLACE] } else if  ( compare > 0 )  {^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[ADD]^^122^^^^^96^127^[ADD] this.max = num1;^[METHOD] <init> [TYPE] Number) [PARAMETER] Number num1 Number num2 [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^return max;^138^^^^^137^139^[REPLACE] return min;^[METHOD] getMinimumNumber [TYPE] Number [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^return min;^147^^^^^146^148^[REPLACE] return max;^[METHOD] getMaximumNumber [TYPE] Number [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  [TYPE]  long serialVersionUID  [TYPE]  int compare  hashCode 
[REPLACE]^if  ( number != null )  {^164^^^^^163^173^[REPLACE] if  ( number == null )  {^[METHOD] containsNumber [TYPE] boolean [PARAMETER] Number number [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^return true;^165^^^^^163^173^[REPLACE] return false;^[METHOD] containsNumber [TYPE] boolean [PARAMETER] Number number [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^if  ( number.getClass (  )   ==  min.getClass (  )  )  {^167^^^^^163^173^[REPLACE] if  ( number.getClass (  )  != min.getClass (  )  )  {^[METHOD] containsNumber [TYPE] boolean [PARAMETER] Number number [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^return ;^168^^^^^163^173^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] containsNumber [TYPE] boolean [PARAMETER] Number number [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^int compareMin =  (  ( Comparable )  min ) .compareTo ( num1 ) ;^170^^^^^163^173^[REPLACE] int compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;^[METHOD] containsNumber [TYPE] boolean [PARAMETER] Number number [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^int compareMin =  (  ( Comparable )  min ) .compareTo ( number ) ;^171^^^^^163^173^[REPLACE] int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ;^[METHOD] containsNumber [TYPE] boolean [PARAMETER] Number number [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[ADD]^^171^172^^^^163^173^[ADD] int compareMax =  (  ( Comparable )  max ) .compareTo ( number ) ; return compareMin <= 0 && compareMax >= 0;^[METHOD] containsNumber [TYPE] boolean [PARAMETER] Number number [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^return true ;^172^^^^^163^173^[REPLACE] return compareMin <= 0 && compareMax >= 0;^[METHOD] containsNumber [TYPE] boolean [PARAMETER] Number number [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^if  ( obj  ||  this )  {^191^^^^^190^199^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] NumberRange   [TYPE]  NumberRange range  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  Object obj  [TYPE]  String toString  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^return false;^192^^^^^190^199^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] NumberRange   [TYPE]  NumberRange range  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  Object obj  [TYPE]  String toString  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^if  ( ! obj instanceof NumberRange == false )  {^194^^^^^190^199^[REPLACE] if  ( obj instanceof NumberRange == false )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] NumberRange   [TYPE]  NumberRange range  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  Object obj  [TYPE]  String toString  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^return true;^195^^^^^190^199^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] NumberRange   [TYPE]  NumberRange range  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  Object obj  [TYPE]  String toString  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^int compare =  (  ( Comparable )  num1 ) .compareTo ( num2 ) ;^197^^^^^190^199^[REPLACE] NumberRange range =  ( NumberRange )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] NumberRange   [TYPE]  NumberRange range  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  Object obj  [TYPE]  String toString  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^return   max.equals ( range.max ) ;^198^^^^^190^199^[REPLACE] return min.equals ( range.min )  && max.equals ( range.max ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] NumberRange   [TYPE]  NumberRange range  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  Object obj  [TYPE]  String toString  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^if  ( hashCode  && compare )  {^207^^^^^206^214^[REPLACE] if  ( hashCode == 0 )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[ADD]^hashCode = 17;hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;hashCode = 37 * hashCode + min.hashCode (  ) ;hashCode = 37 * hashCode + max.hashCode (  ) ;^207^208^209^210^211^206^214^[ADD] if  ( hashCode == 0 )  { hashCode = 17; hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ; hashCode = 37 * hashCode + min.hashCode (  ) ; hashCode = 37 * hashCode + max.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^hashCode = 15;^208^^^^^206^214^[REPLACE] hashCode = 17;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^hashCode = 37 * hashCode + min.hashCode (  ) ; ;^209^^^^^206^214^[REPLACE] hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^hashCode = 37 * hashCode + getClass (  ) .hashCode (  ) ; ;^210^^^^^206^214^[REPLACE] hashCode = 37 * hashCode + min.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^hashCode = 37 * hashCode + min.hashCode (  ) ; ;^211^^^^^206^214^[REPLACE] hashCode = 37 * hashCode + max.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^hashCode = 3;^208^^^^^206^214^[REPLACE] hashCode = 17;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[ADD]^^208^^^^^206^214^[ADD] hashCode = 17;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^hashCode = 37 * hashCode +hashCode (  ) ;^211^^^^^206^214^[REPLACE] hashCode = 37 * hashCode + max.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[ADD]^^211^^^^^206^214^[ADD] hashCode = 37 * hashCode + max.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^return false;^213^^^^^206^214^[REPLACE] return hashCode;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] NumberRange   [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^if  ( toString != null )  {^224^^^^^223^234^[REPLACE] if  ( toString == null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] NumberRange   [TYPE]  StringBuffer buf  [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^toString =  null.toString (  ) ;^231^^^^^223^234^[REPLACE] toString = buf.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] NumberRange   [TYPE]  StringBuffer buf  [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^StringBuffer buf = new StringBuffer ( 24 ) ;^225^^^^^223^234^[REPLACE] StringBuffer buf = new StringBuffer ( 32 ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] NumberRange   [TYPE]  StringBuffer buf  [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^StringBuffer buf = new StringBuffer ( 3 ) ;^225^^^^^223^234^[REPLACE] StringBuffer buf = new StringBuffer ( 32 ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] NumberRange   [TYPE]  StringBuffer buf  [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
[REPLACE]^return false;^233^^^^^223^234^[REPLACE] return toString;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] NumberRange   [TYPE]  StringBuffer buf  [TYPE]  String toString  [TYPE]  boolean false  true  [TYPE]  Number max  min  num  num1  num2  number  [TYPE]  long serialVersionUID  [TYPE]  int compare  compareMax  compareMin  hashCode 
