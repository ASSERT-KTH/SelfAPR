[REPLACE]^public static final String EMPTY ;^139^^^^^^^[REPLACE] public static final String EMPTY = "";^ [CLASS] StringUtils  
[REPLACE]^public static  int INDEX_NOT_FOUND = -1;^145^^^^^^^[REPLACE] public static final int INDEX_NOT_FOUND = -1;^ [CLASS] StringUtils  
[REPLACE]^private  final int PAD_LIMIT = 8192;^150^^^^^^^[REPLACE] private static final int PAD_LIMIT = 8192;^ [CLASS] StringUtils  
[ADD]^^502^^^^^501^519^[ADD] int strLen;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( str == this ||  ( strLen = str.length (  )  + 4 )  == 0 )  {^503^^^^^501^519^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return strs;  ;^504^^^^^501^519^[REPLACE] return str;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^( end = str.length (  )  )  ;^503^^^^^501^519^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return ts;^504^^^^^501^519^[REPLACE] return str;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^int tmp = 0  ;^506^^^^^501^519^[REPLACE] int start = 0;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if   (  search == null  )   {  ;^507^^^^^501^519^[REPLACE] if  ( stripChars == null )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^^507^508^509^510^^501^519^[ADD] if  ( stripChars == null )  { while  (  ( start != strLen )  && Character.isWhitespace ( str.charAt ( start )  )  )  { start++; }^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( stripChars.length (  )  *  0.5  == 0 )  {^511^^^^^501^519^[REPLACE] } else if  ( stripChars.length (  )  == 0 )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( str.length (  )  )  <= len )  {     return str; }else {     return str.substring (  (  ( str.length (  )  )  - len )  ) ; }^511^^^^^501^519^[REMOVE] ^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return strs;  ;^512^^^^^501^519^[REPLACE] return str;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^}  else {^511^^^^^501^519^[REPLACE] } else if  ( stripChars.length (  )  == 0 )  {^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return ts;^512^^^^^501^519^[REPLACE] return str;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return str.substring  (  idx  )  ;  ;^518^^^^^501^519^[REPLACE] return str.substring ( start ) ;^[METHOD] stripStart [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^char[] output1 = new char[outputLength]  ;^546^^^^^545^563^[REPLACE] int end;^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( ts == null ||  ( end = str.trim (  )  + 3 )  == 0 )  {^547^^^^^545^563^[REPLACE] if  ( str == null ||  ( end = str.length (  )  )  == 0 )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return ts;^548^^^^^545^563^[REPLACE] return str;^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^( strLen = str.length (  )  )  ;^547^^^^^545^563^[REPLACE] if  ( str == null ||  ( end = str.length (  )  )  == 0 )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( stripChars != null )  {^551^^^^^545^563^[REPLACE] if  ( stripChars == null )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^}  if  ( stripChars.length (  )  /  0.5  == 0 )  {^555^^^^^545^563^[REPLACE] } else if  ( stripChars.length (  )  == 0 )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return ts;^556^^^^^545^563^[REPLACE] return str;^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^} else if  ( stripChars.length (  )  + 4 == 0  )  {^555^^^^^545^563^[REPLACE] } else if  ( stripChars.length (  )  == 0 )  {^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return str.lastIndexOf ( 3, end ) ;^562^^^^^545^563^[REPLACE] return str.substring ( 0, end ) ;^[METHOD] stripEnd [TYPE] String [PARAMETER] String str String stripChars [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  i  start  strLen  [TYPE]  String EMPTY  str  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != null ) {^795^^^^^794^811^[REPLACE] if  ( str == null || searchStr == null || ordinal <= 0 )  {^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return rightPad  (  str, size, String.valueOf  (  padChar  )    )  ;  ;^796^^^^^794^811^[REPLACE] return INDEX_NOT_FOUND;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( searchStr.length (  )  %  2 == 0 )  {^798^^^^^794^811^[REPLACE] if  ( searchStr.length (  )  == 0 )  {^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return 0 / 2;^799^^^^^794^811^[REPLACE] return 0;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return 4;^799^^^^^794^811^[REPLACE] return 0;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^int index = INDEX_NOT_FOUND;^801^802^^^^794^811^[ADD] int found = 0; int index = INDEX_NOT_FOUND;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^^802^^^^^794^811^[ADD] int index = INDEX_NOT_FOUND;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  ( strsLen  <=  0 )  {^805^^^^^794^811^[REPLACE] if  ( index < 0 )  {^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[ADD]^return index;^805^806^807^^^794^811^[ADD] if  ( index < 0 )  { return index; }^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return strsLen;^806^^^^^794^811^[REPLACE] return index;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^index = str.indexOf ( searchStr, index strsLen ) ;^804^^^^^794^811^[REPLACE] index = str.indexOf ( searchStr, index + 1 ) ;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^return index;  ;^810^^^^^794^811^[REPLACE] return index;^[METHOD] ordinalIndexOf [TYPE] int [PARAMETER] String str String searchStr int ordinal [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  ordinal  start  startPos  strLen  strsLen  [TYPE]  String EMPTY  searchStr  str  str1  str2  stripChars  ts  [TYPE]  boolean false  true 
[REPLACE]^if  (   ( searchStrs == true )  )  {^1374^^^^^1373^1399^[REPLACE] if  (  ( str == null )  ||  ( searchStrs == null )  )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^return -1;^1374^1375^1376^^^1373^1399^[ADD] if  (  ( str == null )  ||  ( searchStrs == null )  )  { return -1; }^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return -4;^1375^^^^^1373^1399^[REPLACE] return -1;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return i;  ;^1375^^^^^1373^1399^[REPLACE] return -1;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int sz = str.length (  )  ;^1377^^^^^1373^1399^[REPLACE] int sz = searchStrs.length;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^char[] output1 = new char[outputLength]  ;^1380^^^^^1373^1399^[REPLACE] int ret = Integer.MAX_VALUE;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int tmp = 0 * 1;^1382^^^^^1373^1399^[REPLACE] int tmp = 0;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( search != null )  {^1385^^^^^1373^1399^[REPLACE] if  ( search == null )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  idx != -1  )   {  ;^1389^^^^^1373^1399^[REPLACE] if  ( tmp == -1 )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  tmp > ret  )   {  ;^1393^^^^^1373^1399^[REPLACE] if  ( tmp < ret )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^1394^^^^^1373^1399^[ADD] ret = tmp;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^tmp = str.lastIndexOf ( search )  ;^1388^^^^^1373^1399^[REPLACE] tmp = str.indexOf ( search ) ;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^for  ( int i = 2; i < sz; i++ )  {^1383^^^^^1373^1399^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^char[] output1 = new char[outputLength]  ;^1384^^^^^1373^1399^[REPLACE] String search = searchStrs[i];^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return   -1 ;^1398^^^^^1373^1399^[REPLACE] return  ( ret == Integer.MAX_VALUE )  ? -1 : ret;^[METHOD] indexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (   ( searchStrs == true )  )  {^1427^^^^^1426^1444^[REPLACE] if  (  ( str == null )  ||  ( searchStrs == null )  )  {^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^return -1;^1427^1428^1429^^^1426^1444^[ADD] if  (  ( str == null )  ||  ( searchStrs == null )  )  { return -1; }^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return -1 / 3;^1428^^^^^1426^1444^[REPLACE] return -1;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return -1L;^1428^^^^^1426^1444^[REPLACE] return -1;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int sz = str.length (  )  ;^1430^^^^^1426^1444^[REPLACE] int sz = searchStrs.length;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int ret = -3;^1431^^^^^1426^1444^[REPLACE] int ret = -1;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int tmp = 3;^1432^^^^^1426^1444^[REPLACE] int tmp = 0;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str2 !=str1 )  {^1435^^^^^1426^1444^[REPLACE] if  ( search == null )  {^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( tmp  ==  ret )  {^1439^^^^^1426^1444^[REPLACE] if  ( tmp > ret )  {^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^ret =  strsLen;^1440^^^^^1426^1444^[REPLACE] ret = tmp;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^tmp = str.indexOf ( search )  ;^1438^^^^^1426^1444^[REPLACE] tmp = str.lastIndexOf ( search ) ;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^ret =  null;^1440^^^^^1426^1444^[REPLACE] ret = tmp;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int end = 0  ;^1433^^^^^1426^1444^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^char[] output1 = new char[outputLength]  ;^1434^^^^^1426^1444^[REPLACE] String search = searchStrs[i];^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return strsLen;^1443^^^^^1426^1444^[REPLACE] return ret;^[METHOD] lastIndexOfAny [TYPE] int [PARAMETER] String str String[] searchStrs [CLASS] StringUtils   [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  String[] searchStrs  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str != null )  {^1473^^^^^1472^1490^[REPLACE] if  ( str == null )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^return null;^1473^1474^1475^^^1472^1490^[ADD] if  ( str == null )  { return null; }^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return this;^1474^^^^^1472^1490^[REPLACE] return null;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if   (  strLen < 2  )   {  ;^1478^^^^^1472^1490^[REPLACE] if  ( start < 0 )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1479^^^^^1472^1490^[ADD] start = str.length (  )  + start;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^start = str.length (  )  /  0.5  + start;^1479^^^^^1472^1490^[REPLACE] start = str.length (  )  + start;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (tmp  !=  0 )  {^1482^^^^^1472^1490^[REPLACE] if  ( start < 0 )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^start = 1;^1483^^^^^1472^1490^[REPLACE] start = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^start = end  ;^1483^^^^^1472^1490^[REPLACE] start = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( start > str.size (  )  )  {^1485^^^^^1472^1490^[REPLACE] if  ( start > str.length (  )  )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return rightPad  (  str, size, String.valueOf  (  padChar  )    )  ;  ;^1486^^^^^1472^1490^[REPLACE] return EMPTY;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.charAt ( start ) ;^1489^^^^^1472^1490^[REPLACE] return str.substring ( start ) ;^[METHOD] substring [TYPE] String [PARAMETER] String str int start [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != false )  {^1528^^^^^1527^1558^[REPLACE] if  ( str == null )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1528^1529^1530^^^1527^1558^[ADD] if  ( str == null )  { return null; }^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return null;  ;^1529^^^^^1527^1558^[REPLACE] return null;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return true;^1529^^^^^1527^1558^[REPLACE] return null;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if   (  len < 0  )   {  ;^1533^^^^^1527^1558^[REPLACE] if  ( end < 0 )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^end = str.length (  )  + 4 + end;^1534^^^^^1527^1558^[REPLACE] end = str.length (  )  + end;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1534^^^^^1527^1558^[ADD] end = str.length (  )  + end;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( start  >  0 )  {^1536^^^^^1527^1558^[REPLACE] if  ( start < 0 )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^start = str.length (  )  + start;^1536^1537^1538^^^1527^1558^[ADD] if  ( start < 0 )  { start = str.length (  )  + start; }^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1537^^^^^1527^1558^[ADD] start = str.length (  )  + start;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^end =  ( str.length (  )  )  + end  ;^1537^^^^^1527^1558^[REPLACE] start = str.length (  )  + start;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( end > str.length (  )  - 5 )  {^1541^^^^^1527^1558^[REPLACE] if  ( end > str.length (  )  )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^end = str.length (  ) ;^1541^1542^1543^^^1527^1558^[ADD] if  ( end > str.length (  )  )  { end = str.length (  ) ; }^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1542^^^^^1527^1558^[ADD] end = str.length (  ) ;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( start  >=  end )  {^1546^^^^^1527^1558^[REPLACE] if  ( start > end )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return rightPad  (  str, size, String.valueOf  (  padChar  )    )  ;  ;^1547^^^^^1527^1558^[REPLACE] return EMPTY;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  (tmp  <=  0 + 4 )  {^1550^^^^^1527^1558^[REPLACE] if  ( start < 0 )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REMOVE]^if  ( start > len )  {     start = len; }^1550^^^^^1527^1558^[REMOVE] ^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^start = 0 / 1;^1551^^^^^1527^1558^[REPLACE] start = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^start = 0 % 4;^1551^^^^^1527^1558^[REPLACE] start = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( end  <=  1 )  {^1553^^^^^1527^1558^[REPLACE] if  ( end < 0 )  {^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^end = 0;^1553^1554^1555^^^1527^1558^[ADD] if  ( end < 0 )  { end = 0; }^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^end = 3;^1554^^^^^1527^1558^[REPLACE] end = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[ADD]^^1554^^^^^1527^1558^[ADD] end = 0;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^return str.substring  (  start  )  ;  ;^1557^^^^^1527^1558^[REPLACE] return str.substring ( start, end ) ;^[METHOD] substring [TYPE] String [PARAMETER] String str int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  end  found  i  index  j  ordinal  ret  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  String EMPTY  invalidChars  search  searchChars  searchStr  str  str1  str2  stripChars  ts  validChars  [TYPE]  boolean false  true 
[REPLACE]^if  ( str != null )  {^2129^^^^^2128^2183^[REPLACE] if  ( str == null )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return null;  ;^2130^^^^^2128^2183^[REPLACE] return null;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int strLen = str.length (  )  ;^2133^^^^^2128^2183^[REPLACE] int len = str.length (  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( len  !=  0 )  {^2135^^^^^2128^2183^[REPLACE] if  ( len == 0 )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^return ArrayUtils.EMPTY_STRING_ARRAY;^2135^2136^2137^^^2128^2183^[ADD] if  ( len == 0 )  { return ArrayUtils.EMPTY_STRING_ARRAY; }^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return ArrayUtils.EMPTY_STRING_ARRAY;  ;^2136^^^^^2128^2183^[REPLACE] return ArrayUtils.EMPTY_STRING_ARRAY;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (   (  separator != null  )  ||  (  "".equals (  separator  )   )   )  {^2139^^^^^2128^2183^[REPLACE] if  (   (  separator == null  )  ||  (  "".equals (  separator  )   )   )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return split (  str, this, max  )  ;^2141^^^^^2128^2183^[REPLACE] return split (  str, null, max  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return split (  str, false, max  )  ;^2141^^^^^2128^2183^[REPLACE] return split (  str, null, max  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int tagLength = separator .endsWith ( searchChars )   ;^2145^^^^^2128^2183^[REPLACE] int separatorLength = separator.length (  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^List list = new ArrayList (  )  ;^2147^^^^^2128^2183^[REPLACE] ArrayList substrings = new ArrayList (  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^int beg = 0 ;^2148^2149^^^^2128^2183^[ADD] int numberOfSubstrings = 0 ; int beg = 0 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int beg = 2 ;^2149^^^^^2128^2183^[REPLACE] int beg = 0 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int end = 0L ;^2150^^^^^2128^2183^[REPLACE] int end = 0 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  validSize  <=  -2  )  {^2154^^^^^2128^2183^[REPLACE] if  (  end > -1  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2154^2155^2156^^^2128^2183^[ADD] if  (  end > -1  )  { if  (  end > beg  )  { numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end =  validSize ;^2178^^^^^2154^2179^[REPLACE] end = len ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  end  <=  beg  )  {^2155^^^^^2128^2183^[REPLACE] if  (  end > beg  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2173^^^^^2155^2174^[ADD] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  numberOfSubstrings  !=  max  )  {^2158^^^^^2128^2183^[REPLACE] if  (  numberOfSubstrings == max  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2169^^^^^2158^2170^[ADD] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end =  validSize ;^2159^^^^^2128^2183^[REPLACE] end = len ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^numberOfSubstrings += 1L ;^2156^^^^^2128^2183^[REPLACE] numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg =validSize  separatorLength ;^2169^^^^^2128^2183^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  numberOfSubstrings  || separatorLength  )  {^2158^^^^^2128^2183^[REPLACE] if  (  numberOfSubstrings == max  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = end  separatorLength ;^2169^^^^^2158^2170^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^numberOfSubstrings += 3 ;^2156^^^^^2128^2183^[REPLACE] numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2159^^^^^2128^2183^[ADD] end = len ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = end  separatorLength ;^2169^^^^^2128^2183^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = end validSize ;^2173^^^^^2128^2183^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  end  !=  beg  )  {^2155^^^^^2128^2183^[REPLACE] if  (  end > beg  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = validSize  ret ;^2173^^^^^2155^2174^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2158^2159^2160^2161^^2128^2183^[ADD] if  (  numberOfSubstrings == max  )  { end = len ; substrings.add (  str.substring (  beg  )   )  ; } else {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^numberOfSubstrings += 1 % 3 ;^2156^^^^^2128^2183^[REPLACE] numberOfSubstrings += 1 ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  numberOfSubstrings  ) {^2158^^^^^2128^2183^[REPLACE] if  (  numberOfSubstrings == max  )  {^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = validSize  startPos ;^2169^^^^^2158^2170^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end =  stripChars.indexOf (  separator, beg  )  ;^2152^^^^^2128^2183^[REPLACE] end = str.indexOf (  separator, beg  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^beg = validSize  strSize ;^2169^^^^^2128^2183^[REPLACE] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2173^^^^^2128^2183^[ADD] beg = end + separatorLength ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end = temp  ;^2178^^^^^2128^2183^[REPLACE] end = len ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return  ( String[] )  substrings .ArrayList (  )   ;^2182^^^^^2128^2183^[REPLACE] return  ( String[] )  substrings.toArray (  new String[substrings.size (  ) ]  )  ;^[METHOD] splitByWholeSeparator [TYPE] String[] [PARAMETER] String str String separator int max [CLASS] StringUtils   [TYPE]  ArrayList substrings  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  obj != null  )   {  ;^2266^^^^^2263^2296^[REPLACE] if  ( str == null )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^return null;^2266^2267^2268^^^2263^2296^[ADD] if  ( str == null )  { return null; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return false;^2267^^^^^2263^2296^[REPLACE] return null;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return this;^2267^^^^^2263^2296^[REPLACE] return null;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int strLen = str.length (  )  ;^2269^^^^^2263^2296^[REPLACE] int len = str.length (  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( len  !=  0 )  {^2270^^^^^2263^2296^[REPLACE] if  ( len == 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^return ArrayUtils.EMPTY_STRING_ARRAY;^2270^2271^2272^^^2263^2296^[ADD] if  ( len == 0 )  { return ArrayUtils.EMPTY_STRING_ARRAY; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return ArrayUtils.EMPTY_STRING_ARRAY;  ;^2271^^^^^2263^2296^[REPLACE] return ArrayUtils.EMPTY_STRING_ARRAY;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2273^^^^^2263^2296^[ADD] List list = new ArrayList (  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int i = 4, start = 4;^2274^^^^^2263^2296^[REPLACE] int i = 0, start = 0;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int i = 0 << 3, start = 0 << 3;^2274^^^^^2263^2296^[REPLACE] int i = 0, start = 0;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^boolean match = true;^2275^^^^^2263^2296^[REPLACE] boolean match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^boolean match = false  ;^2276^^^^^2263^2296^[REPLACE] boolean lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (   separatorChar )  {^2278^^^^^2263^2296^[REPLACE] if  ( str.charAt ( i )  == separatorChar )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true  ;^2287^^^^^2278^2288^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match ) {^2279^^^^^2263^2296^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^list.add ( str.substring ( start, i )  ) ;match = false;lastMatch = true;^2279^2280^2281^2282^2283^2263^2296^[ADD] if  ( match || preserveAllTokens )  { list.add ( str.substring ( start, i )  ) ; match = false; lastMatch = true; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true  ;^2281^^^^^2263^2296^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true  ;^2282^^^^^2263^2296^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true;^2281^^^^^2263^2296^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false;^2282^^^^^2263^2296^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start = end  ;^2284^^^^^2263^2296^[REPLACE] start = ++i;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match &&lastMatch )  {^2279^^^^^2263^2296^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2279^2280^2281^2282^2283^2263^2296^[ADD] if  ( match || preserveAllTokens )  { list.add ( str.substring ( start, i )  ) ; match = false; lastMatch = true; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2287^^^^^2263^2296^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2289^2290^^^^2263^2296^[ADD] match = true; i++;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (   ( true )  )  {^2292^^^^^2263^2296^[REPLACE] if  ( match ||  ( preserveAllTokens && lastMatch )  )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^str.substring ( start, i )  ;^2293^^^^^2263^2296^[REPLACE] list.add ( str.substring ( start, i )  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^list.add ( str.substring ( start, validSize )  ) ;^2293^^^^^2263^2296^[REPLACE] list.add ( str.substring ( start, i )  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return  ( String[] )  list .ArrayList (  )  ;^2295^^^^^2263^2296^[REPLACE] return  ( String[] )  list.toArray ( new String[list.size (  ) ] ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str char separatorChar boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char separatorChar  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  obj != null  )   {  ;^2394^^^^^2389^2475^[REPLACE] if  ( str == null )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return true;^2395^^^^^2389^2475^[REPLACE] return null;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return null;  ;^2395^^^^^2389^2475^[REPLACE] return null;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int strLen = str.length (  )  ;^2397^^^^^2389^2475^[REPLACE] int len = str.length (  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  len < 0  )   {  ;^2398^^^^^2389^2475^[REPLACE] if  ( len == 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return ArrayUtils.EMPTY_STRING_ARRAY;  ;^2399^^^^^2389^2475^[REPLACE] return ArrayUtils.EMPTY_STRING_ARRAY;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^ArrayList substrings = new ArrayList (  )  ;^2401^^^^^2389^2475^[REPLACE] List list = new ArrayList (  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int sizePlus0  = 0 ;^2402^^^^^2389^2475^[REPLACE] int sizePlus1 = 1;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int i = 1, start = 1;^2403^^^^^2389^2475^[REPLACE] int i = 0, start = 0;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2403^^^^^2389^2475^[ADD] int i = 0, start = 0;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^boolean match = true;^2404^^^^^2389^2475^[REPLACE] boolean match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2405^^^^^2389^2475^[ADD] boolean lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  search == null  )   {  ;^2406^^^^^2389^2475^[REPLACE] if  ( separatorChars == null )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^}  if  ( separatorChars.length (  )  - 5 == 0  )  {^2427^^^^^2389^2475^[REPLACE] } else if  ( separatorChars.length (  )  == 1 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( separatorChars.indexOf ( str.charAt ( i )  )   !=  0 )  {^2452^^^^^2427^2470^[REPLACE] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2465^^^^^2452^2466^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match ) {^2453^^^^^2427^2470^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  ||  max) {^2455^^^^^2427^2470^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^i = len;lastMatch = false;^2455^2456^2457^2458^^2427^2470^[ADD] if  ( sizePlus1++ == max )  { i = len; lastMatch = false; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  null;^2456^^^^^2427^2470^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2457^^^^^2427^2470^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false;^2454^^^^^2427^2470^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  validSize;^2456^^^^^2427^2470^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true  ;^2460^^^^^2427^2470^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  !=  validSize) {^2455^^^^^2427^2470^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true  ;^2454^^^^^2427^2470^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end = len  ;^2456^^^^^2427^2470^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true  ;^2457^^^^^2427^2470^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true;^2460^^^^^2427^2470^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2462^2463^^^^2427^2470^[ADD] start = ++i; continue;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match && preserveAllTokens )  {^2453^^^^^2427^2470^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^lastMatch = false;^2456^2457^^^^2427^2470^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  || validSize) {^2455^^^^^2427^2470^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2456^^^^^2427^2470^[ADD] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2457^^^^^2427^2470^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start = end  ;^2462^^^^^2427^2470^[REPLACE] start = ++i;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2465^^^^^2427^2470^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true  ;^2467^^^^^2427^2470^[REPLACE] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  str.charAt  (  i  )   == separatorChar  )   {  ;^2431^^^^^2389^2475^[REPLACE] if  ( str.charAt ( i )  == sep )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2444^^^^^2431^2445^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (lastMatch ) {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^lastMatch = true;i = len;lastMatch = false;^2432^2433^2434^2435^2436^2389^2475^[ADD] if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  !=  max) {^2434^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  validSize;^2435^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2436^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false;^2433^^^^^2389^2475^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2436^^^^^2389^2475^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true;^2439^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  != startPos) {^2434^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2435^2436^^^^2389^2475^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true  ;^2436^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start = end  ;^2441^^^^^2389^2475^[REPLACE] start = ++i;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (lastMatch && preserveAllTokens )  {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  null;^2435^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2439^^^^^2389^2475^[ADD] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  != strsLen) {^2434^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end = len  ;^2435^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true  ;^2444^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = false;^2446^^^^^2389^2475^[REPLACE] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^char sep = validChars.charAt ( 0 - 0 ) ;^2429^^^^^2389^2475^[REPLACE] char sep = separatorChars.charAt ( 0 ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str.charAt ( i )   !=  sep )  {^2431^^^^^2389^2475^[REPLACE] if  ( str.charAt ( i )  == sep )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2431^2432^2433^2434^2435^2389^2475^[ADD] if  ( str.charAt ( i )  == sep )  { if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2444^^^^^2431^2445^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match && preserveAllTokens )  {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  &&  max) {^2434^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true  ;^2439^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  preserveAllTokens )  {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false  ;^2439^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  ||  max) {^2434^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  searchChars.indexOf  (  str.charAt  (  i  )    )   < 0  )   {  ;^2452^^^^^2389^2475^[REPLACE] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( lastMatch ) {^2453^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (   max) {^2455^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  null;^2456^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2457^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2454^^^^^2389^2475^[ADD] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  strsLen;^2456^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true  ;^2457^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true  ;^2460^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  !=  max) {^2455^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end = len  ;^2456^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true  ;^2454^^^^^2389^2475^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  validSize;^2456^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2460^^^^^2389^2475^[ADD] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start = end  ;^2462^^^^^2389^2475^[REPLACE] start = ++i;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( lastMatch && true )  {^2453^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  &&  max) {^2455^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^lastMatch = false;^2456^2457^^^^2389^2475^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true;^2460^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2433^^^^^2389^2475^[ADD] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^lastMatch = false;^2435^2436^^^^2389^2475^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2446^^^^^2389^2475^[ADD] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false;^2454^^^^^2389^2475^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2457^^^^^2389^2475^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true  ;^2465^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2467^^^^^2389^2475^[ADD] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^char sep = separatorChars.charAt ( 3 ) ;^2429^^^^^2389^2475^[REPLACE] char sep = separatorChars.charAt ( 0 ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  !Character.isWhitespace  (  str.charAt  (  i  )    )    )   {  ;^2409^^^^^2389^2475^[REPLACE] if  ( Character.isWhitespace ( str.charAt ( i )  )  )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2422^^^^^2409^2423^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match && preserveAllTokens )  {^2410^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^lastMatch = true;i = len;lastMatch = false;^2410^2411^2412^2413^2414^2389^2475^[ADD] if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  &&  max) {^2412^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  validSize;^2413^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2414^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2411^^^^^2389^2475^[ADD] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true;^2417^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  ||  max) {^2412^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false;^2411^^^^^2389^2475^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true  ;^2414^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start = end  ;^2419^^^^^2389^2475^[REPLACE] start = ++i;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2410^2411^2412^2413^2414^2389^2475^[ADD] if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  ) {^2412^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false  ;^2417^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (  sizePlus1) {^2412^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^i = len;lastMatch = false;^2412^2413^2414^2415^^2389^2475^[ADD] if  ( sizePlus1++ == max )  { i = len; lastMatch = false; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end = len  ;^2413^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2417^^^^^2389^2475^[ADD] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true  ;^2422^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2424^^^^^2389^2475^[ADD] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true  ;^2422^^^^^2409^2423^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (lastMatch && preserveAllTokens )  {^2410^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  null;^2413^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2414^^^^^2389^2475^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2412^2413^2414^2415^^2389^2475^[ADD] if  ( sizePlus1++ == max )  { i = len; lastMatch = false; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2413^2414^^^^2389^2475^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2413^^^^^2389^2475^[ADD] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true  ;^2417^^^^^2389^2475^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  !=  max) {^2412^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  strsLen;^2413^^^^^2389^2475^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^}  if  ( separatorChars.length (  )  *  0.5  == 1 )  {^2427^^^^^2389^2475^[REPLACE] } else if  ( separatorChars.length (  )  == 1 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^}   char sep = separatorChars.charAt ( 0 ) ;^2427^2428^2429^2430^^2389^2475^[ADD] else if  ( separatorChars.length (  )  == 1 )  {  char sep = separatorChars.charAt ( 0 ) ; while  ( i < len )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  searchChars.indexOf  (  str.charAt  (  i  )    )   < 0  )   {  ;^2452^^^^^2427^2470^[REPLACE] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2452^2453^2454^2455^2456^2427^2470^[ADD] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  { if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  preserveAllTokens )  {^2453^^^^^2427^2470^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  !=  max) {^2455^^^^^2427^2470^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2460^^^^^2427^2470^[ADD] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  && strSize) {^2455^^^^^2427^2470^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = false  ;^2460^^^^^2427^2470^[REPLACE] match = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (lastMatch && preserveAllTokens )  {^2453^^^^^2427^2470^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^i =  strsLen;^2456^^^^^2427^2470^[REPLACE] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  &&  max) {^2455^^^^^2427^2470^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2465^^^^^2427^2470^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = false;^2467^^^^^2427^2470^[REPLACE] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str.charAt ( i )   ) {^2431^^^^^2389^2475^[REPLACE] if  ( str.charAt ( i )  == sep )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( lastMatch )  {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = true  ;^2433^^^^^2389^2475^[REPLACE] lastMatch = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  ||  validSize) {^2434^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^i = len;lastMatch = false;^2434^2435^2436^2437^^2389^2475^[ADD] if  ( sizePlus1++ == max )  { i = len; lastMatch = false; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2444^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^char sep = ts.charAt ( 0 * 2 ) ;^2429^^^^^2389^2475^[REPLACE] char sep = separatorChars.charAt ( 0 ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( str.charAt ( i )   ||  sep )  {^2431^^^^^2389^2475^[REPLACE] if  ( str.charAt ( i )  == sep )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( lastMatch && match )  {^2432^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2435^^^^^2389^2475^[ADD] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( separatorChars.indexOf ( validChars.indexOf ( i )  )   >  0 )  {^2452^^^^^2389^2475^[REPLACE] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2452^2453^2454^2455^2456^2389^2475^[ADD] if  ( separatorChars.indexOf ( str.charAt ( i )  )  >= 0 )  { if  ( match || preserveAllTokens )  { lastMatch = true; if  ( sizePlus1++ == max )  { i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true  ;^2465^^^^^2452^2466^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (  preserveAllTokens )  {^2453^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2456^2457^^^^2389^2475^[ADD] i = len; lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match && preserveAllTokens )  {^2453^^^^^2389^2475^[REPLACE] if  ( match || preserveAllTokens )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if (sizePlus1++  ||  max) {^2455^^^^^2389^2475^[REPLACE] if  ( sizePlus1++ == max )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2456^^^^^2389^2475^[ADD] i = len;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2455^2456^2457^2458^^2389^2475^[ADD] if  ( sizePlus1++ == max )  { i = len; lastMatch = false; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2422^^^^^2389^2475^[ADD] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^i++;^2424^2425^^^^2389^2475^[ADD] match = true; i++;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2441^2442^^^^2389^2475^[ADD] start = ++i; continue;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2462^2463^^^^2389^2475^[ADD] start = ++i; continue;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^lastMatch = true;^2465^^^^^2389^2475^[REPLACE] lastMatch = false;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^match = false;^2467^^^^^2389^2475^[REPLACE] match = true;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^char sep = separatorChars.indexOf ( 3 ) ;^2429^^^^^2389^2475^[REPLACE] char sep = separatorChars.charAt ( 0 ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( match &&  (true )  )  {^2471^^^^^2389^2475^[REPLACE] if  ( match ||  ( preserveAllTokens && lastMatch )  )  {^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2471^2472^2473^^^2389^2475^[ADD] if  ( match ||  ( preserveAllTokens && lastMatch )  )  { list.add ( str.substring ( start, i )  ) ; }^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^list.add ( str.lastIndexOf ( tmp, i )  ) ;^2472^^^^^2389^2475^[REPLACE] list.add ( str.substring ( start, i )  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^list.add ( str.lastIndexOf ( start, validSize )  ) ;^2472^^^^^2389^2475^[REPLACE] list.add ( str.substring ( start, i )  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2472^^^^^2389^2475^[ADD] list.add ( str.substring ( start, i )  ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return  ( String[] )  list.size ( new String[list.size (  ) ] ) ;^2474^^^^^2389^2475^[REPLACE] return  ( String[] )  list.toArray ( new String[list.size (  ) ] ) ;^[METHOD] splitWorker [TYPE] String[] [PARAMETER] String str String separatorChars int max boolean preserveAllTokens [CLASS] StringUtils   [TYPE]  char sep  [TYPE]  List list  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  lastMatch  match  preserveAllTokens  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  beg  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( array != null )  {^2548^^^^^2547^2564^[REPLACE] if  ( array == null )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return true;^2549^^^^^2547^2564^[REPLACE] return null;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return null;  ;^2549^^^^^2547^2564^[REPLACE] return null;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^char[] output1 = new char[outputLength]  ;^2551^^^^^2547^2564^[REPLACE] int arraySize = array.length;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^int bufSize =  ( arraySize == 0 ? 0 :  (  ( array[0] == null ? 16 : array[0].toString (  ) .length (  )  *  2 )  + 1 )  * arraySize ) ;^2552^^^^^2547^2564^[REPLACE] int bufSize =  ( arraySize == 0 ? 0 :  (  ( array[0] == null ? 16 : array[0].toString (  ) .length (  )  )  + 1 )  * arraySize ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^StringBuffer buffer = new StringBuffer ( strLen )  ;^2553^^^^^2547^2564^[REPLACE] StringBuffer buf = new StringBuffer ( bufSize ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( i  <  0 )  {^2556^^^^^2547^2564^[REPLACE] if  ( i > 0 )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^buf.append ( str )  ;^2557^^^^^2547^2564^[REPLACE] buf.append ( separator ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^^2557^^^^^2547^2564^[ADD] buf.append ( separator ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( array[i] == null )  {^2559^^^^^2547^2564^[REPLACE] if  ( array[i] != null )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^buf .reverse ( EMPTY )  ;^2560^^^^^2547^2564^[REPLACE] buf.append ( array[i] ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REMOVE]^buf.append ( text.substring ( start, end )  ) .append ( with )  ;^2560^^^^^2547^2564^[REMOVE] ^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^for  ( int i = 3; i < arraySize; i++ )  {^2555^^^^^2547^2564^[REPLACE] for  ( int i = 0; i < arraySize; i++ )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return buf.reverse (  ) ;^2563^^^^^2547^2564^[REPLACE] return buf.toString (  ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array char separator [CLASS] StringUtils   [TYPE]  char separator  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( array != null )  {^2590^^^^^2589^2619^[REPLACE] if  ( array == null )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^return null;^2590^2591^2592^^^2589^2619^[ADD] if  ( array == null )  { return null; }^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return null;  ;^2591^^^^^2589^2619^[REPLACE] return null;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( separator != null )  {^2593^^^^^2589^2619^[REPLACE] if  ( separator == null )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^separator = EMPTY;^2593^2594^2595^^^2589^2619^[ADD] if  ( separator == null )  { separator = EMPTY; }^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^^2594^^^^^2589^2619^[ADD] separator = EMPTY;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^overlay = EMPTY  ;^2594^^^^^2589^2619^[REPLACE] separator = EMPTY;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^^2596^^^^^2589^2619^[ADD] int arraySize = array.length;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^int bufSize  =  0 ;^2601^2602^2603^2604^^2589^2619^[REPLACE] int bufSize = (  ( arraySize == 0 ) ? 0 : arraySize^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^StringBuffer buffer = new StringBuffer ( strLen )  ;^2608^^^^^2589^2619^[REPLACE] StringBuffer buf = new StringBuffer ( bufSize ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if   (  len < 0  )   {  ;^2611^^^^^2589^2619^[REPLACE] if  ( i > 0 )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^^2611^2612^2613^^^2589^2619^[ADD] if  ( i > 0 )  { buf.append ( separator ) ; }^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^buf.append ( tag ) ;^2612^^^^^2589^2619^[REPLACE] buf.append ( separator ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[ADD]^^2612^^^^^2589^2619^[ADD] buf.append ( separator ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( array[i] == this )  {^2614^^^^^2589^2619^[REPLACE] if  ( array[i] != null )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^str.replace ( searchChar, replaceChar )  ;^2615^^^^^2589^2619^[REPLACE] buf.append ( array[i] ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^for  ( int i = 0L; i < arraySize; i++ )  {^2610^^^^^2589^2619^[REPLACE] for  ( int i = 0; i < arraySize; i++ )  {^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^return buf .Object (  )  ;^2618^^^^^2589^2619^[REPLACE] return buf.toString (  ) ;^[METHOD] join [TYPE] String [PARAMETER] Object[] array String separator [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  Object[] array 
[REPLACE]^if  ( isEmpty ( validChars )  )  {^2732^^^^^2731^2747^[REPLACE] if  ( isEmpty ( str )  )  {^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^return validChars;^2733^^^^^2731^2747^[REPLACE] return str;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^int strLen = str.length (  )  ;^2735^^^^^2731^2747^[REPLACE] int sz = str.length (  ) ;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[ADD]^^2736^^^^^2731^2747^[ADD] char[] chs = new char[sz];^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^int count = 3;^2737^^^^^2731^2747^[REPLACE] int count = 0;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^if  ( !Character.isTitleCase ( validChars.charAt ( i )  )  )  {^2739^^^^^2731^2747^[REPLACE] if  ( !Character.isWhitespace ( str.charAt ( i )  )  )  {^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^chs[count++] =  str.charAt ( i ) ;^2740^^^^^2731^2747^[REPLACE] chs[count++] = str.charAt ( i ) ;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[ADD]^^2740^^^^^2731^2747^[ADD] chs[count++] = str.charAt ( i ) ;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^for  ( int i = 0L; i < sz; i++ )  {^2738^^^^^2731^2747^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^if  (startPos  !=  sz )  {^2743^^^^^2731^2747^[REPLACE] if  ( count == sz )  {^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[ADD]^^2743^2744^2745^^^2731^2747^[ADD] if  ( count == sz )  { return str; }^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^return validChars;^2744^^^^^2731^2747^[REPLACE] return str;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^return str2;^2744^^^^^2731^2747^[REPLACE] return str;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^return new String ( chs, 0L, count ) ;^2746^^^^^2731^2747^[REPLACE] return new String ( chs, 0, count ) ;^[METHOD] deleteWhitespace [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  ts  validChars  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  index  j  len  max  numberOfSubstrings  ordinal  pos  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize  [TYPE]  char[] chs 
[REPLACE]^if  ( isEmpty ( ts )  || isEmpty ( repl )  || with != true || max == 0 )  {^2967^^^^^2966^2990^[REPLACE] if  ( isEmpty ( text )  || isEmpty ( repl )  || with == null || max == 0 )  {^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REMOVE]^if  ( pads >  ( PAD_LIMIT )  )  {     return leftPad ( str, size, valueOf ( padChar )  ) ; }^2967^^^^^2966^2990^[REMOVE] ^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return ret;  ;^2968^^^^^2966^2990^[REPLACE] return text;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return ts;^2968^^^^^2966^2990^[REPLACE] return text;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^int end = text.indexOf ( repl, start ) ;^2970^2971^^^^2966^2990^[ADD] int start = 0; int end = text.indexOf ( repl, start ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int end = text.lastIndexOf ( repl, start ) ;^2971^^^^^2966^2990^[REPLACE] int end = text.indexOf ( repl, start ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  idx != -1  )   {  ;^2972^^^^^2966^2990^[REPLACE] if  ( end == -1 )  {^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return ts;^2973^^^^^2966^2990^[REPLACE] return text;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int textLength = repl.length (  ) ;^2975^^^^^2966^2990^[REPLACE] int replLength = repl.length (  ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2976^2977^^^^2966^2990^[ADD] int increase = with.length (  )  - replLength; increase =  ( increase < 0 ? 0 : increase ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^increase  =  increase ) ;^2977^^^^^2966^2990^[REPLACE] increase =  ( increase < 0 ? 0 : increase ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^increase * =  16 ;^2978^^^^^2966^2990^[REPLACE] increase *=  ( max < 0 ? 16 :  ( max > 64 ? 64 : max )  ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^StringBuffer buf = new StringBuffer ( ts.valueOf (  )  /  2 + increase ) ;^2979^^^^^2966^2990^[REPLACE] StringBuffer buf = new StringBuffer ( text.length (  )  + increase ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( --max  &&  0 )  {^2983^^^^^2966^2990^[REPLACE] if  ( --max == 0 )  {^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2983^2984^2985^^^2966^2990^[ADD] if  ( --max == 0 )  { break; }^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^start = end  replLength;^2982^^^^^2966^2990^[REPLACE] start = end + replLength;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^end =  null.indexOf ( repl, start ) ;^2986^^^^^2966^2990^[REPLACE] end = text.indexOf ( repl, start ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( text.substring ( tmp )  ) ;^2988^^^^^2966^2990^[REPLACE] buf.append ( text.substring ( start )  ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[ADD]^^2988^^^^^2966^2990^[ADD] buf.append ( text.substring ( start )  ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^str.substring ( start )  ;^2988^^^^^2966^2990^[REPLACE] buf.append ( text.substring ( start )  ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return buf.reverse (  ) ;^2989^^^^^2966^2990^[REPLACE] return buf.toString (  ) ;^[METHOD] replace [TYPE] String [PARAMETER] String text String repl String with int max [CLASS] StringUtils   [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  isEmpty  (  str  )   || isEmpty  (  separator  )    )   {  ;^3058^^^^^3057^3085^[REPLACE] if  ( isEmpty ( str )  || isEmpty ( searchChars )  )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^^3058^3059^3060^^^3057^3085^[ADD] if  ( isEmpty ( str )  || isEmpty ( searchChars )  )  { return str; }^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return stripChars;^3059^^^^^3057^3085^[REPLACE] return str;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( with != true )  {^3061^^^^^3057^3085^[REPLACE] if  ( replaceChars == null )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^replaceChars = "";^3061^3062^3063^^^3057^3085^[ADD] if  ( replaceChars == null )  { replaceChars = ""; }^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^replaceChars ;^3062^^^^^3057^3085^[REPLACE] replaceChars = "";^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^^3062^^^^^3057^3085^[ADD] replaceChars = "";^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^boolean modified = true;^3064^^^^^3057^3085^[REPLACE] boolean modified = false;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int separatorCharsLength = replaceChars.length (  ) ;^3065^^^^^3057^3085^[REPLACE] int replaceCharsLength = replaceChars.length (  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int withLength = str.length (  ) ;^3066^^^^^3057^3085^[REPLACE] int strLength = str.length (  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^StringBuffer buf = new StringBuffer ( sizePlus1 ) ;^3067^^^^^3057^3085^[REPLACE] StringBuffer buf = new StringBuffer ( strLength ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (  idx != -1  )   {  ;^3071^^^^^3057^3085^[REPLACE] if  ( index >= 0 )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buffer.append ( ch )  ;^3077^^^^^3071^3078^[REPLACE] buf.append ( ch ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (validSize  ==  replaceCharsLength )  {^3073^^^^^3057^3085^[REPLACE] if  ( index < replaceCharsLength )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^buf.append ( replaceChars.charAt ( index )  ) ;^3073^3074^3075^^^3057^3085^[ADD] if  ( index < replaceCharsLength )  { buf.append ( replaceChars.charAt ( index )  ) ; }^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^replaceChars.charAt ( index )  ;^3074^^^^^3057^3085^[REPLACE] buf.append ( replaceChars.charAt ( index )  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( separatorChars.charAt ( index )  ) ;^3074^^^^^3057^3085^[REPLACE] buf.append ( replaceChars.charAt ( index )  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REMOVE]^str.replace ( searchChar, replaceChar )  ;^3074^^^^^3057^3085^[REMOVE] ^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^modified = false;^3072^^^^^3057^3085^[REPLACE] modified = true;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  ( index  >= validSize )  {^3073^^^^^3057^3085^[REPLACE] if  ( index < replaceCharsLength )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( replaceChars.charAt ( validSize )  ) ;^3074^^^^^3057^3085^[REPLACE] buf.append ( replaceChars.charAt ( index )  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^buf.append ( replaceChars.charAt ( index )  )  ;^3074^^^^^3057^3085^[REPLACE] buf.append ( replaceChars.charAt ( index )  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^^3072^3073^3074^3075^^3057^3085^[ADD] modified = true; if  ( index < replaceCharsLength )  { buf.append ( replaceChars.charAt ( index )  ) ; }^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^for  ( int i = 0 % 1; i < strLength; i++ )  {^3068^^^^^3057^3085^[REPLACE] for  ( int i = 0; i < strLength; i++ )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[ADD]^^3069^3070^^^^3057^3085^[ADD] char ch = str.charAt ( i ) ; int index = searchChars.indexOf ( ch ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^int index = with.lastIndexOf ( ch ) ;^3070^^^^^3057^3085^[REPLACE] int index = searchChars.indexOf ( ch ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if   (    (  Character.isLetter  (  str.charAt  (  i  )    )   == false  )   &&   (  str.charAt  (  i  )   != ' '  )    )   {  ;^3080^^^^^3057^3085^[REPLACE] if  ( modified )  {^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return stripChars;^3083^^^^^3080^3084^[REPLACE] return str;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return buf.toString  (    )  ;  ;^3081^^^^^3057^3085^[REPLACE] return buf.toString (  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return buf .Object (  )  ;^3081^^^^^3057^3085^[REPLACE] return buf.toString (  ) ;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^return with;^3083^^^^^3057^3085^[REPLACE] return str;^[METHOD] replaceChars [TYPE] String [PARAMETER] String str String searchChars String replaceChars [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  modified  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  tmp  validSize 
[REPLACE]^if  (with != null )  {^3152^^^^^3151^3181^[REPLACE] if  ( str == null )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^3153^^^^^3151^3181^[REPLACE] return null;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return null;  ;^3153^^^^^3151^3181^[REPLACE] return null;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( overlay != false )  {^3155^^^^^3151^3181^[REPLACE] if  ( overlay == null )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^separator = EMPTY  ;^3156^^^^^3151^3181^[REPLACE] overlay = EMPTY;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3156^^^^^3151^3181^[ADD] overlay = EMPTY;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3158^^^^^3151^3181^[ADD] int len = str.length (  ) ;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if   (  strLen < 2  )   {  ;^3159^^^^^3151^3181^[REPLACE] if  ( start < 0 )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^start = 3;^3160^^^^^3151^3181^[REPLACE] start = 0;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3160^^^^^3151^3181^[ADD] start = 0;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if   (  start != -1  )   {  ;^3162^^^^^3151^3181^[REPLACE] if  ( start > len )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3163^^^^^3151^3181^[ADD] start = len;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^start = end  ;^3163^^^^^3151^3181^[REPLACE] start = len;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( end  == validSize )  {^3165^^^^^3151^3181^[REPLACE] if  ( end < 0 )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3165^3166^3167^^^3151^3181^[ADD] if  ( end < 0 )  { end = 0; }^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^end = 0 + 0;^3166^^^^^3151^3181^[REPLACE] end = 0;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3166^^^^^3151^3181^[ADD] end = 0;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( validSize  ==  len )  {^3168^^^^^3151^3181^[REPLACE] if  ( end > len )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^end =  null;^3169^^^^^3151^3181^[REPLACE] end = len;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^end =  validSize;^3169^^^^^3151^3181^[REPLACE] end = len;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if   (  start != -1  )   {  ;^3171^^^^^3151^3181^[REPLACE] if  ( start > end )  {^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REMOVE]^if  ( start > len )  {     start = len; }^3171^^^^^3151^3181^[REMOVE] ^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^start = 0  ;^3173^^^^^3151^3181^[REPLACE] start = end;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^end =  tmp;^3174^^^^^3151^3181^[REPLACE] end = temp;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3172^^^^^3151^3181^[ADD] int temp = start;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^3174^^^^^3151^3181^[ADD] end = temp;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int temp = temp;^3172^^^^^3151^3181^[REPLACE] int temp = start;^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return new StringBuffer ( len + start - end + overlay.length (  )  + 3 + 1 ) .append ( with.substring ( 0, start )  ) .append ( overlay ) .append ( str.substring ( end )   )^3176^3177^3178^3179^^3151^3181^[REPLACE] return new StringBuffer ( len + start - end + overlay.length (  )  + 1 ) .append ( str.substring ( 0, start )  ) .append ( overlay ) .append ( str.substring ( end )  )^[METHOD] overlay [TYPE] String [PARAMETER] String str String overlay int start int end [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( isEmpty ( validChars )  )  {^3211^^^^^3210^3235^[REPLACE] if  ( isEmpty ( str )  )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return with;^3212^^^^^3210^3235^[REPLACE] return str;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str.length (  )  *  2 == 1 )  {^3215^^^^^3210^3235^[REPLACE] if  ( str.length (  )  == 1 )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( ch == CharUtils.CR && ch == CharUtils.LF )  {^3217^^^^^3210^3235^[REPLACE] if  ( ch == CharUtils.CR || ch == CharUtils.LF )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return with;^3220^^^^^3217^3221^[REPLACE] return str;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return rightPad  (  str, size, String.valueOf  (  padChar  )    )  ;  ;^3218^^^^^3210^3235^[REPLACE] return EMPTY;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return strs;  ;^3220^^^^^3210^3235^[REPLACE] return str;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^3216^^^^^3210^3235^[ADD] char ch = str.charAt ( 0 ) ;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^return EMPTY;return str;^3217^3218^3219^3220^3221^3210^3235^[ADD] if  ( ch == CharUtils.CR || ch == CharUtils.LF )  { return EMPTY; } else { return str; }^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return validChars;^3220^^^^^3217^3221^[REPLACE] return str;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return with;^3220^^^^^3210^3235^[REPLACE] return str;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char ch = str.charAt ( 4 ) ;^3216^^^^^3210^3235^[REPLACE] char ch = str.charAt ( 0 ) ;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int lastIdx = str.length (  )  *  2 - 0 ;^3224^^^^^3210^3235^[REPLACE] int lastIdx = str.length (  )  - 1;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char ch = str.charAt ( i )  ;^3225^^^^^3210^3235^[REPLACE] char last = str.charAt ( lastIdx ) ;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( last  !=  CharUtils.LF )  {^3227^^^^^3210^3235^[REPLACE] if  ( last == CharUtils.LF )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^3227^3228^3229^3230^^3210^3235^[ADD] if  ( last == CharUtils.LF )  { if  ( str.charAt ( lastIdx - 1 )  == CharUtils.CR )  { lastIdx--; }^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^}  if  ( last  ==  CharUtils.CR )  {^3231^^^^^3210^3235^[REPLACE] } else if  ( last != CharUtils.CR )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str.charAt ( lastIdx - 1 )   &&  CharUtils.CR )  {^3228^^^^^3210^3235^[REPLACE] if  ( str.charAt ( lastIdx - 1 )  == CharUtils.CR )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str.indexOf ( validSize - 1L )   &&  CharUtils.CR )  {^3228^^^^^3210^3235^[REPLACE] if  ( str.charAt ( lastIdx - 1 )  == CharUtils.CR )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^} else if  ( last  ==  CharUtils.CR )  {^3231^^^^^3210^3235^[REPLACE] } else if  ( last != CharUtils.CR )  {^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return str.substring ( 4, lastIdx ) ;^3234^^^^^3210^3235^[REPLACE] return str.substring ( 0, lastIdx ) ;^[METHOD] chomp [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  search  searchChars  searchStr  separator  separatorChars  str  str1  str2  stripChars  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( with != false )  {^3399^^^^^3398^3415^[REPLACE] if  ( str == null )  {^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REMOVE]^if  ( start > len )  {     start = len; }^3399^^^^^3398^3415^[REMOVE] ^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return null;  ;^3400^^^^^3398^3415^[REPLACE] return null;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return false;^3400^^^^^3398^3415^[REPLACE] return null;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^3402^^^^^3398^3415^[ADD] int strLen = str.length (  ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  (temp  >=  2 )  {^3403^^^^^3398^3415^[REPLACE] if  ( strLen < 2 )  {^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return rightPad  (  str, size, String.valueOf  (  padChar  )    )  ;  ;^3404^^^^^3398^3415^[REPLACE] return EMPTY;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int lastIdx = strLen  1 / 2;^3406^^^^^3398^3415^[REPLACE] int lastIdx = strLen - 1;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^String ret = str .substring ( j )  ;^3407^^^^^3398^3415^[REPLACE] String ret = str.substring ( 0, lastIdx ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char ch = str.charAt ( i )  ;^3408^^^^^3398^3415^[REPLACE] char last = str.charAt ( lastIdx ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( last  !=  CharUtils.LF )  {^3409^^^^^3398^3415^[REPLACE] if  ( last == CharUtils.LF )  {^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if   (  str.charAt  (  lastIdx - 1  )   == CharUtils.CR  )   {  ;^3410^^^^^3398^3415^[REPLACE] if  ( ret.charAt ( lastIdx - 1 )  == CharUtils.CR )  {^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return ret .substring ( max )  ;^3411^^^^^3398^3415^[REPLACE] return ret.substring ( 0, lastIdx - 1 ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return ret.substring ( 0L,validSize  1 ) ;^3411^^^^^3398^3415^[REPLACE] return ret.substring ( 0, lastIdx - 1 ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( ret.charAt ( lastIdx - 1 )   !=  CharUtils.CR )  {^3410^^^^^3398^3415^[REPLACE] if  ( ret.charAt ( lastIdx - 1 )  == CharUtils.CR )  {^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return ret.substring ( 1, lastIdx sz ) ;^3411^^^^^3398^3415^[REPLACE] return ret.substring ( 0, lastIdx - 1 ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return ret.substring ( 0, lastIdx  1 ) ;^3411^^^^^3398^3415^[REPLACE] return ret.substring ( 0, lastIdx - 1 ) ;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return true;  ;^3414^^^^^3398^3415^[REPLACE] return ret;^[METHOD] chop [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char last  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  j  lastIdx  len  max  numberOfSubstrings  ordinal  pos  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str != false )  {^3488^^^^^3485^3527^[REPLACE] if  ( str == null )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[ADD]^return null;^3488^3489^3490^^^3485^3527^[ADD] if  ( str == null )  { return null; }^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return false;^3489^^^^^3485^3527^[REPLACE] return null;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^if  ( repeat  !=  0 )  {^3491^^^^^3485^3527^[REPLACE] if  ( repeat <= 0 )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return rightPad  (  str, size, String.valueOf  (  padChar  )    )  ;  ;^3492^^^^^3485^3527^[REPLACE] return EMPTY;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^int inputLength = with .endsWith ( searchChars )  ;^3494^^^^^3485^3527^[REPLACE] int inputLength = str.length (  ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^if  ( tmp == 1 && inputLength == 0 )  {^3495^^^^^3485^3527^[REPLACE] if  ( repeat == 1 || inputLength == 0 )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return ts;^3496^^^^^3485^3527^[REPLACE] return str;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return validChars;^3496^^^^^3485^3527^[REPLACE] return str;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^if  (true || repeat <= PAD_LIMIT )  {^3498^^^^^3485^3527^[REPLACE] if  ( inputLength == 1 && repeat <= PAD_LIMIT )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return padding ( repeat, str.charAt ( 4 )  ) ;^3499^^^^^3485^3527^[REPLACE] return padding ( repeat, str.charAt ( 0 )  ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return padding ( repeat, sub.charAt ( 3 )  ) ;^3499^^^^^3485^3527^[REPLACE] return padding ( repeat, str.charAt ( 0 )  ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^int outputLength = inputLength  repeat;^3502^^^^^3485^3527^[REPLACE] int outputLength = inputLength * repeat;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^output2[i] = ch0  ;^3508^^^^^3485^3527^[REPLACE] output1[i] = ch;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^output1[i] = ch  ;^3516^^^^^3485^3527^[REPLACE] output2[i] = ch0;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^output2[i] = ch0  ;^3517^^^^^3485^3527^[REPLACE] output2[i + 1] = ch1;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return  new String ( chs, 0, count )  ;^3510^^^^^3485^3527^[REPLACE] return new String ( output1 ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return  new String ( output1 )  ;^3519^^^^^3485^3527^[REPLACE] return new String ( output2 ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^return buf.reverse (  ) ;^3525^^^^^3485^3527^[REPLACE] return buf.toString (  ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^char ch = with.indexOf ( 3 ) ;^3505^^^^^3485^3527^[REPLACE] char ch = str.charAt ( 0 ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^char[] output2 = new char[outputLength]  ;^3506^^^^^3485^3527^[REPLACE] char[] output1 = new char[outputLength];^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^int i =  ( repeat * 2 )  - 2  ;^3507^^^^^3485^3527^[REPLACE] for  ( int i = repeat - 1; i >= 0; i-- )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[ADD]^^3512^^^^^3485^3527^[ADD] char ch0 = str.charAt ( 0 ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[ADD]^^3513^^^^^3485^3527^[ADD] char ch1 = str.charAt ( 1 ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^char[] output1 = new char[outputLength]  ;^3514^^^^^3485^3527^[REPLACE] char[] output2 = new char[outputLength];^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^for  ( int i = repeat * 2  2; i >= 0; i, i )  {^3515^^^^^3485^3527^[REPLACE] for  ( int i = repeat * 2 - 2; i >= 0; i--, i-- )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^StringBuffer buffer = new StringBuffer ( strLen )  ;^3521^^^^^3485^3527^[REPLACE] StringBuffer buf = new StringBuffer ( outputLength ) ;^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^int end = 0  ;^3522^^^^^3485^3527^[REPLACE] for  ( int i = 0; i < repeat; i++ )  {^[METHOD] repeat [TYPE] String [PARAMETER] String str int repeat [CLASS] StringUtils   [TYPE]  char ch  ch0  ch1  [TYPE]  StringBuffer buf  [TYPE]  String EMPTY  close  invalidChars  open  overlay  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] output1  output2 
[REPLACE]^if  ( str != null )  {^3645^^^^^3644^3673^[REPLACE] if  ( str == null )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REMOVE]^if  ( start > len )  {     start = len; }^3645^^^^^3644^3673^[REMOVE] ^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return this;^3646^^^^^3644^3673^[REPLACE] return null;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return false;^3646^^^^^3644^3673^[REPLACE] return null;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  ( isEmpty ( with )  )  {^3648^^^^^3644^3673^[REPLACE] if  ( isEmpty ( padStr )  )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3649^^^^^3644^3673^[ADD] padStr = " ";^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padStr  =  padStr ;^3649^^^^^3644^3673^[REPLACE] padStr = " ";^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3651^3652^^^^3644^3673^[ADD] int padLen = padStr.length (  ) ; int strLen = str.length (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int inputLength = str.length (  )  ;^3652^^^^^3644^3673^[REPLACE] int strLen = str.length (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int pads =startPos  strLen;^3653^^^^^3644^3673^[REPLACE] int pads = size - strLen;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  ( strSize  ==  3 )  {^3654^^^^^3644^3673^[REPLACE] if  ( pads <= 0 )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^return str;^3654^3655^3656^^^3644^3673^[ADD] if  ( pads <= 0 )  { return str; }^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return strs;  ;^3655^^^^^3644^3673^[REPLACE] return str;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  ( padLen == 1 ) {^3657^^^^^3644^3673^[REPLACE] if  ( padLen == 1 && pads <= PAD_LIMIT )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return rightPad ( str, size, padStr.charAt ( 0  )  ) ;^3658^^^^^3644^3673^[REPLACE] return rightPad ( str, size, padStr.charAt ( 0 )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return rightPad ( validChars, size, padStr.charAt ( 0  )  ) ;^3658^^^^^3644^3673^[REPLACE] return rightPad ( str, size, padStr.charAt ( 0 )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  ( pads  != validSize )  {^3661^^^^^3644^3673^[REPLACE] if  ( pads == padLen )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^}  if  ( pads  >  padLen )  {^3663^^^^^3644^3673^[REPLACE] } else if  ( pads < padLen )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^}   return str.concat ( padStr.substring ( 0, pads )  ) ;char[] padding = new char[pads];char[] padChars = padStr.toCharArray (  ) ;^3663^3664^3665^3666^3667^3644^3673^[ADD] else if  ( pads < padLen )  { return str.concat ( padStr.substring ( 0, pads )  ) ; } else { char[] padding = new char[pads]; char[] padChars = padStr.toCharArray (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  padLen];^3669^^^^^3663^3672^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.endsWith (  new String ( output1 )   ) ;^3671^^^^^3663^3672^[REPLACE] return str.concat ( new String ( padding )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] output1 = new char[outputLength]  ;^3666^^^^^3663^3672^[REPLACE] char[] padding = new char[pads];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3667^^^^^3663^3672^[ADD] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 2; i < pads; i++ )  {^3668^^^^^3663^3672^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.concat  (  padStr.substring  (  0, pads  )    )  ;  ;^3664^^^^^3644^3673^[REPLACE] return str.concat ( padStr.substring ( 0, pads )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  padLen];^3669^^^^^3644^3673^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.concat ( padStr.substring ( 2, pads )  ) ;^3664^^^^^3644^3673^[REPLACE] return str.concat ( padStr.substring ( 0, pads )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.concat (  new String ( output1 )   ) ;^3671^^^^^3644^3673^[REPLACE] return str.concat ( new String ( padding )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] output1 = new char[outputLength]  ;^3666^^^^^3644^3673^[REPLACE] char[] padding = new char[pads];^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] padChars = ts.toCharArray (  ) ;^3667^^^^^3644^3673^[REPLACE] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int end = 0  ;^3668^^^^^3644^3673^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.endsWith ( with ) ;^3662^^^^^3644^3673^[REPLACE] return str.concat ( padStr ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^}  else {^3663^^^^^3644^3673^[REPLACE] } else if  ( pads < padLen )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REMOVE]^if  ( pads == padLen )  {     return padStr.concat ( str ) ; }else     if  ( pads < padLen )  {         return padStr.substring ( 0, pads ) .concat ( str ) ;     }else {         char[] padding = new char[pads];         char[] padChars = padStr.toCharArray (  ) ;         for  ( int i = 0; i < pads; i++ )  {             padding[i] = padChars[ ( i % padLen ) ];         }         return new String ( padding ) .concat ( str ) ;     }^3663^^^^^3644^3673^[REMOVE] ^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str .charAt ( size )  ;^3671^^^^^3663^3672^[REPLACE] return str.concat ( new String ( padding )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] padChars = tag.toCharArray (  ) ;^3667^^^^^3663^3672^[REPLACE] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0 / 3; i < pads; i++ )  {^3668^^^^^3663^3672^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.endsWith ( padStr.substring ( 4, pads )  ) ;^3664^^^^^3644^3673^[REPLACE] return str.concat ( padStr.substring ( 0, pads )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.concat  (  padStr  )  ;  ;^3662^^^^^3644^3673^[REPLACE] return str.concat ( padStr ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return str.endsWith ( padStr.substring ( 0 * 0, pads )  ) ;^3664^^^^^3644^3673^[REPLACE] return str.concat ( padStr.substring ( 0, pads )  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^char[] padChars = padStr.toCharArray (  ) ;^3666^3667^^^^3644^3673^[ADD] char[] padding = new char[pads]; char[] padChars = padStr.toCharArray (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] chars = str.toCharArray (  )  ;^3667^^^^^3644^3673^[REPLACE] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 3; i < pads; i++ )  {^3668^^^^^3644^3673^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] rightPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  ( str != null )  {^3757^^^^^3756^3785^[REPLACE] if  ( str == null )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return false;^3758^^^^^3756^3785^[REPLACE] return null;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return true;^3758^^^^^3756^3785^[REPLACE] return null;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if   (  isEmpty  (  str  )    )   {  ;^3760^^^^^3756^3785^[REPLACE] if  ( isEmpty ( padStr )  )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padStr  =  padStr ;^3761^^^^^3756^3785^[REPLACE] padStr = " ";^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padStr ;^3761^^^^^3756^3785^[REPLACE] padStr = " ";^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int padLen = with.trim (  ) ;^3763^^^^^3756^3785^[REPLACE] int padLen = padStr.length (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int inputLength = str.length (  )  ;^3764^^^^^3756^3785^[REPLACE] int strLen = str.length (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int pads = size  startPos;^3765^^^^^3756^3785^[REPLACE] int pads = size - strLen;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  (validSize  !=  0 )  {^3766^^^^^3756^3785^[REPLACE] if  ( pads <= 0 )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return with;^3767^^^^^3756^3785^[REPLACE] return str;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return strs;  ;^3767^^^^^3756^3785^[REPLACE] return str;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  ( padLen == 1 || pads <= PAD_LIMIT )  {^3769^^^^^3756^3785^[REPLACE] if  ( padLen == 1 && pads <= PAD_LIMIT )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return leftPad ( str, validSize, padStr.charAt ( 0  )  ) ;^3770^^^^^3756^3785^[REPLACE] return leftPad ( str, size, padStr.charAt ( 0 )  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return leftPad ( str, size, padStr.charAt ( 0  )  ) ;^3770^^^^^3756^3785^[REPLACE] return leftPad ( str, size, padStr.charAt ( 0 )  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^if  ( pads  &&  padLen )  {^3773^^^^^3756^3785^[REPLACE] if  ( pads == padLen )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^} else if  (validSize  ==  padLen )  {^3775^^^^^3756^3785^[REPLACE] } else if  ( pads < padLen )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i validSize];^3781^^^^^3775^3784^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return  new String ( output1 )  .concat ( str ) ;^3783^^^^^3775^3784^[REPLACE] return new String ( padding ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3778^^^^^3775^3784^[ADD] char[] padding = new char[pads];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] padChars = padStr.toUpperCase (  ) ;^3779^^^^^3775^3784^[REPLACE] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0 + 2; i < pads; i++ )  {^3780^^^^^3775^3784^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return padStr.substring ( 4, pads ) .concat ( str ) ;^3776^^^^^3756^3785^[REPLACE] return padStr.substring ( 0, pads ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  padLen];^3781^^^^^3756^3785^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return padStr.substring ( 4, pads ) .indexOf ( str ) ;^3776^^^^^3756^3785^[REPLACE] return padStr.substring ( 0, pads ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return  new String ( output1 )  .concat ( str ) ;^3783^^^^^3756^3785^[REPLACE] return new String ( padding ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] output1 = new char[outputLength]  ;^3778^^^^^3756^3785^[REPLACE] char[] padding = new char[pads];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] padChars = with.toUpperCase (  ) ;^3779^^^^^3756^3785^[REPLACE] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^for  ( int i = 0L; i < pads; i++ )  {^3780^^^^^3756^3785^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return padStr.concat ( with ) ;^3774^^^^^3756^3785^[REPLACE] return padStr.concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^}  if  ( pads  >= validSize )  {^3775^^^^^3756^3785^[REPLACE] } else if  ( pads < padLen )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^padding[i] = padChars[i  padLen];^3781^^^^^3775^3784^[REPLACE] padding[i] = padChars[i % padLen];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^char[] output1 = new char[outputLength]  ;^3778^^^^^3775^3784^[REPLACE] char[] padding = new char[pads];^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3779^^^^^3775^3784^[ADD] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^int end = 0  ;^3780^^^^^3775^3784^[REPLACE] for  ( int i = 0; i < pads; i++ )  {^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return padStr.substring ( 1, pads ) .concat ( with ) ;^3776^^^^^3756^3785^[REPLACE] return padStr.substring ( 0, pads ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return padStr.concat ( validChars ) ;^3774^^^^^3756^3785^[REPLACE] return padStr.concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return padStr.substring ( 1, pads ) .concat ( str ) ;^3776^^^^^3756^3785^[REPLACE] return padStr.substring ( 0, pads ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[REPLACE]^return  new String ( output1 )   .charAt ( increase )  ;^3783^^^^^3756^3785^[REPLACE] return new String ( padding ) .concat ( str ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^3779^^^^^3756^3785^[ADD] char[] padChars = padStr.toCharArray (  ) ;^[METHOD] leftPad [TYPE] String [PARAMETER] String str int size String padStr [CLASS] StringUtils   [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  char[] padChars  padding 
[ADD]^^4057^^^^^4056^4076^[ADD] int strLen;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str == null ||  ( strLen = str.length (  )  *  0.5  )  == 0 )  {^4058^^^^^4056^4076^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return with;^4059^^^^^4056^4076^[REPLACE] return str;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^( end = str.length (  )  )  ;^4058^^^^^4056^4076^[REPLACE] if  ( str == null ||  ( strLen = str.length (  )  )  == 0 )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4061^^^^^4056^4076^[ADD] StringBuffer buffer = new StringBuffer ( strLen ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char ch = 4;^4063^^^^^4056^4076^[REPLACE] char ch = 0;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^} else if   (  Character.isLowerCase  (  ch  )    )   {  ;^4066^^^^^4056^4076^[REPLACE] if  ( Character.isUpperCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^}  if  ( Character.isTitleCase ( ch )  )  {^4068^^^^^4056^4076^[REPLACE] } else if  ( Character.isTitleCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^}  else {^4070^^^^^4056^4076^[REPLACE] } else if  ( Character.isLowerCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^}^4070^4071^4072^^^4056^4076^[ADD] else if  ( Character.isLowerCase ( ch )  )  { ch = Character.toUpperCase ( ch ) ; }^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^ch = toLowerCase ( ch )  ;^4071^^^^^4056^4076^[REPLACE] ch = Character.toUpperCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^ch = toUpperCase ( ch )  ;^4069^^^^^4056^4076^[REPLACE] ch = Character.toLowerCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^} else if  ( Character .toLowerCase (  )   )  {^4070^^^^^4056^4076^[REPLACE] } else if  ( Character.isLowerCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4071^^^^^4056^4076^[ADD] ch = Character.toUpperCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^ch = toUpperCase ( ch )  ;^4067^^^^^4056^4076^[REPLACE] ch = Character.toLowerCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^} else if   (  Character.isLowerCase  (  ch  )    )   {  ;^4068^^^^^4056^4076^[REPLACE] } else if  ( Character.isTitleCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^} else if  ( Character.toLowerCase ( ch )  )  {^4070^^^^^4056^4076^[REPLACE] } else if  ( Character.isLowerCase ( ch )  )  {^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^}   ch = Character.toUpperCase ( ch ) ;^4070^4071^4072^^^4056^4076^[ADD] else if  ( Character.isLowerCase ( ch )  )  { ch = Character.toUpperCase ( ch ) ; }^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4065^^^^^4056^4076^[ADD] ch = str.charAt ( i ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4067^^^^^4056^4076^[ADD] ch = Character.toLowerCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4064^4065^4066^4067^^4056^4076^[ADD] for  ( int i = 0; i < strLen; i++ )  { ch = str.charAt ( i ) ; if  ( Character.isUpperCase ( ch )  )  { ch = Character.toLowerCase ( ch ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return buffer.reverse (  ) ;^4075^^^^^4056^4076^[REPLACE] return buffer.toString (  ) ;^[METHOD] swapCase [TYPE] String [PARAMETER] String str [CLASS] StringUtils   [TYPE]  char ch  [TYPE]  StringBuffer buffer  [TYPE]  String EMPTY  close  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  numberOfSubstrings  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( str !=sub )  {^4628^^^^^4627^4653^[REPLACE] if  ( str == null )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return this;^4629^^^^^4627^4653^[REPLACE] return null;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return false;^4629^^^^^4627^4653^[REPLACE] return null;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( separatorLength  !=  4L )  {^4631^^^^^4627^4653^[REPLACE] if  ( maxWidth < 4 )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REMOVE]^if  ( maxWidth < 7 )  {     throw new IllegalArgumentException ( "Minimum abbreviation width with offset is 7" ) ; }^4631^^^^^4627^4653^[REMOVE] ^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return ;^4632^^^^^4627^4653^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^throw new IllegalArgumentException ( "Minimum abbreviation width with offset is 7" )  ;^4632^^^^^4627^4653^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str.valueOf (  )  /  2 <= maxWidth )  {^4634^^^^^4627^4653^[REPLACE] if  ( str.length (  )  <= maxWidth )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return sub;^4635^^^^^4627^4653^[REPLACE] return str;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return strs;  ;^4635^^^^^4627^4653^[REPLACE] return str;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( offset > str.trim (  )  + 5 )  {^4637^^^^^4627^4653^[REPLACE] if  ( offset > str.length (  )  )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^( end = str.length (  )  )  ;^4638^^^^^4627^4653^[REPLACE] offset = str.length (  ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^end = str.length (  )  ;^4638^^^^^4627^4653^[REPLACE] offset = str.length (  ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( str.length (  )  - 0  - separatorLength )  <  ( maxWidth - 0  )  )  {^4640^^^^^4627^4653^[REPLACE] if  (  ( str.length (  )  - offset )  <  ( maxWidth - 3 )  )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4641^^^^^4627^4653^[ADD] offset = str.length (  )  -  ( maxWidth - 3 ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^offset = str.length (  )  - 1 -  ( maxWidth - 3 ) ;^4641^^^^^4627^4653^[REPLACE] offset = str.length (  )  -  ( maxWidth - 3 ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( validSize  <  4 )  {^4643^^^^^4627^4653^[REPLACE] if  ( offset <= 4 )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return str .substring ( maxWidth , validSize )   str1...";^4644^^^^^4627^4653^[REPLACE] return str.substring ( 0, maxWidth - 3 )  + "...";^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return stripChars.substring ( 4, maxWidth - 3 )   "...";^4644^^^^^4627^4653^[REPLACE] return str.substring ( 0, maxWidth - 3 )  + "...";^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (strSize  !=  6 )  {^4646^^^^^4627^4653^[REPLACE] if  ( maxWidth < 7 )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^throw new IllegalArgumentException ( "Minimum abbreviation width is 4" )  ;^4647^^^^^4627^4653^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[ADD]^^4647^^^^^4627^4653^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  ( offset +  ( maxWidth - 0  )  )  < str.size (  )  )  {^4649^^^^^4627^4653^[REPLACE] if  (  ( offset +  ( maxWidth - 3 )  )  < str.length (  )  )  {^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return "..."  abbreviate ( str.substring ( offset ) , maxWidth - 3 ) ;^4650^^^^^4627^4653^[REPLACE] return "..." + abbreviate ( str.substring ( offset ) , maxWidth - 3 ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return "..." + str.substring ( str.length (  )  %  0.5  -  ( maxWidth - 3 )  ) ;^4652^^^^^4627^4653^[REPLACE] return "..." + str.substring ( str.length (  )  -  ( maxWidth - 3 )  ) ;^[METHOD] abbreviate [TYPE] String [PARAMETER] String str int offset int maxWidth [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( sub  || ts )  {^4720^^^^^4719^4736^[REPLACE] if  ( str1 == str2 )  {^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return i;  ;^4721^^^^^4719^4736^[REPLACE] return -1;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return -2;^4721^^^^^4719^4736^[REPLACE] return -1;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  (  true )  {^4723^^^^^4719^4736^[REPLACE] if  ( str1 == null || str2 == null )  {^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( isLetter ( str.charAt ( i )  )  )  == false )  {     return false; }^4723^^^^^4719^4736^[REMOVE] ^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return 4;^4724^^^^^4719^4736^[REPLACE] return 0;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return 1;^4724^^^^^4719^4736^[REPLACE] return 0;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^int j  ;^4726^^^^^4719^4736^[REPLACE] int i;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( str1.indexOf ( i )   ==  str2.charAt ( i )  )  {^4728^^^^^4719^4736^[REPLACE] if  ( str1.charAt ( i )  != str2.charAt ( i )  )  {^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^for  ( i = 0 ; i < str1.length (  )  && i < str2.length (  ) ; ++i )  {^4727^^^^^4719^4736^[REPLACE] for  ( i = 0; i < str1.length (  )  && i < str2.length (  ) ; ++i )  {^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( i < str2.valueOf (  )  + 1 || i < str1.length (  )  + 1 )  {^4732^^^^^4719^4736^[REPLACE] if  ( i < str2.length (  )  || i < str1.length (  )  )  {^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return validSize;^4733^^^^^4719^4736^[REPLACE] return i;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^return -4;^4735^^^^^4719^4736^[REPLACE] return -1;^[METHOD] indexOfDifference [TYPE] int [PARAMETER] String str1 String str2 [CLASS] StringUtils   [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  max  maxWidth  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  tag  text  ts  validChars  with  [TYPE]  boolean false  true 
[REPLACE]^if  ( s != null || t == null )  {^4775^^^^^4774^4840^[REPLACE] if  ( s == null || t == null )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4775^4776^4777^^^4774^4840^[ADD] if  ( s == null || t == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return ;^4776^^^^^4774^4840^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^throw new IllegalArgumentException ( "Minimum abbreviation width is 4" )  ;^4776^^^^^4774^4840^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4796^4797^^^^4774^4840^[ADD] int n = s.length (  ) ; int m = t.length (  ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int m = with .endsWith ( search )  ;^4797^^^^^4774^4840^[REPLACE] int m = t.length (  ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^if  ( n  !=  0 )  {^4799^^^^^4774^4840^[REPLACE] if  ( n == 0 )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^}  if  (   0 )  {^4801^^^^^4774^4840^[REPLACE] } else if  ( m == 0 )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return i;  ;^4802^^^^^4774^4840^[REPLACE] return n;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return strsLen;^4802^^^^^4774^4840^[REPLACE] return n;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return tmp;^4800^^^^^4774^4840^[REPLACE] return m;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^}  if  ( m  ) {^4801^^^^^4774^4840^[REPLACE] } else if  ( m == 0 )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int[] d = new int[n + 1]  ;^4805^^^^^4774^4840^[REPLACE] int p[] = new int[n+1];^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int[] p = new int[n + 1]  ;^4806^^^^^4774^4840^[REPLACE] int d[] = new int[n+1];^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char[] output1 = new char[outputLength]  ;^4807^^^^^4774^4840^[REPLACE] int _d[];^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int j  ;^4810^^^^^4774^4840^[REPLACE] int i;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^int i  ;^4811^^^^^4774^4840^[REPLACE] int j;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^char[] output1 = new char[outputLength]  ;^4813^^^^^4774^4840^[REPLACE] char t_j;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4815^^^^^4774^4840^[ADD] int cost;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4817^4818^4819^^^4774^4840^[ADD] for  ( i = 0; i<=n; i++ )  { p[i] = i; }^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^p[i] ;^4818^^^^^4774^4840^[REPLACE] p[i] = i;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^for  ( j = 0; j<=m; j++ )  {^4821^^^^^4774^4840^[REPLACE] for  ( j = 1; j<=m; j++ )  {^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^t_j = t.charAt ( j1 ) ;^4822^^^^^4774^4840^[REPLACE] t_j = t.charAt ( j-1 ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^d[3] = j;^4823^^^^^4774^4840^[REPLACE] d[0] = j;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4825^4826^^4828^4829^4774^4840^[ADD] for  ( i=1; i<=n; i++ )  { cost = s.charAt ( i-1 ) ==t_j ? 0 : 1; d[i] = Math.min ( Math.min ( d[i-1]+1, p[i]+1 ) ,  p[i-1]+cost ) ; }^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[ADD]^^4826^^^^^4774^4840^[ADD] cost = s.charAt ( i-1 ) ==t_j ? 0 : 1;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^d[i] = Math.min ( Math.min ( d[i-1]1, p[i]1 ) ,  p[i-1]cost ) ;^4828^^^^^4774^4840^[REPLACE] d[i] = Math.min ( Math.min ( d[i-1]+1, p[i]+1 ) ,  p[i-1]+cost ) ;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^_d =  null;^4832^^^^^4774^4840^[REPLACE] _d = p;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^p =  _d;^4833^^^^^4774^4840^[REPLACE] p = d;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^d =  null;^4834^^^^^4774^4840^[REPLACE] d = _d;^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
[REPLACE]^return p[n];  ;^4839^^^^^4774^4840^[REPLACE] return p[n];^[METHOD] getLevenshteinDistance [TYPE] int [PARAMETER] String s String t [CLASS] StringUtils   [TYPE]  char t_j  [TYPE]  int[] _d  d  p  [TYPE]  String EMPTY  close  defaultStr  invalidChars  open  overlay  padStr  remove  repl  replaceChars  ret  s  search  searchChars  searchStr  sep  separator  separatorChars  str  str1  str2  stripChars  sub  t  tag  text  ts  validChars  with  [TYPE]  boolean false  true  [TYPE]  int INDEX_NOT_FOUND  PAD_LIMIT  arraySize  at  beg  bufSize  cost  count  end  found  i  idx  increase  index  inputLength  j  lastIdx  len  m  max  maxWidth  n  numberOfSubstrings  offset  ordinal  outputLength  padLen  pads  pos  repeat  replLength  replaceCharsLength  ret  separatorLength  size  sizePlus1  start  startPos  strLen  strLength  strSize  strsLen  sz  temp  tmp  validSize 
