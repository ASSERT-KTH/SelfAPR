[REPLACE]^buf.append ( "Range[" ) ;^35^^^^^34^36^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] Range() [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true 
[REPLACE]^return getMinimumNumber (  ) .doubleValue (  ) ;^57^^^^^56^58^[REPLACE] return getMinimumNumber (  ) .longValue (  ) ;^[METHOD] getMinimumLong [TYPE] long [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true 
[REPLACE]^return getMinimumNumber (  )  .longValue (  )  ;^69^^^^^68^70^[REPLACE] return getMinimumNumber (  ) .intValue (  ) ;^[METHOD] getMinimumInteger [TYPE] int [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true 
[REPLACE]^return getMinimumNumber (  ) .longValue (  ) ;^81^^^^^80^82^[REPLACE] return getMinimumNumber (  ) .doubleValue (  ) ;^[METHOD] getMinimumDouble [TYPE] double [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true 
[REPLACE]^return getMinimumNumber (  ) .doubleValue (  ) ;^93^^^^^92^94^[REPLACE] return getMinimumNumber (  ) .floatValue (  ) ;^[METHOD] getMinimumFloat [TYPE] float [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true 
[REPLACE]^return getMinimumNumber (  ) .doubleValue (  ) ;^112^^^^^111^113^[REPLACE] return getMaximumNumber (  ) .longValue (  ) ;^[METHOD] getMaximumLong [TYPE] long [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true 
[REPLACE]^return getMinimumNumber (  ) .doubleValue (  ) ;^124^^^^^123^125^[REPLACE] return getMaximumNumber (  ) .intValue (  ) ;^[METHOD] getMaximumInteger [TYPE] int [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true 
[REPLACE]^return getMinimumNumber (  ) .doubleValue (  ) ;^136^^^^^135^137^[REPLACE] return getMaximumNumber (  ) .doubleValue (  ) ;^[METHOD] getMaximumDouble [TYPE] double [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true 
[REPLACE]^return getMinimumNumber (  ) .doubleValue (  ) ;^148^^^^^147^149^[REPLACE] return getMaximumNumber (  ) .floatValue (  ) ;^[METHOD] getMaximumFloat [TYPE] float [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true 
[REPLACE]^if  ( value != null )  {^183^^^^^182^187^[REPLACE] if  ( value == null )  {^[METHOD] containsLong [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[REPLACE]^return true;^184^^^^^182^187^[REPLACE] return false;^[METHOD] containsLong [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[REPLACE]^return containsInteger ( value.intValue (  )  ) ;^186^^^^^182^187^[REPLACE] return containsLong ( value.longValue (  )  ) ;^[METHOD] containsLong [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[REPLACE]^returntrue (  )  ;^201^^^^^200^202^[REPLACE] return value >= getMinimumLong (  )  && value <= getMaximumLong (  ) ;^[METHOD] containsLong [TYPE] boolean [PARAMETER] long value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  long value 
[REPLACE]^if  ( value != null )  {^217^^^^^216^221^[REPLACE] if  ( value == null )  {^[METHOD] containsInteger [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[ADD]^return false;^217^218^219^^^216^221^[ADD] if  ( value == null )  { return false; }^[METHOD] containsInteger [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[REPLACE]^return true;^218^^^^^216^221^[REPLACE] return false;^[METHOD] containsInteger [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[REPLACE]^return containsLong ( value.longValue (  )  ) ;^220^^^^^216^221^[REPLACE] return containsInteger ( value.intValue (  )  ) ;^[METHOD] containsInteger [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[REPLACE]^returntrue (  )  ;^235^^^^^234^236^[REPLACE] return value >= getMinimumInteger (  )  && value <= getMaximumInteger (  ) ;^[METHOD] containsInteger [TYPE] boolean [PARAMETER] int value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  int value 
[REPLACE]^if  ( value != null )  {^251^^^^^250^255^[REPLACE] if  ( value == null )  {^[METHOD] containsDouble [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[REPLACE]^return true;^252^^^^^250^255^[REPLACE] return false;^[METHOD] containsDouble [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[REPLACE]^return containsLong ( value.longValue (  )  ) ;^254^^^^^250^255^[REPLACE] return containsDouble ( value.doubleValue (  )  ) ;^[METHOD] containsDouble [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[REPLACE]^int compareMax = NumberUtils.compare ( getMaximumDouble (  ) , value ) ;^269^^^^^268^272^[REPLACE] int compareMin = NumberUtils.compare ( getMinimumDouble (  ) , value ) ;^[METHOD] containsDouble [TYPE] boolean [PARAMETER] double value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  int compareMax  compareMin 
[REPLACE]^int compareMin = NumberUtils.compare ( getMinimumFloat (  ) , value ) ;^270^^^^^268^272^[REPLACE] int compareMax = NumberUtils.compare ( getMaximumDouble (  ) , value ) ;^[METHOD] containsDouble [TYPE] boolean [PARAMETER] double value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  int compareMax  compareMin 
[REPLACE]^return   compareMax ;^271^^^^^268^272^[REPLACE] return compareMin <= 0 && compareMax >= 0;^[METHOD] containsDouble [TYPE] boolean [PARAMETER] double value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  double value  [TYPE]  int compareMax  compareMin 
[REPLACE]^if  ( value != null )  {^287^^^^^286^291^[REPLACE] if  ( value == null )  {^[METHOD] containsFloat [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[ADD]^return false;^287^288^289^^^286^291^[ADD] if  ( value == null )  { return false; }^[METHOD] containsFloat [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[REPLACE]^return true;^288^^^^^286^291^[REPLACE] return false;^[METHOD] containsFloat [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[REPLACE]^return containsLong ( value.longValue (  )  ) ;^290^^^^^286^291^[REPLACE] return containsFloat ( value.floatValue (  )  ) ;^[METHOD] containsFloat [TYPE] boolean [PARAMETER] Number value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Number value 
[REPLACE]^return true ;^307^^^^^304^308^[REPLACE] return compareMin <= 0 && compareMax >= 0;^[METHOD] containsFloat [TYPE] boolean [PARAMETER] float value [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  float value  [TYPE]  int compareMax  compareMin 
[REPLACE]^if  ( range != null )  {^331^^^^^330^336^[REPLACE] if  ( range == null )  {^[METHOD] containsRange [TYPE] boolean [PARAMETER] Range range [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Range range 
[ADD]^^331^332^333^^^330^336^[ADD] if  ( range == null )  { return false; }^[METHOD] containsRange [TYPE] boolean [PARAMETER] Range range [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Range range 
[REPLACE]^return true;^332^^^^^330^336^[REPLACE] return false;^[METHOD] containsRange [TYPE] boolean [PARAMETER] Range range [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Range range 
[REPLACE]^return containsNumber ( range.getMaximumNumber (  )  ) && containsNumber ( range.getMaximumNumber (  )  ) ;^334^335^^^^330^336^[REPLACE] return containsNumber ( range.getMinimumNumber (  )  ) && containsNumber ( range.getMaximumNumber (  )  ) ;^[METHOD] containsRange [TYPE] boolean [PARAMETER] Range range [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Range range 
[REPLACE]^if  ( range != true )  {^357^^^^^356^363^[REPLACE] if  ( range == null )  {^[METHOD] overlapsRange [TYPE] boolean [PARAMETER] Range range [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Range range 
[ADD]^^357^358^359^^^356^363^[ADD] if  ( range == null )  { return false; }^[METHOD] overlapsRange [TYPE] boolean [PARAMETER] Range range [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Range range 
[REPLACE]^return true;^358^^^^^356^363^[REPLACE] return false;^[METHOD] overlapsRange [TYPE] boolean [PARAMETER] Range range [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Range range 
[REPLACE]^return   range.containsNumber ( getMaximumNumber (  )  ) || containsNumber ( range.getMinimumNumber (  )  ) ;^360^361^362^^^356^363^[REPLACE] return range.containsNumber ( getMinimumNumber (  )  ) || range.containsNumber ( getMaximumNumber (  )  ) || containsNumber ( range.getMinimumNumber (  )  ) ;^[METHOD] overlapsRange [TYPE] boolean [PARAMETER] Range range [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Range range 
[REPLACE]^if  ( obj  &&  this )  {^381^^^^^380^390^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Object obj  [TYPE]  Range range 
[ADD]^^381^382^383^384^^380^390^[ADD] if  ( obj == this )  { return true; } else if  ( obj == null || obj.getClass (  )  != getClass (  )  )  { return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Object obj  [TYPE]  Range range 
[REPLACE]^}  if  (  obj.getClass (  )  != getClass (  )  )  {^383^^^^^380^390^[REPLACE] } else if  ( obj == null || obj.getClass (  )  != getClass (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Object obj  [TYPE]  Range range 
[REPLACE]^return getMinimumNumber (  ) .equals ( range.getMinimumNumber (  )  )  &&.getMinimumNumber (  ) .equals ( range.getMaximumNumber (  )  ) ;^387^388^^^^380^390^[REPLACE] return getMinimumNumber (  ) .equals ( range.getMinimumNumber (  )  )  && getMaximumNumber (  ) .equals ( range.getMaximumNumber (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Object obj  [TYPE]  Range range 
[REPLACE]^int compareMax = NumberUtils.compare ( getMaximumDouble (  ) , value ) ;^386^^^^^380^390^[REPLACE] Range range =  ( Range )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Object obj  [TYPE]  Range range 
[REPLACE]^return true;^384^^^^^380^390^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Object obj  [TYPE]  Range range 
[REPLACE]^return getMinimumNumber (  )  .overlapsRange ( range )   && getMaximumNumber (  )^387^388^^^^380^390^[REPLACE] return getMinimumNumber (  ) .equals ( range.getMinimumNumber (  )  )  && getMaximumNumber (  ) .equals ( range.getMaximumNumber (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Object obj  [TYPE]  Range range 
[REPLACE]^return false;^382^^^^^380^390^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Object obj  [TYPE]  Range range 
[REPLACE]^}  else {^383^^^^^380^390^[REPLACE] } else if  ( obj == null || obj.getClass (  )  != getClass (  )  )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Object obj  [TYPE]  Range range 
[ADD]^}   Range range =  ( Range )  obj;^383^384^385^386^387^380^390^[ADD] else if  ( obj == null || obj.getClass (  )  != getClass (  )  )  { return false; } else { Range range =  ( Range )  obj; return getMinimumNumber (  ) .equals ( range.getMinimumNumber (  )  )  &&^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Object obj  [TYPE]  Range range 
[REPLACE]^return.getMaximumNumber (  ) .equals ( range.getMinimumNumber (  )  )  ;^387^388^^^^380^390^[REPLACE] return getMinimumNumber (  ) .equals ( range.getMinimumNumber (  )  )  && getMaximumNumber (  ) .equals ( range.getMaximumNumber (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Object obj  [TYPE]  Range range 
[REPLACE]^return   getMaximumNumber (  ) .equals ( range.getMaximumNumber (  )  ) ;^387^388^^^^380^390^[REPLACE] return getMinimumNumber (  ) .equals ( range.getMinimumNumber (  )  )  && getMaximumNumber (  ) .equals ( range.getMaximumNumber (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  Object obj  [TYPE]  Range range 
[REPLACE]^int result = 0;^402^^^^^401^407^[REPLACE] int result = 17;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  int result 
[REPLACE]^result = 37 * result  >  getClass (  ) .hashCode (  ) ;^403^^^^^401^407^[REPLACE] result = 37 * result + getClass (  ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  int result 
[REPLACE]^result = 37 * result + getClass (  ) .hashCode (  ) ; ;^404^^^^^401^407^[REPLACE] result = 37 * result + getMinimumNumber (  ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  int result 
[ADD]^^404^^^^^401^407^[ADD] result = 37 * result + getMinimumNumber (  ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  int result 
[REPLACE]^result = 37 * result + getMinimumNumber (  ) .hashCode (  ) ; ;^405^^^^^401^407^[REPLACE] result = 37 * result + getMaximumNumber (  ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  int result 
[ADD]^^405^^^^^401^407^[ADD] result = 37 * result + getMaximumNumber (  ) .hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  int result 
[REPLACE]^return buf.toString (  ) ;^406^^^^^401^407^[REPLACE] return result;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Range   [TYPE]  boolean false  true  [TYPE]  int result 
[REPLACE]^StringBuffer buf = new StringBuffer ( 32 + 3 ) ;^421^^^^^420^428^[REPLACE] StringBuffer buf = new StringBuffer ( 32 ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Range   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true 
[REPLACE]^buf.append ( getMaximumNumber (  )  ) ;^422^^^^^420^428^[REPLACE] buf.append ( "Range[" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Range   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true 
[ADD]^^422^^^^^420^428^[ADD] buf.append ( "Range[" ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Range   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true 
[REPLACE]^buf.append ( getMaximumNumber (  )  ) ;^423^^^^^420^428^[REPLACE] buf.append ( getMinimumNumber (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Range   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true 
[REMOVE]^int compareMin = NumberUtils.compare ( getMinimumFloat (  ) , value ) ;^423^^^^^420^428^[REMOVE] ^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Range   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true 
[REPLACE]^buf.append ( ']' ) ;^424^^^^^420^428^[REPLACE] buf.append ( ',' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Range   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true 
[ADD]^^424^425^^^^420^428^[ADD] buf.append ( ',' ) ; buf.append ( getMaximumNumber (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Range   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true 
[REPLACE]^buf.append ( getMinimumNumber (  )  ) ;^425^^^^^420^428^[REPLACE] buf.append ( getMaximumNumber (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Range   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true 
[REPLACE]^buf.append ( ',' ) ;^426^^^^^420^428^[REPLACE] buf.append ( ']' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Range   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true 
[REPLACE]^return getMinimumNumber (  ) .doubleValue (  ) ;^427^^^^^420^428^[REPLACE] return buf.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Range   [TYPE]  StringBuffer buf  [TYPE]  boolean false  true 
