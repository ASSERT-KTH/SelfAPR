[REPLACE]^private transient  final String MUST_BE_THROWABLE = "The Nestable implementation passed to the NestableDelegate ( Nestable )  " + "constructor must extend java.lang.Throwable";^51^52^53^^^51^53^[REPLACE] private transient static final String MUST_BE_THROWABLE = "The Nestable implementation passed to the NestableDelegate ( Nestable )  " + "constructor must extend java.lang.Throwable";^ [CLASS] NestableDelegate  
[REPLACE]^private Throwable nestable  = null ;^60^^^^^^^[REPLACE] private Throwable nestable = null;^ [CLASS] NestableDelegate  
[REPLACE]^public static boolean topDown  = null ;^70^^^^^^^[REPLACE] public static boolean topDown = true;^ [CLASS] NestableDelegate  
[REPLACE]^public static boolean trimStackFrames  = null ;^80^^^^^^^[REPLACE] public static boolean trimStackFrames = true;^ [CLASS] NestableDelegate  
[REPLACE]^public  boolean matchSubclasses = false;^90^^^^^^^[REPLACE] public static boolean matchSubclasses = true;^ [CLASS] NestableDelegate  
[REPLACE]^if  ( ! nestable instanceof Throwable )  {^101^^^^^100^106^[REPLACE] if  ( nestable instanceof Throwable )  {^[METHOD] <init> [TYPE] Nestable) [PARAMETER] Nestable nestable [CLASS] NestableDelegate   [TYPE]  Throwable nestable  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  [TYPE]  Nestable nestable 
[REPLACE]^return ;^104^^^^^100^106^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Nestable) [PARAMETER] Nestable nestable [CLASS] NestableDelegate   [TYPE]  Throwable nestable  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  [TYPE]  Nestable nestable 
[REPLACE]^this.nestable =   ( Throwable )  nestable;^102^^^^^100^106^[REPLACE] this.nestable =  ( Throwable )  nestable;^[METHOD] <init> [TYPE] Nestable) [PARAMETER] Nestable nestable [CLASS] NestableDelegate   [TYPE]  Throwable nestable  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  [TYPE]  Nestable nestable 
[REPLACE]^Throwable t = this.getMessage ( index ) ;^122^^^^^121^127^[REPLACE] Throwable t = this.getThrowable ( index ) ;^[METHOD] getMessage [TYPE] String [PARAMETER] int index [CLASS] NestableDelegate   [TYPE]  Throwable nestable  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  [TYPE]  int index 
[REPLACE]^if  ( nestable instanceof Throwable )  {^123^^^^^121^127^[REPLACE] if  ( Nestable.class.isInstance ( t )  )  {^[METHOD] getMessage [TYPE] String [PARAMETER] int index [CLASS] NestableDelegate   [TYPE]  Throwable nestable  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  [TYPE]  int index 
[REPLACE]^return  (  ( Nestable )  t ) .getMessage ( 0L ) ;^124^^^^^121^127^[REPLACE] return  (  ( Nestable )  t ) .getMessage ( 0 ) ;^[METHOD] getMessage [TYPE] String [PARAMETER] int index [CLASS] NestableDelegate   [TYPE]  Throwable nestable  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  [TYPE]  int index 
[REPLACE]^return  (  ( Nestable )  t ) .getMessage ( 1 ) ;^124^^^^^121^127^[REPLACE] return  (  ( Nestable )  t ) .getMessage ( 0 ) ;^[METHOD] getMessage [TYPE] String [PARAMETER] int index [CLASS] NestableDelegate   [TYPE]  Throwable nestable  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  [TYPE]  int index 
[REPLACE]^return nestable.getMessage (  ) ;^126^^^^^121^127^[REPLACE] return t.getMessage (  ) ;^[METHOD] getMessage [TYPE] String [PARAMETER] int index [CLASS] NestableDelegate   [TYPE]  Throwable nestable  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  [TYPE]  int index 
[REPLACE]^Throwable nestedCause = ExceptionUtils.getThrowables ( this.nestable ) ;^140^^^^^139^149^[REPLACE] Throwable nestedCause = ExceptionUtils.getCause ( this.nestable ) ;^[METHOD] getMessage [TYPE] String [PARAMETER] String baseMsg [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg 
[REPLACE]^String causeMsg  =  true ;^141^^^^^139^149^[REPLACE] String causeMsg = nestedCause == null ? null : nestedCause.getMessage (  ) ;^[METHOD] getMessage [TYPE] String [PARAMETER] String baseMsg [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg 
[REPLACE]^if  ( trimStackFrames )  {^142^^^^^139^149^[REPLACE] if  ( nestedCause == null || causeMsg == null )  {^[METHOD] getMessage [TYPE] String [PARAMETER] String baseMsg [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg 
[REPLACE]^return causeMsg;^143^^^^^139^149^[REPLACE] return baseMsg;^[METHOD] getMessage [TYPE] String [PARAMETER] String baseMsg [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg 
[REPLACE]^if  ( baseMsg != true )  {^145^^^^^139^149^[REPLACE] if  ( baseMsg == null )  {^[METHOD] getMessage [TYPE] String [PARAMETER] String baseMsg [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg 
[REPLACE]^return baseMsg;^146^^^^^139^149^[REPLACE] return causeMsg;^[METHOD] getMessage [TYPE] String [PARAMETER] String baseMsg [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg 
[REPLACE]^return baseMsg  ;^148^^^^^139^149^[REPLACE] return baseMsg + ": " + causeMsg;^[METHOD] getMessage [TYPE] String [PARAMETER] String baseMsg [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg 
[REPLACE]^String[] msgs = new String[throwables.length];^161^^^^^160^170^[REPLACE] Throwable[] throwables = this.getThrowables (  ) ;^[METHOD] getMessages [TYPE] String[] [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  String[] msgs  [TYPE]  Throwable[] throwables  [TYPE]  int i 
[REPLACE]^String[] next =  ( String[] )  stacks.get ( i-1 ) ;^162^^^^^160^170^[REPLACE] String[] msgs = new String[throwables.length];^[METHOD] getMessages [TYPE] String[] [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  String[] msgs  [TYPE]  Throwable[] throwables  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < throwables.length + 3; i++ )  {^163^^^^^160^170^[REPLACE] for  ( int i = 0; i < throwables.length; i++ )  {^[METHOD] getMessages [TYPE] String[] [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  String[] msgs  [TYPE]  Throwable[] throwables  [TYPE]  int i 
[ADD]^^163^164^165^166^167^160^170^[ADD] for  ( int i = 0; i < throwables.length; i++ )  { msgs[i] = ( Nestable.class.isInstance ( throwables[i] ) ?  (  ( Nestable )  throwables[i] ) .getMessage ( 0 ) : throwables[i].getMessage (  )  ) ;^[METHOD] getMessages [TYPE] String[] [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  String[] msgs  [TYPE]  Throwable[] throwables  [TYPE]  int i 
[REPLACE]^msgs[i] = ( Nestable.class.isInstance ( throwables[i] ) ?  (  ( Nestable )  throwables[i] ) .getMessage ( 4 ) : throwables[i].getMessage (  )  ) ;^164^165^166^167^^160^170^[REPLACE] msgs[i] = ( Nestable.class.isInstance ( throwables[i] ) ?  (  ( Nestable )  throwables[i] ) .getMessage ( 0 ) : throwables[i].getMessage (  )  ) ;^[METHOD] getMessages [TYPE] String[] [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  String[] msgs  [TYPE]  Throwable[] throwables  [TYPE]  int i 
[ADD]^^164^165^166^^^160^170^[ADD] msgs[i] = ( Nestable.class.isInstance ( throwables[i] ) ?  (  ( Nestable )  throwables[i] ) .getMessage ( 0 )^[METHOD] getMessages [TYPE] String[] [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  String[] msgs  [TYPE]  Throwable[] throwables  [TYPE]  int i 
[REPLACE]^msgs[i] = ( Nestable.class.isInstance ( throwables[i] ) ?  (  ( Nestable )  throwables[i] ) .getMessage ( 1 ) : throwables[i].getMessage (  )  ) ;^164^165^166^167^^160^170^[REPLACE] msgs[i] = ( Nestable.class.isInstance ( throwables[i] ) ?  (  ( Nestable )  throwables[i] ) .getMessage ( 0 ) : throwables[i].getMessage (  )  ) ;^[METHOD] getMessages [TYPE] String[] [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  String[] msgs  [TYPE]  Throwable[] throwables  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < throwables.length; i++ )  {^163^^^^^160^170^[REPLACE] for  ( int i = 0; i < throwables.length; i++ )  {^[METHOD] getMessages [TYPE] String[] [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  String[] msgs  [TYPE]  Throwable[] throwables  [TYPE]  int i 
[REPLACE]^return i;^169^^^^^160^170^[REPLACE] return msgs;^[METHOD] getMessages [TYPE] String[] [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  String[] msgs  [TYPE]  Throwable[] throwables  [TYPE]  int i 
[REPLACE]^if  ( index  &&  0 )  {^185^^^^^184^190^[REPLACE] if  ( index == 0 )  {^[METHOD] getThrowable [TYPE] Throwable [PARAMETER] int index [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int index 
[REPLACE]^return i;^186^^^^^184^190^[REPLACE] return this.nestable;^[METHOD] getThrowable [TYPE] Throwable [PARAMETER] int index [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int index 
[REPLACE]^Throwable[] throwables = this .getThrowables (  )  ;^188^^^^^184^190^[REPLACE] Throwable[] throwables = this.getThrowables (  ) ;^[METHOD] getThrowable [TYPE] Throwable [PARAMETER] int index [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int index 
[ADD]^^188^^^^^184^190^[ADD] Throwable[] throwables = this.getThrowables (  ) ;^[METHOD] getThrowable [TYPE] Throwable [PARAMETER] int index [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int index 
[REPLACE]^return i;^189^^^^^184^190^[REPLACE] return throwables[index];^[METHOD] getThrowable [TYPE] Throwable [PARAMETER] int index [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int index 
[REPLACE]^return ExceptionUtils.getThrowables ( this.nestable ) ;^200^^^^^199^201^[REPLACE] return ExceptionUtils.getThrowableCount ( this.nestable ) ;^[METHOD] getThrowableCount [TYPE] int [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg 
[REPLACE]^return ExceptionUtils.getThrowableCount ( this.nestable ) ;^212^^^^^211^213^[REPLACE] return ExceptionUtils.getThrowables ( this.nestable ) ;^[METHOD] getThrowables [TYPE] Throwable[] [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg 
[REPLACE]^if  ( type != null )  {^240^^^^^239^265^[REPLACE] if  ( type == null )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[ADD]^return -1;^240^241^242^^^239^265^[ADD] if  ( type == null )  { return -1; }^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^return -1 - 3;^241^^^^^239^265^[REPLACE] return -1;^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^return -1 * 1;^241^^^^^239^265^[REPLACE] return -1;^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^if  ( fromIndex  !=  0 )  {^243^^^^^239^265^[REPLACE] if  ( fromIndex < 0 )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[ADD]^^243^244^245^^^239^265^[ADD] if  ( fromIndex < 0 )  { throw new IndexOutOfBoundsException  (" ")  ; }^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^return ;^244^^^^^239^265^[REPLACE] throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^244^^^^^239^265^[REPLACE] throw new IndexOutOfBoundsException  (" ")  ;^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^Throwable[] throwables = ExceptionUtils.getThrowableCount ( this.nestable ) ;^246^^^^^239^265^[REPLACE] Throwable[] throwables = ExceptionUtils.getThrowables ( this.nestable ) ;^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^if  ( fromIndex >= throwables.length /  2 )  {^247^^^^^239^265^[REPLACE] if  ( fromIndex >= throwables.length )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^return ;^248^249^^^^239^265^[REPLACE] throw new IndexOutOfBoundsException ( "The start index was out of bounds: " + fromIndex + " >= " + throwables.length ) ;^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[ADD]^^248^249^^^^239^265^[ADD] throw new IndexOutOfBoundsException ( "The start index was out of bounds: " + fromIndex + " >= " + throwables.length ) ;^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^if  ( nestable instanceof Throwable )  {^251^^^^^239^265^[REPLACE] if  ( matchSubclasses )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[ADD]^^251^252^253^254^255^239^265^[ADD] if  ( matchSubclasses )  { for  ( int i = fromIndex; i < throwables.length; i++ )  { if  ( type.isAssignableFrom ( throwables[i].getClass (  )  )  )  { return i; }^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^if  ( type.isAssignableFrom ( throwables[i].getClass (  )  )  )  {^259^^^^^251^263^[REPLACE] if  ( type.equals ( throwables[i].getClass (  )  )  )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[ADD]^^259^260^261^^^251^263^[ADD] if  ( type.equals ( throwables[i].getClass (  )  )  )  { return i; }^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^return fromIndex;^260^^^^^251^263^[REPLACE] return i;^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^for  ( int i = fromIndex; i < throwables.length + 3; i++ )  {^258^^^^^251^263^[REPLACE] for  ( int i = fromIndex; i < throwables.length; i++ )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[ADD]^^258^259^260^261^^251^263^[ADD] for  ( int i = fromIndex; i < throwables.length; i++ )  { if  ( type.equals ( throwables[i].getClass (  )  )  )  { return i; }^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^for  ( int i = i; i < throwables.length; i++ )  {^258^^^^^251^263^[REPLACE] for  ( int i = fromIndex; i < throwables.length; i++ )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^if  ( type.equals ( throwables[i].getClass (  )  )  )  {^253^^^^^239^265^[REPLACE] if  ( type.isAssignableFrom ( throwables[i].getClass (  )  )  )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REMOVE]^if  ( type.equals ( throwables[i].getClass (  )  )  )  {     return i; }^253^^^^^239^265^[REMOVE] ^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^return fromIndex;^254^^^^^239^265^[REPLACE] return i;^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^for  ( int i = fromIndex; i < throwables.length (  ) ; i++ )  {^252^^^^^239^265^[REPLACE] for  ( int i = fromIndex; i < throwables.length; i++ )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^if  ( type.isInstance ( throwables[i].getClass (  )  )  )  {^253^^^^^239^265^[REPLACE] if  ( type.isAssignableFrom ( throwables[i].getClass (  )  )  )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[ADD]^return i;^253^254^255^^^239^265^[ADD] if  ( type.isAssignableFrom ( throwables[i].getClass (  )  )  )  { return i; }^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^for  ( int i = i; i < throwables.length; i++ )  {^252^^^^^239^265^[REPLACE] for  ( int i = fromIndex; i < throwables.length; i++ )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^if  ( type.equals ( throwables[i] .equals ( this )   )  )  {^259^^^^^239^265^[REPLACE] if  ( type.equals ( throwables[i].getClass (  )  )  )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^return baseMsg;^260^^^^^239^265^[REPLACE] return i;^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^for  ( int i = i; i < throwables.length - 1; i++ )  {^252^^^^^239^265^[REPLACE] for  ( int i = fromIndex; i < throwables.length; i++ )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^for  ( int i = fromIndex; i < throwables.length *  2; i++ )  {^258^^^^^239^265^[REPLACE] for  ( int i = fromIndex; i < throwables.length; i++ )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[ADD]^^258^259^260^261^^239^265^[ADD] for  ( int i = fromIndex; i < throwables.length; i++ )  { if  ( type.equals ( throwables[i].getClass (  )  )  )  { return i; }^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^if  ( type.isAssignableFrom ( throwables[i].getClass (  )  )  )  {^259^^^^^239^265^[REPLACE] if  ( type.equals ( throwables[i].getClass (  )  )  )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^return fromIndex;^260^^^^^239^265^[REPLACE] return i;^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^for  ( int i = i; i < throwables.length; i++ )  {^258^^^^^239^265^[REPLACE] for  ( int i = fromIndex; i < throwables.length; i++ )  {^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^return -0;^264^^^^^239^265^[REPLACE] return -1;^[METHOD] indexOfThrowable [TYPE] int [PARAMETER] Class type int fromIndex [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  Class type  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  Throwable[] throwables  [TYPE]  int fromIndex  i 
[REPLACE]^printStackTrace ( pw ) ;^272^^^^^271^273^[REPLACE] printStackTrace ( System.err ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg 
[REMOVE]^printStackTrace ( pw ) ;^272^^^^^271^273^[REMOVE] ^[METHOD] printStackTrace [TYPE] void [PARAMETER] [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg 
[REPLACE]^PrintWriter pw = new PrintWriter ( out, true ) ;^284^^^^^282^289^[REPLACE] PrintWriter pw = new PrintWriter ( out, false ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintStream out [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  PrintStream out  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  PrintWriter pw 
[ADD]^printStackTrace ( pw ) ;^284^285^^^^282^289^[ADD] PrintWriter pw = new PrintWriter ( out, false ) ; printStackTrace ( pw ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintStream out [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  [TYPE]  PrintStream out  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  [TYPE]  PrintWriter pw 
[REPLACE]^Throwable nestedCause = ExceptionUtils.getCause ( this.nestable ) ;^303^^^^^302^345^[REPLACE] Throwable throwable = this.nestable;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^if  ( nestable instanceof Throwable )  {^305^^^^^302^345^[REPLACE] if  ( ExceptionUtils.isThrowableNested (  )  )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^if  ( ! throwable instanceof Nestable )  {^306^^^^^302^345^[REPLACE] if  ( throwable instanceof Nestable )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^printStackTrace ( pw ) ;^309^^^^^306^310^[REPLACE] throwable.printStackTrace ( out ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REMOVE]^printStackTrace ( pw ) ;^309^^^^^306^310^[REMOVE] ^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^(  ( Nestable ) throwable )  .getMessage ( i )  ;^307^^^^^302^345^[REPLACE] (  ( Nestable ) throwable ) .printPartialStackTrace ( out ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REMOVE]^printStackTrace ( pw ) ;^307^^^^^302^345^[REMOVE] ^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^return i;^311^^^^^302^345^[REPLACE] return;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^if  ( ! t instanceof Nestable )  {^306^^^^^302^345^[REPLACE] if  ( throwable instanceof Nestable )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[ADD]^^306^307^308^309^310^302^345^[ADD] if  ( throwable instanceof Nestable )  { (  ( Nestable ) throwable ) .printPartialStackTrace ( out ) ; } else { throwable.printStackTrace ( out ) ; }^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^(  ( Nestable ) throwable )  .getMessage ( len )  ;^307^^^^^302^345^[REPLACE] (  ( Nestable ) throwable ) .printPartialStackTrace ( out ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^List nextList = new ArrayList ( Arrays.asList ( next )  ) ;^315^^^^^302^345^[REPLACE] List stacks = new ArrayList (  ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^while  ( throwable == null )  {^316^^^^^302^345^[REPLACE] while  ( throwable != null )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^throwable =  ExceptionUtils.getCause ( t ) ;^319^^^^^302^345^[REPLACE] throwable = ExceptionUtils.getCause ( throwable ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^String[] st = getStackFrames ( t ) ;^317^^^^^302^345^[REPLACE] String[] st = getStackFrames ( throwable ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^String[] next =  ( String[] )  stacks.get ( i-1 ) ;^323^^^^^302^345^[REPLACE] String separatorLine = "Caused by: ";^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^if  ( topDown )  {^324^^^^^302^345^[REPLACE] if  ( !topDown )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^separatorLine  = null ;^325^^^^^302^345^[REPLACE] separatorLine = "Rethrown as: ";^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^separatorLine ;^325^^^^^302^345^[REPLACE] separatorLine = "Rethrown as: ";^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[ADD]^^325^^^^^302^345^[ADD] separatorLine = "Rethrown as: ";^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^if  ( nestable instanceof Throwable )  {^330^^^^^302^345^[REPLACE] if  ( trimStackFrames )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^printStackTrace ( pw ) ;^331^^^^^302^345^[REPLACE] trimStackFrames ( stacks ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^if  ( iter.next (  )  )  {^340^^^^^302^345^[REPLACE] if  ( iter.hasNext (  )  )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^out.println ( causeMsg ) ;^341^^^^^302^345^[REPLACE] out.print ( separatorLine ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^for  ( int i = 0; i < throwables.length; i++ )  {^335^^^^^302^345^[REPLACE] for  ( Iterator iter=stacks.iterator (  ) ; iter.hasNext (  ) ; )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^if  ( nestable instanceof Throwable )  {^340^^^^^302^345^[REPLACE] if  ( iter.hasNext (  )  )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^out .println ( causeMsg )  ;^341^^^^^302^345^[REPLACE] out.print ( separatorLine ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[ADD]^^341^^^^^302^345^[ADD] out.print ( separatorLine ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^for  ( int i=0, len=st.length - 5; i < len; i++ )  {^337^^^^^302^345^[REPLACE] for  ( int i=0, len=st.length; i < len; i++ )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^out.print ( st[i] ) ;^338^^^^^302^345^[REPLACE] out.println ( st[i] ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^String[] st =  ( String[] )  iter .hasNext (  )  ;^336^^^^^302^345^[REPLACE] String[] st =  ( String[] )  iter.next (  ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^for  ( int i=0 , len=st.length; i < len; i++ )  {^337^^^^^302^345^[REPLACE] for  ( int i=0, len=st.length; i < len; i++ )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[ADD]^^337^338^339^^^302^345^[ADD] for  ( int i=0, len=st.length; i < len; i++ )  { out.println ( st[i] ) ; }^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^for  ( int i=0, len=st.length; i < len; i++ )  { out.println ( st[i] ) ;^337^^^^^302^345^[REPLACE] for  ( int i=0, len=st.length; i < len; i++ )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^for  ( int i=0, len=st.length %  2; i < len; i++ )  {^337^^^^^302^345^[REPLACE] for  ( int i=0, len=st.length; i < len; i++ )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^for  ( Iterator iter=stacks .get ( len )  ; iter.hasNext (  ) ; )  {^335^^^^^302^345^[REPLACE] for  ( Iterator iter=stacks.iterator (  ) ; iter.hasNext (  ) ; )  {^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^String[] st =  ( String[] )  iter.hasNext (  ) ;^336^^^^^302^345^[REPLACE] String[] st =  ( String[] )  iter.next (  ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[ADD]^^336^^^^^302^345^[ADD] String[] st =  ( String[] )  iter.next (  ) ;^[METHOD] printStackTrace [TYPE] void [PARAMETER] PrintWriter out [CLASS] NestableDelegate   [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  Iterator iter  [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List stacks  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] st  [TYPE]  int i  len  [TYPE]  PrintWriter out 
[REPLACE]^String[] msgs = new String[throwables.length];^357^^^^^356^367^[REPLACE] StringWriter sw = new StringWriter (  ) ;^[METHOD] getStackFrames [TYPE] String[] [PARAMETER] Throwable t [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  StringWriter sw  [TYPE]  PrintWriter pw 
[ADD]^^357^^^^^356^367^[ADD] StringWriter sw = new StringWriter (  ) ;^[METHOD] getStackFrames [TYPE] String[] [PARAMETER] Throwable t [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  StringWriter sw  [TYPE]  PrintWriter pw 
[REPLACE]^PrintWriter pw = new PrintWriter ( sw, false ) ;^358^^^^^356^367^[REPLACE] PrintWriter pw = new PrintWriter ( sw, true ) ;^[METHOD] getStackFrames [TYPE] String[] [PARAMETER] Throwable t [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  StringWriter sw  [TYPE]  PrintWriter pw 
[REPLACE]^if  ( ! t instanceof Nestable )  {^361^^^^^356^367^[REPLACE] if  ( t instanceof Nestable )  {^[METHOD] getStackFrames [TYPE] String[] [PARAMETER] Throwable t [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  StringWriter sw  [TYPE]  PrintWriter pw 
[REPLACE]^t .trimStackFrames ( null )  ;^364^^^^^356^367^[REPLACE] t.printStackTrace ( pw ) ;^[METHOD] getStackFrames [TYPE] String[] [PARAMETER] Throwable t [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  StringWriter sw  [TYPE]  PrintWriter pw 
[ADD]^^364^^^^^356^367^[ADD] t.printStackTrace ( pw ) ;^[METHOD] getStackFrames [TYPE] String[] [PARAMETER] Throwable t [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  StringWriter sw  [TYPE]  PrintWriter pw 
[REPLACE]^printStackTrace ( pw ) ;^362^^^^^356^367^[REPLACE] (  ( Nestable )  t ) .printPartialStackTrace ( pw ) ;^[METHOD] getStackFrames [TYPE] String[] [PARAMETER] Throwable t [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  StringWriter sw  [TYPE]  PrintWriter pw 
[REPLACE]^return ExceptionUtils.getStackFrames ( sw.StringWriter (  ) .toString (  )  ) ;^366^^^^^356^367^[REPLACE] return ExceptionUtils.getStackFrames ( sw.getBuffer (  ) .toString (  )  ) ;^[METHOD] getStackFrames [TYPE] String[] [PARAMETER] Throwable t [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  StringWriter sw  [TYPE]  PrintWriter pw 
[REPLACE]^if  (size  <=  0 )  {^387^^^^^377^395^[REPLACE] if  ( trimmed > 0 )  {^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[ADD]^^387^388^389^390^391^377^395^[ADD] if  ( trimmed > 0 )  { currList.add ( "\t... "+trimmed+" more" ) ; stacks.set ( i, currList.toArray ( new String[currList.size (  ) ] )^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^currList.add ( "\t... " <= trimmed <= " more" ) ;^388^^^^^377^395^[REPLACE] currList.add ( "\t... "+trimmed+" more" ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[ADD]^^388^^^^^377^395^[ADD] currList.add ( "\t... "+trimmed+" more" ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^stacks.set ( trimmed, currList.toArray ( new String[currList.size (  ) ] ) ) ;^389^390^391^392^^377^395^[REPLACE] stacks.set ( i, currList.toArray ( new String[currList.size (  ) ] ) ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^currList.toArray ( new String[currList .set ( i , null )  ] ) ) ;^391^392^^^^377^395^[REPLACE] currList.toArray ( new String[currList.size (  ) ] ) ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^currList.toArray ( new String[currList.iterator (  ) ] ) ) ;^391^392^^^^377^395^[REPLACE] currList.toArray ( new String[currList.size (  ) ] ) ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[ADD]^^391^392^^^^377^395^[ADD] currList.toArray ( new String[currList.size (  ) ] ) ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^for  ( int size=stacks.length (  ) , i=size-0 ; i > 0; i-- )  {^378^^^^^377^395^[REPLACE] for  ( int size=stacks.size (  ) , i=size-1; i > 0; i-- )  {^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^if  ( trimmed  >=  3 )  {^387^^^^^377^395^[REPLACE] if  ( trimmed > 0 )  {^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^currList.add ( "\t... " >= trimmed >= " more" ) ;^388^^^^^377^395^[REPLACE] currList.add ( "\t... "+trimmed+" more" ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^stacks.set ( i, currList .add ( null )  ) ;^389^390^391^392^^377^395^[REPLACE] stacks.set ( i, currList.toArray ( new String[currList.size (  ) ] ) ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^currList.add ( new String[currList.size (  ) ] ) ) ;^391^392^^^^377^395^[REPLACE] currList.toArray ( new String[currList.size (  ) ] ) ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^String[] curr =  ( String[] )  stacks.size ( trimmed ) ;^379^^^^^377^395^[REPLACE] String[] curr =  ( String[] )  stacks.get ( i ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[ADD]^^379^^^^^377^395^[ADD] String[] curr =  ( String[] )  stacks.get ( i ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^String[] next =  ( String[] )  stacks.get (trimmed-2 ) ;^380^^^^^377^395^[REPLACE] String[] next =  ( String[] )  stacks.get ( i-1 ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^List currList = new ArrayList (   curr    ) ;^382^^^^^377^395^[REPLACE] List currList = new ArrayList ( Arrays.asList ( curr )  ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^List nextList = new ArrayList (   next    ) ;^383^^^^^377^395^[REPLACE] List nextList = new ArrayList ( Arrays.asList ( next )  ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^int trimmed = curr.length - currList.size (  )  + 1;^386^^^^^377^395^[REPLACE] int trimmed = curr.length - currList.size (  ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^for  ( int.iterator=stacks.size (  ) , i=size-1; i > 0; i-- )  {^378^^^^^377^395^[REPLACE] for  ( int size=stacks.size (  ) , i=size-1; i > 0; i-- )  {^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[ADD]^^378^379^380^^382^377^395^[ADD] for  ( int size=stacks.size (  ) , i=size-1; i > 0; i-- )  { String[] curr =  ( String[] )  stacks.get ( i ) ; String[] next =  ( String[] )  stacks.get ( i-1 ) ; List currList = new ArrayList ( Arrays.asList ( curr )  ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^for  ( int trimmed=stacks.size (  )  - 3, i=size-1; i > 0; i-- )  {^378^^^^^377^395^[REPLACE] for  ( int size=stacks.size (  ) , i=size-1; i > 0; i-- )  {^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^String[] curr =  ( String[] )  nextList.get ( i ) ;^379^^^^^377^395^[REPLACE] String[] curr =  ( String[] )  stacks.get ( i ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^String[] next =  ( String[] )  nextList.size (trimmed-1 ) ;^380^^^^^377^395^[REPLACE] String[] next =  ( String[] )  stacks.get ( i-1 ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
[REPLACE]^int trimmed = curr.length - currList.length (  ) ;^386^^^^^377^395^[REPLACE] int trimmed = curr.length - currList.size (  ) ;^[METHOD] trimStackFrames [TYPE] void [PARAMETER] List stacks [CLASS] NestableDelegate   [TYPE]  Throwable nestable  nestedCause  t  throwable  [TYPE]  List currList  nextList  stacks  [TYPE]  boolean false  matchSubclasses  topDown  trimStackFrames  true  [TYPE]  String MUST_BE_THROWABLE  baseMsg  causeMsg  separatorLine  [TYPE]  String[] curr  next  [TYPE]  int i  size  trimmed 
