[REPLACE]^private  short  comparison;^99^^^^^^^[REPLACE] private int comparison;^ [CLASS] CompareToBuilder  
[REPLACE]^if  (   rhs )  {^279^^^^^277^296^[REPLACE] if  ( lhs == rhs )  {^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^return 0;  ;^280^^^^^277^296^[REPLACE] return 0;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^return 3;^280^^^^^277^296^[REPLACE] return 0;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^if  ( lhs != null ) {^282^^^^^277^296^[REPLACE] if  ( lhs == null || rhs == null )  {^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[ADD]^^282^283^284^^^277^296^[ADD] if  ( lhs == null || rhs == null )  { throw new NullPointerException  (" ")  ; }^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^throw new InternalError ( "Unexpected IllegalAccessException" )  ;^283^^^^^277^296^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^return ;^283^^^^^277^296^[REPLACE] throw new NullPointerException  (" ")  ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^Class rhsClazz = lhs.getClass (  ) ;^285^^^^^277^296^[REPLACE] Class lhsClazz = lhs.getClass (  ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^if  ( !lhsClazz.isInstance ( lhs )  )  {^286^^^^^277^296^[REPLACE] if  ( !lhsClazz.isInstance ( rhs )  )  {^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[ADD]^^286^287^288^^^277^296^[ADD] if  ( !lhsClazz.isInstance ( rhs )  )  { throw new ClassCastException  (" ")  ; }^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^throw new NullPointerException (  )  ;^287^^^^^277^296^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^return ;^287^^^^^277^296^[REPLACE] throw new ClassCastException  (" ")  ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[ADD]^reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^289^290^^^^277^296^[ADD] CompareToBuilder compareToBuilder = new CompareToBuilder (  ) ; reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^reflectionCompare ( lhs, rhs, false, null, excludeFields )  ;^290^^^^^277^296^[REPLACE] reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[ADD]^^290^^^^^277^296^[ADD] reflectionAppend ( lhs, rhs, lhsClazz, compareToBuilder, compareTransients, excludeFields ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^lhsClazz =  reflectUpToClass.getSuperclass (  ) ;^292^^^^^277^296^[REPLACE] lhsClazz = lhsClazz.getSuperclass (  ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^return compareToBuilder.CompareToBuilder (  ) ;^295^^^^^277^296^[REPLACE] return compareToBuilder.toComparison (  ) ;^[METHOD] reflectionCompare [TYPE] int [PARAMETER] Object lhs Object rhs boolean compareTransients Class reflectUpToClass String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  Class lhsClazz  reflectUpToClass  [TYPE]  boolean compareTransients  false  true  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder compareToBuilder  [TYPE]  int comparison 
[REPLACE]^Field[] fields = clazz .getSuperclass (  )  ;^317^^^^^315^335^[REPLACE] Field[] fields = clazz.getDeclaredFields (  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^List excludedFieldList  =  Collections.EMPTY_LIST;^318^^^^^315^335^[REPLACE] List excludedFieldList = excludeFields != null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^AccessibleObject.setAccessible ( fields, false ) ;^319^^^^^315^335^[REPLACE] AccessibleObject.setAccessible ( fields, true ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^if  ( excludedFieldList.contains ( f .getName (  )  &&  ( f^322^323^324^325^^315^335^[REPLACE] if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[ADD]^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^326^327^328^^330^322^333^[ADD] try { builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ; } catch  ( IllegalAccessException e )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[ADD]^^331^^^^^322^333^[ADD] throw new InternalError ( "Unexpected IllegalAccessException" ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[ADD]^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^326^327^328^^330^315^335^[ADD] try { builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ; } catch  ( IllegalAccessException e )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^builder.append ( f .getName (  )  , f^327^^^^^315^335^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^f.get ( rhs )  ;^327^^^^^315^335^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[ADD]^^327^^^^^315^335^[ADD] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^f.get ( lhs )  ;^327^^^^^315^335^[REPLACE] builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^for  ( int i = 0 ; i < fields.length && builder.comparison == 0 ; i++ )  {^320^^^^^315^335^[REPLACE] for  ( int i = 0; i < fields.length && builder.comparison == 0; i++ )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^int i = 0  ;^321^^^^^315^335^[REPLACE] Field f = fields[i];^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^return ;^331^^^^^315^335^[REPLACE] throw new InternalError ( "Unexpected IllegalAccessException" ) ;^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[ADD]^^328^329^330^^^315^335^[ADD] catch  ( IllegalAccessException e )  {^[METHOD] reflectionAppend [TYPE] void [PARAMETER] Object lhs Object rhs Class clazz CompareToBuilder builder boolean useTransients String[] excludeFields [CLASS] CompareToBuilder   [TYPE]  Field f  [TYPE]  boolean false  true  useTransients  [TYPE]  Object lhs  rhs  [TYPE]  Class clazz  [TYPE]  List excludedFieldList  [TYPE]  String[] excludeFields  [TYPE]  CompareToBuilder builder  [TYPE]  int comparison  i  [TYPE]  Field[] fields  [TYPE]  IllegalAccessException e 
[REPLACE]^if  ( superCompareTo  ==  0 )  {^404^^^^^403^452^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs == rhs )  {     return 0; }^404^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^return this;  ;^405^^^^^403^452^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^return null;^405^^^^^403^452^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( lhs  !=  rhs )  {^407^^^^^403^452^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^return null;^408^^^^^403^452^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  (rhs != null )  {^410^^^^^403^452^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^411^^^^^403^452^[ADD] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^return null;^412^^^^^403^452^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison = +1  ;^411^^^^^403^452^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( lhs != null )  {^414^^^^^403^452^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison = +1L;^415^^^^^403^452^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^return null;^416^^^^^403^452^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison = 0  ;^415^^^^^403^452^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^return this;  ;^416^^^^^403^452^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if   (  lhs instanceof boolean[]  )   {  ;^418^^^^^403^452^[REPLACE] if  ( lhs.getClass (  ) .isArray (  )  )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^418^419^^^^403^452^[ADD] if  ( lhs.getClass (  ) .isArray (  )  )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( comparator != null )  {^445^^^^^418^450^[REPLACE] if  ( comparator == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^445^446^447^448^449^418^450^[ADD] if  ( comparator == null )  { comparison =  (  ( Comparable )  lhs ) .compareTo ( rhs ) ; } else { comparison = comparator.compare ( lhs, rhs ) ; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^448^^^^^445^449^[ADD] comparison = comparator.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^446^^^^^418^450^[ADD] comparison =  (  ( Comparable )  lhs ) .compareTo ( rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison =  null.compare ( lhs, rhs ) ;^448^^^^^418^450^[REPLACE] comparison = comparator.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( ! rhs instanceof long[] )  {^422^^^^^403^452^[REPLACE] if  ( lhs instanceof long[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^append (  ( long[] )  lhs,  ( long[] )  rhs ) ;append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^422^423^424^425^^403^452^[ADD] if  ( lhs instanceof long[] )  { append (  ( long[] )  lhs,  ( long[] )  rhs ) ; } else if  ( lhs instanceof int[] )  { append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^424^^^^^403^452^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof short[] )  {^426^^^^^403^452^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof char[] )  {^428^^^^^403^452^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! rhs instanceof byte[] )  {^430^^^^^403^452^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof double[] )  {^432^^^^^403^452^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( double[] )  lhs,  ( double[] )  rhs ) ;append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^432^433^434^435^^403^452^[ADD] else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ; } else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof float[] )  {^434^^^^^403^452^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof boolean[] )  {^436^^^^^403^452^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^436^437^438^^^403^452^[ADD] else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ; } else {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^asList ( excludeFields )  ;^441^^^^^436^442^[REPLACE] append (  ( Object[] )  lhs,  ( Object[] )  rhs, comparator ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  (  ( short[] )   ( lhs )  ) ,  (  ( short[] )   ( rhs )  )  )  ;^437^^^^^403^452^[REPLACE] append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  (  ( short[] )   ( lhs )  ) ,  (  ( short[] )   ( rhs )  )  )  ;^435^^^^^403^452^[REPLACE] append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  (  ( short[] )   ( lhs )  ) ,  (  ( short[] )   ( rhs )  )  )  ;^433^^^^^403^452^[REPLACE] append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^434^^^^^403^452^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^437^^^^^403^452^[ADD] append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^436^^^^^403^452^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs instanceof double[] )  {     append (  (  ( double[] )   ( lhs )  ) ,  (  ( double[] )   ( rhs )  )  ) ; }else     if  ( lhs instanceof float[] )  {         append (  (  ( float[] )   ( lhs )  ) ,  (  ( float[] )   ( rhs )  )  ) ;     }else         if  ( lhs instanceof boolean[] )  {             append (  (  ( boolean[] )   ( lhs )  ) ,  (  ( boolean[] )   ( rhs )  )  ) ;         }else {             append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  ) , comparator ) ;         }^436^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  (  ( short[] )   ( lhs )  ) ,  (  ( short[] )   ( rhs )  )  )  ;^431^^^^^403^452^[REPLACE] append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^431^^^^^403^452^[ADD] append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^432^^^^^403^452^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( float[] )  lhs,  ( float[] )  rhs ) ;append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^434^435^436^437^^403^452^[ADD] else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ; } else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^433^^^^^403^452^[ADD] append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^434^435^436^437^^403^452^[ADD] else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ; } else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if   (  lhs instanceof byte[]  )   {  ;^436^^^^^403^452^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^append ( lhs[i], rhs[i], comparator )  ;^437^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  (  ( short[] )   ( lhs )  ) ,  (  ( short[] )   ( rhs )  )  )  ;^429^^^^^403^452^[REPLACE] append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof double[] )  {^432^^^^^403^452^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs instanceof char[] )  {     append (  (  ( char[] )   ( lhs )  ) ,  (  ( char[] )   ( rhs )  )  ) ; }else     if  ( lhs instanceof byte[] )  {         append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  ) ;     }else         if  ( lhs instanceof double[] )  {             append (  (  ( double[] )   ( lhs )  ) ,  (  ( double[] )   ( rhs )  )  ) ;         }else             if  ( lhs instanceof float[] )  {                 append (  (  ( float[] )   ( lhs )  ) ,  (  ( float[] )   ( rhs )  )  ) ;             }else                 if  ( lhs instanceof boolean[] )  {                     append (  (  ( boolean[] )   ( lhs )  ) ,  (  ( boolean[] )   ( rhs )  )  ) ;                 }else {                     append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  ) , comparator ) ;                 }^434^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^441^^^^^436^442^[ADD] append (  ( Object[] )  lhs,  ( Object[] )  rhs, comparator ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof float[] )  {^434^^^^^403^452^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! rhs instanceof double[] )  {^432^^^^^403^452^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof boolean[] )  {^436^^^^^403^452^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^append ( lhs[i], rhs[i], comparator )  ;^441^^^^^436^442^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^435^^^^^403^452^[ADD] append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  (  ( long[] )   ( lhs )  ) ,  (  ( long[] )   ( rhs )  )  )  ;^427^^^^^403^452^[REPLACE] append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof byte[] )  {^430^^^^^403^452^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs instanceof char[] )  {     append (  (  ( char[] )   ( lhs )  ) ,  (  ( char[] )   ( rhs )  )  ) ; }else     if  ( lhs instanceof byte[] )  {         append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  ) ;     }else         if  ( lhs instanceof double[] )  {             append (  (  ( double[] )   ( lhs )  ) ,  (  ( double[] )   ( rhs )  )  ) ;         }else             if  ( lhs instanceof float[] )  {                 append (  (  ( float[] )   ( lhs )  ) ,  (  ( float[] )   ( rhs )  )  ) ;             }else                 if  ( lhs instanceof boolean[] )  {                     append (  (  ( boolean[] )   ( lhs )  ) ,  (  ( boolean[] )   ( rhs )  )  ) ;                 }else {                     append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  ) , comparator ) ;                 }^432^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if   (  lhs instanceof boolean[]  )   {  ;^434^^^^^403^452^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if   (  lhs instanceof boolean[]  )   {  ;^430^^^^^403^452^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! rhs instanceof float[] )  {^434^^^^^403^452^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}^436^437^438^^^403^452^[ADD] else if  ( lhs instanceof boolean[] )  { append (  ( boolean[] )  lhs,  ( boolean[] )  rhs ) ; } else {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if   (  lhs instanceof boolean[]  )   {  ;^432^^^^^403^452^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^432^433^434^435^^403^452^[ADD] else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ; } else if  ( lhs instanceof float[] )  { append (  ( float[] )  lhs,  ( float[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^append ( lhs[i], rhs[i], comparator )  ;^435^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! rhs instanceof boolean[] )  {^436^^^^^403^452^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  (  ( short[] )   ( lhs )  ) ,  (  ( short[] )   ( rhs )  )  )  ;^425^^^^^403^452^[REPLACE] append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( short[] )  lhs,  ( short[] )  rhs ) ;append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^426^427^428^429^^403^452^[ADD] else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ; } else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^428^^^^^403^452^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( char[] )  lhs,  ( char[] )  rhs ) ;append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^428^429^430^431^^403^452^[ADD] else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ; } else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof byte[] )  {^430^^^^^403^452^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! rhs instanceof float[] )  {^434^^^^^403^452^[REPLACE] } else if  ( lhs instanceof float[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^429^^^^^403^452^[ADD] append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs instanceof char[] )  {     append (  (  ( char[] )   ( lhs )  ) ,  (  ( char[] )   ( rhs )  )  ) ; }else     if  ( lhs instanceof byte[] )  {         append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  ) ;     }else         if  ( lhs instanceof double[] )  {             append (  (  ( double[] )   ( lhs )  ) ,  (  ( double[] )   ( rhs )  )  ) ;         }else             if  ( lhs instanceof float[] )  {                 append (  (  ( float[] )   ( lhs )  ) ,  (  ( float[] )   ( rhs )  )  ) ;             }else                 if  ( lhs instanceof boolean[] )  {                     append (  (  ( boolean[] )   ( lhs )  ) ,  (  ( boolean[] )   ( rhs )  )  ) ;                 }else {                     append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  ) , comparator ) ;                 }^430^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! rhs instanceof char[] )  {^428^^^^^403^452^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! rhs instanceof boolean[] )  {^436^^^^^403^452^[REPLACE] } else if  ( lhs instanceof boolean[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^append ( lhs[i], rhs[i], comparator )  ;^433^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^append (  (  ( short[] )   ( lhs )  ) ,  (  ( short[] )   ( rhs )  )  )  ;^423^^^^^403^452^[REPLACE] append (  ( long[] )  lhs,  ( long[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^423^^^^^403^452^[ADD] append (  ( long[] )  lhs,  ( long[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof int[] )  {^424^^^^^403^452^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^426^^^^^403^452^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if   (  lhs instanceof boolean[]  )   {  ;^428^^^^^403^452^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  else {^430^^^^^403^452^[REPLACE] } else if  ( lhs instanceof byte[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^430^431^432^433^^403^452^[ADD] else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ; } else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^425^^^^^403^452^[ADD] append (  ( int[] )  lhs,  ( int[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if   (  lhs instanceof boolean[]  )   {  ;^426^^^^^403^452^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^if  ( lhs instanceof char[] )  {     append (  (  ( char[] )   ( lhs )  ) ,  (  ( char[] )   ( rhs )  )  ) ; }else     if  ( lhs instanceof byte[] )  {         append (  (  ( byte[] )   ( lhs )  ) ,  (  ( byte[] )   ( rhs )  )  ) ;     }else         if  ( lhs instanceof double[] )  {             append (  (  ( double[] )   ( lhs )  ) ,  (  ( double[] )   ( rhs )  )  ) ;         }else             if  ( lhs instanceof float[] )  {                 append (  (  ( float[] )   ( lhs )  ) ,  (  ( float[] )   ( rhs )  )  ) ;             }else                 if  ( lhs instanceof boolean[] )  {                     append (  (  ( boolean[] )   ( lhs )  ) ,  (  ( boolean[] )   ( rhs )  )  ) ;                 }else {                     append (  (  ( Object[] )   ( lhs )  ) ,  (  ( Object[] )   ( rhs )  ) , comparator ) ;                 }^426^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^428^429^430^431^^403^452^[ADD] else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ; } else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^430^431^432^433^^403^452^[ADD] else if  ( lhs instanceof byte[] )  { append (  ( byte[] )  lhs,  ( byte[] )  rhs ) ; } else if  ( lhs instanceof double[] )  { append (  ( double[] )  lhs,  ( double[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! lhs instanceof char[] )  {^428^^^^^403^452^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^append ( lhs[i], rhs[i], comparator )  ;^431^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( ! lhs instanceof long[] )  {^422^^^^^403^452^[REPLACE] if  ( lhs instanceof long[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! rhs instanceof int[] )  {^424^^^^^403^452^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( int[] )  lhs,  ( int[] )  rhs ) ;append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^424^425^426^427^^403^452^[ADD] else if  ( lhs instanceof int[] )  { append (  ( int[] )  lhs,  ( int[] )  rhs ) ; } else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof short[] )  {^426^^^^^403^452^[REPLACE] } else if  ( lhs instanceof short[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REMOVE]^append ( lhs[i], rhs[i], comparator )  ;^429^^^^^403^452^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^}   append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^426^427^428^429^^403^452^[ADD] else if  ( lhs instanceof short[] )  { append (  ( short[] )  lhs,  ( short[] )  rhs ) ; } else if  ( lhs instanceof char[] )  { append (  ( char[] )  lhs,  ( char[] )  rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! lhs instanceof int[] )  {^424^^^^^403^452^[REPLACE] } else if  ( lhs instanceof int[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^}  if  ( ! rhs instanceof double[] )  {^432^^^^^403^452^[REPLACE] } else if  ( lhs instanceof double[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^} else if  ( ! rhs instanceof char[] )  {^428^^^^^403^452^[REPLACE] } else if  ( lhs instanceof char[] )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  ( comparator != null )  {^445^^^^^403^452^[REPLACE] if  ( comparator == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison =  null.compare ( lhs, rhs ) ;^448^^^^^445^449^[REPLACE] comparison = comparator.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison =   (  ( Comparable )  lhs ) .compareTo ( rhs ) ;^446^^^^^403^452^[REPLACE] comparison =  (  ( Comparable )  lhs ) .compareTo ( rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[ADD]^^446^^^^^403^452^[ADD] comparison =  (  ( Comparable )  lhs ) .compareTo ( rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^comparison =  null.compare ( lhs, rhs ) ;^448^^^^^403^452^[REPLACE] comparison = comparator.compare ( lhs, rhs ) ;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^return null;^451^^^^^403^452^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object lhs Object rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  Object lhs  rhs  [TYPE]  boolean false  true  [TYPE]  int comparison  i  superCompareTo  [TYPE]  Comparator comparator 
[REPLACE]^if  (rhs  ==  0 )  {^649^^^^^648^671^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return null;^650^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^if   (  rhs == null  )   {  ;^652^^^^^648^671^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return null;^653^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^if  ( lhs !=rhs )  {^655^^^^^648^671^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REMOVE]^if  (  ( lhs.length )  !=  ( rhs.length )  )  {     comparison =  (  ( lhs.length )  <  ( rhs.length )  )  ? -1 : +1;     return this; }^655^^^^^648^671^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^comparison = -4;^656^^^^^648^671^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return this;  ;^657^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^comparison = -1 + 3;^656^^^^^648^671^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return null;^657^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^if   (  lhs == rhs  )   {  ;^659^^^^^648^671^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[ADD]^^659^660^661^662^^648^671^[ADD] if  ( rhs == null )  { comparison = +1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^comparison = 0  ;^660^^^^^648^671^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return null;^661^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^if  ( lhs.length *  0.5  != rhs.length *  0.5  )  {^663^^^^^648^671^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[ADD]^^663^664^665^666^^648^671^[ADD] if  ( lhs.length != rhs.length )  { comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[ADD]^return this;^664^665^^^^648^671^[ADD] comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return this;  ;^665^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^comparison =  ( lhs.length (  )  < rhs.length (  )  )  ? -0  : +0 ;^664^^^^^648^671^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^667^^^^^648^671^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^return null;^670^^^^^648^671^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] Object[] lhs Object[] rhs Comparator comparator [CLASS] CompareToBuilder   [TYPE]  boolean false  true  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  Object[] lhs  rhs  [TYPE]  Comparator comparator 
[REPLACE]^if  ( comparison  ==  0 )  {^689^^^^^688^711^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^690^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^690^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if   (  rhs == null  )   {  ;^692^^^^^688^711^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^693^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^693^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if   (  lhs == rhs  )   {  ;^695^^^^^688^711^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^^696^^^^^688^711^[ADD] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^697^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = +1  ;^696^^^^^688^711^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( rhs != null )  {^699^^^^^688^711^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REMOVE]^if  (  ( lhs.length )  !=  ( rhs.length )  )  {     comparison =  (  ( lhs.length )  <  ( rhs.length )  )  ? -1 : +1;     return this; }^699^^^^^688^711^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = +1 * 2;^700^^^^^688^711^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^701^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^^700^701^^^^688^711^[ADD] comparison = +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length + 3 != rhs.length + 3 )  {^703^^^^^688^711^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REMOVE]^if  ( lhs == false )  {     comparison = -1; }else {     comparison = +1; }^703^^^^^688^711^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length + 0  < rhs.length + 0  )  ? -0  : +0 ;^704^^^^^688^711^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^705^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length + 3 < rhs.length + 3 )  ? -0  : +0 ;^704^^^^^688^711^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^^707^708^709^^^688^711^[ADD] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^710^^^^^688^711^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] long[] lhs long[] rhs [CLASS] CompareToBuilder   [TYPE]  long[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  ==  0 * 3 )  {^729^^^^^728^751^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^729^730^731^^^728^751^[ADD] if  ( comparison != 0 )  { return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^730^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^730^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs  !=  rhs )  {^732^^^^^728^751^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^return this;^732^733^734^^^728^751^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^733^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( rhs != null )  {^735^^^^^728^751^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^comparison = -1;return this;^735^736^737^738^^728^751^[ADD] if  ( lhs == null )  { comparison = -1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = -1 << 4;^736^^^^^728^751^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^737^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^736^737^^^^728^751^[ADD] comparison = -1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( rhs !=lhs )  {^739^^^^^728^751^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^comparison = +1;return this;^739^740^741^742^^728^751^[ADD] if  ( rhs == null )  { comparison = +1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = +3;^740^^^^^728^751^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^741^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = +1 - 3;^740^^^^^728^751^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length - 5 != rhs.length - 5 )  {^743^^^^^728^751^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^743^744^745^746^^728^751^[ADD] if  ( lhs.length != rhs.length )  { comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length %  0.5  < rhs.length %  0.5  )  ? -1 : +1;^744^^^^^728^751^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^745^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length *  0.5  < rhs.length *  0.5  )  ? -1 : +1;^744^^^^^728^751^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^747^748^749^^^728^751^[ADD] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^750^^^^^728^751^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] int[] lhs int[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  int[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  ==  0 * 3 )  {^769^^^^^768^791^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^770^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if   (  rhs == null  )   {  ;^772^^^^^768^791^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^773^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( rhs !=rhs )  {^775^^^^^768^791^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = -0;^776^^^^^768^791^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^777^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = -4;^776^^^^^768^791^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^777^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( rhs != null )  {^779^^^^^768^791^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^^780^781^^^^768^791^[ADD] comparison = +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^781^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = 0  ;^780^^^^^768^791^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length %  0.5  != rhs.length %  0.5  )  {^783^^^^^768^791^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;return this;^783^784^785^786^^768^791^[ADD] if  ( lhs.length != rhs.length )  { comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length (  )  < rhs.length (  )  )  ? -0  : +0 ;^784^^^^^768^791^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^785^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^785^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^787^^^^^768^791^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^790^^^^^768^791^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] short[] lhs short[] rhs [CLASS] CompareToBuilder   [TYPE]  short[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  == superCompareTo )  {^809^^^^^808^831^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REMOVE]^if  ( lhs == rhs )  {     return 0; }^809^^^^^808^831^[REMOVE] ^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^810^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs  ) {^812^^^^^808^831^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^813^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs != null )  {^815^^^^^808^831^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = -2;^816^^^^^808^831^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^817^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  (lhs != null )  {^819^^^^^808^831^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = +4;^820^^^^^808^831^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^821^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^return this;^820^821^^^^808^831^[ADD] comparison = +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^821^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length - 5 != rhs.length - 5 )  {^823^^^^^808^831^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^823^824^825^826^^808^831^[ADD] if  ( lhs.length != rhs.length )  { comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length %  2 < rhs.length %  2 )  ? -1 : +1;^824^^^^^808^831^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^825^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^824^825^^^^808^831^[ADD] comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^825^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^827^^^^^808^831^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^830^^^^^808^831^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] char[] lhs char[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  char[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( superCompareTo  ==  0 )  {^849^^^^^848^871^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^850^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  (   rhs )  {^852^^^^^848^871^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^853^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs != this  )  {^855^^^^^848^871^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^^856^^^^^848^871^[ADD] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^857^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = -4;^856^^^^^848^871^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^857^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  (lhs != null )  {^859^^^^^848^871^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = +1 - 4;^860^^^^^848^871^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^861^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = +1 / 2;^860^^^^^848^871^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^861^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length /  0.5  != rhs.length /  0.5  )  {^863^^^^^848^871^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;return this;^863^864^865^866^^848^871^[ADD] if  ( lhs.length != rhs.length )  { comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^return this;^864^865^^^^848^871^[ADD] comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^865^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length + 0  < rhs.length + 0  )  ? -0  : +0 ;^864^^^^^848^871^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^865^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^867^^^^^848^871^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^870^^^^^848^871^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] byte[] lhs byte[] rhs [CLASS] CompareToBuilder   [TYPE]  byte[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  == superCompareTo )  {^889^^^^^888^911^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^890^^^^^888^911^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs  ||  rhs )  {^892^^^^^888^911^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^893^^^^^888^911^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs != true )  {^895^^^^^888^911^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^^896^^^^^888^911^[ADD] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^897^^^^^888^911^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = -2;^896^^^^^888^911^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  (lhs != false )  {^899^^^^^888^911^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison = 0  ;^900^^^^^888^911^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^901^^^^^888^911^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length (  )  != rhs.length (  )  )  {^903^^^^^888^911^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;return this;^903^904^905^906^^888^911^[ADD] if  ( lhs.length != rhs.length )  { comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length - 4 < rhs.length - 4 )  ? -1 : +1;^904^^^^^888^911^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^905^^^^^888^911^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length + 2 < rhs.length + 2 )  ? -1 : +1;^904^^^^^888^911^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[ADD]^^907^908^909^^^888^911^[ADD] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  { append ( lhs[i], rhs[i] ) ; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^return null;^910^^^^^888^911^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] double[] lhs double[] rhs [CLASS] CompareToBuilder   [TYPE]  double[] lhs  rhs  [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  ==  2 )  {^929^^^^^928^951^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^930^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  (   lhs )  {^932^^^^^928^951^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^932^933^934^^^928^951^[ADD] if  ( lhs == rhs )  { return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^933^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  (rhs != false )  {^935^^^^^928^951^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = -4;^936^^^^^928^951^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^937^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = +1  ;^936^^^^^928^951^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( rhs != null )  {^939^^^^^928^951^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^940^^^^^928^951^[ADD] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^941^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^return this;^940^941^^^^928^951^[ADD] comparison = +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length (  )  != rhs.length (  )  )  {^943^^^^^928^951^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison =  ( lhs.length *  0.5  < rhs.length *  0.5  )  ? -1 : +1;^944^^^^^928^951^[REPLACE] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^945^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^return this;^944^945^^^^928^951^[ADD] comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^945^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^947^^^^^928^951^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^950^^^^^928^951^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] float[] lhs float[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  float[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( comparison  ==  4 )  {^969^^^^^968^991^[REPLACE] if  ( comparison != 0 )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^970^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs  ||  lhs )  {^972^^^^^968^991^[REPLACE] if  ( lhs == rhs )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^973^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if   (  lhs == rhs  )   {  ;^975^^^^^968^991^[REPLACE] if  ( lhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^return this;^976^977^^^^968^991^[ADD] comparison = -1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^977^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = -2;^976^^^^^968^991^[REPLACE] comparison = -1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs != null )  {^979^^^^^968^991^[REPLACE] if  ( rhs == null )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = +1 - 2;^980^^^^^968^991^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^981^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^comparison = 0  ;^980^^^^^968^991^[REPLACE] comparison = +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^if  ( lhs.length %  0.5  != rhs.length %  0.5  )  {^983^^^^^968^991^[REPLACE] if  ( lhs.length != rhs.length )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^comparison =  ( lhs.length < rhs.length )  ? -1 : +1;return this;^983^984^985^986^^968^991^[ADD] if  ( lhs.length != rhs.length )  { comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this; }^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^return this;^984^985^^^^968^991^[ADD] comparison =  ( lhs.length < rhs.length )  ? -1 : +1; return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return this;  ;^985^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[ADD]^^984^^^^^968^991^[ADD] comparison =  ( lhs.length < rhs.length )  ? -1 : +1;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^985^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^for  ( int i = 0 ; i < lhs.length && comparison == 0 ; i++ )  {^987^^^^^968^991^[REPLACE] for  ( int i = 0; i < lhs.length && comparison == 0; i++ )  {^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
[REPLACE]^return null;^990^^^^^968^991^[REPLACE] return this;^[METHOD] append [TYPE] CompareToBuilder [PARAMETER] boolean[] lhs boolean[] rhs [CLASS] CompareToBuilder   [TYPE]  int comparison  i  lhs  rhs  superCompareTo  [TYPE]  boolean[] lhs  rhs  [TYPE]  boolean false  true 
