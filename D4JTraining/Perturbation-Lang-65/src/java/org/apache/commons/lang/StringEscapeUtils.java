[REPLACE]^out.write ( '\b' ) ;^55^^^^^54^56^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] StringEscapeUtils() [PARAMETER] [CLASS] StringEscapeUtils   [TYPE]  boolean false  true 
[REPLACE]^return escapeJavaStyleString ( str, true ) ;^82^^^^^81^83^[REPLACE] return escapeJavaStyleString ( str, false ) ;^[METHOD] escapeJava [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^escapeJavaStyleString ( out, str, true ) ;^98^^^^^97^99^[REPLACE] escapeJavaStyleString ( out, str, false ) ;^[METHOD] escapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer out 
[REPLACE]^return escapeJavaStyleString ( str, false ) ;^123^^^^^122^124^[REPLACE] return escapeJavaStyleString ( str, true ) ;^[METHOD] escapeJavaScript [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^escapeJavaStyleString ( out, str, false ) ;^139^^^^^138^140^[REPLACE] escapeJavaStyleString ( out, str, true ) ;^[METHOD] escapeJavaScript [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer out 
[ADD]^^139^^^^^138^140^[ADD] escapeJavaStyleString ( out, str, true ) ;^[METHOD] escapeJavaScript [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer out 
[REPLACE]^if  ( str != null )  {^150^^^^^149^162^[REPLACE] if  ( str == null )  {^[METHOD] escapeJavaStyleString [TYPE] String [PARAMETER] String str boolean escapeSingleQuotes [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuotes  false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^return true;^151^^^^^149^162^[REPLACE] return null;^[METHOD] escapeJavaStyleString [TYPE] String [PARAMETER] String str boolean escapeSingleQuotes [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuotes  false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[ADD]^StringWriter writer = new StringWriter ( str.length (  )  * 2 ) ;escapeJavaStyleString ( writer, str, escapeSingleQuotes ) ;return writer.toString (  ) ;^153^154^155^156^157^149^162^[ADD] try { StringWriter writer = new StringWriter ( str.length (  )  * 2 ) ; escapeJavaStyleString ( writer, str, escapeSingleQuotes ) ; return writer.toString (  ) ; } catch  ( IOException ioe )  {^[METHOD] escapeJavaStyleString [TYPE] String [PARAMETER] String str boolean escapeSingleQuotes [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuotes  false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^return null;^156^^^^^149^162^[REPLACE] return writer.toString (  ) ;^[METHOD] escapeJavaStyleString [TYPE] String [PARAMETER] String str boolean escapeSingleQuotes [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuotes  false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^StringWriter writer = new StringWriter ( str.length (  )  - 2 * 2 ) ;^154^^^^^149^162^[REPLACE] StringWriter writer = new StringWriter ( str.length (  )  * 2 ) ;^[METHOD] escapeJavaStyleString [TYPE] String [PARAMETER] String str boolean escapeSingleQuotes [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuotes  false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^return writer .StringWriter ( this )  ;^156^^^^^149^162^[REPLACE] return writer.toString (  ) ;^[METHOD] escapeJavaStyleString [TYPE] String [PARAMETER] String str boolean escapeSingleQuotes [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuotes  false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^return this;^160^^^^^149^162^[REPLACE] return null;^[METHOD] escapeJavaStyleString [TYPE] String [PARAMETER] String str boolean escapeSingleQuotes [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuotes  false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^StringWriter writer = new StringWriter ( str.length (  )  + 3 * 0  ) ;^154^^^^^149^162^[REPLACE] StringWriter writer = new StringWriter ( str.length (  )  * 2 ) ;^[METHOD] escapeJavaStyleString [TYPE] String [PARAMETER] String str boolean escapeSingleQuotes [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuotes  false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[ADD]^^154^155^^^^149^162^[ADD] StringWriter writer = new StringWriter ( str.length (  )  * 2 ) ; escapeJavaStyleString ( writer, str, escapeSingleQuotes ) ;^[METHOD] escapeJavaStyleString [TYPE] String [PARAMETER] String str boolean escapeSingleQuotes [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuotes  false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^if  ( out != false )  {^173^^^^^172^243^[REPLACE] if  ( out == null )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^throw new IllegalArgumentException  ( "The Writer must not be null." ) ; ;^174^^^^^172^243^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^174^^^^^172^243^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^return ;^174^^^^^172^243^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( str != null )  {^176^^^^^172^243^[REPLACE] if  ( str == null )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^176^177^178^^^172^243^[ADD] if  ( str == null )  { return; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^return null;^177^^^^^172^243^[REPLACE] return;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^StringWriter writer = new StringWriter ( str.length (  )  ) ;^179^^^^^172^243^[REPLACE] int sz;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^sz =  null.length (  ) ;^180^^^^^172^243^[REPLACE] sz = str.length (  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( ch  !=  0xfff )  {^185^^^^^172^243^[REPLACE] if  ( ch > 0xfff )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  else {^187^^^^^172^243^[REPLACE] } else if  ( ch > 0xff )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^if  ( ch > 127 )  {     out.write (  ( "\\u00" +  ( hex ( ch )  )  )  ) ; }else     if  ( ch < 32 )  {         switch  ( ch )  {             case '\b' :                 out.write ( '\\' ) ;                 out.write ( 'b' ) ;                 break;             case '\n' :                 out.write ( '\\' ) ;                 out.write ( 'n' ) ;                 break;             case '\t' :                 out.write ( '\\' ) ;                 out.write ( 't' ) ;                 break;             case '\f' :                 out.write ( '\\' ) ;                 out.write ( 'f' ) ;                 break;             case '\r' :                 out.write ( '\\' ) ;                 out.write ( 'r' ) ;                 break;             default :                 if  ( ch > 15 )  {                     out.write (  ( "\\u00" +  ( hex ( ch )  )  )  ) ;                 }else {                     out.write (  ( "\\u000" +  ( hex ( ch )  )  )  ) ;                 }                 break;         }     }else {         switch  ( ch )  {             case '\'' :                 if  ( escapeSingleQuote )  {                     out.write ( '\\' ) ;                 }                 out.write ( '\'' ) ;                 break;             case '"' :                 out.write ( '\\' ) ;                 out.write ( '"' ) ;                 break;             case '\\' :                 out.write ( '\\' ) ;                 out.write ( '\\' ) ;                 break;             default :                 out.write ( ch ) ;                 break;         }     }^187^^^^^172^243^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  else {^189^^^^^172^243^[REPLACE] } else if  ( ch > 0x7f )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  else {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( true )  {^224^^^^^191^241^[REPLACE] if  ( escapeSingleQuote )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( '\b' ) ;^225^^^^^191^241^[REPLACE] out.write ( '\\' ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( ch  ==  0xf )  {^214^^^^^172^243^[REPLACE] if  ( ch > 0xf )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u000"  &  hex ( ch )  ) ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u" + hex ( ch )  ) ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  >=  hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^215^^^^^172^243^[ADD] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u" + hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u000"  ==  hex ( ch )  ) ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  ^  hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( unicode.length (  )  == 4 )  {^224^^^^^172^243^[REPLACE] if  ( escapeSingleQuote )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( '\b' ) ;^225^^^^^172^243^[REPLACE] out.write ( '\\' ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  ||  hex ( ch )  ) ;^190^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u" + hex ( ch )  ) ;^190^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( ch  <=  0xf )  {^214^^^^^172^243^[REPLACE] if  ( ch > 0xf )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^214^215^216^217^218^172^243^[ADD] if  ( ch > 0xf )  { out.write ( "\\u00" + hex ( ch )  ) ; } else { out.write ( "\\u000" + hex ( ch )  ) ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u000"  ^  hex ( ch )  ) ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  &  hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( ch  >=  0xf )  {^214^^^^^172^243^[REPLACE] if  ( ch > 0xf )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u000"  ||  hex ( ch )  ) ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  ||  hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( true )  {^224^^^^^172^243^[REPLACE] if  ( escapeSingleQuote )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u0"  >=  hex ( ch )  ) ;^188^^^^^172^243^[REPLACE] out.write ( "\\u0" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u" + hex ( ch )  ) ;^188^^^^^172^243^[REPLACE] out.write ( "\\u0" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  if  ( ch  ==  0x7f )  {^189^^^^^172^243^[REPLACE] } else if  ( ch > 0x7f )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( unicode.length (  )  == 4 )  {^224^^^^^191^241^[REPLACE] if  ( escapeSingleQuote )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^out.write ( "\\u00" + hex ( ch )  ) ;out.write ( "\\u000" + hex ( ch )  ) ;^214^215^216^217^218^172^243^[ADD] if  ( ch > 0xf )  { out.write ( "\\u00" + hex ( ch )  ) ; } else { out.write ( "\\u000" + hex ( ch )  ) ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^217^^^^^214^218^[ADD] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^out.write ( '\b' ) ;^217^^^^^214^218^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  !=  hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^224^225^226^^^172^243^[ADD] if  ( escapeSingleQuote )  { out.write ( '\\' ) ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^ioe.printStackTrace (  ) ;^225^^^^^172^243^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  &  hex ( ch )  ) ;^190^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^190^^^^^172^243^[ADD] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if  ( ch  >  1 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( ch  !=  0xf )  {^214^^^^^172^243^[REPLACE] if  ( ch > 0xf )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u000"  >=  hex ( ch )  ) ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u000"  &&  hex ( ch )  ) ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  >  hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u"  !=  hex ( ch )  ) ;^186^^^^^172^243^[REPLACE] out.write ( "\\u" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^186^^^^^172^243^[ADD] out.write ( "\\u" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00" + hex ( ch )  ) ;^186^^^^^172^243^[REPLACE] out.write ( "\\u" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if  ( ch  <  0xff )  {^187^^^^^172^243^[REPLACE] } else if  ( ch > 0xff )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^}   out.write ( "\\u00" + hex ( ch )  ) ;^189^190^191^192^193^172^243^[ADD] else if  ( ch > 0x7f )  { out.write ( "\\u00" + hex ( ch )  ) ; } else if  ( ch < 32 )  { switch  ( ch )  { case '\b':^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  if  ( ch  !=  32 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u000"  >  hex ( ch )  ) ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( ch  <  0xf )  {^214^^^^^172^243^[REPLACE] if  ( ch > 0xf )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  <=  hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^out.write ( '\\' ) ;^224^225^226^^^172^243^[ADD] if  ( escapeSingleQuote )  { out.write ( '\\' ) ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  >=  hex ( ch )  ) ;^190^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u000"  <=  hex ( ch )  ) ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if  ( ch  <=  0x7f )  {^189^^^^^172^243^[REPLACE] } else if  ( ch > 0x7f )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^}   out.write ( '\\' ) ;out.write ( 'b' ) ;^191^192^193^194^195^172^243^[ADD] else if  ( ch < 32 )  { switch  ( ch )  { case '\b': out.write ( '\\' ) ; out.write ( 'b' ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^224^225^226^^^191^241^[ADD] if  ( escapeSingleQuote )  { out.write ( '\\' ) ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^225^^^^^191^241^[ADD] out.write ( '\\' ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  ==  hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^out.write ( '\b' ) ;^215^^^^^172^243^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^out.write ( '\b' ) ;^190^^^^^172^243^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if  ( ch  <=  32 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  |  hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^for  ( int i = 0; i  >  sz; i++ )  {^181^^^^^172^243^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( ch  <=  0xfff )  {^185^^^^^172^243^[REPLACE] if  ( ch > 0xfff )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^185^186^187^188^^172^243^[ADD] if  ( ch > 0xfff )  { out.write ( "\\u" + hex ( ch )  ) ; } else if  ( ch > 0xff )  { out.write ( "\\u0" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if  ( ch  ==  0x7f )  {^189^^^^^172^243^[REPLACE] } else if  ( ch > 0x7f )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^}^189^190^191^192^193^172^243^[ADD] else if  ( ch > 0x7f )  { out.write ( "\\u00" + hex ( ch )  ) ; } else if  ( ch < 32 )  { switch  ( ch )  { case '\b':^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^225^^^^^172^243^[ADD] out.write ( '\\' ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  if  ( ch  !=  7 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^if  ( ch > 127 )  {     out.write (  ( "\\u00" +  ( hex ( ch )  )  )  ) ; }else     if  ( ch < 32 )  {         switch  ( ch )  {             case '\b' :                 out.write ( '\\' ) ;                 out.write ( 'b' ) ;                 break;             case '\n' :                 out.write ( '\\' ) ;                 out.write ( 'n' ) ;                 break;             case '\t' :                 out.write ( '\\' ) ;                 out.write ( 't' ) ;                 break;             case '\f' :                 out.write ( '\\' ) ;                 out.write ( 'f' ) ;                 break;             case '\r' :                 out.write ( '\\' ) ;                 out.write ( 'r' ) ;                 break;             default :                 if  ( ch > 15 )  {                     out.write (  ( "\\u00" +  ( hex ( ch )  )  )  ) ;                 }else {                     out.write (  ( "\\u000" +  ( hex ( ch )  )  )  ) ;                 }                 break;         }     }else {         switch  ( ch )  {             case '\'' :                 if  ( escapeSingleQuote )  {                     out.write ( '\\' ) ;                 }                 out.write ( '\'' ) ;                 break;             case '"' :                 out.write ( '\\' ) ;                 out.write ( '"' ) ;                 break;             case '\\' :                 out.write ( '\\' ) ;                 out.write ( '\\' ) ;                 break;             default :                 out.write ( ch ) ;                 break;         }     }^191^^^^^172^243^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^out.write ( '\\' ) ;^224^225^226^^^191^241^[ADD] if  ( escapeSingleQuote )  { out.write ( '\\' ) ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^ioe.printStackTrace (  ) ;^225^^^^^191^241^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  <  hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out .write ( str )  ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u0"  &  hex ( ch )  ) ;^188^^^^^172^243^[REPLACE] out.write ( "\\u0" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^188^^^^^172^243^[ADD] out.write ( "\\u0" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if  ( ch  !=  32 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  |  hex ( ch )  ) ;^190^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  if  ( ch  >=  32 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u"  >=  hex ( ch )  ) ;^186^^^^^172^243^[REPLACE] out.write ( "\\u" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^}   out.write ( "\\u00" + hex ( ch )  ) ;^187^188^189^190^^172^243^[ADD] else if  ( ch > 0xff )  { out.write ( "\\u0" + hex ( ch )  ) ; } else if  ( ch > 0x7f )  { out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  &&  hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if  ( ch  ==  32 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u0"  |  hex ( ch )  ) ;^188^^^^^172^243^[REPLACE] out.write ( "\\u0" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^ioe.printStackTrace (  ) ;^188^^^^^172^243^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  if  ( ch  ==  3 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out .write ( str )  ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u000"  !=  hex ( ch )  ) ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^char ch = str .toUpperCase (  )  ;^182^^^^^172^243^[REPLACE] char ch = str.charAt ( i ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^for  ( int i = 3; i < sz; i++ )  {^181^^^^^172^243^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^181^182^^^^172^243^[ADD] for  ( int i = 0; i < sz; i++ )  { char ch = str.charAt ( i ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^for  ( int i = 0; i < sz; i++ )  { char ch = str.charAt ( i ) ;^182^^^^^172^243^[REPLACE] char ch = str.charAt ( i ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^return   ch   .toUpperCase (  ) ;^253^^^^^252^254^[REPLACE] return Integer.toHexString ( ch ) .toUpperCase (  ) ;^[METHOD] hex [TYPE] String [PARAMETER] char ch [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  char ch 
[REPLACE]^if  ( str != null )  {^266^^^^^265^278^[REPLACE] if  ( str == null )  {^[METHOD] unescapeJava [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[ADD]^return null;^266^267^268^^^265^278^[ADD] if  ( str == null )  { return null; }^[METHOD] unescapeJava [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^return true;^267^^^^^265^278^[REPLACE] return null;^[METHOD] unescapeJava [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^return this;^267^^^^^265^278^[REPLACE] return null;^[METHOD] unescapeJava [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[ADD]^StringWriter writer = new StringWriter ( str.length (  )  ) ;unescapeJava ( writer, str ) ;return writer.toString (  ) ;^269^270^271^272^273^265^278^[ADD] try { StringWriter writer = new StringWriter ( str.length (  )  ) ; unescapeJava ( writer, str ) ; return writer.toString (  ) ; } catch  ( IOException ioe )  {^[METHOD] unescapeJava [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^return null;^272^^^^^265^278^[REPLACE] return writer.toString (  ) ;^[METHOD] unescapeJava [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^StringWriter writer = new StringWriter ( str .toUpperCase (  )   ) ;^270^^^^^265^278^[REPLACE] StringWriter writer = new StringWriter ( str.length (  )  ) ;^[METHOD] unescapeJava [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^return true;^276^^^^^265^278^[REPLACE] return null;^[METHOD] unescapeJava [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^StringWriter writer = new StringWriter ( str.toUpperCase (  )  ) ;^270^^^^^265^278^[REPLACE] StringWriter writer = new StringWriter ( str.length (  )  ) ;^[METHOD] unescapeJava [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException ioe 
[REPLACE]^if  ( out != null )  {^296^^^^^295^377^[REPLACE] if  ( out == null )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^296^297^298^^^295^377^[ADD] if  ( out == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^return ;^297^^^^^295^377^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^throw new IllegalArgumentException  ( "The Writer must not be null." ) ; ;^297^^^^^295^377^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^if  ( str != null )  {^299^^^^^295^377^[REPLACE] if  ( str == null )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^return null;^300^^^^^295^377^[REPLACE] return;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int sz = str .toUpperCase (  )  ;^302^^^^^295^377^[REPLACE] int sz = str.length (  ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^StringBuffer unicode = new StringBuffer ( 3 ) ;^303^^^^^295^377^[REPLACE] StringBuffer unicode = new StringBuffer ( 4 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^303^^^^^295^377^[ADD] StringBuffer unicode = new StringBuffer ( 4 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^boolean hadSlash = true;^304^^^^^295^377^[REPLACE] boolean hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^boolean inUnicode = true;^305^^^^^295^377^[REPLACE] boolean inUnicode = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^305^^^^^295^377^[ADD] boolean inUnicode = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^} else if  ( ch > 0x7f )  {^308^^^^^295^377^[REPLACE] if  ( inUnicode )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^308^309^^311^^295^377^[ADD] if  ( inUnicode )  {  unicode.append ( ch ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^if  ( unicode.length (  )  - 3 == 0  )  {^312^^^^^295^377^[REPLACE] if  ( unicode.length (  )  == 4 )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^312^313^^315^316^295^377^[ADD] if  ( unicode.length (  )  == 4 )  {  try { int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;out.write (  ( char )  value ) ;unicode.setLength ( 0 ) ;inUnicode = false;^315^316^317^318^319^295^377^[ADD] try { int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ; out.write (  ( char )  value ) ; unicode.setLength ( 0 ) ; inUnicode = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^inUnicode = true; ;^319^^^^^295^377^[REPLACE] inUnicode = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^hadSlash = true;^320^^^^^295^377^[REPLACE] hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 2 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^inUnicode = true;^319^^^^^295^377^[REPLACE] inUnicode = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 4 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^out.write (  ( char )  value ) ;^316^317^^^^295^377^[ADD] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ; out.write (  ( char )  value ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^322^^^^^295^377^[REPLACE] throw new NestableRuntimeException  (" ")  ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 0 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^316^317^^^^295^377^[ADD] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ; out.write (  ( char )  value ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^319^^^^^295^377^[ADD] inUnicode = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^320^^^^^295^377^[ADD] hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 16 - 2 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^if  ( unicode.size (  )  == 4 )  {^312^^^^^295^377^[REPLACE] if  ( unicode.length (  )  == 4 )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 16 >> 3 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 16L ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^return ;^322^^^^^295^377^[REPLACE] throw new NestableRuntimeException  (" ")  ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^322^^^^^295^377^[ADD] throw new NestableRuntimeException  (" ")  ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^} else if  ( ch > 0x7f )  {^327^^^^^295^377^[REPLACE] if  ( hadSlash )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^}  else {^366^^^^^295^377^[REPLACE] } else if  ( ch == '\\' )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^}   hadSlash = true;continue;^366^367^368^369^^295^377^[ADD] else if  ( ch == '\\' )  { hadSlash = true; continue; }^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^hadSlash = false;^367^^^^^295^377^[REPLACE] hadSlash = true;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^hadSlash = true;^329^^^^^295^377^[REPLACE] hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^inUnicode = false;^358^^^^^295^377^[REPLACE] inUnicode = true;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^358^^^^^295^377^[ADD] inUnicode = true;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^for  ( int i = 0; i  >=  sz; i++ )  {^306^^^^^295^377^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^if  ( unicode.length (  )  /  0.5  == 4 )  {^312^^^^^295^377^[REPLACE] if  ( unicode.length (  )  == 4 )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^319^320^^^^295^377^[ADD] inUnicode = false; hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 16 - 1 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^316^^^^^295^377^[ADD] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 6 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^321^322^^^^295^377^[ADD] catch  ( NumberFormatException nfe )  { throw new NestableRuntimeException  (" ")  ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^if  ( unicode.size (  )  == 0  )  {^312^^^^^295^377^[REPLACE] if  ( unicode.length (  )  == 4 )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 16 / 2 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 3 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^327^328^329^330^331^295^377^[ADD] if  ( hadSlash )  {  hadSlash = false; switch  ( ch )  { case '\\':^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^hadSlash = false; ;^367^^^^^295^377^[REPLACE] hadSlash = true;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^367^368^^^^295^377^[ADD] hadSlash = true; continue;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer .toHexString ( value )  ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^hadSlash = false;^319^320^^^^295^377^[ADD] inUnicode = false; hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^329^^^^^295^377^[ADD] hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^inUnicode = false; ;^358^^^^^295^377^[REPLACE] inUnicode = true;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^char ch = str .toUpperCase (  )  ;^307^^^^^295^377^[REPLACE] char ch = str.charAt ( i ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^hadSlash = true; ;^320^^^^^295^377^[REPLACE] hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 16 + 1 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^hadSlash = true; ;^329^^^^^295^377^[REPLACE] hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^for  ( int i = 3; i < sz; i++ )  {^306^^^^^295^377^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.length (  ) , 0 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^if  ( false )  {^372^^^^^295^377^[REPLACE] if  ( hadSlash )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^out.write ( '\b' ) ;^375^^^^^295^377^[REPLACE] out.write ( '\\' ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^return writer.toString (  ) ;^391^^^^^390^392^[REPLACE] return unescapeJava ( str ) ;^[METHOD] unescapeJavaScript [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^Entities.XML.unescape ( writer, str ) ;^411^^^^^410^412^[REPLACE] unescapeJava ( out, str ) ;^[METHOD] unescapeJavaScript [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer out 
[ADD]^^411^^^^^410^412^[ADD] unescapeJava ( out, str ) ;^[METHOD] unescapeJavaScript [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer out 
[REPLACE]^if  ( str != this  )  {^443^^^^^442^456^[REPLACE] if  ( str == null )  {^[METHOD] escapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REMOVE]^if  ( ch == '\\' )  {     hadSlash = true;     continue; }^443^^^^^442^456^[REMOVE] ^[METHOD] escapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^return this;^444^^^^^442^456^[REPLACE] return null;^[METHOD] escapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^return false;^444^^^^^442^456^[REPLACE] return null;^[METHOD] escapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[ADD]^StringWriter writer = new StringWriter  (  ( int )  ( str.length (  )  * 1.5 )  ) ;escapeHtml ( writer, str ) ;return writer.toString (  ) ;^446^447^448^449^450^442^456^[ADD] try { StringWriter writer = new StringWriter  (  ( int )  ( str.length (  )  * 1.5 )  ) ; escapeHtml ( writer, str ) ; return writer.toString (  ) ; } catch  ( IOException e )  {^[METHOD] escapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^return writer .StringWriter ( this )  ;^449^^^^^442^456^[REPLACE] return writer.toString (  ) ;^[METHOD] escapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^StringWriter writer = new StringWriter  (  ( int )  ( str.size (  )  * 1.5 )  ) ;^447^^^^^442^456^[REPLACE] StringWriter writer = new StringWriter  (  ( int )  ( str.length (  )  * 1.5 )  ) ;^[METHOD] escapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^return null;^449^^^^^442^456^[REPLACE] return writer.toString (  ) ;^[METHOD] escapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^return this;^454^^^^^442^456^[REPLACE] return null;^[METHOD] escapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^StringWriter writer = new StringWriter  (  ( int )  ( str.charAt (  )  - 3 * 1.5 )  ) ;^447^^^^^442^456^[REPLACE] StringWriter writer = new StringWriter  (  ( int )  ( str.length (  )  * 1.5 )  ) ;^[METHOD] escapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^if  ( writer != null  )  {^488^^^^^487^495^[REPLACE] if  ( writer == null  )  {^[METHOD] escapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^489^^^^^487^495^[REPLACE] throw new IllegalArgumentException  ( "The Writer must not be null." ) ;^[METHOD] escapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[ADD]^^489^^^^^487^495^[ADD] throw new IllegalArgumentException  ( "The Writer must not be null." ) ;^[METHOD] escapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[REPLACE]^if  ( string != this )  {^491^^^^^487^495^[REPLACE] if  ( string == null )  {^[METHOD] escapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[REPLACE]^return null;^492^^^^^487^495^[REPLACE] return;^[METHOD] escapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[REPLACE]^Entities.HTML40.unescape ( writer, string ) ;^494^^^^^487^495^[REPLACE] Entities.HTML40.escape ( writer, string ) ;^[METHOD] escapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[REPLACE]^if  ( str != null )  {^515^^^^^514^528^[REPLACE] if  ( str == null )  {^[METHOD] unescapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[ADD]^return null;^515^516^517^^^514^528^[ADD] if  ( str == null )  { return null; }^[METHOD] unescapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^return this;^516^^^^^514^528^[REPLACE] return null;^[METHOD] unescapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^return false;^516^^^^^514^528^[REPLACE] return null;^[METHOD] unescapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[ADD]^StringWriter writer = new StringWriter  (  ( int )  ( str.length (  )  * 1.5 )  ) ;unescapeHtml ( writer, str ) ;return writer.toString (  ) ;^518^519^520^521^522^514^528^[ADD] try { StringWriter writer = new StringWriter  (  ( int )  ( str.length (  )  * 1.5 )  ) ; unescapeHtml ( writer, str ) ; return writer.toString (  ) ; } catch  ( IOException e )  {^[METHOD] unescapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^return writer .StringWriter ( null )  ;^521^^^^^514^528^[REPLACE] return writer.toString (  ) ;^[METHOD] unescapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^StringWriter writer = new StringWriter  (  ( int )  ( str.length (  )  - 2 * 3.0d )  ) ;^519^^^^^514^528^[REPLACE] StringWriter writer = new StringWriter  (  ( int )  ( str.length (  )  * 1.5 )  ) ;^[METHOD] unescapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^return true;^526^^^^^514^528^[REPLACE] return null;^[METHOD] unescapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^StringWriter writer = new StringWriter  (  ( int )  ( str.size (  )  * 3.0d )  ) ;^519^^^^^514^528^[REPLACE] StringWriter writer = new StringWriter  (  ( int )  ( str.length (  )  * 1.5 )  ) ;^[METHOD] unescapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[ADD]^^522^523^524^^^514^528^[ADD] catch  ( IOException e )  {^[METHOD] unescapeHtml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  StringWriter writer  [TYPE]  String str  [TYPE]  IOException e 
[REPLACE]^if  ( writer != null  )  {^549^^^^^548^556^[REPLACE] if  ( writer == null  )  {^[METHOD] unescapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[ADD]^^549^550^551^^^548^556^[ADD] if  ( writer == null  )  { throw new IllegalArgumentException  ( "The Writer must not be null." ) ; }^[METHOD] unescapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^550^^^^^548^556^[REPLACE] throw new IllegalArgumentException  ( "The Writer must not be null." ) ;^[METHOD] unescapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[ADD]^^550^^^^^548^556^[ADD] throw new IllegalArgumentException  ( "The Writer must not be null." ) ;^[METHOD] unescapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[REPLACE]^return ;^550^^^^^548^556^[REPLACE] throw new IllegalArgumentException  ( "The Writer must not be null." ) ;^[METHOD] unescapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[REPLACE]^if  ( string != true )  {^552^^^^^548^556^[REPLACE] if  ( string == null )  {^[METHOD] unescapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[REPLACE]^return null;^553^^^^^548^556^[REPLACE] return;^[METHOD] unescapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[REPLACE]^Entities.HTML40.escape ( writer, string ) ;^555^^^^^548^556^[REPLACE] Entities.HTML40.unescape ( writer, string ) ;^[METHOD] unescapeHtml [TYPE] void [PARAMETER] Writer writer String string [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String string  [TYPE]  Writer writer 
[REPLACE]^if  ( writer != null  )  {^579^^^^^578^586^[REPLACE] if  ( writer == null  )  {^[METHOD] escapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[REPLACE]^return ;^580^^^^^578^586^[REPLACE] throw new IllegalArgumentException  ( "The Writer must not be null." ) ;^[METHOD] escapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[ADD]^^580^^^^^578^586^[ADD] throw new IllegalArgumentException  ( "The Writer must not be null." ) ;^[METHOD] escapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^580^^^^^578^586^[REPLACE] throw new IllegalArgumentException  ( "The Writer must not be null." ) ;^[METHOD] escapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[REPLACE]^if  ( str != null )  {^582^^^^^578^586^[REPLACE] if  ( str == null )  {^[METHOD] escapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[ADD]^return;^582^583^584^^^578^586^[ADD] if  ( str == null )  { return; }^[METHOD] escapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[REPLACE]^return null;^583^^^^^578^586^[REPLACE] return;^[METHOD] escapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[REPLACE]^Entities.XML.unescape ( writer, str ) ;^585^^^^^578^586^[REPLACE] Entities.XML.escape ( writer, str ) ;^[METHOD] escapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[REPLACE]^if  ( str != true )  {^606^^^^^605^610^[REPLACE] if  ( str == null )  {^[METHOD] escapeXml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[ADD]^^606^607^608^^^605^610^[ADD] if  ( str == null )  { return null; }^[METHOD] escapeXml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^return false;^607^^^^^605^610^[REPLACE] return null;^[METHOD] escapeXml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^return true;^607^^^^^605^610^[REPLACE] return null;^[METHOD] escapeXml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^return Entities.XML.unescape ( str ) ;^609^^^^^605^610^[REPLACE] return Entities.XML.escape ( str ) ;^[METHOD] escapeXml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^if  ( writer != null  )  {^631^^^^^630^638^[REPLACE] if  ( writer == null  )  {^[METHOD] unescapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[REPLACE]^return ;^632^^^^^630^638^[REPLACE] throw new IllegalArgumentException  ( "The Writer must not be null." ) ;^[METHOD] unescapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^632^^^^^630^638^[REPLACE] throw new IllegalArgumentException  ( "The Writer must not be null." ) ;^[METHOD] unescapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[ADD]^^632^^^^^630^638^[ADD] throw new IllegalArgumentException  ( "The Writer must not be null." ) ;^[METHOD] unescapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[REPLACE]^if  ( str != null )  {^634^^^^^630^638^[REPLACE] if  ( str == null )  {^[METHOD] unescapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[ADD]^return;^634^635^636^^^630^638^[ADD] if  ( str == null )  { return; }^[METHOD] unescapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[REPLACE]^return null;^635^^^^^630^638^[REPLACE] return;^[METHOD] unescapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[REPLACE]^Entities.XML .unescape ( str )  ;^637^^^^^630^638^[REPLACE] Entities.XML.unescape ( writer, str ) ;^[METHOD] unescapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[ADD]^^637^^^^^630^638^[ADD] Entities.XML.unescape ( writer, str ) ;^[METHOD] unescapeXml [TYPE] void [PARAMETER] Writer writer String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str  [TYPE]  Writer writer 
[REPLACE]^if  ( str != null )  {^656^^^^^655^660^[REPLACE] if  ( str == null )  {^[METHOD] unescapeXml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^return false;^657^^^^^655^660^[REPLACE] return null;^[METHOD] unescapeXml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^return Entities.XML.escape ( str ) ;^659^^^^^655^660^[REPLACE] return Entities.XML.unescape ( str ) ;^[METHOD] unescapeXml [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^if  ( str != true )  {^682^^^^^681^686^[REPLACE] if  ( str == null )  {^[METHOD] escapeSql [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[ADD]^return null;^682^683^684^^^681^686^[ADD] if  ( str == null )  { return null; }^[METHOD] escapeSql [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^return false;^683^^^^^681^686^[REPLACE] return null;^[METHOD] escapeSql [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^return true;^683^^^^^681^686^[REPLACE] return null;^[METHOD] escapeSql [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
[REPLACE]^return writer.toString (  ) ;^685^^^^^681^686^[REPLACE] return StringUtils.replace ( str, "'", "''" ) ;^[METHOD] escapeSql [TYPE] String [PARAMETER] String str [CLASS] StringEscapeUtils   [TYPE]  boolean false  true  [TYPE]  String str 
