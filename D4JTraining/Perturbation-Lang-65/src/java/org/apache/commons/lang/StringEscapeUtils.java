[REPLACE]^if   (  str == null  )   {  ;^173^^^^^172^243^[REPLACE] if  ( out == null )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^173^174^175^^^172^243^[ADD] if  ( out == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^return ;^174^^^^^172^243^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^174^^^^^172^243^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( str != null )  {^176^^^^^172^243^[REPLACE] if  ( str == null )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^176^177^178^^^172^243^[ADD] if  ( str == null )  { return; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^return;  ;^177^^^^^172^243^[REPLACE] return;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^StringBuffer unicode = new StringBuffer ( 4 )  ;^179^^^^^172^243^[REPLACE] int sz;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^sz =  null.length (  ) ;^180^^^^^172^243^[REPLACE] sz = str.length (  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( ch  <=  0xfff )  {^185^^^^^172^243^[REPLACE] if  ( ch > 0xfff )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^out.write ( "\\u" + hex ( ch )  ) ;out.write ( "\\u0" + hex ( ch )  ) ;^185^186^187^188^^172^243^[ADD] if  ( ch > 0xfff )  { out.write ( "\\u" + hex ( ch )  ) ; } else if  ( ch > 0xff )  { out.write ( "\\u0" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  else {^187^^^^^172^243^[REPLACE] } else if  ( ch > 0xff )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  else {^189^^^^^172^243^[REPLACE] } else if  ( ch > 0x7f )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if  ( ch  ==  32 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^if  ( ch > 127 )  {     out.write (  ( "\\u00" +  ( hex ( ch )  )  )  ) ; }else     if  ( ch < 32 )  {         switch  ( ch )  {             case '\b' :                 out.write ( '\\' ) ;                 out.write ( 'b' ) ;                 break;             case '\n' :                 out.write ( '\\' ) ;                 out.write ( 'n' ) ;                 break;             case '\t' :                 out.write ( '\\' ) ;                 out.write ( 't' ) ;                 break;             case '\f' :                 out.write ( '\\' ) ;                 out.write ( 'f' ) ;                 break;             case '\r' :                 out.write ( '\\' ) ;                 out.write ( 'r' ) ;                 break;             default :                 if  ( ch > 15 )  {                     out.write (  ( "\\u00" +  ( hex ( ch )  )  )  ) ;                 }else {                     out.write (  ( "\\u000" +  ( hex ( ch )  )  )  ) ;                 }                 break;         }     }else {         switch  ( ch )  {             case '\'' :                 if  ( escapeSingleQuote )  {                     out.write ( '\\' ) ;                 }                 out.write ( '\'' ) ;                 break;             case '"' :                 out.write ( '\\' ) ;                 out.write ( '"' ) ;                 break;             case '\\' :                 out.write ( '\\' ) ;                 out.write ( '\\' ) ;                 break;             default :                 out.write ( ch ) ;                 break;         }     }^191^^^^^172^243^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( true )  {^224^^^^^191^241^[REPLACE] if  ( escapeSingleQuote )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( 'f' )  ;^225^^^^^191^241^[REPLACE] out.write ( '\\' ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if   (  ch > 0xfff  )   {  ;^214^^^^^172^243^[REPLACE] if  ( ch > 0xf )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write (  ( "\\u0" +  ( hex ( ch )  )  )  )  ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^escapeHtml ( writer, str )  ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^217^^^^^214^218^[ADD] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  hex ( ch )  ) ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^215^^^^^172^243^[ADD] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^escapeHtml ( writer, str )  ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( ch  <=  0xf )  {^214^^^^^172^243^[REPLACE] if  ( ch > 0xf )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u000"  hex ( ch )  ) ;^217^^^^^214^218^[REPLACE] out.write ( "\\u000" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^escapeHtml ( writer, str )  ;^217^^^^^214^218^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( true )  {^224^^^^^172^243^[REPLACE] if  ( escapeSingleQuote )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^224^225^226^^^172^243^[ADD] if  ( escapeSingleQuote )  { out.write ( '\\' ) ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( 'f' )  ;^225^^^^^172^243^[REPLACE] out.write ( '\\' ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u00"  hex ( ch )  ) ;^190^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^190^^^^^172^243^[ADD] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^escapeHtml ( writer, str )  ;^190^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if  ( ch  <=  32 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^225^^^^^191^241^[ADD] out.write ( '\\' ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^out.write ( "\\u00" + hex ( ch )  ) ;out.write ( "\\u000" + hex ( ch )  ) ;^214^215^216^217^218^172^243^[ADD] if  ( ch > 0xf )  { out.write ( "\\u00" + hex ( ch )  ) ; } else { out.write ( "\\u000" + hex ( ch )  ) ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( ch  ==  0xf )  {^214^^^^^172^243^[REPLACE] if  ( ch > 0xf )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write (  ( "\\u0" +  ( hex ( ch )  )  )  )  ;^215^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if   (  ch > 0x7f  )   {  ;^224^^^^^172^243^[REPLACE] if  ( escapeSingleQuote )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^225^^^^^172^243^[ADD] out.write ( '\\' ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write ( "\\u0"  hex ( ch )  ) ;^188^^^^^172^243^[REPLACE] out.write ( "\\u0" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^escapeHtml ( writer, str )  ;^188^^^^^172^243^[REPLACE] out.write ( "\\u0" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^escapeHtml ( writer, str )  ;^188^^^^^172^243^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^}   out.write ( "\\u00" + hex ( ch )  ) ;^189^190^191^192^193^172^243^[ADD] else if  ( ch > 0x7f )  { out.write ( "\\u00" + hex ( ch )  ) ; } else if  ( ch < 32 )  { switch  ( ch )  { case '\b':^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if  ( ch  <=  3 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^214^215^216^217^218^172^243^[ADD] if  ( ch > 0xf )  { out.write ( "\\u00" + hex ( ch )  ) ; } else { out.write ( "\\u000" + hex ( ch )  ) ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write (  ( "\\u0" +  ( hex ( ch )  )  )  )  ;^190^^^^^172^243^[REPLACE] out.write ( "\\u00" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  else {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^}   out.write ( '\\' ) ;out.write ( 'b' ) ;^191^192^193^194^195^172^243^[ADD] else if  ( ch < 32 )  { switch  ( ch )  { case '\b': out.write ( '\\' ) ; out.write ( 'b' ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if   (  ch > 0x7f  )   {  ;^224^^^^^191^241^[REPLACE] if  ( escapeSingleQuote )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( ch  !=  0xf )  {^214^^^^^172^243^[REPLACE] if  ( ch > 0xf )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^out.write ( '\\' ) ;^224^225^226^^^172^243^[ADD] if  ( escapeSingleQuote )  { out.write ( '\\' ) ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^out.write (  ( "\\u0" +  ( hex ( ch )  )  )  )  ;^186^^^^^172^243^[REPLACE] out.write ( "\\u" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^escapeHtml ( writer, str )  ;^186^^^^^172^243^[REPLACE] out.write ( "\\u" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if   (  ch > 0x7f  )   {  ;^187^^^^^172^243^[REPLACE] } else if  ( ch > 0xff )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^if  ( ch > 127 )  {     out.write (  ( "\\u00" +  ( hex ( ch )  )  )  ) ; }else     if  ( ch < 32 )  {         switch  ( ch )  {             case '\b' :                 out.write ( '\\' ) ;                 out.write ( 'b' ) ;                 break;             case '\n' :                 out.write ( '\\' ) ;                 out.write ( 'n' ) ;                 break;             case '\t' :                 out.write ( '\\' ) ;                 out.write ( 't' ) ;                 break;             case '\f' :                 out.write ( '\\' ) ;                 out.write ( 'f' ) ;                 break;             case '\r' :                 out.write ( '\\' ) ;                 out.write ( 'r' ) ;                 break;             default :                 if  ( ch > 15 )  {                     out.write (  ( "\\u00" +  ( hex ( ch )  )  )  ) ;                 }else {                     out.write (  ( "\\u000" +  ( hex ( ch )  )  )  ) ;                 }                 break;         }     }else {         switch  ( ch )  {             case '\'' :                 if  ( escapeSingleQuote )  {                     out.write ( '\\' ) ;                 }                 out.write ( '\'' ) ;                 break;             case '"' :                 out.write ( '\\' ) ;                 out.write ( '"' ) ;                 break;             case '\\' :                 out.write ( '\\' ) ;                 out.write ( '\\' ) ;                 break;             default :                 out.write ( ch ) ;                 break;         }     }^187^^^^^172^243^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if   (  ch == '\\'  )   {  ;^189^^^^^172^243^[REPLACE] } else if  ( ch > 0x7f )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^} else if   (  ch > 0x7f  )   {  ;^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^out.write ( 'f' )  ;^225^^^^^172^243^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^out.write ( 'f' )  ;^225^^^^^191^241^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if  ( ch  <  0xf )  {^214^^^^^172^243^[REPLACE] if  ( ch > 0xf )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REMOVE]^escapeHtml ( writer, str )  ;^215^^^^^172^243^[REMOVE] ^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^188^^^^^172^243^[ADD] out.write ( "\\u0" + hex ( ch )  ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  if  ( ch  <=  32 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^out.write ( '\\' ) ;^224^225^226^^^191^241^[ADD] if  ( escapeSingleQuote )  { out.write ( '\\' ) ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^}  if  ( ch  >  32 )  {^191^^^^^172^243^[REPLACE] } else if  ( ch < 32 )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[ADD]^^224^225^226^^^191^241^[ADD] if  ( escapeSingleQuote )  { out.write ( '\\' ) ; }^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^for  ( int i = 1; i < sz; i++ )  {^181^^^^^172^243^[REPLACE] for  ( int i = 0; i < sz; i++ )  {^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^StringBuffer unicode = new StringBuffer ( 4 )  ;^182^^^^^172^243^[REPLACE] char ch = str.charAt ( i ) ;^[METHOD] escapeJavaStyleString [TYPE] void [PARAMETER] Writer out String str boolean escapeSingleQuote [CLASS] StringEscapeUtils   [TYPE]  boolean escapeSingleQuote  false  true  [TYPE]  char ch  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz 
[REPLACE]^if   (  str == null  )   {  ;^296^^^^^295^377^[REPLACE] if  ( out == null )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^297^^^^^295^377^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^return ;^297^^^^^295^377^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^if  ( str != null )  {^299^^^^^295^377^[REPLACE] if  ( str == null )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^return;  ;^300^^^^^295^377^[REPLACE] return;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int sz = str.toUpperCase (  ) ;^302^^^^^295^377^[REPLACE] int sz = str.length (  ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^StringBuffer unicode = new StringBuffer ( 2 ) ;^303^^^^^295^377^[REPLACE] StringBuffer unicode = new StringBuffer ( 4 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^boolean hadSlash = true;^304^^^^^295^377^[REPLACE] boolean hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^boolean inUnicode = true;^305^^^^^295^377^[REPLACE] boolean inUnicode = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^} else if   (  ch > 0x7f  )   {  ;^308^^^^^295^377^[REPLACE] if  ( inUnicode )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^308^309^^311^^295^377^[ADD] if  ( inUnicode )  {  unicode.append ( ch ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^if  ( unicode.length (  )  + 5 == 4 )  {^312^^^^^295^377^[REPLACE] if  ( unicode.length (  )  == 4 )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;out.write (  ( char )  value ) ;unicode.setLength ( 0 ) ;inUnicode = false;^315^316^317^318^319^295^377^[ADD] try { int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ; out.write (  ( char )  value ) ; unicode.setLength ( 0 ) ; inUnicode = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^319^320^^^^295^377^[ADD] inUnicode = false; hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^hadSlash = true;^320^^^^^295^377^[REPLACE] hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 2 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^inUnicode = true;^319^^^^^295^377^[REPLACE] inUnicode = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^hadSlash = true  ;^320^^^^^295^377^[REPLACE] hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 16L ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^return ;^322^^^^^295^377^[REPLACE] throw new NestableRuntimeException  (" ")  ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^316^^^^^295^377^[ADD] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^320^^^^^295^377^[ADD] hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer .toHexString ( sz )  ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^if  ( unicode.size (  )  == 4 )  {^312^^^^^295^377^[REPLACE] if  ( unicode.length (  )  == 4 )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^312^313^^315^316^295^377^[ADD] if  ( unicode.length (  )  == 4 )  {  try { int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 4 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^inUnicode = true  ;^319^^^^^295^377^[REPLACE] inUnicode = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 16 * 0 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^322^^^^^295^377^[ADD] throw new NestableRuntimeException  (" ")  ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^if  ( false )  {^327^^^^^295^377^[REPLACE] if  ( hadSlash )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^}  if  ( ch  !=  '\\' )  {^366^^^^^295^377^[REPLACE] } else if  ( ch == '\\' )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^}   hadSlash = true;continue;^366^367^368^369^^295^377^[ADD] else if  ( ch == '\\' )  { hadSlash = true; continue; }^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^hadSlash = false;^367^^^^^295^377^[REPLACE] hadSlash = true;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^hadSlash = false  ;^367^^^^^295^377^[REPLACE] hadSlash = true;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^hadSlash = true;^329^^^^^295^377^[REPLACE] hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^inUnicode = false  ;^358^^^^^295^377^[REPLACE] inUnicode = true;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^}  else {^366^^^^^295^377^[REPLACE] } else if  ( ch == '\\' )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.toString (  ) , 7 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^319^^^^^295^377^[ADD] inUnicode = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^hadSlash = true  ;^329^^^^^295^377^[REPLACE] hadSlash = false;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^358^359^^^^295^377^[ADD] inUnicode = true; break;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[ADD]^^306^307^308^^^295^377^[ADD] for  ( int i = 0; i < sz; i++ )  { char ch = str.charAt ( i ) ; if  ( inUnicode )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^char ch = str .toUpperCase (  )  ;^307^^^^^295^377^[REPLACE] char ch = str.charAt ( i ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^int value = Integer.parseInt ( unicode.length (  ) , 6 ) ;^316^^^^^295^377^[REPLACE] int value = Integer.parseInt ( unicode.toString (  ) , 16 ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^} else if   (  ch > 0x7f  )   {  ;^372^^^^^295^377^[REPLACE] if  ( hadSlash )  {^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
[REPLACE]^out.write ( 'f' )  ;^375^^^^^295^377^[REPLACE] out.write ( '\\' ) ;^[METHOD] unescapeJava [TYPE] void [PARAMETER] Writer out String str [CLASS] StringEscapeUtils   [TYPE]  StringBuffer unicode  [TYPE]  boolean false  hadSlash  inUnicode  true  [TYPE]  char ch  [TYPE]  NumberFormatException nfe  [TYPE]  String str  [TYPE]  Writer out  [TYPE]  int i  sz  value 
