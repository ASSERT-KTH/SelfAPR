[REPLACE]^private  final long serialVersionUID = 65382027393090L;^39^^^^^^^[REPLACE] private static final long serialVersionUID = 65382027393090L;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction ZERO ;^44^^^^^^^[REPLACE] public static final Fraction ZERO = new Fraction ( 0, 1 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction ONE ;^48^^^^^^^[REPLACE] public static final Fraction ONE = new Fraction ( 1, 1 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction ONE_HALF = new Fraction ( 4, 2 ) ;^52^^^^^^^[REPLACE] public static final Fraction ONE_HALF = new Fraction ( 1, 2 ) ;^ [CLASS] Fraction  
[REPLACE]^public  final Fraction ONE_THIRD = new Fraction ( 1, 3 ) ;^56^^^^^^^[REPLACE] public static final Fraction ONE_THIRD = new Fraction ( 1, 3 ) ;^ [CLASS] Fraction  
[REPLACE]^public static  Fraction TWO_THIRDS = new Fraction ( 2, 3 ) ;^60^^^^^^^[REPLACE] public static final Fraction TWO_THIRDS = new Fraction ( 2, 3 ) ;^ [CLASS] Fraction  
[REPLACE]^public static  Fraction ONE_QUARTER = new Fraction ( 1, 4 ) ;^64^^^^^^^[REPLACE] public static final Fraction ONE_QUARTER = new Fraction ( 1, 4 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction TWO_QUARTERS = new Fraction ( 2 + 2, 4 ) ;^68^^^^^^^[REPLACE] public static final Fraction TWO_QUARTERS = new Fraction ( 2, 4 ) ;^ [CLASS] Fraction  
[REPLACE]^public static  Fraction THREE_QUARTERS = new Fraction ( 3 << 2, 4 ) ;^72^^^^^^^[REPLACE] public static final Fraction THREE_QUARTERS = new Fraction ( 3, 4 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction ONE_FIFTH  = null ;^76^^^^^^^[REPLACE] public static final Fraction ONE_FIFTH = new Fraction ( 1, 5 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction TWO_FIFTHS = new Fraction ( 0, 5 ) ;^80^^^^^^^[REPLACE] public static final Fraction TWO_FIFTHS = new Fraction ( 2, 5 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction THREE_FIFTHS = new Fraction ( 3L, 5 ) ;^84^^^^^^^[REPLACE] public static final Fraction THREE_FIFTHS = new Fraction ( 3, 5 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction FOUR_FIFTHS = new Fraction ( 4L, 5 ) ;^88^^^^^^^[REPLACE] public static final Fraction FOUR_FIFTHS = new Fraction ( 4, 5 ) ;^ [CLASS] Fraction  
[REPLACE]^private transient int hashCode  = null ;^103^^^^^^^[REPLACE] private transient int hashCode = 0;^ [CLASS] Fraction  
[REPLACE]^private transient String toString  = null ;^107^^^^^^^[REPLACE] private transient String toString = null;^ [CLASS] Fraction  
[REPLACE]^private transient String toProperString  = null ;^111^^^^^^^[REPLACE] private transient String toProperString = null;^ [CLASS] Fraction  
[REPLACE]^if  (   0 )  {^169^^^^^168^189^[REPLACE] if  ( denominator == 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^return ;^170^^^^^168^189^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^if  ( denominator  ==  0 )  {^172^^^^^168^189^[REPLACE] if  ( denominator < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[ADD]^^173^^^^^168^189^[ADD] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^return ;^173^^^^^168^189^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^if  ( numerator  !=  0 )  {^175^^^^^168^189^[REPLACE] if  ( numerator < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[ADD]^^176^^^^^168^189^[ADD] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^return ;^176^^^^^168^189^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^double fraction  ;^178^^^^^168^189^[REPLACE] long numeratorValue;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^if  ( whole  <=  0 )  {^179^^^^^168^189^[REPLACE] if  ( whole < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^numeratorValue = whole *  ( long ) denominator  numerator;^182^^^^^179^183^[REPLACE] numeratorValue = whole *  ( long ) denominator + numerator;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^numeratorValue = whole *  ( long ) denominator  numerator;^180^^^^^168^189^[REPLACE] numeratorValue = whole *  ( long ) denominator - numerator;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^denominatorValue = whole *  ( long ) denominator  numerator;^180^^^^^168^189^[REPLACE] numeratorValue = whole *  ( long ) denominator - numerator;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[ADD]^^182^^^^^168^189^[ADD] numeratorValue = whole *  ( long ) denominator + numerator;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^if  (  numeratorValue > Integer.MAX_VALUE )   {^184^185^^^^168^189^[REPLACE] if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^return ;^186^^^^^184^187^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[ADD]^^186^^^^^168^189^[ADD] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^return  new Fraction ( numerator, denominator )   numeratorValue, denominator ) ;^188^^^^^168^189^[REPLACE] return new Fraction (  ( int )  numeratorValue, denominator ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^if  ( denominator  &&  0L )  {^206^^^^^205^229^[REPLACE] if  ( denominator == 0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^throw new NumberFormatException ( "The fraction could not be parsed as the format X Y/Z" )  ;^207^^^^^205^229^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^if   (  numerator >= 0  )   {  ;^209^^^^^205^229^[REPLACE] if  ( numerator==0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[ADD]^return ZERO;^209^210^211^^^205^229^[ADD] if  ( numerator==0 )  { return ZERO; }^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^return isAdd ? fraction : fraction.negate  (    )  ;  ;^210^^^^^205^229^[REPLACE] return ZERO;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^if  ( denominator==Integer.MIN_VALUE ||  ( numerator&1 ) ==0 )  {^213^^^^^205^229^[REPLACE] if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^denominator /= 2  ;^214^^^^^205^229^[REPLACE] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[ADD]^^214^^^^^205^229^[ADD] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^numerator/=2 + 2; denominator/=2 + 2;^214^^^^^205^229^[REPLACE] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^denominator /= gcd  ;^214^^^^^205^229^[REPLACE] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^if  (whole  ==  0 )  {^216^^^^^205^229^[REPLACE] if  ( denominator < 0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[ADD]^^216^217^218^219^220^205^229^[ADD] if  ( denominator < 0 )  { if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^if  (  denominator==Integer.MIN_VALUE )  {^217^218^^^^205^229^[REPLACE] if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[ADD]^^217^218^219^220^^205^229^[ADD] if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^return ;^219^^^^^217^220^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^this.numerator = numerator  ;^221^^^^^205^229^[REPLACE] numerator = -numerator;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^this.denominator = denominator  ;^222^^^^^205^229^[REPLACE] denominator = -denominator;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[ADD]^^219^^^^^205^229^[ADD] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^if  ( numerator==Integer.MIN_VALUE && denominator==Integer.MIN_VALUE )  {^217^218^^^^205^229^[REPLACE] if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^return ;^219^^^^^205^229^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[ADD]^^225^226^^^^205^229^[ADD] int gcd = greatestCommonDivisor ( numerator, denominator ) ; numerator /= gcd;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^denominator /= gcd  ;^226^^^^^205^229^[REPLACE] numerator /= gcd;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^denominator /= 2  ;^227^^^^^205^229^[REPLACE] denominator /= gcd;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^return  new Fraction (  ( - ( numerator )  ) , denominator )  ;^228^^^^^205^229^[REPLACE] return new Fraction ( numerator, denominator ) ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^int sign  =  -1 ;^246^^^^^245^295^[REPLACE] int sign =  ( value < 0 ? -1 : 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^247^^^^^245^295^[ADD] value = Math.abs ( value ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^if  ( fraction  > Integer.MAX_VALUE && Double.isNaN ( value )  )  {^248^^^^^245^295^[REPLACE] if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^throw new NumberFormatException ( "The fraction could not be parsed as the format X Y/Z" )  ;^249^250^^^^245^295^[REPLACE] throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^249^250^^^^245^295^[ADD] throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int a1 =  (  ( int )   ( value )  )  ;^252^^^^^245^295^[REPLACE] int wholeNumber =  ( int )  value;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^value -=  whole;^253^^^^^245^295^[REPLACE] value -= wholeNumber;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^255^256^^^^245^295^[ADD] int numer0 = 0; int denom0 = 1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int denom0 = 3;^256^^^^^245^295^[REPLACE] int denom0 = 1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int numer2 = 0  ;^257^^^^^245^295^[REPLACE] int numer1 = 1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int denom1 = 0 - 4;^258^^^^^245^295^[REPLACE] int denom1 = 0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^259^^^^^245^295^[ADD] int numer2 = 0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int denom2 = 2;^260^^^^^245^295^[REPLACE] int denom2 = 0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int wholeNumber =  (  ( int )   ( value )  )  ;^261^^^^^245^295^[REPLACE] int a1 =  ( int )  value;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int a2 = 0L;^262^^^^^245^295^[REPLACE] int a2 = 0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^263^^^^^245^295^[ADD] double x1 = 1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^double x2 = 0L;^264^^^^^245^295^[REPLACE] double x2 = 0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^double y1 = value  numerator;^265^^^^^245^295^[REPLACE] double y1 = value - a1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^double delta1, delta2 = Double.MAX_VALUE;^266^267^^^^245^295^[ADD] double y2 = 0; double delta1, delta2 = Double.MAX_VALUE;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^double fraction  ;^267^^^^^245^295^[REPLACE] double delta1, delta2 = Double.MAX_VALUE;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^268^^^^^245^295^[ADD] double fraction;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int i = 2;^269^^^^^245^295^[REPLACE] int i = 1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^delta1 =  y2;^272^^^^^245^295^[REPLACE] delta1 = delta2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^x2 = y1;^273^274^^^^245^295^[ADD] a2 =  ( int )   ( x1 / y1 ) ; x2 = y1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^x2 =  y2;^274^^^^^245^295^[REPLACE] x2 = y1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^y2 = x1  a2 * y1;^275^^^^^245^295^[REPLACE] y2 = x1 - a2 * y1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^numer2 = a1 * numer1  numer0;^276^^^^^245^295^[REPLACE] numer2 = a1 * numer1 + numer0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^denom2 = a1 * denom1  wholeNumber;^277^^^^^245^295^[REPLACE] denom2 = a1 * denom1 + denom0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^fraction =  ( double )  numer2   ( double )  denom2;^278^^^^^245^295^[REPLACE] fraction =  ( double )  numer2 /  ( double )  denom2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^279^^^^^245^295^[ADD] delta2 = Math.abs ( value - fraction ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^y1 = y2  ;^281^^^^^245^295^[REPLACE] a1 = a2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^a1 = a2  ;^282^^^^^245^295^[REPLACE] x1 = x2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^a1 = a2  ;^283^^^^^245^295^[REPLACE] y1 = y2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^numer1 = numer2  ;^284^^^^^245^295^[REPLACE] numer0 = numer1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^denom1 = denom2  ;^285^^^^^245^295^[REPLACE] denom0 = denom1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^numer0 = numer1  ;^286^^^^^245^295^[REPLACE] numer1 = numer2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^denom0 = denom1  ;^287^^^^^245^295^[REPLACE] denom1 = denom2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^signf  ( sign  ) {^291^^^^^245^295^[REPLACE] if  ( i == 25 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^return ;^292^^^^^245^295^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^throw new ArithmeticException ( "overflow: can't negate" )  ;^292^^^^^245^295^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^return getReducedFraction (  ( numer0 + wholeNumber  denom0 )  wholeNumber, denom0 ) ;^294^^^^^245^295^[REPLACE] return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^if   (  toString == null  )   {  ;^316^^^^^315^350^[REPLACE] if  ( str == null )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^throw new ArithmeticException ( "overflow: can't negate" )  ;^317^^^^^315^350^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int pos = toString.indexOf ( '.' ) ;^320^^^^^315^350^[REPLACE] int pos = str.indexOf ( '.' ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  ( pos  <  4 )  {^321^^^^^315^350^[REPLACE] if  ( pos >= 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( Double.parseDouble ( toString )  ) ;^322^^^^^315^350^[REPLACE] return getFraction ( Double.parseDouble ( str )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^326^^^^^315^350^[ADD] pos = str.indexOf ( ' ' ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  ( wholeNumber  <=  0 )  {^327^^^^^315^350^[REPLACE] if  ( pos > 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  ( pos  ==  0 )  {^331^^^^^315^350^[REPLACE] if  ( pos < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( whole, wholeNumber, denom ) ;^336^^^^^331^337^[REPLACE] return getFraction ( whole, numer, denom ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = Integer.parseInt ( str.substring ( 2, pos )  ) ;^334^^^^^331^337^[REPLACE] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int denom = Integer.parseInt ( str.substring (wholeNumber  1L )  ) ;^335^^^^^331^337^[REPLACE] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return ;^332^^^^^315^350^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^str = str.substring (wholeNumber  1 % 0 ) ;^329^^^^^315^350^[REPLACE] str = str.substring ( pos + 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^pos = str.indexOf ( ' ' )  ;^330^^^^^315^350^[REPLACE] pos = str.indexOf ( '/' ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( wholeNumber, numer, denom ) ;^336^^^^^315^350^[REPLACE] return getFraction ( whole, numer, denom ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int whole = Integer.parseInt ( str.substring ( 2, wholeNumber )  ) ;^328^^^^^315^350^[REPLACE] int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = Integer.parseInt ( str.substring ( 2, pos )  ) ;^334^^^^^315^350^[REPLACE] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = parseInt ( str.substring ( 0, pos )  )  ;^335^^^^^315^350^[REPLACE] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  ( wholeNumber  >  numer0 >>> 2 )  {^331^^^^^315^350^[REPLACE] if  ( pos < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^331^332^333^334^335^315^350^[ADD] if  ( pos < 0 )  { throw new NumberFormatException  (" ")  ; } else { int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ; int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( whole, numer, wholeNumber ) ;^336^^^^^331^337^[REPLACE] return getFraction ( whole, numer, denom ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = Integer.parseInt ( str.substring ( 3, pos )  ) ;^334^^^^^331^337^[REPLACE] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = parseInt ( str.substring ( 0, pos )  )  ;^335^^^^^331^337^[REPLACE] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^332^^^^^315^350^[ADD] throw new NumberFormatException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^329^^^^^315^350^[ADD] str = str.substring ( pos + 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return isAdd ? fraction : fraction.negate  (    )  ;  ;^336^^^^^315^350^[REPLACE] return getFraction ( whole, numer, denom ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^str = str.substring ( pos + 1 ) ;^328^329^^^^315^350^[ADD] int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ; str = str.substring ( pos + 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = Integer.parseInt ( str.substring ( 0 - 3, wholeNumber )  ) ;^334^^^^^315^350^[REPLACE] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int denom = Integer.parseInt ( str .substring ( hashCode , sign )   ) ;^335^^^^^315^350^[REPLACE] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^pos = str.indexOf ( ' ' )  ;^341^^^^^315^350^[REPLACE] pos = str.indexOf ( '/' ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  (wholeNumber  >=  0 )  {^342^^^^^315^350^[REPLACE] if  ( pos < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( numer, wholeNumber ) ;^348^^^^^342^349^[REPLACE] return getFraction ( numer, denom ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^346^^^^^342^349^[ADD] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int denom = Integer.parseInt ( str.substring ( pos  1 % 1 )  ) ;^347^^^^^342^349^[REPLACE] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( Integer.parseInt ( str ) , 3 ) ;^344^^^^^315^350^[REPLACE] return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( Integer.parseInt ( str ) , 1 + 4 ) ;^344^^^^^315^350^[REPLACE] return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( wholeNumber, denom ) ;^348^^^^^315^350^[REPLACE] return getFraction ( numer, denom ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = Integer.parseInt ( str.substring ( 3, pos )  ) ;^346^^^^^315^350^[REPLACE] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^347^^^^^315^350^[ADD] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  ( wholeNumber  &&  1 )  {^536^^^^^535^553^[REPLACE] if  ( power == 1 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^}  else {^538^^^^^535^553^[REPLACE] } else if  ( power == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^}  else {^540^^^^^535^553^[REPLACE] } else if  ( power < 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (  (wholeNumber )   ) {^547^^^^^540^552^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f .getProperWhole (  )  ;^548^^^^^540^552^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( wholeNumber2 >> 2 ) .multiplyBy ( this ) ;^550^^^^^540^552^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[ADD]^^546^^^^^540^552^[ADD] Fraction f = this.multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  ( power || Integer.MIN_VALUE )  {^541^^^^^535^553^[REPLACE] if  ( power==Integer.MIN_VALUE )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .pow ( 2 ) .pow ( - (wholeNumber2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .getFraction ( 2 ) .pow ( - ( power2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert  (    )  .pow  (  -power  )  ;  ;^544^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( -power ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  ( wholeNumber && Integer.MIN_VALUE )  {^541^^^^^535^553^[REPLACE] if  ( power==Integer.MIN_VALUE )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[ADD]^^541^542^543^^^535^553^[ADD] if  ( power==Integer.MIN_VALUE )  { return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ; }^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .getFraction (wholeNumber ) .pow ( - ( wholeNumber3 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (  ( numerator )   !=  numer0 )  {^547^^^^^535^553^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[ADD]^return f.pow ( power/2 ) ;return f.pow ( power/2 ) .multiplyBy ( this ) ;^547^548^549^550^551^535^553^[ADD] if  (  ( power % 2 )  == 0 )  { return f.pow ( power/2 ) ; } else { return f.pow ( power/2 ) .multiplyBy ( this ) ; }^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( power2 ) .multiplyBy ( this ) ;^550^^^^^547^551^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow  (  power/2  )  ;  ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .pow (wholeNumber ) .pow ( - ( power2 >> 4 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .pow ( -wholeNumber ) ;^544^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( -power ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.negate ( power2 ) ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( power2 ) .multiplyBy ( this ) ;^550^^^^^535^553^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^Fraction f = this.divideBy ( this ) ;^546^^^^^535^553^[REPLACE] Fraction f = this.multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return isAdd ? fraction : fraction.negate  (    )  ;  ;^539^^^^^535^553^[REPLACE] return ONE;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^} else if  (wholeNumber  !=  4 )  {^540^^^^^535^553^[REPLACE] } else if  ( power < 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (  ( power % 2L )   !=  0 )  {^547^^^^^540^552^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow  (  power/2  )  .multiplyBy  (  this  )  ;  ;^550^^^^^540^552^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^Fraction f = this.divideBy ( this ) ;^546^^^^^540^552^[REPLACE] Fraction f = this.multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  ( power != Integer.MIN_VALUE )  {^541^^^^^535^553^[REPLACE] if  ( power==Integer.MIN_VALUE )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .pow ( 2 * 4 ) .pow ( - ( power2 * 4 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .pow (wholeNumber ) .pow ( - ( power2 >>> 4 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  ( wholeNumber || Integer.MIN_VALUE )  {^541^^^^^535^553^[REPLACE] if  ( power==Integer.MIN_VALUE )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .pow ( 5 ) .pow ( - ( power5 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (  (numerator )   ) {^547^^^^^535^553^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return TWO_FIFTHS.pow ( power5 ) .multiplyBy ( this ) ;^550^^^^^547^551^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( power5 ) ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.negate (  ) .pow ( -wholeNumber ) ;^544^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( -power ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( power2 ) ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow  (  power/2  )  .multiplyBy  (  this  )  ;  ;^550^^^^^535^553^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[ADD]^^546^^^^^535^553^[ADD] Fraction f = this.multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return null;^537^^^^^535^553^[REPLACE] return this;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^}  if  ( power  ||  0 )  {^538^^^^^535^553^[REPLACE] } else if  ( power == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^}  if  ( power  >=  0 )  {^540^^^^^535^553^[REPLACE] } else if  ( power < 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (  ( power % 0 )   !=  0 )  {^547^^^^^540^552^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( power2 ) ;^548^^^^^540^552^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( power2 ) .multiplyBy ( this ) ;^550^^^^^540^552^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^Fraction f = this .divideBy ( ONE )  ;^546^^^^^540^552^[REPLACE] Fraction f = this.multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .pow ( 2 - 3 ) .pow ( - ( wholeNumber2 - 3 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .pow ( 2 ) .pow ( - ( power2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^iTWO_FIFTHS  (  (wholeNumber )   &&  0 )  {^547^^^^^535^553^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( wholeNumber0 ) .multiplyBy ( this ) ;^550^^^^^547^551^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow (wholeNumber2 ) ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .getFraction ( 2 ) .pow ( - ( wholeNumber2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this .getNumerator (  )  .pow ( -wholeNumber ) ;^544^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( -power ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( power0 ) ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^} else if   (  power == 0  )   {  ;^540^^^^^535^553^[REPLACE] } else if  ( power < 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (   0 )  {^547^^^^^540^552^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.negate ( power2 ) .multiplyBy ( this ) ;^550^^^^^540^552^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (wholeNumber || Integer.MIN_VALUE )  {^541^^^^^535^553^[REPLACE] if  ( power==Integer.MIN_VALUE )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .pow ( 2 ) .pow ( - ( wholeNumber2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .pow (wholeNumber ) .pow ( - ( wholeNumber1 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if   (  numerator==Integer.MIN_VALUE  )   {  ;^541^^^^^535^553^[REPLACE] if  ( power==Integer.MIN_VALUE )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .pow ( 0 ) .pow ( - (wholeNumber0 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (  ( power % 2 )   !=  0 )  {^547^^^^^535^553^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return TWO_FIFTHS.pow ( wholeNumber0 ) .multiplyBy ( this ) ;^550^^^^^547^551^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( wholeNumber4 ) ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this;  ;^537^^^^^535^553^[REPLACE] return this;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  )  .getProperWhole (  )^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  ( wholeNumber <= 0 )  { u=-u; }^571^^^^^565^604^[REPLACE] if  ( u>0 )  { u=-u; }^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[ADD]^^571^572^^^^565^604^[ADD] if  ( u>0 )  { u=-u; } if  ( v>0 )  { v=-v; }^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^u = -t  ;^571^^^^^565^604^[REPLACE] if  ( u>0 )  { u=-u; }^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^v = -v  ;^571^^^^^565^604^[REPLACE] if  ( u>0 )  { u=-u; }^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^if   (  v>0  )   { v=-v; }  ;^572^^^^^565^604^[REPLACE] if  ( v>0 )  { v=-v; }^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^if  ( v>0 )  { v= -null; }^572^^^^^565^604^[REPLACE] if  ( v>0 )  { v=-v; }^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^int k=0 * 3;^574^^^^^565^604^[REPLACE] int k=0;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[ADD]^^576^^^^^565^604^[ADD] u/=2; v/=2; k++;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^u/=2 >>> 3; v/=2 >>> 3; k++;^576^^^^^565^604^[REPLACE] u/=2; v/=2; k++;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^if  (  22 )  {^578^^^^^565^604^[REPLACE] if  ( k==31 )  {^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^throw new ArithmeticException ( "overflow: can't negate" )  ;^579^^^^^565^604^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[ADD]^^579^^^^^565^604^[ADD] throw new ArithmeticException  (" ")  ;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^if  ( t ==numerator )  {^593^^^^^565^604^[REPLACE] if  ( t>0 )  {^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[ADD]^u = -t;v = t;^593^594^595^596^597^565^604^[ADD] if  ( t>0 )  { u = -t; } else { v = t; }^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^v =  numerator;^596^^^^^593^597^[REPLACE] v = t;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^u = -u  ;^594^^^^^565^604^[REPLACE] u = -t;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[ADD]^^590^^^^^565^604^[ADD] t/=2;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^v = t  ;^594^^^^^565^604^[REPLACE] u = -t;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[ADD]^^596^^^^^565^604^[ADD] v = t;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^t =  ( v - u ) 2;^599^^^^^565^604^[REPLACE] t =  ( v - u ) /2;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^return -u ( 3;^603^^^^^565^604^[REPLACE] return -u* ( 1<<k ) ;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^if  ( fraction != false )  {^720^^^^^719^763^[REPLACE] if  ( fraction == null )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^throw new NumberFormatException ( "The fraction could not be parsed as the format X Y/Z" )  ;^721^^^^^719^763^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^721^^^^^719^763^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if   (  denominator == 0  )   {  ;^724^^^^^719^763^[REPLACE] if  ( numerator == 0 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return isAdd ? fraction : fraction.negate  (    )  ;  ;^725^^^^^719^763^[REPLACE] return isAdd ? fraction : fraction.negate (  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( fraction.numerator  !=  0 )  {^727^^^^^719^763^[REPLACE] if  ( fraction.numerator == 0 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return null;^728^^^^^719^763^[REPLACE] return this;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int d1 = greatestCommonDivisor ( denominator, f.denominator ) ;^732^^^^^719^763^[REPLACE] int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( d1 ) {^733^^^^^719^763^[REPLACE] if  ( d1==1 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, TWO_FIFTHS.denominator )  ) ;^737^738^739^^^719^763^[REPLACE] return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int upv = mulAndCheck ( fraction.numerator, denominator )  ;^735^^^^^719^763^[REPLACE] int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^736^^^^^719^763^[ADD] int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return new Fraction ( isAdd ? addAndCheck ( wholeNumber, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^719^763^[REPLACE] return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int uvp = mulAndCheck ( numerator, f.denominator ) ;^735^^^^^719^763^[REPLACE] int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int gcd = greatestCommonDivisor ( abs ( numerator ) , denominator )  ;^736^^^^^719^763^[REPLACE] int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominatord1 )  ) ;^744^745^^^^719^763^[REPLACE] BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominatord1 )  ) ;^746^747^^^^719^763^[REPLACE] BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.multiply ( upv ) ;^748^^^^^719^763^[REPLACE] BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int tmodd1 = t.mod ( BigInteger.add ( d1 )  ) .intValue (  ) ;^751^^^^^719^763^[REPLACE] int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int d2  = d1;^752^^^^^719^763^[REPLACE] int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^BigInteger w = t.divide ( BigInteger.valueOf ( tmodd1 )  ) ;^755^^^^^719^763^[REPLACE] BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( w.bitLength (  )   >= wholeNumber )  {^756^^^^^719^763^[REPLACE] if  ( w.bitLength (  )  > 31 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return ;^757^758^^^^719^763^[REPLACE] throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return new Fraction ( w .valueOf ( m )  , mulPosAndCheck (wholeNumberd1, fraction.denominatord2 )  ) ;^760^761^762^^^719^763^[REPLACE] return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^860^^^^^859^878^[ADD] Fraction other =  ( Fraction )  object;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( this || THREE_QUARTERS )  {^861^^^^^859^878^[REPLACE] if  ( this==other )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 0L;^862^^^^^859^878^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 1;^862^^^^^859^878^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (true || denominator == THREE_QUARTERS.denominator )  {^864^^^^^859^878^[REPLACE] if  ( numerator == other.numerator && denominator == other.denominator )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 1;  ;^865^^^^^859^878^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 0 / 0;^865^^^^^859^878^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^long first =  ( long )  numerator   ( long )  TWO_QUARTERS.denominator;^869^^^^^859^878^[REPLACE] long first =  ( long )  numerator *  ( long )  other.denominator;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^870^^^^^859^878^[ADD] long second =  ( long )  other.numerator *  ( long )  denominator;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (serialVersionUID  &&  second )  {^871^^^^^859^878^[REPLACE] if  ( first == second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  else {^873^^^^^859^878^[REPLACE] } else if  ( first < second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 1L;^876^^^^^873^877^[REPLACE] return 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 1;  ;^874^^^^^859^878^[REPLACE] return -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return -1 / 3;^874^^^^^859^878^[REPLACE] return -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 1 - 0;^876^^^^^859^878^[REPLACE] return 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 4;^872^^^^^859^878^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 1;  ;^876^^^^^873^877^[REPLACE] return 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return -1 >>> 1;^874^^^^^859^878^[REPLACE] return -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 1;^872^^^^^859^878^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return -3;^874^^^^^859^878^[REPLACE] return -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 1L;^876^^^^^859^878^[REPLACE] return 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if   (  toString == null  )   {  ;^907^^^^^906^935^[REPLACE] if  ( toProperString == null )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( upv  ||  numer0 )  {^908^^^^^906^935^[REPLACE] if  ( numerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^908^909^910^911^^906^935^[ADD] if  ( numerator == 0 )  { toProperString = "0"; } else if  ( numerator == denominator )  { toProperString = "1";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  ( numerator  !=  denominator )  {^910^^^^^906^935^[REPLACE] } else if  ( numerator == denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^} else if  ( numerator  ) {^912^^^^^906^935^[REPLACE] } else if  ( numerator == -1 * denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  else {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^}^914^915^^^^906^935^[ADD] else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32L ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if   (  numerator >= 0  )   {  ;^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 13 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^921^^^^^906^935^[ADD] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^double fraction  ;^919^^^^^906^935^[REPLACE] int properNumerator = getProperNumerator (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (t  !=  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper short  = Integer.to short  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 9 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = "0"  ;^913^^^^^906^935^[REPLACE] toProperString = "-1";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>0?-numerator:numerator )   <=  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^929^930^931^^^914^932^[ADD] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^toProperString = Integer.toString ( getProperWhole (  )  ) ;^920^921^922^923^924^906^935^[ADD] if  ( properNumerator == 0 )  { toProperString = Integer.toString ( getProperWhole (  )  ) ; } else { toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' )^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^923^924^925^^^920^927^[ADD] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' )^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper byte  = Integer.to byte  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 24 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString  =  toProperString ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^929^930^931^^^906^935^[ADD] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^911^^^^^906^935^[ADD] toProperString = "1";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  else {^912^^^^^906^935^[REPLACE] } else if  ( numerator == -1 * denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>0 + 0?-numerator:numerator )   ==  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 0 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( wholeNumber  != whole )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper long  = Integer.to long  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^923^924^925^^^906^935^[ADD] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' )^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  !=  0 / 4 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper char  = Integer.to char  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 19 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^} else if  (  ( numerator>0?-numerator:numerator )   ==  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( uvp  !=  numer0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 * 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (wholeNumber  &&  4 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper boolean  = Integer.to boolean  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = "-1"  ;^911^^^^^906^935^[REPLACE] toProperString = "1";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 8 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^919^^^^^906^935^[ADD] int properNumerator = getProperNumerator (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = "-1"  ;^909^^^^^906^935^[REPLACE] toProperString = "0";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  else {^910^^^^^906^935^[REPLACE] } else if  ( numerator == denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^} else if  (wholeNumber  &&  -1 * denominator )  {^912^^^^^906^935^[REPLACE] } else if  ( numerator == -1 * denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 11 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  ||  1 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 22 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 >>> 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (   0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 25 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32L ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>4?-numerator:numerator )   >=  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  &&  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32L ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString  = null ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (tmodd1  &&  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^920^921^922^923^924^906^935^[ADD] if  ( properNumerator == 0 )  { toProperString = Integer.toString ( getProperWhole (  )  ) ; } else { toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' )^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 18 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^} else if  ( numerator  != wholeNumber )  {^912^^^^^906^935^[REPLACE] } else if  ( numerator == -1 * denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>3?-numerator:numerator )   == tmodd1 )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( wholeNumber  ) {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  &&  1 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 >>> 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32L ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>1?-numerator:numerator )   >  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( wholeNumber  !=  numer3 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 29 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 12 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (  upv )  {^908^^^^^906^935^[REPLACE] if  ( numerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^toProperString = "0";toProperString = "1";^908^909^910^911^^906^935^[ADD] if  ( numerator == 0 )  { toProperString = "0"; } else if  ( numerator == denominator )  { toProperString = "1";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^} else if   (  numerator == -1 * denominator  )   {  ;^910^^^^^906^935^[REPLACE] } else if  ( numerator == denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^}   toProperString = "1";toProperString = "-1";^910^911^912^913^^906^935^[ADD] else if  ( numerator == denominator )  { toProperString = "1"; } else if  ( numerator == -1 * denominator )  { toProperString = "-1";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( wholeNumber  || u )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 7 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper int  = Integer.to int  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  != wholeNumber )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 20 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^913^^^^^906^935^[ADD] toProperString = "-1";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper double  = Integer.to double  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 22 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^} else if   (  numerator == denominator  )   {  ;^912^^^^^906^935^[REPLACE] } else if  ( numerator == -1 * denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^} else if  (  ( numerator>0?-numerator:numerator )   !=  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 18 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>0?-numerator:numerator )   >=  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 6 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  ) {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 - 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (wholeNumber  &&  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 27 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 / 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 14 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  ( numerator  ||  -1 * denominator )  {^912^^^^^906^935^[REPLACE] } else if  ( numerator == -1 * denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^} else if  (  ( numerator>0?-numerator:numerator )   != tmodd1 )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( wholeNumber  !=  numer0 - 1 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 5 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 23 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  ||  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 * 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 - 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 * 2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (   numer4 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 + 2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 * 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 / 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 >> 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 % 1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>0L?-numerator:numerator )   >  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (   1 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 - 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return toProperString;  ;^934^^^^^906^935^[REPLACE] return toProperString;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
