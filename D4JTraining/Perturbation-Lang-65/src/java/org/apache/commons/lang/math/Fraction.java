[REPLACE]^private static final long serialVersionUID  = null ;^39^^^^^^^[REPLACE] private static final long serialVersionUID = 65382027393090L;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction ZERO  = null ;^44^^^^^^^[REPLACE] public static final Fraction ZERO = new Fraction ( 0, 1 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction ONE ;^48^^^^^^^[REPLACE] public static final Fraction ONE = new Fraction ( 1, 1 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction ONE_HALF  = null ;^52^^^^^^^[REPLACE] public static final Fraction ONE_HALF = new Fraction ( 1, 2 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction ONE_THIRD  = null ;^56^^^^^^^[REPLACE] public static final Fraction ONE_THIRD = new Fraction ( 1, 3 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction TWO_THIRDS ;^60^^^^^^^[REPLACE] public static final Fraction TWO_THIRDS = new Fraction ( 2, 3 ) ;^ [CLASS] Fraction  
[REPLACE]^public static  Fraction ONE_QUARTER = new Fraction ( 1, 4 ) ;^64^^^^^^^[REPLACE] public static final Fraction ONE_QUARTER = new Fraction ( 1, 4 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction TWO_QUARTERS  = null ;^68^^^^^^^[REPLACE] public static final Fraction TWO_QUARTERS = new Fraction ( 2, 4 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction THREE_QUARTERS = new Fraction ( 3 * 4, 4 ) ;^72^^^^^^^[REPLACE] public static final Fraction THREE_QUARTERS = new Fraction ( 3, 4 ) ;^ [CLASS] Fraction  
[REPLACE]^public static  Fraction ONE_FIFTH = new Fraction ( 1, 5 ) ;^76^^^^^^^[REPLACE] public static final Fraction ONE_FIFTH = new Fraction ( 1, 5 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction TWO_FIFTHS  = null ;^80^^^^^^^[REPLACE] public static final Fraction TWO_FIFTHS = new Fraction ( 2, 5 ) ;^ [CLASS] Fraction  
[REPLACE]^public static final Fraction THREE_FIFTHS ;^84^^^^^^^[REPLACE] public static final Fraction THREE_FIFTHS = new Fraction ( 3, 5 ) ;^ [CLASS] Fraction  
[REPLACE]^public static  Fraction FOUR_FIFTHS = new Fraction ( 4, 5 ) ;^88^^^^^^^[REPLACE] public static final Fraction FOUR_FIFTHS = new Fraction ( 4, 5 ) ;^ [CLASS] Fraction  
[REPLACE]^private final  long  numerator;^94^^^^^^^[REPLACE] private final int numerator;^ [CLASS] Fraction  
[REPLACE]^private final  short  denominator;^98^^^^^^^[REPLACE] private final int denominator;^ [CLASS] Fraction  
[REPLACE]^private transient int hashCode = 2;^103^^^^^^^[REPLACE] private transient int hashCode = 0;^ [CLASS] Fraction  
[REPLACE]^private transient String toString ;^107^^^^^^^[REPLACE] private transient String toString = null;^ [CLASS] Fraction  
[REPLACE]^private transient String toProperString ;^111^^^^^^^[REPLACE] private transient String toProperString = null;^ [CLASS] Fraction  
[REPLACE]^return negate (  ) ;^121^^^^^120^124^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[REPLACE]^numerator = -numerator; ;^122^^^^^120^124^[REPLACE] this.numerator = numerator;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[REPLACE]^denominator = -denominator; ;^123^^^^^120^124^[REPLACE] this.denominator = denominator;^[METHOD] <init> [TYPE] Fraction(int,int) [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[REPLACE]^if  ( numerator  !=  0 >>> 0 )  {^138^^^^^137^150^[REPLACE] if  ( denominator == 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[REPLACE]^return ;^139^^^^^137^150^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[REPLACE]^if  ( numerator  !=  0 )  {^141^^^^^137^150^[REPLACE] if  ( denominator < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[REPLACE]^if  (  denominator==Integer.MIN_VALUE )  {^142^143^^^^137^150^[REPLACE] if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^144^^^^^137^150^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[REPLACE]^this.numerator = numerator; ;^146^^^^^137^150^[REPLACE] numerator = -numerator;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[REPLACE]^this.denominator = denominator; ;^147^^^^^137^150^[REPLACE] denominator = -denominator;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[ADD]^^144^^^^^137^150^[ADD] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[ADD]^^147^^^^^137^150^[ADD] denominator = -denominator;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[REPLACE]^return  new Fraction (  ( - ( numerator )  ) , denominator )  ;^149^^^^^137^150^[REPLACE] return new Fraction ( numerator, denominator ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  int denominator  hashCode  numerator 
[REPLACE]^if  ( whole  ||  0 )  {^169^^^^^168^189^[REPLACE] if  ( denominator == 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^return ;^170^^^^^168^189^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^170^^^^^168^189^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^if  ( denominator  > whole )  {^172^^^^^168^189^[REPLACE] if  ( denominator < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[ADD]^^172^173^174^^^168^189^[ADD] if  ( denominator < 0 )  { throw new ArithmeticException  (" ")  ; }^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^return ;^173^^^^^168^189^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^if  ( denominator  != denominator )  {^175^^^^^168^189^[REPLACE] if  ( numerator < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^return ;^176^^^^^168^189^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^int wholeNumber =  ( int )  value;^178^^^^^168^189^[REPLACE] long numeratorValue;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^if  ( whole  !=  0 )  {^179^^^^^168^189^[REPLACE] if  ( whole < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^numeratorValue = whole *  ( long ) denominator  <=  numerator;^182^^^^^168^189^[REPLACE] numeratorValue = whole *  ( long ) denominator + numerator;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^numeratorValue = whole *  ( long ) denominator  <  numerator;^180^^^^^168^189^[REPLACE] numeratorValue = whole *  ( long ) denominator - numerator;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^numeratorValue = whole *  ( long ) denominator  &  numerator;^180^^^^^168^189^[REPLACE] numeratorValue = whole *  ( long ) denominator - numerator;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[ADD]^^180^^^^^168^189^[ADD] numeratorValue = whole *  ( long ) denominator - numerator;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^numeratorValue = whole *  ( long ) denominator - numerator; ;^182^^^^^168^189^[REPLACE] numeratorValue = whole *  ( long ) denominator + numerator;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^if  ( serialVersionUID < Integer.MIN_VALUE && numeratorValue > Integer.MAX_VALUE )   {^184^185^^^^168^189^[REPLACE] if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[ADD]^^184^185^186^187^^168^189^[ADD] if  ( numeratorValue < Integer.MIN_VALUE || numeratorValue > Integer.MAX_VALUE )   { throw new ArithmeticException  (" ")  ; }^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^186^^^^^168^189^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^return  new Fraction ( numerator, whole )   numeratorValue, denominator ) ;^188^^^^^168^189^[REPLACE] return new Fraction (  ( int )  numeratorValue, denominator ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] int whole int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  hashCode  numerator  whole 
[REPLACE]^if  ( denominator  &&  0 )  {^206^^^^^205^229^[REPLACE] if  ( denominator == 0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^207^^^^^205^229^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^if  ( denominator || 0 )  {^209^^^^^205^229^[REPLACE] if  ( numerator==0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^return ONE;^210^^^^^205^229^[REPLACE] return ZERO;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^if  ( denominator==Integer.MIN_VALUE ) {^213^^^^^205^229^[REPLACE] if  ( denominator==Integer.MIN_VALUE &&  ( numerator&1 ) ==0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^numerator/=2 >> 3; denominator/=2 >> 3;^214^^^^^205^229^[REPLACE] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[ADD]^^214^^^^^205^229^[ADD] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^numerator/=4; denominator/=4;^214^^^^^205^229^[REPLACE] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^numerator/=1; denominator/=1;^214^^^^^205^229^[REPLACE] numerator/=2; denominator/=2;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^if  ( denominator  >  0 )  {^216^^^^^205^229^[REPLACE] if  ( denominator < 0 )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^if  ( numerator==Integer.MIN_VALUE ) {^217^218^^^^205^229^[REPLACE] if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^219^^^^^205^229^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^this.numerator = numerator; ;^221^^^^^205^229^[REPLACE] numerator = -numerator;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^this.denominator = denominator; ;^222^^^^^205^229^[REPLACE] denominator = -denominator;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^return ;^219^^^^^205^229^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[ADD]^^219^^^^^205^229^[ADD] throw new ArithmeticException  (" ")  ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^if  (  denominator==Integer.MIN_VALUE )  {^217^218^^^^205^229^[REPLACE] if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  {^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[ADD]^^217^218^219^220^^205^229^[ADD] if  ( numerator==Integer.MIN_VALUE || denominator==Integer.MIN_VALUE )  { throw new ArithmeticException  (" ")  ; }^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^225^^^^^205^229^[REPLACE] int gcd = greatestCommonDivisor ( numerator, denominator ) ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[ADD]^numerator /= gcd;^225^226^^^^205^229^[ADD] int gcd = greatestCommonDivisor ( numerator, denominator ) ; numerator /= gcd;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^denominator /= gcd; ;^226^^^^^205^229^[REPLACE] numerator /= gcd;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^numerator /= gcd; ;^227^^^^^205^229^[REPLACE] denominator /= gcd;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^return  new Fraction (  ( - ( numerator )  ) , denominator )  ;^228^^^^^205^229^[REPLACE] return new Fraction ( numerator, denominator ) ;^[METHOD] getReducedFraction [TYPE] Fraction [PARAMETER] int numerator int denominator [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int denominator  gcd  hashCode  numerator  whole 
[REPLACE]^int sign  =  1 ) ;^246^^^^^245^295^[REPLACE] int sign =  ( value < 0 ? -1 : 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^246^^^^^245^295^[ADD] int sign =  ( value < 0 ? -1 : 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^value =  Math.abs ( fraction ) ;^247^^^^^245^295^[REPLACE] value = Math.abs ( value ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^if  ( fraction  > Integer.MAX_VALUE ) {^248^^^^^245^295^[REPLACE] if  ( value  > Integer.MAX_VALUE || Double.isNaN ( value )  )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ; ;^249^250^^^^245^295^[REPLACE] throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^249^250^^^^245^295^[ADD] throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int a1 =  ( int )  value;^252^^^^^245^295^[REPLACE] int wholeNumber =  ( int )  value;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^value -=  numerator;^253^^^^^245^295^[REPLACE] value -= wholeNumber;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^253^^^^^245^295^[ADD] value -= wholeNumber;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int numer3 = 3;^255^^^^^245^295^[REPLACE] int numer0 = 0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^255^256^^^^245^295^[ADD] int numer0 = 0; int denom0 = 1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int denom0 = 2;^256^^^^^245^295^[REPLACE] int denom0 = 1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int numer4 = 4;^257^^^^^245^295^[REPLACE] int numer1 = 1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^257^^^^^245^295^[ADD] int numer1 = 1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int denom1 = 4;^258^^^^^245^295^[REPLACE] int denom1 = 0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int numer2 = 2;^259^^^^^245^295^[REPLACE] int numer2 = 0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int denom2 = 0 % 1;^260^^^^^245^295^[REPLACE] int denom2 = 0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int wholeNumber =  ( int )  value;^261^^^^^245^295^[REPLACE] int a1 =  ( int )  value;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^261^^^^^245^295^[ADD] int a1 =  ( int )  value;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int a2 = 4;^262^^^^^245^295^[REPLACE] int a2 = 0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^double x2 = 2;^263^^^^^245^295^[REPLACE] double x1 = 1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^double x2 = 0 - 1;^264^^^^^245^295^[REPLACE] double x2 = 0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^264^265^^^^245^295^[ADD] double x2 = 0; double y1 = value - a1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^double y1 = fraction - numerator;^265^^^^^245^295^[REPLACE] double y1 = value - a1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^double y2 = 2;^266^^^^^245^295^[REPLACE] double y2 = 0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int a1 =  ( int )  value;^267^^^^^245^295^[REPLACE] double delta1, delta2 = Double.MAX_VALUE;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^double fraction;^267^268^^^^245^295^[ADD] double delta1, delta2 = Double.MAX_VALUE; double fraction;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^267^268^^^^245^295^[ADD] double delta1, delta2 = Double.MAX_VALUE; double fraction;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^double x2 = 0;^268^^^^^245^295^[REPLACE] double fraction;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^268^^^^^245^295^[ADD] double fraction;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^int i = 4;^269^^^^^245^295^[REPLACE] int i = 1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^delta1 =  y2;^272^^^^^245^295^[REPLACE] delta1 = delta2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^a2 =  ( int )   ( x1 /x2 ) ;^273^^^^^245^295^[REPLACE] a2 =  ( int )   ( x1 / y1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^x2 =  y2;^274^^^^^245^295^[REPLACE] x2 = y1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^274^^^^^245^295^[ADD] x2 = y1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^y2 =y1 - a2 * y1;^275^^^^^245^295^[REPLACE] y2 = x1 - a2 * y1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^275^^^^^245^295^[ADD] y2 = x1 - a2 * y1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^numer2 = a1 * numer1 +wholeNumber;^276^^^^^245^295^[REPLACE] numer2 = a1 * numer1 + numer0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^denominator = -denominator; ;^277^^^^^245^295^[REPLACE] denom2 = a1 * denom1 + denom0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^277^^^^^245^295^[ADD] denom2 = a1 * denom1 + denom0;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^fraction =  ( double )  numer2  ;^278^^^^^245^295^[REPLACE] fraction =  ( double )  numer2 /  ( double )  denom2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^delta2 = Math.abs ( value -delta2 ) ;^279^^^^^245^295^[REPLACE] delta2 = Math.abs ( value - fraction ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^y1 = y2; ;^281^^^^^245^295^[REPLACE] a1 = a2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^y1 = y2; ;^282^^^^^245^295^[REPLACE] x1 = x2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^x1 = x2; ;^283^^^^^245^295^[REPLACE] y1 = y2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^numer1 = numer2; ;^284^^^^^245^295^[REPLACE] numer0 = numer1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^denom1 = denom2; ;^285^^^^^245^295^[REPLACE] denom0 = denom1;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^numer0 = numer1; ;^286^^^^^245^295^[REPLACE] numer1 = numer2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^286^^^^^245^295^[ADD] numer1 = numer2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^denom0 = denom1; ;^287^^^^^245^295^[REPLACE] denom1 = denom2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[ADD]^^287^^^^^245^295^[ADD] denom1 = denom2;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^signf  ( i  !=  2 )  {^291^^^^^245^295^[REPLACE] if  ( i == 25 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^return ;^292^^^^^245^295^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^292^^^^^245^295^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  *wholeNumber, denom0 ) ;^294^^^^^245^295^[REPLACE] return getReducedFraction (  ( numer0 + wholeNumber * denom0 )  * sign, denom0 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] double value [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer0  numer1  numer2  numerator  sign  whole  wholeNumber  [TYPE]  double delta1  delta2  fraction  value  x1  x2  y1  y2 
[REPLACE]^if  ( str != this )  {^316^^^^^315^350^[REPLACE] if  ( str == null )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^316^317^318^^^315^350^[ADD] if  ( str == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^throw new NumberFormatException  (" ")  ; ;^317^^^^^315^350^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^317^^^^^315^350^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int pos = toString.substring ( '.' ) ;^320^^^^^315^350^[REPLACE] int pos = str.indexOf ( '.' ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  ( pos  <  0 )  {^321^^^^^315^350^[REPLACE] if  ( pos >= 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( Double.parseDouble ( toString )  ) ;^322^^^^^315^350^[REPLACE] return getFraction ( Double.parseDouble ( str )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( Double .isNaN ( null )   ) ;^322^^^^^315^350^[REPLACE] return getFraction ( Double.parseDouble ( str )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^pos = str.indexOf ( '/' ) ; ;^326^^^^^315^350^[REPLACE] pos = str.indexOf ( ' ' ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^326^^^^^315^350^[ADD] pos = str.indexOf ( ' ' ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  (wholeNumber  !=  0 )  {^327^^^^^315^350^[REPLACE] if  ( pos > 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  (wholeNumber  <=  0 / 0 )  {^331^^^^^315^350^[REPLACE] if  ( pos < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( whole, wholeNumber, denom ) ;^336^^^^^331^337^[REPLACE] return getFraction ( whole, numer, denom ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = Integer.parseInt ( str.substring ( 2, pos )  ) ;^334^^^^^331^337^[REPLACE] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int denom = Integer.parseInt ( toString.substring ( wholeNumber + numer1 )  ) ;^335^^^^^331^337^[REPLACE] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^335^^^^^331^337^[ADD] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return ;^332^^^^^315^350^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^str = str.substring ( pos +wholeNumber ) ;^329^^^^^315^350^[REPLACE] str = str.substring ( pos + 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^329^^^^^315^350^[ADD] str = str.substring ( pos + 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^pos = str.indexOf ( ' ' ) ; ;^330^^^^^315^350^[REPLACE] pos = str.indexOf ( '/' ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( whole, numer, wholeNumber ) ;^336^^^^^315^350^[REPLACE] return getFraction ( whole, numer, denom ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int whole = Integer.parseInt ( str.substring ( 0L, wholeNumber )  ) ;^328^^^^^315^350^[REPLACE] int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^str = str.substring ( pos + 1 ) ;^328^329^^^^315^350^[ADD] int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ; str = str.substring ( pos + 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = Integer.parseInt ( str.substring ( 0L, wholeNumber )  ) ;^334^^^^^315^350^[REPLACE] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int denom = Integer.parseInt ( str.substring ( pos +wholeNumber )  ) ;^335^^^^^315^350^[REPLACE] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^335^^^^^315^350^[ADD] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^332^^^^^315^350^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^332^^^^^315^350^[ADD] throw new NumberFormatException  (" ")  ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  ( wholeNumber  <=  0 )  {^331^^^^^315^350^[REPLACE] if  ( pos < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( wholeNumber, numer, denom ) ;^336^^^^^331^337^[REPLACE] return getFraction ( whole, numer, denom ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = Integer.parseInt ( str.substring ( 4, pos )  ) ;^334^^^^^331^337^[REPLACE] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int denom = Integer.toString ( str.substring ( pos +wholeNumber )  ) ;^335^^^^^331^337^[REPLACE] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^str = str.substring ( pos  >  1 ) ;^329^^^^^315^350^[REPLACE] str = str.substring ( pos + 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( numer, denom ) ;^336^^^^^315^350^[REPLACE] return getFraction ( whole, numer, denom ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int whole = Integer.parseInt ( str.substring ( 0L, pos )  ) ;^328^^^^^315^350^[REPLACE] int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^328^^^^^315^350^[ADD] int whole = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = Integer.parseInt ( str.substring ( 2, pos )  ) ;^334^^^^^315^350^[REPLACE] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^334^^^^^315^350^[ADD] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int denom = Integer.toString ( str.substring (wholeNumber + 1 )  ) ;^335^^^^^315^350^[REPLACE] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^pos = str.indexOf ( ' ' ) ; ;^341^^^^^315^350^[REPLACE] pos = str.indexOf ( '/' ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  ( pos  !=  numer0 )  {^342^^^^^315^350^[REPLACE] if  ( pos < 0 )  {^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( numer, wholeNumber ) ;^348^^^^^342^349^[REPLACE] return getFraction ( numer, denom ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = Integer.parseInt ( str.substring ( 0 - 0, pos )  ) ;^346^^^^^342^349^[REPLACE] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^346^347^^^^342^349^[ADD] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ; int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int denom = Integer.parseInt ( str.substring ( pos +wholeNumber )  ) ;^347^^^^^342^349^[REPLACE] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( Integer.toString ( str ) , 1 ) ;^344^^^^^315^350^[REPLACE] return getFraction ( Integer.parseInt ( str ) , 1 ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return getFraction ( whole, numer, denom ) ;^348^^^^^315^350^[REPLACE] return getFraction ( numer, denom ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int numer = Integer.parseInt ( str.substring ( 3, pos )  ) ;^346^^^^^315^350^[REPLACE] int numer = Integer.parseInt ( str.substring ( 0, pos )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int denom = Integer.parseInt ( str.substring (wholeNumber + 2 )  ) ;^347^^^^^315^350^[REPLACE] int denom = Integer.parseInt ( str.substring ( pos + 1 )  ) ;^[METHOD] getFraction [TYPE] Fraction [PARAMETER] String str [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return new Fraction ( w.intValue (  ) ,^364^^^^^363^365^[REPLACE] return numerator;^[METHOD] getNumerator [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return new Fraction ( w.intValue (  ) ,^373^^^^^372^374^[REPLACE] return denominator;^[METHOD] getDenominator [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return Math.abs ( numerator %numer2 ) ;^388^^^^^387^389^[REPLACE] return Math.abs ( numerator % denominator ) ;^[METHOD] getProperNumerator [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return numerator  ;^403^^^^^402^404^[REPLACE] return numerator / denominator;^[METHOD] getProperWhole [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^returnnumer2  ;^416^^^^^415^417^[REPLACE] return numerator / denominator;^[METHOD] intValue [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return  ( long )  numerator  ;^426^^^^^425^427^[REPLACE] return  ( long )  numerator / denominator;^[METHOD] longValue [TYPE] long [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return  (  ( double )  numerator )  /  (  ( double )  denominator ) ;^436^^^^^435^437^[REPLACE] return  (  ( float )  numerator )  /  (  ( float )  denominator ) ;^[METHOD] floatValue [TYPE] float [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return  (  ( double )  numerator )   ;^446^^^^^445^447^[REPLACE] return  (  ( double )  numerator )  /  (  ( double )  denominator ) ;^[METHOD] doubleValue [TYPE] double [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^462^^^^^461^467^[REPLACE] int gcd = greatestCommonDivisor ( Math.abs ( numerator ) , denominator ) ;^[METHOD] reduce [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  ( gcd  &&  1 )  {^463^^^^^461^467^[REPLACE] if  ( gcd == 1 )  {^[METHOD] reduce [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^463^464^465^^^461^467^[ADD] if  ( gcd == 1 )  { return this; }^[METHOD] reduce [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return null;^464^^^^^461^467^[REPLACE] return this;^[METHOD] reduce [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return Fraction .getFraction ( wholeNumber , wholeNumber )  ;^466^^^^^461^467^[REPLACE] return Fraction.getFraction ( numerator / gcd, denominator / gcd ) ;^[METHOD] reduce [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  (wholeNumber  &&  0 )  {^479^^^^^478^490^[REPLACE] if  ( numerator == 0 )  {^[METHOD] invert [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^479^480^481^^^478^490^[ADD] if  ( numerator == 0 )  { throw new ArithmeticException  (" ")  ; }^[METHOD] invert [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return ;^480^^^^^478^490^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] invert [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^480^^^^^478^490^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] invert [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  ( numerator && Integer.MIN_VALUE )  {^482^^^^^478^490^[REPLACE] if  ( numerator==Integer.MIN_VALUE )  {^[METHOD] invert [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^483^^^^^478^490^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] invert [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^483^^^^^478^490^[ADD] throw new ArithmeticException  (" ")  ;^[METHOD] invert [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  ( numerator >= 0 )  {^485^^^^^478^490^[REPLACE] if  ( numerator<0 )  {^[METHOD] invert [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return  new Fraction ( numerator, denominator )  ;^488^^^^^478^490^[REPLACE] return new Fraction ( denominator, numerator ) ;^[METHOD] invert [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return  new Fraction ( numerator, denominator )  ;^486^^^^^478^490^[REPLACE] return new Fraction ( -denominator, -numerator ) ;^[METHOD] invert [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  (wholeNumber && Integer.MIN_VALUE )  {^501^^^^^499^505^[REPLACE] if  ( numerator==Integer.MIN_VALUE )  {^[METHOD] negate [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^502^^^^^499^505^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] negate [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return  new Fraction ( numerator, denominator )  ;^504^^^^^499^505^[REPLACE] return new Fraction ( -numerator, denominator ) ;^[METHOD] negate [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^if  ( numerator  == numer2 )  {^517^^^^^516^521^[REPLACE] if  ( numerator >= 0 )  {^[METHOD] abs [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[ADD]^^517^518^519^^^516^521^[ADD] if  ( numerator >= 0 )  { return this; }^[METHOD] abs [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return null;^518^^^^^516^521^[REPLACE] return this;^[METHOD] abs [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^return isAdd ? fraction : fraction.negate (  ) ;^520^^^^^516^521^[REPLACE] return negate (  ) ;^[METHOD] abs [TYPE] Fraction [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  sign  whole  wholeNumber 
[REPLACE]^iTWO_FIFTHS  ( power  ||  3 )  {^536^^^^^535^553^[REPLACE] if  ( power == 1 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[ADD]^return this;return ONE;^536^537^538^539^^535^553^[ADD] if  ( power == 1 )  { return this; } else if  ( power == 0 )  { return ONE;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^}  if  ( power  || wholeNumber )  {^538^^^^^535^553^[REPLACE] } else if  ( power == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^}  else {^540^^^^^535^553^[REPLACE] } else if  ( power < 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[ADD]^}   return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^540^541^542^543^^535^553^[ADD] else if  ( power < 0 )  { if  ( power==Integer.MIN_VALUE )  { return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ; }^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (  ( numerator )   &&  numer0 )  {^547^^^^^535^553^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.negate ( power/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.negate ( power/2 ) ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f .getProperWhole (  )  ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return true ;^550^^^^^535^553^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^Fraction f = this.divideBy ( this ) ;^546^^^^^535^553^[REPLACE] Fraction f = this.multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (wholeNumber || Integer.MIN_VALUE )  {^541^^^^^535^553^[REPLACE] if  ( power==Integer.MIN_VALUE )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[ADD]^^541^542^543^^^535^553^[ADD] if  ( power==Integer.MIN_VALUE )  { return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ; }^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.negate (  ) .pow ( 2 ) .pow ( - (wholeNumber/2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this .getNumerator (  )  .pow ( 0 ) .pow ( - ( power/0 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .getFraction ( -wholeNumber ) ;^544^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( -power ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (wholeNumber && Integer.MIN_VALUE )  {^541^^^^^535^553^[REPLACE] if  ( power==Integer.MIN_VALUE )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.negate (  ) .pow (wholeNumber ) .pow ( - ( wholeNumber/2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (  ( wholeNumber )   &&  numer0 )  {^547^^^^^535^553^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[ADD]^return f.pow ( power/2 ) ;return f.pow ( power/2 ) .multiplyBy ( this ) ;^547^548^549^550^551^535^553^[ADD] if  (  ( power % 2 )  == 0 )  { return f.pow ( power/2 ) ; } else { return f.pow ( power/2 ) .multiplyBy ( this ) ; }^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.negate ( wholeNumber/2 ) .multiplyBy ( this ) ;^550^^^^^535^553^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.negate ( power/0 ) ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .getFraction ( 3 ) .pow ( - ( power/3 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this .getNumerator (  )  .pow ( -power ) ;^544^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( -power ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.negate ( power ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( power ;^550^^^^^535^553^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^Fraction f = this .divideBy ( TWO_FIFTHS )  ;^546^^^^^535^553^[REPLACE] Fraction f = this.multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( power/2 ) ;^539^^^^^535^553^[REPLACE] return ONE;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^} else if  ( power  <=  0 )  {^540^^^^^535^553^[REPLACE] } else if  ( power < 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (  ( power % 3 )   ||  0 )  {^547^^^^^535^553^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f .getProperWhole (  )  .multiplyBy ( this ) ;^550^^^^^535^553^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return TWO_FIFTHS.negate ( power/4 ) ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  ( power && Integer.MIN_VALUE )  {^541^^^^^535^553^[REPLACE] if  ( power==Integer.MIN_VALUE )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .getFraction (wholeNumber ) .pow ( - ( power/2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .getFraction ( 2 ) .pow ( - ( power/2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .getFraction ( -power ) ;^544^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( -power ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  ( power || Integer.MIN_VALUE )  {^541^^^^^535^553^[REPLACE] if  ( power==Integer.MIN_VALUE )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[ADD]^return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^541^542^543^^^535^553^[ADD] if  ( power==Integer.MIN_VALUE )  { return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ; }^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (  ( power % 2 * 2 )   !=  0 )  {^547^^^^^535^553^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  )  .getProperWhole (  )^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return null;^537^^^^^535^553^[REPLACE] return this;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^}  else {^538^^^^^535^553^[REPLACE] } else if  ( power == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^}  if  ( wholeNumber  ==  0L )  {^540^^^^^535^553^[REPLACE] } else if  ( power < 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (  ( wholeNumber % 2 )   &&  0 )  {^547^^^^^535^553^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return TWO_FIFTHS.pow ( power/2 ) .getProperNumerator ( this ) ;^550^^^^^535^553^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.negate (wholeNumber/1 ) ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.pow ( power | 2 ) .getProperNumerator ( this ) ;^550^^^^^535^553^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  ( power != Integer.MIN_VALUE )  {^541^^^^^535^553^[REPLACE] if  ( power==Integer.MIN_VALUE )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this .getNumerator (  )  .pow ( 2 ) .pow ( - ( power/2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this .getNumerator (  )  .pow ( -wholeNumber ) ;^544^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( -power ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  (  (wholeNumber )   &&  0 )  {^547^^^^^535^553^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[ADD]^^547^548^549^550^551^535^553^[ADD] if  (  ( power % 2 )  == 0 )  { return f.pow ( power/2 ) ; } else { return f.pow ( power/2 ) .multiplyBy ( this ) ; }^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  )  .getProperWhole (  )  ;^544^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( -power ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return TWO_FIFTHS.negate ( power != 2 ) ;;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.negate ( wholeNumber/2L ) .multiplyBy ( this ) ;^550^^^^^535^553^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^iTWO_FIFTHS  (  ( power % 3 )   !=  0 )  {^547^^^^^535^553^[REPLACE] if  (  ( power % 2 )  == 0 )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.negate (wholeNumber/2 ) ;^548^^^^^535^553^[REPLACE] return f.pow ( power/2 ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return TWO_FIFTHS .getProperWhole (  )  .multiplyBy ( this ) ;^550^^^^^535^553^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[ADD]^^546^^^^^535^553^[ADD] Fraction f = this.multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  ( wholeNumber || Integer.MIN_VALUE )  {^541^^^^^535^553^[REPLACE] if  ( power==Integer.MIN_VALUE )  {^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this .getNumerator (  )  .pow ( numer2 ) .pow ( - ( wholeNumber/2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.negate (  ) .pow ( -wholeNumber ) ;^544^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( -power ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .getFraction ( numer2 ) .pow ( - ( wholeNumber/2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return f.negate ( power/2 - 3 ) .multiplyBy ( this ) ;^550^^^^^535^553^[REPLACE] return f.pow ( power/2 ) .multiplyBy ( this ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^return this.invert (  ) .getFraction ( 2 ) .pow ( - (wholeNumber/2 )  ) ;^542^^^^^535^553^[REPLACE] return this.invert (  ) .pow ( 2 ) .pow ( - ( power/2 )  ) ;^[METHOD] pow [TYPE] Fraction [PARAMETER] int power [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  numer  numer0  numer1  numer2  numerator  pos  power  sign  whole  wholeNumber 
[REPLACE]^if  ( u != 4 )  { u=-u; }^571^^^^^565^604^[REPLACE] if  ( u>0 )  { u=-u; }^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^if  ( v>0 )  { v=-v; }  ;^571^^^^^565^604^[REPLACE] if  ( u>0 )  { u=-u; }^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[ADD]^^571^572^^^^565^604^[ADD] if  ( u>0 )  { u=-u; } if  ( v>0 )  { v=-v; }^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^if  ( v <= 0 )  { v=-v; }^572^^^^^565^604^[REPLACE] if  ( v>0 )  { v=-v; }^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^if  ( v>0 )  { v= -null; }^572^^^^^565^604^[REPLACE] if  ( v>0 )  { v=-v; }^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^int k=0 / 1;^574^^^^^565^604^[REPLACE] int k=0;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^while  (  ( u&1 ) ==0 ;^575^^^^^565^604^[REPLACE] while  (  ( u&1 ) ==0 &&  ( v&1 ) ==0 && k<31 )  {^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^u/=1; v/=1; k++;^576^^^^^565^604^[REPLACE] u/=2; v/=2; k++;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^u/=2L; v/=2L; k++;^576^^^^^565^604^[REPLACE] u/=2; v/=2; k++;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^u/=0; v/=0; k++;^576^^^^^565^604^[REPLACE] u/=2; v/=2; k++;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^if  ( k && 31 )  {^578^^^^^565^604^[REPLACE] if  ( k==31 )  {^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^579^^^^^565^604^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^return ;^579^^^^^565^604^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^while  (  ( t&1 )  || 0 )  {^589^^^^^565^604^[REPLACE] while  (  ( t&1 ) ==0 )  {^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^t/=0;^590^^^^^565^604^[REPLACE] t/=2;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^if  ( numerator >= numer0 )  {^593^^^^^565^604^[REPLACE] if  ( t>0 )  {^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^u = -t; ;^596^^^^^593^597^[REPLACE] v = t;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^v = t; ;^594^^^^^565^604^[REPLACE] u = -t;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^t/=2 * 0;^590^^^^^565^604^[REPLACE] t/=2;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[ADD]^^590^^^^^565^604^[ADD] t/=2;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^u = -t; ;^596^^^^^565^604^[REPLACE] v = t;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^t =  ( v - u )  ;^599^^^^^565^604^[REPLACE] t =  ( v - u ) /2;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^return -u ;^603^^^^^565^604^[REPLACE] return -u* ( 1<<k ) ;^[METHOD] greatestCommonDivisor [TYPE] int [PARAMETER] int u int v [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber 
[REPLACE]^long m =  (  ( long ) x )  ;^619^^^^^618^625^[REPLACE] long m =  (  ( long ) x ) * (  ( long ) y ) ;^[METHOD] mulAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( m < Integer.MIN_VALUE && m > Integer.MAX_VALUE )  {^620^621^^^^618^625^[REPLACE] if  ( m < Integer.MIN_VALUE || m > Integer.MAX_VALUE )  {^[METHOD] mulAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^622^^^^^618^625^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] mulAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^return ;^622^^^^^618^625^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] mulAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^return  ( int ) s;^624^^^^^618^625^[REPLACE] return  ( int ) m;^[METHOD] mulAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^long m =  (  ( long ) x )  ;^638^^^^^636^643^[REPLACE] long m =  (  ( long ) x ) * (  ( long ) y ) ;^[METHOD] mulPosAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( m  >=  Integer.MAX_VALUE )  {^639^^^^^636^643^[REPLACE] if  ( m > Integer.MAX_VALUE )  {^[METHOD] mulPosAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^return ;^640^^^^^636^643^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] mulPosAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^640^^^^^636^643^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] mulPosAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[ADD]^^640^^^^^636^643^[ADD] throw new ArithmeticException  (" ")  ;^[METHOD] mulPosAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^return  ( int ) s;^642^^^^^636^643^[REPLACE] return  ( int ) m;^[METHOD] mulPosAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^long s =  ( long ) x ==  ( long ) y;^655^^^^^654^661^[REPLACE] long s =  ( long ) x+ ( long ) y;^[METHOD] addAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( s < Integer.MIN_VALUE ) {^656^657^^^^654^661^[REPLACE] if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[METHOD] addAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^return ;^658^^^^^654^661^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] addAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^658^^^^^654^661^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] addAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[ADD]^^658^^^^^654^661^[ADD] throw new ArithmeticException  (" ")  ;^[METHOD] addAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^return  ( int ) m;^660^^^^^654^661^[REPLACE] return  ( int ) s;^[METHOD] addAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^long s =  ( long ) x ^  ( long ) y;^673^^^^^672^679^[REPLACE] long s =  ( long ) x- ( long ) y;^[METHOD] subAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( s < Integer.MIN_VALUE && s > Integer.MAX_VALUE )  {^674^675^^^^672^679^[REPLACE] if  ( s < Integer.MIN_VALUE || s > Integer.MAX_VALUE )  {^[METHOD] subAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^676^^^^^672^679^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] subAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^return ;^676^^^^^672^679^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] subAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^return  ( int ) m;^678^^^^^672^679^[REPLACE] return  ( int ) s;^[METHOD] subAndCheck [TYPE] int [PARAMETER] int x int y [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  u  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( fraction != null )  {^720^^^^^719^763^[REPLACE] if  ( fraction == null )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^throw new NumberFormatException  (" ")  ; ;^721^^^^^719^763^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( numerator  ||  0 )  {^724^^^^^719^763^[REPLACE] if  ( numerator == 0 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return isAdd ? fraction : fraction .getNumerator (  )  ;^725^^^^^719^763^[REPLACE] return isAdd ? fraction : fraction.negate (  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return isAdd ? fraction : fraction.invert (  ) ;^725^^^^^719^763^[REPLACE] return isAdd ? fraction : fraction.negate (  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (uvp  &&  0 )  {^727^^^^^719^763^[REPLACE] if  ( fraction.numerator == 0 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^727^728^729^^^719^763^[ADD] if  ( fraction.numerator == 0 )  { return this; }^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return null;^728^^^^^719^763^[REPLACE] return this;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int d1 = greatestCommonDivisor ( denominator, TWO_QUARTERS.denominator ) ;^732^^^^^719^763^[REPLACE] int d1 = greatestCommonDivisor ( denominator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (tmodd1 != 1 )  {^733^^^^^719^763^[REPLACE] if  ( d1==1 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return new Fraction ( isAdd ? addAndCheck ( uvp, wholeNumber )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^737^738^739^^^719^763^[REPLACE] return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int uvp = mulAndCheck ( numerator, f.denominator ) ;^735^^^^^719^763^[REPLACE] int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^735^^^^^719^763^[ADD] int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int upv = mulAndCheck ( f.numerator, denominator ) ;^736^^^^^719^763^[REPLACE] int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, f.denominator )  ) ;^737^738^739^^^719^763^[REPLACE] return new Fraction ( isAdd ? addAndCheck ( uvp, upv )  : subAndCheck ( uvp, upv ) , mulPosAndCheck ( denominator, fraction.denominator )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int uvp = mulAndCheck ( numerator, ZERO.denominator ) ;^735^^^^^719^763^[REPLACE] int uvp = mulAndCheck ( numerator, fraction.denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int upv = mulAndCheck ( TWO_FIFTHS.numerator, denominator ) ;^736^^^^^719^763^[REPLACE] int upv = mulAndCheck ( fraction.numerator, denominator ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator && d1 )  ) ;^744^745^^^^719^763^[REPLACE] BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^744^745^^^^719^763^[ADD] BigInteger uvp = BigInteger.valueOf ( numerator ) .multiply ( BigInteger.valueOf ( fraction.denominator/d1 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf (wholeNumber/tmodd1 )  ) ;^746^747^^^^719^763^[REPLACE] BigInteger upv = BigInteger.valueOf ( fraction.numerator ) .multiply ( BigInteger.valueOf ( denominator/d1 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^BigInteger t = isAdd ? uvp.add ( upv )  : uvp.multiply ( upv ) ;^748^^^^^719^763^[REPLACE] BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^748^^^^^719^763^[ADD] BigInteger t = isAdd ? uvp.add ( upv )  : uvp.subtract ( upv ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int tmodd1 = t.mod ( BigInteger.valueOf ( tmodd1 )  ) .intValue (  ) ;^751^^^^^719^763^[REPLACE] int tmodd1 = t.mod ( BigInteger.valueOf ( d1 )  ) .intValue (  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int d2  = d1;^752^^^^^719^763^[REPLACE] int d2 =  ( tmodd1==0 ) ?d1:greatestCommonDivisor ( tmodd1, d1 ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^BigInteger w = t.divide ( BigInteger.valueOf ( tmodd1 )  ) ;^755^^^^^719^763^[REPLACE] BigInteger w = t.divide ( BigInteger.valueOf ( d2 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( wholeNumber (  )   <  31 )  {^756^^^^^719^763^[REPLACE] if  ( w.bitLength (  )  > 31 )  {^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^throw new ArithmeticException ( "The value must not be greater than Integer.MAX_VALUE or NaN" ) ; ;^757^758^^^^719^763^[REPLACE] throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^757^758^^^^719^763^[ADD] throw new ArithmeticException ( "overflow: numerator too large after multiply" ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return new Fraction ( w.bitLength (  ) , mulPosAndCheck ( denominator && d1, fraction.denominator && tmodd1 )  ) ;^760^761^762^^^719^763^[REPLACE] return new Fraction ( w.intValue (  ) , mulPosAndCheck ( denominator/d1, fraction.denominator/d2 )  ) ;^[METHOD] addSub [TYPE] Fraction [PARAMETER] Fraction fraction boolean isAdd [CLASS] Fraction   [TYPE]  BigInteger t  upv  uvp  w  [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  isAdd  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( fraction != false )  {^776^^^^^775^789^[REPLACE] if  ( fraction == null )  {^[METHOD] multiplyBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return ;^777^^^^^775^789^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] multiplyBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^throw new NumberFormatException  (" ")  ; ;^777^^^^^775^789^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] multiplyBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^777^^^^^775^789^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] multiplyBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( numerator == 0 && fraction.numerator == 0 )  {^779^^^^^775^789^[REPLACE] if  ( numerator == 0 || fraction.numerator == 0 )  {^[METHOD] multiplyBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return ONE;^780^^^^^775^789^[REPLACE] return ZERO;^[METHOD] multiplyBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int d1 = greatestCommonDivisor ( numerator, f.denominator ) ;^784^^^^^775^789^[REPLACE] int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^[METHOD] multiplyBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int d2 = greatestCommonDivisor ( f.numerator, denominator ) ;^785^^^^^775^789^[REPLACE] int d2 = greatestCommonDivisor ( fraction.numerator, denominator ) ;^[METHOD] multiplyBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return getReducedFraction ( mulAndCheck ( u/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^786^787^788^^^775^789^[REPLACE] return getReducedFraction ( mulAndCheck ( numerator/d1, fraction.numerator/d2 ) , mulPosAndCheck ( denominator/d2, fraction.denominator/d1 )  ) ;^[METHOD] multiplyBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( fraction != null )  {^802^^^^^801^809^[REPLACE] if  ( fraction == null )  {^[METHOD] divideBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return ;^803^^^^^801^809^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] divideBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( fraction.numerator  || pos )  {^805^^^^^801^809^[REPLACE] if  ( fraction.numerator == 0 )  {^[METHOD] divideBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^805^806^807^^^801^809^[ADD] if  ( fraction.numerator == 0 )  { throw new ArithmeticException  (" ")  ; }^[METHOD] divideBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^806^^^^^801^809^[REPLACE] throw new ArithmeticException  (" ")  ;^[METHOD] divideBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return multiplyBy ( f.invert (  )  ) ;^808^^^^^801^809^[REPLACE] return multiplyBy ( fraction.invert (  )  ) ;^[METHOD] divideBy [TYPE] Fraction [PARAMETER] Fraction fraction [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( obj  ||  this )  {^823^^^^^822^832^[REPLACE] if  ( obj == this )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object obj  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return false;^824^^^^^822^832^[REPLACE] return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object obj  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( ! obj instanceof Fraction == false )  {^826^^^^^822^832^[REPLACE] if  ( obj instanceof Fraction == false )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object obj  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return true;^827^^^^^822^832^[REPLACE] return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object obj  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^Fraction other =  ( Fraction )  object;^829^^^^^822^832^[REPLACE] Fraction other =  ( Fraction )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object obj  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^829^^^^^822^832^[ADD] Fraction other =  ( Fraction )  obj;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object obj  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return  (.getFraction (  )  == THREE_QUARTERS.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^830^831^^^^822^832^[REPLACE] return  ( getNumerator (  )  == other.getNumerator (  )  && getDenominator (  )  == other.getDenominator (  )  ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object obj [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object obj  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( hashCode  && wholeNumber )  {^840^^^^^839^845^[REPLACE] if  ( hashCode == 0 )  {^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^hashCode = 37 *  ( 37 * 17  ^  getNumerator (  )  )   ^  getDenominator (  ) ;^842^^^^^839^845^[REPLACE] hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^hashCode = 37 *  ( 37 * 17  >=  getNumerator (  )  )   >=  getDenominator (  ) ;^842^^^^^839^845^[REPLACE] hashCode = 37 *  ( 37 * 17 + getNumerator (  )  )  + getDenominator (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return ONE;^844^^^^^839^845^[REPLACE] return hashCode;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long m  numeratorValue  s  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^Fraction other =  ( Fraction )  obj;^860^^^^^859^878^[REPLACE] Fraction other =  ( Fraction )  object;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( this && THREE_QUARTERS )  {^861^^^^^859^878^[REPLACE] if  ( this==other )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 1;^862^^^^^859^878^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( numerator == other.numerator || denominator == other.denominator )  {^864^^^^^859^878^[REPLACE] if  ( numerator == other.numerator && denominator == other.denominator )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^return 0;^864^865^866^^^859^878^[ADD] if  ( numerator == other.numerator && denominator == other.denominator )  { return 0; }^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 4;^865^^^^^859^878^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 1;^865^^^^^859^878^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^long first =  ( long )  numerator  ;^869^^^^^859^878^[REPLACE] long first =  ( long )  numerator *  ( long )  other.denominator;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^long second =  ( long )  other.numerator  ;^870^^^^^859^878^[REPLACE] long second =  ( long )  other.numerator *  ( long )  denominator;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( serialVersionUID  ||  serialVersionUID )  {^871^^^^^859^878^[REPLACE] if  ( first == second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  ( first  >=  second )  {^873^^^^^859^878^[REPLACE] } else if  ( first < second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 0;^876^^^^^859^878^[REPLACE] return 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return -0;^874^^^^^859^878^[REPLACE] return -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 0L;^872^^^^^859^878^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  ( serialVersionUID  ==  serialVersionUID )  {^873^^^^^859^878^[REPLACE] } else if  ( first < second )  {^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 1 / 1;^876^^^^^859^878^[REPLACE] return 1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return -1 << 4;^874^^^^^859^878^[REPLACE] return -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return 0 - 3;^872^^^^^859^878^[REPLACE] return 0;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return -2;^874^^^^^859^878^[REPLACE] return -1;^[METHOD] compareTo [TYPE] int [PARAMETER] Object object [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  Object object  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( toString != null )  {^888^^^^^887^895^[REPLACE] if  ( toString == null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toString = new StringBuffer ( 31 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^[REPLACE] toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toString = new StringBuffer ( 32 << 3 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^889^890^891^892^^887^895^[REPLACE] toString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return ONE;^894^^^^^887^895^[REPLACE] return toString;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( toProperString != null )  {^907^^^^^906^935^[REPLACE] if  ( toProperString == null )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( numerator  !=  1 )  {^908^^^^^906^935^[REPLACE] if  ( numerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^908^909^910^911^^906^935^[ADD] if  ( numerator == 0 )  { toProperString = "0"; } else if  ( numerator == denominator )  { toProperString = "1";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  else {^910^^^^^906^935^[REPLACE] } else if  ( numerator == denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (wholeNumber  ||  -1 * denominator )  {^912^^^^^906^935^[REPLACE] } else if  ( numerator == -1 * denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^}   toProperString = "-1";^912^913^914^^^906^935^[ADD] else if  ( numerator == -1 * denominator )  { toProperString = "-1"; } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>0?-numerator:numerator )   <=  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 3 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (wholeNumber  ||  0 << 0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 21 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString  =  toProperString ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper double  = Integer.to double  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^921^^^^^906^935^[ADD] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 * 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^int d1 = greatestCommonDivisor ( numerator, fraction.denominator ) ;^919^^^^^906^935^[REPLACE] int properNumerator = getProperNumerator (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  !=  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper long  = Integer.to long  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString  = null ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 - 1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 10 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = "1"; ;^913^^^^^906^935^[REPLACE] toProperString = "-1";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^913^^^^^906^935^[ADD] toProperString = "-1";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>0?-numerator:numerator )   >=  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 30 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( u  ||  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^toProperString = Integer.toString ( getProperWhole (  )  ) ;^920^921^922^923^924^906^935^[ADD] if  ( properNumerator == 0 )  { toProperString = Integer.toString ( getProperWhole (  )  ) ; } else { toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' )^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 20 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper short  = Integer.to short  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper char  = Integer.to char  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 10 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^923^924^925^^^906^935^[ADD] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' )^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (tmodd1  !=  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper byte  = Integer.to byte  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32L ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32L ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^919^^^^^906^935^[ADD] int properNumerator = getProperNumerator (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = "0"; ;^911^^^^^906^935^[REPLACE] toProperString = "1";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  else {^912^^^^^906^935^[REPLACE] } else if  ( numerator == -1 * denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  else {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^}^914^915^^^^906^935^[ADD] else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 16 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^929^930^931^^^914^932^[ADD] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( u  ||  numer2 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 - 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( wholeNumber  ||  numer0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 << 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 + 4 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  ||  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 10 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper boolean  = Integer.to boolean  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  !=  4 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^920^921^922^923^924^906^935^[ADD] if  ( properNumerator == 0 )  { toProperString = Integer.toString ( getProperWhole (  )  ) ; } else { toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' )^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32L ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 - 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = "1"; ;^909^^^^^906^935^[REPLACE] toProperString = "0";^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  ( numerator  &&  -1 * denominator )  {^912^^^^^906^935^[REPLACE] } else if  ( numerator == -1 * denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 * 3 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  &&  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProper int  = Integer.to int  ( getProperWhole (  )  ) ;^921^^^^^906^935^[REPLACE] toProperString = Integer.toString ( getProperWhole (  )  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 % 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 17 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^} else if  (  ( numerator>1?-numerator:numerator )   ==  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 + 2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (tmodd1  ||  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 9 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( wholeNumber  ||  3 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 - 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 3 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^929^930^931^^^906^935^[ADD] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  ( numerator  != uvp )  {^912^^^^^906^935^[REPLACE] } else if  ( numerator == -1 * denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 2 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 + 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  || tmodd1 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 9 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>0?-numerator:numerator )   ==  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 0 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 * 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  &&  0 / 3 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 << 1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( numerator  ||  0 )  {^908^^^^^906^935^[REPLACE] if  ( numerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  ( numerator  ||  denominator )  {^910^^^^^906^935^[REPLACE] } else if  ( numerator == denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 18 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  != tmodd1 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( wholeNumber  ||  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 << 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 * 4 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>0?-numerator:numerator )   <=  power )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( t  !=  numer0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 34 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 7 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  || u )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 << 1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  ( numerator  !=  -1 * denominator )  {^912^^^^^906^935^[REPLACE] } else if  ( numerator == -1 * denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>0?-numerator:numerator )   <= sign )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 28 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (wholeNumber  !=  4 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 23 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (wholeNumber  !=  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 << 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 + 4 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 + 1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (uvp  !=  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 1 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 22 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 27 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[ADD]^^923^924^925^^^920^927^[ADD] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' )^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  ( numerator  != upv )  {^910^^^^^906^935^[REPLACE] } else if  ( numerator == denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^}  if  (  ( numerator>0?-numerator:numerator )   >  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32L ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( wholeNumber  !=  numer0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 11 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 << 2 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  (wholeNumber  &&  3 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 30 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 - 3 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 + 4 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( u  &&  0 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 13 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 4 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^} else if  (  ( numerator>0?-numerator:numerator )   >  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 14 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^914^932^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  && tmodd1 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 * 0 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 5 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 3 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^920^927^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 24 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^923^924^925^926^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getProperWhole (  )  ) .append ( ' ' ) .append ( properNumerator ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 * 1 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^} else if  (  ( numerator>0?-numerator:numerator )   ==  -denominator )  {^914^^^^^906^935^[REPLACE] } else if  (  ( numerator>0?-numerator:numerator )  < -denominator )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^if  ( properNumerator  &&  0 - 3 )  {^920^^^^^906^935^[REPLACE] if  ( properNumerator == 0 )  {^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^toProperString = new StringBuffer ( 32 << 4 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^929^930^931^^^906^935^[REPLACE] toProperString = new StringBuffer ( 32 ) .append ( getNumerator (  )  ) .append ( '/' ) .append ( getDenominator (  )  ) .toString (  ) ;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
[REPLACE]^return ONE;^934^^^^^906^935^[REPLACE] return toProperString;^[METHOD] toProperString [TYPE] String [PARAMETER] [CLASS] Fraction   [TYPE]  Fraction FOUR_FIFTHS  ONE  ONE_FIFTH  ONE_HALF  ONE_QUARTER  ONE_THIRD  THREE_FIFTHS  THREE_QUARTERS  TWO_FIFTHS  TWO_QUARTERS  TWO_THIRDS  ZERO  f  fraction  other  [TYPE]  String str  toProperString  toString  [TYPE]  boolean false  true  [TYPE]  long first  m  numeratorValue  s  second  serialVersionUID  [TYPE]  int a1  a2  d1  d2  denom  denom0  denom1  denom2  denominator  gcd  hashCode  i  k  numer  numer0  numer1  numer2  numerator  pos  power  properNumerator  sign  t  tmodd1  u  upv  uvp  v  whole  wholeNumber  x  y 
