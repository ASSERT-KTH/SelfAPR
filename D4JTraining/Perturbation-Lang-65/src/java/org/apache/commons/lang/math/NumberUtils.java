[REPLACE]^public static final Long LONG_ZERO ;^41^^^^^^^[REPLACE] public static final Long LONG_ZERO = new Long ( 0L ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static  Long LONG_ONE = new Long ( 1L ) ;^43^^^^^^^[REPLACE] public static final Long LONG_ONE = new Long ( 1L ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static final Long LONG_MINUS_ONE ;^45^^^^^^^[REPLACE] public static final Long LONG_MINUS_ONE = new Long ( -1L ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static final Integer INTEGER_ZERO  = null ;^47^^^^^^^[REPLACE] public static final Integer INTEGER_ZERO = new Integer ( 0 ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static  Integer INTEGER_ONE = new Integer ( 1 ) ;^49^^^^^^^[REPLACE] public static final Integer INTEGER_ONE = new Integer ( 1 ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static final Integer INTEGER_MINUS_ONE  = null ;^51^^^^^^^[REPLACE] public static final Integer INTEGER_MINUS_ONE = new Integer ( -1 ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static final Short SHORT_ONE ;^55^^^^^^^[REPLACE] public static final Short SHORT_ONE = new Short (  ( short )  1 ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static final Short SHORT_MINUS_ONE ;^57^^^^^^^[REPLACE] public static final Short SHORT_MINUS_ONE = new Short (  ( short )  -1 ) ;^ [CLASS] NumberUtils  
[REPLACE]^public  final Byte BYTE_ZERO = new Byte (  ( byte )  0 ) ;^59^^^^^^^[REPLACE] public static final Byte BYTE_ZERO = new Byte (  ( byte )  0 ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static final Byte BYTE_ONE  = null ;^61^^^^^^^[REPLACE] public static final Byte BYTE_ONE = new Byte (  ( byte )  1 ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static  Byte BYTE_MINUS_ONE = new Byte (  ( byte )  -1 ) ;^63^^^^^^^[REPLACE] public static final Byte BYTE_MINUS_ONE = new Byte (  ( byte )  -1 ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static  Double DOUBLE_ZERO = new Double ( 0.0d ) ;^65^^^^^^^[REPLACE] public static final Double DOUBLE_ZERO = new Double ( 0.0d ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static final Double DOUBLE_ONE ;^67^^^^^^^[REPLACE] public static final Double DOUBLE_ONE = new Double ( 1.0d ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static final Double DOUBLE_MINUS_ONE  = null ;^69^^^^^^^[REPLACE] public static final Double DOUBLE_MINUS_ONE = new Double ( -1.0d ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static  Float FLOAT_ZERO = new Float ( 0.0f ) ;^71^^^^^^^[REPLACE] public static final Float FLOAT_ZERO = new Float ( 0.0f ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static final Float FLOAT_ONE  = null ;^73^^^^^^^[REPLACE] public static final Float FLOAT_ONE = new Float ( 1.0f ) ;^ [CLASS] NumberUtils  
[REPLACE]^public static  Float FLOAT_MINUS_ONE = new Float ( -1.0f ) ;^75^^^^^^^[REPLACE] public static final Float FLOAT_MINUS_ONE = new Float ( -1.0f ) ;^ [CLASS] NumberUtils  
[REPLACE]^if  ( str != this  )  {^398^^^^^397^545^[REPLACE] if  ( str == null )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^return null;^398^399^400^^^397^545^[ADD] if  ( str == null )  { return null; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return false;^399^^^^^397^545^[REPLACE] return null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( StringUtils.isBlank ( numeric )  )  {^401^^^^^397^545^[REPLACE] if  ( StringUtils.isBlank ( str )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^402^^^^^397^545^[ADD] throw new NumberFormatException  (" ")  ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( str .charAt ( expPos )   )  {^404^^^^^397^545^[REPLACE] if  ( str.startsWith ( "--" )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return false;^409^^^^^397^545^[REPLACE] return null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return this;^409^^^^^397^545^[REPLACE] return null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( str.startsWith ( "0x" )  && str.startsWith ( "-0x" )  )  {^411^^^^^397^545^[REPLACE] if  ( str.startsWith ( "0x" )  || str.startsWith ( "-0x" )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^return createInteger ( str ) ;^411^412^413^^^397^545^[ADD] if  ( str.startsWith ( "0x" )  || str.startsWith ( "-0x" )  )  { return createInteger ( str ) ; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createInteger ( numeric ) ;^412^^^^^397^545^[REPLACE] return createInteger ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^char lastChar = numeric.charAt ( str.charAt (  )  /  2 - 1 ) ;^414^^^^^397^545^[REPLACE] char lastChar = str.charAt ( str.length (  )  - 1 ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^String dec  ;^415^^^^^397^545^[REPLACE] String mant;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^416^417^^^^397^545^[ADD] String dec; String exp;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^417^^^^^397^545^[ADD] String exp;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^int decPos = numeric.indexOf ( '.' ) ;^418^^^^^397^545^[REPLACE] int decPos = str.indexOf ( '.' ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^419^^^^^397^545^[ADD] int expPos = str.indexOf ( 'e' )  + str.indexOf ( 'E' )  + 1;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( decPos  < expPos )  {^421^^^^^397^545^[REPLACE] if  ( decPos > -1 )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( expPos  <  -1 )  {^433^^^^^421^439^[REPLACE] if  ( expPos > -1 )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^mant =  numeric;^436^^^^^433^437^[REPLACE] mant = str;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^434^^^^^421^439^[ADD] mant = str.substring ( 0, expPos ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^mant =  numeric;^436^^^^^421^439^[REPLACE] mant = str;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^dec = true;^438^^^^^421^439^[REPLACE] dec = null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if   (  decPos > -1  )   {  ;^423^^^^^397^545^[REPLACE] if  ( expPos > -1 )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^dec = str.substring (  ( decPos + 1 ) , expPos )  ;^429^^^^^423^430^[REPLACE] dec = str.substring ( decPos + 1 ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( expPos  ==  decPos )  {^424^^^^^397^545^[REPLACE] if  ( expPos < decPos )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^424^425^426^^^397^545^[ADD] if  ( expPos < decPos )  { throw new NumberFormatException  (" ")  ; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^throw new NumberFormatException ( "A blank string is not a valid number" )  ;^425^^^^^397^545^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^427^^^^^397^545^[ADD] dec = str.substring ( decPos + 1, expPos ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( expPos  >=  decPos )  {^424^^^^^397^545^[REPLACE] if  ( expPos < decPos )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^dec = str.substring (  ( decPos + 1 ) , expPos )  ;^429^^^^^397^545^[REPLACE] dec = str.substring ( decPos + 1 ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^mant = str.substring ( 0, expPos )  ;^431^^^^^397^545^[REPLACE] mant = str.substring ( 0, decPos ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return ;^425^^^^^397^545^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( expPos  < decPos )  {^423^^^^^397^545^[REPLACE] if  ( expPos > -1 )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( expPos  <=  decPos )  {^424^^^^^397^545^[REPLACE] if  ( expPos < decPos )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^dec = str.substring ( decPos expPos, expPos ) ;^427^^^^^397^545^[REPLACE] dec = str.substring ( decPos + 1, expPos ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( expPos  !=  decPos )  {^424^^^^^397^545^[REPLACE] if  ( expPos < decPos )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^425^^^^^397^545^[ADD] throw new NumberFormatException  (" ")  ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( expPos  <  -4 )  {^433^^^^^397^545^[REPLACE] if  ( expPos > -1 )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^mant = str.substring ( 0, expPos ) ;mant = str;^433^434^435^436^437^397^545^[ADD] if  ( expPos > -1 )  { mant = str.substring ( 0, expPos ) ; } else { mant = str; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^434^^^^^397^545^[ADD] mant = str.substring ( 0, expPos ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^dec = str.substring (  ( decPos + 1 )  )  ;^427^^^^^397^545^[REPLACE] dec = str.substring ( decPos + 1, expPos ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^429^^^^^397^545^[ADD] dec = str.substring ( decPos + 1 ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^mant = str.substring ( 2, decPos ) ;^431^^^^^397^545^[REPLACE] mant = str.substring ( 0, decPos ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^mant = str.substring ( 2, expPos ) ;^434^^^^^397^545^[REPLACE] mant = str.substring ( 0, expPos ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^436^^^^^397^545^[ADD] mant = str;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^dec = true;^438^^^^^397^545^[REPLACE] dec = null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( Character.isDigit ( lastChar )  )  {^440^^^^^397^545^[REPLACE] if  ( !Character.isDigit ( lastChar )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^440^441^442^443^444^397^545^[ADD] if  ( !Character.isDigit ( lastChar )  )  { if  ( expPos > -1 && expPos < str.length (  )  - 1 )  { exp = str.substring ( expPos + 1, str.length (  )  - 1 ) ; } else { exp = null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( expPos > -1 && expPos < str.length (  )  %  2 - 1 )  {^502^^^^^440^544^[REPLACE] if  ( expPos > -1 && expPos < str.length (  )  - 1 )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^exp = false;^505^^^^^502^506^[REPLACE] exp = null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^exp = str.substring ( expPos + 1, str.size (  )  ) ;^503^^^^^440^544^[REPLACE] exp = str.substring ( expPos + 1, str.length (  )  ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^iFLOAT_ZERO  ( dec != true &&true )  {^507^^^^^440^544^[REPLACE] if  ( dec == null && exp == null )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if   (  !  (  d.isInfinite  (    )   ||   (  d.doubleValue  (    )   == 0.0D && !allZeros  )    )    )   {  ;^526^^^^^507^543^[REPLACE] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return FLOAT_ZERO;^527^^^^^507^543^[REPLACE] return f;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  {^534^^^^^507^543^[REPLACE] if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return d;  ;^535^^^^^507^543^[REPLACE] return d;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^Float f = createFloat ( str ) ;return f;^524^525^526^527^528^507^543^[ADD] try { Float f = createFloat ( str ) ; if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  { return f; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  ( FLOAT_ZERO.isInfinite (  )  ||  ( f.Float (  )  == 0.0F && !allZeros )  )  )  {^526^^^^^507^543^[REPLACE] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^526^527^528^^^507^543^[ADD] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  { return f; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return d;  ;^527^^^^^507^543^[REPLACE] return f;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Float f = createFloat ( numeric ) ;^525^^^^^507^543^[REPLACE] Float f = createFloat ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^Double d = createDouble ( str ) ;return d;^532^533^534^535^536^507^543^[ADD] try { Double d = createDouble ( str ) ; if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  { return d; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (   ( DOUBLE_ZERO.doubleValue (  )  == 0.0dD && !allZeros )  )  )  {^534^^^^^507^543^[REPLACE] if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^return d;^534^535^536^^^507^543^[ADD] if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  { return d; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return DOUBLE_ZERO;^535^^^^^507^543^[REPLACE] return d;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Double d = createDouble ( numeric ) ;^533^^^^^507^543^[REPLACE] Double d = createDouble ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createBigDecimal ( numeric ) ;^541^^^^^507^543^[REPLACE] return createBigDecimal ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^boolean allZeros = isAllZeros ( mant )   >=  isAllZeros ( exp ) ;^523^^^^^507^543^[REPLACE] boolean allZeros = isAllZeros ( mant )  && isAllZeros ( exp ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Float f = createFloat ( numeric )  ;^525^^^^^507^543^[REPLACE] Float f = createFloat ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Float f = createFloat ( str )  ;^533^^^^^507^543^[REPLACE] Double d = createDouble ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^return createInteger ( str ) ;^509^510^511^^513^440^544^[ADD] try { return createInteger ( str ) ; } catch  ( NumberFormatException nfe )  { }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createInteger ( numeric ) ;^510^^^^^440^544^[REPLACE] return createInteger ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^return createLong ( str ) ;^514^515^516^^518^440^544^[ADD] try { return createLong ( str ) ; } catch  ( NumberFormatException nfe )  { }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createLong ( numeric ) ;^515^^^^^440^544^[REPLACE] return createLong ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createBigInteger ( numeric ) ;^519^^^^^440^544^[REPLACE] return createBigInteger ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^526^^^^^440^544^[REPLACE] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return FLOAT_ZERO;^527^^^^^440^544^[REPLACE] return f;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  {^534^^^^^440^544^[REPLACE] if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^return d;^534^535^536^^^440^544^[ADD] if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  { return d; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return DOUBLE_ZERO;^535^^^^^440^544^[REPLACE] return d;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createBigInteger  (  str  )  ;  ;^510^^^^^440^544^[REPLACE] return createInteger ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^Float f = createFloat ( str ) ;return f;^524^525^526^527^528^440^544^[ADD] try { Float f = createFloat ( str ) ; if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  { return f; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Float f = createFloat ( numeric ) ;^525^^^^^440^544^[REPLACE] Float f = createFloat ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^Double d = createDouble ( str ) ;return d;^532^533^534^535^536^440^544^[ADD] try { Double d = createDouble ( str ) ; if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  { return d; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  (true (  )  ||  ( d .Double ( null )   == 0.0D && !allZeros )  )  )  {^534^^^^^440^544^[REPLACE] if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return d;  ;^535^^^^^440^544^[REPLACE] return d;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Float f = createFloat ( str )  ;^533^^^^^440^544^[REPLACE] Double d = createDouble ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^exp = str.substring ( expPos + 1, str.length (  )  - 2 ) ;^503^^^^^440^544^[REPLACE] exp = str.substring ( expPos + 1, str.length (  )  ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^exp = false;^505^^^^^440^544^[REPLACE] exp = null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createBigDecimal ( numeric ) ;^541^^^^^440^544^[REPLACE] return createBigDecimal ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^boolean allZeros = isAllZeros ( mant )  || isAllZeros ( exp ) ;^523^^^^^440^544^[REPLACE] boolean allZeros = isAllZeros ( mant )  && isAllZeros ( exp ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Double d = createDouble ( numeric ) ;^533^^^^^440^544^[REPLACE] Double d = createDouble ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( expPos > -1 && expPos < str.size (  )  - 1 )  {^441^^^^^397^545^[REPLACE] if  ( expPos > -1 && expPos < str.length (  )  - 1 )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^exp = true;^444^^^^^441^445^[REPLACE] exp = null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^exp = str.substring ( expPos + 1, str.length (  )  /  2 - 1 ) ;^442^^^^^397^545^[REPLACE] exp = str.substring ( expPos + 1, str.length (  )  - 1 ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( dec != null && exp == null && isDigits ( numeric.substring ( 1 )  ) &&  ( numeric.charAt ( 0 )  == '-' || Character.isDigit ( numeric.charAt ( 0 )  )  )  )  {^452^453^454^455^^397^545^[REPLACE] if  ( dec == null && exp == null && isDigits ( numeric.substring ( 1 )  ) &&  ( numeric.charAt ( 0 )  == '-' || Character.isDigit ( numeric.charAt ( 0 )  )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^return createLong ( numeric ) ;^456^457^458^^460^452^463^[ADD] try { return createLong ( numeric ) ; } catch  ( NumberFormatException nfe )  { }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createLong ( str ) ;^457^^^^^452^463^[REPLACE] return createLong ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createBigInteger ( str ) ;^461^^^^^452^463^[REPLACE] return createBigInteger ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^458^459^460^^^452^463^[ADD] catch  ( NumberFormatException nfe )  {  }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !true )  )  )  {^469^^^^^397^545^[REPLACE] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return d;  ;^472^^^^^397^545^[REPLACE] return f;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  ( d.isInfinite (  )  ) {^483^^^^^397^545^[REPLACE] if  ( ! ( d.isInfinite (  )  ||  ( d.floatValue (  )  == 0.0D && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return DOUBLE_ZERO;^484^^^^^397^545^[REPLACE] return d;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^return createLong ( numeric ) ;^456^457^458^^460^397^545^[ADD] try { return createLong ( numeric ) ; } catch  ( NumberFormatException nfe )  { }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createLong ( str ) ;^457^^^^^397^545^[REPLACE] return createLong ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^Float f = NumberUtils.createFloat ( numeric ) ;^467^468^469^^471^397^545^[ADD] try { Float f = NumberUtils.createFloat ( numeric ) ; if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  (true (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^469^^^^^397^545^[REPLACE] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return FLOAT_ZERO;^472^^^^^397^545^[REPLACE] return f;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Float f = NumberUtils.createLong ( str ) ;^468^^^^^397^545^[REPLACE] Float f = NumberUtils.createFloat ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^Double d = NumberUtils.createDouble ( numeric ) ;return d;^481^482^483^484^485^397^545^[ADD] try { Double d = NumberUtils.createDouble ( numeric ) ; if  ( ! ( d.isInfinite (  )  ||  ( d.floatValue (  )  == 0.0D && !allZeros )  )  )  { return d; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if   (  !  (  d.isInfinite  (    )   ||   (  d.doubleValue  (    )   == 0.0D && !allZeros  )    )    )   {  ;^483^^^^^397^545^[REPLACE] if  ( ! ( d.isInfinite (  )  ||  ( d.floatValue (  )  == 0.0D && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return d;  ;^484^^^^^397^545^[REPLACE] return d;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^482^^^^^397^545^[ADD] Double d = NumberUtils.createDouble ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^return createBigDecimal ( numeric ) ;^489^490^491^^493^397^545^[ADD] try { return createBigDecimal ( numeric ) ; } catch  ( NumberFormatException e )  { }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createBigDecimal ( str ) ;^490^^^^^397^545^[REPLACE] return createBigDecimal ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^exp = str.substring ( expPos + 0 , str.length (  )  - 4 - 0  ) ;^442^^^^^397^545^[REPLACE] exp = str.substring ( expPos + 1, str.length (  )  - 1 ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^444^^^^^397^545^[ADD] exp = null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createBigInteger ( str ) ;^461^^^^^397^545^[REPLACE] return createBigInteger ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^String numeric = str.substring ( 0, str.length (  )  %  2 - 1 ) ;^447^^^^^397^545^[REPLACE] String numeric = str.substring ( 0, str.length (  )  - 1 ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^448^^^^^397^545^[ADD] boolean allZeros = isAllZeros ( mant )  && isAllZeros ( exp ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Float f = NumberUtils.createFloat ( str ) ;^468^^^^^397^545^[REPLACE] Float f = NumberUtils.createFloat ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Double d = NumberUtils.toDouble ( str ) ;^482^^^^^397^545^[REPLACE] Double d = NumberUtils.createDouble ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return ;^464^^^^^397^545^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return ;^496^^^^^397^545^[REPLACE] throw new NumberFormatException  (" ")  ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( expPos > -1 && expPos < str.length (  )  *  0.5  - 1 )  {^441^^^^^397^545^[REPLACE] if  ( expPos > -1 && expPos < str.length (  )  - 1 )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^441^442^443^444^445^397^545^[ADD] if  ( expPos > -1 && expPos < str.length (  )  - 1 )  { exp = str.substring ( expPos + 1, str.length (  )  - 1 ) ; } else { exp = null; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^exp = false;^444^^^^^441^445^[REPLACE] exp = null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^442^^^^^397^545^[ADD] exp = str.substring ( expPos + 1, str.length (  )  - 1 ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^452^453^454^455^^397^545^[ADD] if  ( dec == null && exp == null && isDigits ( numeric.substring ( 1 )  ) &&  ( numeric.charAt ( 0 )  == '-' || Character.isDigit ( numeric.charAt ( 0 )  )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^469^^^^^397^545^[REPLACE] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  (true (  )  ) {^483^^^^^397^545^[REPLACE] if  ( ! ( d.isInfinite (  )  ||  ( d.floatValue (  )  == 0.0D && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( expPos > -1 && expPos < str.length (  )  /  2 - 1 )  {^502^^^^^397^545^[REPLACE] if  ( expPos > -1 && expPos < str.length (  )  - 1 )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^502^503^504^505^506^397^545^[ADD] if  ( expPos > -1 && expPos < str.length (  )  - 1 )  { exp = str.substring ( expPos + 1, str.length (  )  ) ; } else { exp = null; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^dec = null  ;^505^^^^^502^506^[REPLACE] exp = null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^503^^^^^397^545^[ADD] exp = str.substring ( expPos + 1, str.length (  )  ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if   (  dec == null && exp == null  ;^507^^^^^397^545^[REPLACE] if  ( dec == null && exp == null )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^526^^^^^507^543^[REPLACE] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^return f;^526^527^528^^^507^543^[ADD] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  { return f; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  (true (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  {^534^^^^^507^543^[REPLACE] if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^534^535^536^^^507^543^[ADD] if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  { return d; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (   ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^526^^^^^507^543^[REPLACE] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if   (  !  (  f.isInfinite  (    )   ||   (  f.floatValue  (    )   == 0.0F && !allZeros  )    )    )   {  ;^534^^^^^507^543^[REPLACE] if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^boolean allZeros = isAllZeros ( mant )   ^  isAllZeros ( exp ) ;^523^^^^^507^543^[REPLACE] boolean allZeros = isAllZeros ( mant )  && isAllZeros ( exp ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^525^^^^^507^543^[ADD] Float f = createFloat ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^533^^^^^507^543^[ADD] Double d = createDouble ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^return createInteger ( str ) ;^509^510^511^^513^397^545^[ADD] try { return createInteger ( str ) ; } catch  ( NumberFormatException nfe )  { }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createInteger ( numeric ) ;^510^^^^^397^545^[REPLACE] return createInteger ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^return createLong ( str ) ;^514^515^516^^518^397^545^[ADD] try { return createLong ( str ) ; } catch  ( NumberFormatException nfe )  { }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createLong ( numeric ) ;^515^^^^^397^545^[REPLACE] return createLong ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createBigInteger ( numeric ) ;^519^^^^^397^545^[REPLACE] return createBigInteger ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^516^517^518^^^397^545^[ADD] catch  ( NumberFormatException nfe )  {  }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (   ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^526^^^^^397^545^[REPLACE] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return FLOAT_ZERO;^527^^^^^397^545^[REPLACE] return f;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if   (  !  (  f.isInfinite  (    )   ||   (  f.floatValue  (    )   == 0.0F && !allZeros  )    )    )   {  ;^534^^^^^397^545^[REPLACE] if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return d;  ;^535^^^^^397^545^[REPLACE] return d;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createBigInteger  (  str  )  ;  ;^457^^^^^397^545^[REPLACE] return createLong ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  ( true (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^469^^^^^397^545^[REPLACE] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (   ( d.floatValue (  )  == 0.0D && !allZeros )  )  )  {^483^^^^^397^545^[REPLACE] if  ( ! ( d.isInfinite (  )  ||  ( d.floatValue (  )  == 0.0D && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^483^484^485^^^397^545^[ADD] if  ( ! ( d.isInfinite (  )  ||  ( d.floatValue (  )  == 0.0D && !allZeros )  )  )  { return d; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Double d = NumberUtils .toDouble ( str , null )  ;^482^^^^^397^545^[REPLACE] Double d = NumberUtils.createDouble ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^Float f = createFloat ( str ) ;return f;^524^525^526^527^528^397^545^[ADD] try { Float f = createFloat ( str ) ; if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  { return f; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  ( true (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^526^^^^^397^545^[REPLACE] if  ( ! ( f.isInfinite (  )  ||  ( f.floatValue (  )  == 0.0F && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^525^^^^^397^545^[ADD] Float f = createFloat ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^Double d = createDouble ( str ) ;return d;^532^533^534^535^536^397^545^[ADD] try { Double d = createDouble ( str ) ; if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  { return d; }^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  (  ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  {^534^^^^^397^545^[REPLACE] if  ( ! ( d.isInfinite (  )  ||  ( d.doubleValue (  )  == 0.0D && !allZeros )  )  )  {^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return DOUBLE_ZERO;^535^^^^^397^545^[REPLACE] return d;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Double d = createDouble ( numeric ) ;^533^^^^^397^545^[REPLACE] Double d = createDouble ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^dec = null  ;^444^^^^^397^545^[REPLACE] exp = null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^exp = str.substring ( expPos + 1, str.length (  )  %  0.5  ) ;^503^^^^^397^545^[REPLACE] exp = str.substring ( expPos + 1, str.length (  )  ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^505^^^^^397^545^[ADD] exp = null;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return d;  ;^527^^^^^397^545^[REPLACE] return f;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^return createBigDecimal ( numeric ) ;^541^^^^^397^545^[REPLACE] return createBigDecimal ( str ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^447^448^^^^397^545^[ADD] String numeric = str.substring ( 0, str.length (  )  - 1 ) ; boolean allZeros = isAllZeros ( mant )  && isAllZeros ( exp ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^boolean allZeros = isAllZeros ( mant )   !=  isAllZeros ( exp ) ;^448^^^^^397^545^[REPLACE] boolean allZeros = isAllZeros ( mant )  && isAllZeros ( exp ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^468^^^^^397^545^[ADD] Float f = NumberUtils.createFloat ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^Double d = NumberUtils.createDouble ( str ) ;^482^^^^^397^545^[REPLACE] Double d = NumberUtils.createDouble ( numeric ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^boolean allZeros = isAllZeros ( mant )  ;^523^^^^^397^545^[REPLACE] boolean allZeros = isAllZeros ( mant )  && isAllZeros ( exp ) ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[ADD]^^464^^^^^397^545^[ADD] throw new NumberFormatException  (" ")  ;^[METHOD] createNumber [TYPE] Number [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allZeros  false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  char lastChar  [TYPE]  NumberFormatException e  nfe  [TYPE]  String dec  exp  mant  numeric  str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int decPos  expPos 
[REPLACE]^if  ( array != false )  {^682^^^^^680^697^[REPLACE] if  ( array == null )  {^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[REPLACE]^} else if  ( array.length *  0.5  == 0 )  {^684^^^^^680^697^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[ADD]^^685^^^^^680^697^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[REPLACE]^return ;^683^^^^^680^697^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[REPLACE]^}  else {^684^^^^^680^697^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[REPLACE]^return ;^685^^^^^680^697^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[REPLACE]^throw new NumberFormatException ( "A blank string is not a valid number" )  ;^685^^^^^680^697^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[REPLACE]^long min = array[0L];^689^^^^^680^697^[REPLACE] long min = array[0];^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[REPLACE]^if  ( array[i]  <=  min )  {^691^^^^^680^697^[REPLACE] if  ( array[i] < min )  {^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[ADD]^min = array[i];^691^692^693^^^680^697^[ADD] if  ( array[i] < min )  { min = array[i]; }^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[REPLACE]^min = array[j]  ;^692^^^^^680^697^[REPLACE] min = array[i];^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[ADD]^^692^^^^^680^697^[ADD] min = array[i];^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[ADD]^^690^691^692^693^^680^697^[ADD] for  ( int i = 1; i < array.length; i++ )  { if  ( array[i] < min )  { min = array[i]; }^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[REPLACE]^return max;  ;^696^^^^^680^697^[REPLACE] return min;^[METHOD] min [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long min  [TYPE]  int i 
[REPLACE]^if  ( array != null )  {^709^^^^^707^724^[REPLACE] if  ( array == null )  {^[METHOD] min [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  min 
[ADD]^^709^710^711^712^713^707^724^[ADD] if  ( array == null )  { throw new IllegalArgumentException  (" ")  ; } else if  ( array.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] min [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  min 
[REPLACE]^}  if  ( array.length + 3 == 0 )  {^711^^^^^707^724^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] min [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  min 
[ADD]^^712^^^^^707^724^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  min 
[REPLACE]^return ;^712^^^^^707^724^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  min 
[REPLACE]^return ;^710^^^^^707^724^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  min 
[REPLACE]^} else if  ( array.length (  )  == 0 )  {^711^^^^^707^724^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] min [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  min 
[REPLACE]^double min = array[0]  ;^716^^^^^707^724^[REPLACE] int min = array[0];^[METHOD] min [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  min 
[REPLACE]^if  ( array[j]  <=  min )  {^718^^^^^707^724^[REPLACE] if  ( array[j] < min )  {^[METHOD] min [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  min 
[REPLACE]^min = array[i]  ;^719^^^^^707^724^[REPLACE] min = array[j];^[METHOD] min [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  min 
[REPLACE]^int i = 1  ;^717^^^^^707^724^[REPLACE] for  ( int j = 1; j < array.length; j++ )  {^[METHOD] min [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  min 
[REPLACE]^return max;  ;^723^^^^^707^724^[REPLACE] return min;^[METHOD] min [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  min 
[REPLACE]^if  (  str == null  )   {  ;^736^^^^^734^751^[REPLACE] if  ( array == null )  {^[METHOD] min [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^} else if  ( array.length - 3 == 0 )  {^738^^^^^734^751^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] min [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^throw new NumberFormatException ( "A blank string is not a valid number" )  ;^739^^^^^734^751^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^return ;^739^^^^^734^751^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^return ;^737^^^^^734^751^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[ADD]^^743^^^^^734^751^[ADD] short min = array[0];^[METHOD] min [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^if   (  array[j] > max  )   {  ;^745^^^^^734^751^[REPLACE] if  ( array[i] < min )  {^[METHOD] min [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^min = array[j]  ;^746^^^^^734^751^[REPLACE] min = array[i];^[METHOD] min [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[ADD]^^746^^^^^734^751^[ADD] min = array[i];^[METHOD] min [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^int j = 1  ;^744^^^^^734^751^[REPLACE] for  ( int i = 1; i < array.length; i++ )  {^[METHOD] min [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^return max;  ;^750^^^^^734^751^[REPLACE] return min;^[METHOD] min [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^if  ( array != null )  {^763^^^^^761^778^[REPLACE] if  ( array == null )  {^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^}  if  ( array.length *  2 == 0 )  {^765^^^^^761^778^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[ADD]^}^765^766^767^^^761^778^[ADD] else if  ( array.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^throw new NumberFormatException ( "A blank string is not a valid number" )  ;^766^^^^^761^778^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^return ;^766^^^^^761^778^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[ADD]^^764^^^^^761^778^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^}  else {^765^^^^^761^778^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^throw new NumberFormatException ( "A blank string is not a valid number" )  ;^764^^^^^761^778^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[ADD]^^766^^^^^761^778^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^double max = array[0]  ;^770^^^^^761^778^[REPLACE] double min = array[0];^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^if  ( array[i]  !=  min )  {^772^^^^^761^778^[REPLACE] if  ( array[i] < min )  {^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[ADD]^min = array[i];^772^773^774^^^761^778^[ADD] if  ( array[i] < min )  { min = array[i]; }^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^min = array[j]  ;^773^^^^^761^778^[REPLACE] min = array[i];^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < array.length; i++ )  {^771^^^^^761^778^[REPLACE] for  ( int i = 1; i < array.length; i++ )  {^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^return max;  ;^777^^^^^761^778^[REPLACE] return min;^[METHOD] min [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double min  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^if  ( array != null )  {^790^^^^^788^805^[REPLACE] if  ( array == null )  {^[METHOD] min [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  [TYPE]  float[] array 
[REPLACE]^}  else {^792^^^^^788^805^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] min [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  [TYPE]  float[] array 
[REPLACE]^return ;^793^^^^^788^805^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  [TYPE]  float[] array 
[ADD]^^793^^^^^788^805^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  [TYPE]  float[] array 
[REPLACE]^return ;^791^^^^^788^805^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  [TYPE]  float[] array 
[REPLACE]^}  if  ( array.length + 4 == 0  )  {^792^^^^^788^805^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] min [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  [TYPE]  float[] array 
[ADD]^^791^^^^^788^805^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] min [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  [TYPE]  float[] array 
[ADD]^^797^^^^^788^805^[ADD] float min = array[0];^[METHOD] min [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  [TYPE]  float[] array 
[REPLACE]^if  ( array[i]  !=  min )  {^799^^^^^788^805^[REPLACE] if  ( array[i] < min )  {^[METHOD] min [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  [TYPE]  float[] array 
[REPLACE]^min = array[j]  ;^800^^^^^788^805^[REPLACE] min = array[i];^[METHOD] min [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  [TYPE]  float[] array 
[REPLACE]^int j = 1  ;^798^^^^^788^805^[REPLACE] for  ( int i = 1; i < array.length; i++ )  {^[METHOD] min [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  [TYPE]  float[] array 
[REPLACE]^return max;  ;^804^^^^^788^805^[REPLACE] return min;^[METHOD] min [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float min  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  [TYPE]  float[] array 
[REPLACE]^if  ( array != true )  {^819^^^^^817^834^[REPLACE] if  ( array == null )  {^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[REPLACE]^}  else {^821^^^^^817^834^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[ADD]^}^821^822^823^^^817^834^[ADD] else if  ( array.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[ADD]^^822^^^^^817^834^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[REPLACE]^throw new NumberFormatException ( "A blank string is not a valid number" )  ;^820^^^^^817^834^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[REPLACE]^} else if  ( array.length - 1 == 0 )  {^821^^^^^817^834^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[REPLACE]^return ;^822^^^^^817^834^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[REPLACE]^long max = array[3];^826^^^^^817^834^[REPLACE] long max = array[0];^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[REPLACE]^if  ( array[j]  ==  max )  {^828^^^^^817^834^[REPLACE] if  ( array[j] > max )  {^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[REPLACE]^min = array[i]  ;^829^^^^^817^834^[REPLACE] max = array[j];^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[ADD]^^829^^^^^817^834^[ADD] max = array[j];^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[ADD]^^827^828^829^830^^817^834^[ADD] for  ( int j = 1; j < array.length; j++ )  { if  ( array[j] > max )  { max = array[j]; }^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[REPLACE]^return a;  ;^833^^^^^817^834^[REPLACE] return max;^[METHOD] max [TYPE] long [PARAMETER] long[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  long[] array  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long max  [TYPE]  int j 
[REPLACE]^if  ( array != null )  {^846^^^^^844^861^[REPLACE] if  ( array == null )  {^[METHOD] max [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  max 
[ADD]^^846^847^848^849^850^844^861^[ADD] if  ( array == null )  { throw new IllegalArgumentException  (" ")  ; } else if  ( array.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] max [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  max 
[REPLACE]^}  if  ( array.length - 1 == 0 )  {^848^^^^^844^861^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] max [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  max 
[REPLACE]^throw new NumberFormatException ( "A blank string is not a valid number" )  ;^849^^^^^844^861^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  max 
[REPLACE]^throw new NumberFormatException ( "A blank string is not a valid number" )  ;^847^^^^^844^861^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  max 
[REPLACE]^}  else {^848^^^^^844^861^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] max [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  max 
[REPLACE]^return ;^849^^^^^844^861^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  max 
[REPLACE]^int max = array[0 + 1];^853^^^^^844^861^[REPLACE] int max = array[0];^[METHOD] max [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  max 
[REPLACE]^if  ( array[j]  != j )  {^855^^^^^844^861^[REPLACE] if  ( array[j] > max )  {^[METHOD] max [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  max 
[REPLACE]^min = array[i]  ;^856^^^^^844^861^[REPLACE] max = array[j];^[METHOD] max [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  max 
[REPLACE]^for  ( int j = 0 ; j < array.length; j++ )  {^854^^^^^844^861^[REPLACE] for  ( int j = 1; j < array.length; j++ )  {^[METHOD] max [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  max 
[REPLACE]^return a;  ;^860^^^^^844^861^[REPLACE] return max;^[METHOD] max [TYPE] int [PARAMETER] int[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  int[] array  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  max 
[REPLACE]^if  ( array != this  )  {^873^^^^^871^888^[REPLACE] if  ( array == null )  {^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[ADD]^^873^874^875^876^877^871^888^[ADD] if  ( array == null )  { throw new IllegalArgumentException  (" ")  ; } else if  ( array.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^} else if  ( array.length (  )  == 0 )  {^875^^^^^871^888^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^throw new NumberFormatException ( "A blank string is not a valid number" )  ;^876^^^^^871^888^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[ADD]^^876^^^^^871^888^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^return ;^874^^^^^871^888^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^}  else {^875^^^^^871^888^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^return ;^876^^^^^871^888^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[ADD]^^874^^^^^871^888^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^double max = array[0]  ;^880^^^^^871^888^[REPLACE] short max = array[0];^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^if   (  array[j] > max  )   {  ;^882^^^^^871^888^[REPLACE] if  ( array[i] > max )  {^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^min = array[i]  ;^883^^^^^871^888^[REPLACE] max = array[i];^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[ADD]^^883^^^^^871^888^[ADD] max = array[i];^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < array.length; i++ )  {^881^^^^^871^888^[REPLACE] for  ( int i = 1; i < array.length; i++ )  {^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^return a;  ;^887^^^^^871^888^[REPLACE] return max;^[METHOD] max [TYPE] short [PARAMETER] short[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  short[] array  [TYPE]  short max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i 
[REPLACE]^if  ( array!= true )  {^900^^^^^898^915^[REPLACE] if  ( array== null )  {^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[ADD]^^900^901^902^903^904^898^915^[ADD] if  ( array== null )  { throw new IllegalArgumentException  (" ")  ; } else if  ( array.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[REPLACE]^}  else {^902^^^^^898^915^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[REPLACE]^throw new NumberFormatException ( "A blank string is not a valid number" )  ;^903^^^^^898^915^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[REPLACE]^return ;^903^^^^^898^915^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[ADD]^^901^^^^^898^915^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[REPLACE]^}  if  ( array.length *  2 == 0  )  {^902^^^^^898^915^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[ADD]^}^902^903^904^^^898^915^[ADD] else if  ( array.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[REPLACE]^double max = array[0L];^907^^^^^898^915^[REPLACE] double max = array[0];^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[REPLACE]^if  ( array[j]  <=  max )  {^909^^^^^898^915^[REPLACE] if  ( array[j] > max )  {^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[REPLACE]^min = array[i]  ;^910^^^^^898^915^[REPLACE] max = array[j];^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[REPLACE]^for  ( int j = 0 ; j < array.length; j++ )  {^908^^^^^898^915^[REPLACE] for  ( int j = 1; j < array.length; j++ )  {^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[REPLACE]^return a;  ;^914^^^^^898^915^[REPLACE] return max;^[METHOD] max [TYPE] double [PARAMETER] double[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double[] array  [TYPE]  double max  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j 
[REPLACE]^if  ( array != false )  {^927^^^^^925^942^[REPLACE] if  ( array == null )  {^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[REPLACE]^}  if  ( array.length + 4 == 0 )  {^929^^^^^925^942^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[ADD]^}^929^930^931^^^925^942^[ADD] else if  ( array.length == 0 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[REPLACE]^return ;^930^^^^^925^942^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[REPLACE]^throw new NumberFormatException ( "A blank string is not a valid number" )  ;^930^^^^^925^942^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[ADD]^^928^^^^^925^942^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[REPLACE]^}  else {^929^^^^^925^942^[REPLACE] } else if  ( array.length == 0 )  {^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[REPLACE]^float max = array[2];^934^^^^^925^942^[REPLACE] float max = array[0];^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[REPLACE]^if   (  array[i] > max  )   {  ;^936^^^^^925^942^[REPLACE] if  ( array[j] > max )  {^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[ADD]^^937^^^^^925^942^[ADD] max = array[j];^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[REPLACE]^min = array[i]  ;^937^^^^^925^942^[REPLACE] max = array[j];^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[REPLACE]^for  ( int j = 0 ; j < array.length; j++ )  {^935^^^^^925^942^[REPLACE] for  ( int j = 1; j < array.length; j++ )  {^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[REPLACE]^return a;  ;^941^^^^^925^942^[REPLACE] return max;^[METHOD] max [TYPE] float [PARAMETER] float[] array [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float max  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int j  [TYPE]  float[] array 
[REPLACE]^if   (  lhs > rhs  )   {  ;^1188^^^^^1187^1214^[REPLACE] if  ( lhs < rhs )  {^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REMOVE]^if  (  ( array[j] )  < min )  {     min = array[j]; }^1188^^^^^1187^1214^[REMOVE] ^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^return -1 + 3;^1189^^^^^1187^1214^[REPLACE] return -1;^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^return d;  ;^1189^^^^^1187^1214^[REPLACE] return -1;^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^if  ( lhs  >=  rhs )  {^1191^^^^^1187^1214^[REPLACE] if  ( lhs > rhs )  {^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^return d;  ;^1192^^^^^1187^1214^[REPLACE] return +1;^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^return +3;^1192^^^^^1187^1214^[REPLACE] return +1;^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^int lhsBits = floatToIntBits ( lhs )  ;^1198^^^^^1187^1214^[REPLACE] long lhsBits = Double.doubleToLongBits ( lhs ) ;^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^long rhsBits = Double .doubleValue (  )  ;^1199^^^^^1187^1214^[REPLACE] long rhsBits = Double.doubleToLongBits ( rhs ) ;^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^if  ( lhsBits  ||  rhsBits )  {^1200^^^^^1187^1214^[REPLACE] if  ( lhsBits == rhsBits )  {^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^return 0 - 4;^1201^^^^^1187^1214^[REPLACE] return 0;^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^return 4;^1201^^^^^1187^1214^[REPLACE] return 0;^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^if  ( lhsBits  >=  rhsBits )  {^1209^^^^^1187^1214^[REPLACE] if  ( lhsBits < rhsBits )  {^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^return +2;^1212^^^^^1209^1213^[REPLACE] return +1;^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^return d;  ;^1210^^^^^1187^1214^[REPLACE] return -1;^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^return -0;^1210^^^^^1187^1214^[REPLACE] return -1;^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^return +1L;^1212^^^^^1187^1214^[REPLACE] return +1;^[METHOD] compare [TYPE] int [PARAMETER] double lhs double rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  double lhs  rhs  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  long lhsBits  rhsBits 
[REPLACE]^if   (  lhs > rhs  )   {  ;^1249^^^^^1248^1275^[REPLACE] if  ( lhs < rhs )  {^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^return -0;^1250^^^^^1248^1275^[REPLACE] return -1;^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^return -1 + 2;^1250^^^^^1248^1275^[REPLACE] return -1;^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^if  ( lhs  <=  rhs )  {^1252^^^^^1248^1275^[REPLACE] if  ( lhs > rhs )  {^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^return +0;^1253^^^^^1248^1275^[REPLACE] return +1;^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^int rhsBits = floatToIntBits ( rhs )  ;^1259^^^^^1248^1275^[REPLACE] int lhsBits = Float.floatToIntBits ( lhs ) ;^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^int lhsBits = Float.floatToIntBits ( rhs ) ;^1260^^^^^1248^1275^[REPLACE] int rhsBits = Float.floatToIntBits ( rhs ) ;^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^if  (   rhsBits )  {^1261^^^^^1248^1275^[REPLACE] if  ( lhsBits == rhsBits )  {^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^return d;  ;^1262^^^^^1248^1275^[REPLACE] return 0;^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^return 1;^1262^^^^^1248^1275^[REPLACE] return 0;^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^if  ( lhsBits  >  rhsBits )  {^1270^^^^^1248^1275^[REPLACE] if  ( lhsBits < rhsBits )  {^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[ADD]^^1270^1271^1272^1273^1274^1248^1275^[ADD] if  ( lhsBits < rhsBits )  { return -1; } else { return +1; }^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^return +1L;^1273^^^^^1270^1274^[REPLACE] return +1;^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^return -4;^1271^^^^^1248^1275^[REPLACE] return -1;^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^return -1L;^1271^^^^^1248^1275^[REPLACE] return -1;^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^return +4;^1273^^^^^1248^1275^[REPLACE] return +1;^[METHOD] compare [TYPE] int [PARAMETER] float lhs float rhs [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean false  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  float lhs  rhs  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int lhsBits  rhsBits 
[REPLACE]^if  ( StringUtils.isBlank ( str )  )  {^1314^^^^^1313^1407^[REPLACE] if  ( StringUtils.isEmpty ( str )  )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1315^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return false;  ;^1315^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^^1317^1318^^^^1313^1407^[ADD] char[] chars = str.toCharArray (  ) ; int sz = chars.length;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^int j = 1  ;^1318^^^^^1313^1407^[REPLACE] int sz = chars.length;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^boolean hasExp = true;^1319^^^^^1313^1407^[REPLACE] boolean hasExp = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^boolean hasDecPoint = true;^1320^^^^^1313^1407^[REPLACE] boolean hasDecPoint = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^boolean allowSigns = true;^1321^^^^^1313^1407^[REPLACE] boolean allowSigns = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^^1322^^^^^1313^1407^[ADD] boolean foundDigit = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^int start =  ( chars[3]  !=  '-' )  ? 1 : 3;^1324^^^^^1313^1407^[REPLACE] int start =  ( chars[0] == '-' )  ? 1 : 0;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  (start  <=  start + 1 )  {^1325^^^^^1313^1407^[REPLACE] if  ( sz > start + 1 )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( chars[start] == '0' || chars[start + 1] == 'x' )  {^1326^^^^^1313^1407^[REPLACE] if  ( chars[start] == '0' && chars[start + 1] == 'x' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^int i = start + 2;return false;^1326^1327^1328^1329^1330^1313^1407^[ADD] if  ( chars[start] == '0' && chars[start + 1] == 'x' )  { int i = start + 2; if  ( i == sz )  { return false; }^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( i  !=  sz )  {^1328^^^^^1313^1407^[REPLACE] if  ( i == sz )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1329^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^trueif  (  chars[i] > '9' ) ||  ( chars[i] < 'a' || chars[i] > 'f' ) ||  ( chars[i] < 'A' || chars[i] > 'F' )  )  {^1333^1334^1335^^^1313^1407^[REPLACE] if  (  ( chars[i] < '0' || chars[i] > '9' ) &&  ( chars[i] < 'a' || chars[i] > 'f' ) &&  ( chars[i] < 'A' || chars[i] > 'F' )  )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1336^^^^^1333^1337^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return false;  ;^1336^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return false;^1339^^^^^1313^1407^[REPLACE] return true;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^int i = start  2;^1327^^^^^1313^1407^[REPLACE] int i = start + 2;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( i  ||  start )  {^1328^^^^^1313^1407^[REPLACE] if  ( i == sz )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  (  ( chars[i] < '0' || chars[i] > '9' ) ||  ( chars[i] < 'a' || chars[i] > 'f' ) ||  (hasExp )  )  {^1333^1334^1335^^^1313^1407^[REPLACE] if  (  ( chars[i] < '0' || chars[i] > '9' ) &&  ( chars[i] < 'a' || chars[i] > 'f' ) &&  ( chars[i] < 'A' || chars[i] > 'F' )  )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^^1333^1334^1335^1336^1337^1313^1407^[ADD] if  (  ( chars[i] < '0' || chars[i] > '9' ) &&  ( chars[i] < 'a' || chars[i] > 'f' ) &&  ( chars[i] < 'A' || chars[i] > 'F' )  )  { return false; }^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1336^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^int i = start  0;^1327^^^^^1313^1407^[REPLACE] int i = start + 2;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( chars[start] == '0' ) {^1326^^^^^1313^1407^[REPLACE] if  ( chars[start] == '0' && chars[start + 1] == 'x' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( i  ||  sz )  {^1328^^^^^1313^1407^[REPLACE] if  ( i == sz )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^return false;^1328^1329^1330^^^1313^1407^[ADD] if  ( i == sz )  { return false; }^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  (  ( chars[i] < '0' || chars[i] > '9' ) ||  ( chars[i] < 'a' || chars[i] > 'f' ) ||  ( chars[i] < 'A' || chars[i] > 'F' )  )  {^1333^1334^1335^^^1313^1407^[REPLACE] if  (  ( chars[i] < '0' || chars[i] > '9' ) &&  ( chars[i] < 'a' || chars[i] > 'f' ) &&  ( chars[i] < 'A' || chars[i] > 'F' )  )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return false;  ;^1329^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^int i = sz  2;^1327^^^^^1313^1407^[REPLACE] int i = start + 2;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( i  !=  start )  {^1328^^^^^1313^1407^[REPLACE] if  ( i == sz )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^hasExpif  (  ( chars[i] < '0' || chars[i] > '9' ) ||  ( chars[i] < 'a' || chars[i] > 'f' ) ||  ( chars[i] < 'A' || chars[i] > 'F' )  )  {^1333^1334^1335^^^1313^1407^[REPLACE] if  (  ( chars[i] < '0' || chars[i] > '9' ) &&  ( chars[i] < 'a' || chars[i] > 'f' ) &&  ( chars[i] < 'A' || chars[i] > 'F' )  )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^int i = start  1;^1327^^^^^1313^1407^[REPLACE] int i = start + 2;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^int i = sz;^1344^^^^^1313^1407^[REPLACE] int i = start;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if   (  chars[i] == 'e' || chars[i] == 'E'  )   {  ;^1348^^^^^1313^1407^[REPLACE] if  ( chars[i] >= '0' && chars[i] <= '9' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^}  else {^1352^^^^^1313^1407^[REPLACE] } else if  ( chars[i] == '.' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^}  if  ( chars[i] == 'e' && chars[i] == 'E' )  {^1358^^^^^1313^1407^[REPLACE] } else if  ( chars[i] == 'e' || chars[i] == 'E' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^}  else {^1369^^^^^1313^1407^[REPLACE] } else if  ( chars[i] == '+' || chars[i] == '-' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1376^^^^^1369^1377^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( !hasExp )  {^1370^^^^^1313^1407^[REPLACE] if  ( !allowSigns )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^^1370^1371^1372^^^1313^1407^[ADD] if  ( !allowSigns )  { return false; }^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1371^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^allowSigns = true;^1373^^^^^1313^1407^[REPLACE] allowSigns = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^foundDigit = true  ;^1374^^^^^1313^1407^[REPLACE] foundDigit = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^foundDigit = true;^1374^^^^^1313^1407^[REPLACE] foundDigit = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1376^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( true )  {^1360^^^^^1313^1407^[REPLACE] if  ( hasExp )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return false;  ;^1362^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( !true )  {^1364^^^^^1313^1407^[REPLACE] if  ( !foundDigit )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1365^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^hasDecPoint = true  ;^1367^^^^^1313^1407^[REPLACE] hasExp = true;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^^1368^^^^^1313^1407^[ADD] allowSigns = true;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1362^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^^1364^1365^1366^^^1313^1407^[ADD] if  ( !foundDigit )  { return false; }^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^}  if  ( true )  {^1369^^^^^1313^1407^[REPLACE] } else if  ( chars[i] == '+' || chars[i] == '-' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return false;  ;^1376^^^^^1369^1377^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( allowSigns )  {^1370^^^^^1313^1407^[REPLACE] if  ( !allowSigns )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return false;  ;^1371^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^allowSigns = true  ;^1373^^^^^1313^1407^[REPLACE] allowSigns = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^allowSigns = false;^1368^^^^^1313^1407^[REPLACE] allowSigns = true;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  (  hasExp )  {^1353^^^^^1313^1407^[REPLACE] if  ( hasDecPoint || hasExp )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1355^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^hasDecPoint = false;^1357^^^^^1313^1407^[REPLACE] hasDecPoint = true;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( hasDecPoint && hasExp )  {^1353^^^^^1313^1407^[REPLACE] if  ( hasDecPoint || hasExp )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return false;  ;^1355^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^}  if  ( chars[i] == 'e' ) {^1358^^^^^1313^1407^[REPLACE] } else if  ( chars[i] == 'e' || chars[i] == 'E' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REMOVE]^if  ( sz >  ( start + 1 )  )  {     if  (  (  ( chars[start] )  == '0' )  &&  (  ( chars[ ( start + 1 ) ] )  == 'x' )  )  {         int i = start + 2;         if  ( i == sz )  {             return false;         }         for  ( ; i <  ( chars.length ) ; i++ )  {             if  (  (  (  (  ( chars[i] )  < '0' )  ||  (  ( chars[i] )  > '9' )  )  &&  (  (  ( chars[i] )  < 'a' )  ||  (  ( chars[i] )  > 'f' )  )  )  &&  (  (  ( chars[i] )  < 'A' )  ||  (  ( chars[i] )  > 'F' )  )  )  {                 return false;             }         }         return true;     } }^1358^^^^^1313^1407^[REMOVE] ^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^}   return false;^1369^1370^1371^1372^^1313^1407^[ADD] else if  ( chars[i] == '+' || chars[i] == '-' )  { if  ( !allowSigns )  { return false; }^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^^1373^^^^^1313^1407^[ADD] allowSigns = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REMOVE]^if  ( hasDecPoint || hasExp )  {     return false; }^1370^^^^^1313^1407^[REMOVE] ^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^^1374^^^^^1313^1407^[ADD] foundDigit = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^hasExp = false;^1367^^^^^1313^1407^[REPLACE] hasExp = true;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^foundDigit = false;^1373^1374^^^^1313^1407^[ADD] allowSigns = false; foundDigit = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^hasExp = true  ;^1357^^^^^1313^1407^[REPLACE] hasDecPoint = true;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^foundDigit = false  ;^1349^^^^^1313^1407^[REPLACE] foundDigit = true;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^allowSigns = true;^1350^^^^^1313^1407^[REPLACE] allowSigns = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^}   return false;^1352^1353^^1355^1356^1313^1407^[ADD] else if  ( chars[i] == '.' )  { if  ( hasDecPoint || hasExp )  { return false; }^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^}  else {^1358^^^^^1313^1407^[REPLACE] } else if  ( chars[i] == 'e' || chars[i] == 'E' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^return false;^1370^1371^1372^^^1313^1407^[ADD] if  ( !allowSigns )  { return false; }^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^^1360^1361^1362^1363^^1313^1407^[ADD] if  ( hasExp )  {  return false; }^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REMOVE]^if  ( hasDecPoint || hasExp )  {     return false; }^1360^^^^^1313^1407^[REMOVE] ^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return false;  ;^1365^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if   (  chars[i] == 'e' || chars[i] == 'E'  )   {  ;^1369^^^^^1313^1407^[REPLACE] } else if  ( chars[i] == '+' || chars[i] == '-' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( true )  {^1353^^^^^1313^1407^[REPLACE] if  ( hasDecPoint || hasExp )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^}  if  ( chars[i] == 'e' &&hasDecPoint )  {^1358^^^^^1313^1407^[REPLACE] } else if  ( chars[i] == 'e' || chars[i] == 'E' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^}   return false;^1358^1359^1360^^1362^1313^1407^[ADD] else if  ( chars[i] == 'e' || chars[i] == 'E' )  {  if  ( hasExp )  { return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( foundDigit )  {^1364^^^^^1313^1407^[REPLACE] if  ( !foundDigit )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^}  if  ( chars[i] == '+' ) {^1369^^^^^1313^1407^[REPLACE] } else if  ( chars[i] == '+' || chars[i] == '-' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^^1350^^^^^1313^1407^[ADD] allowSigns = false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^allowSigns = false  ;^1368^^^^^1313^1407^[REPLACE] allowSigns = true;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( i < chars.length /  2 )  {^1380^^^^^1313^1407^[REPLACE] if  ( i < chars.length )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( chars[i] >= '0' || chars[i] <= '9' )  {^1381^^^^^1313^1407^[REPLACE] if  ( chars[i] >= '0' && chars[i] <= '9' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^^1381^1382^1383^1384^^1313^1407^[ADD] if  ( chars[i] >= '0' && chars[i] <= '9' )  {  return true; }^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return false;^1383^^^^^1313^1407^[REPLACE] return true;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^} else if   (  chars[i] == 'e' || chars[i] == 'E'  )   {  ;^1385^^^^^1313^1407^[REPLACE] if  ( chars[i] == 'e' || chars[i] == 'E' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return false;  ;^1387^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( allowSigns &&  ( chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f'^1389^1390^1391^1392^^1313^1407^[REPLACE] if  ( !allowSigns &&  ( chars[i] == 'd' || chars[i] == 'D' || chars[i] == 'f'^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1394^^^^^1389^1395^[REPLACE] return foundDigit;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  (  chars[i] == 'L' )  {^1396^1397^^^^1313^1407^[REPLACE] if  ( chars[i] == 'l' || chars[i] == 'L' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^returntrue ;^1399^^^^^1396^1400^[REPLACE] return foundDigit && !hasExp;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1387^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1394^^^^^1313^1407^[REPLACE] return foundDigit;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return foundDigit ;^1399^^^^^1313^1407^[REPLACE] return foundDigit && !hasExp;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;^1402^^^^^1313^1407^[REPLACE] return false;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( chars[i] >= '0' ||hasExp )  {^1381^^^^^1313^1407^[REPLACE] if  ( chars[i] >= '0' && chars[i] <= '9' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return true;  ;^1383^^^^^1313^1407^[REPLACE] return true;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( chars[i] == 'e' && chars[i] == 'E' )  {^1385^^^^^1313^1407^[REPLACE] if  ( chars[i] == 'e' || chars[i] == 'E' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[ADD]^^1385^1386^1387^1388^^1313^1407^[ADD] if  ( chars[i] == 'e' || chars[i] == 'E' )  {  return false; }^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return foundDigit;  ;^1394^^^^^1389^1395^[REPLACE] return foundDigit;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^if  ( chars[i] == 'l' && chars[i] == 'L' )  {^1396^1397^^^^1313^1407^[REPLACE] if  ( chars[i] == 'l' || chars[i] == 'L' )  {^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return   !hasExp;^1399^^^^^1396^1400^[REPLACE] return foundDigit && !hasExp;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
[REPLACE]^return   foundDigit;^1406^^^^^1313^1407^[REPLACE] return !allowSigns && foundDigit;^[METHOD] isNumber [TYPE] boolean [PARAMETER] String str [CLASS] NumberUtils   [TYPE]  Integer INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  [TYPE]  Float FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  [TYPE]  boolean allowSigns  false  foundDigit  hasDecPoint  hasExp  true  [TYPE]  Byte BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  [TYPE]  Long LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  [TYPE]  String str  [TYPE]  Double DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  [TYPE]  Short SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  [TYPE]  int i  start  sz  [TYPE]  char[] chars 
