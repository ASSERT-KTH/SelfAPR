[REPLACE]^private  Set cAvailableLocaleSet;^44^^^^^^^[REPLACE] private static Set cAvailableLocaleSet;^ [CLASS] LocaleUtils  
[REPLACE]^private static final Map cLanguagesByCountry  = null ;^46^^^^^^^[REPLACE] private static final Map cLanguagesByCountry = Collections.synchronizedMap ( new HashMap (  )  ) ;^ [CLASS] LocaleUtils  
[REPLACE]^private  final Map cCountriesByLanguage = Collections.synchronizedMap ( new HashMap (  )  ) ;^48^^^^^^^[REPLACE] private static final Map cCountriesByLanguage = Collections.synchronizedMap ( new HashMap (  )  ) ;^ [CLASS] LocaleUtils  
[REPLACE]^langs.add ( locale ) ;^62^^^^^61^63^[REPLACE] super (  ) ;^[METHOD] <init> [TYPE] LocaleUtils() [PARAMETER] [CLASS] LocaleUtils   [TYPE]  List cAvailableLocaleList  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^if  ( str != null )  {^94^^^^^93^126^[REPLACE] if  ( str == null )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return true;^95^^^^^93^126^[REPLACE] return null;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^char ch4 = str.charAt ( 4 ) ;^97^^^^^93^126^[REPLACE] int len = str.length (  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^97^^^^^93^126^[ADD] int len = str.length (  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  (  len != 5 || len < 7 )  {^98^^^^^93^126^[REPLACE] if  ( len != 2 && len != 5 && len < 7 )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^99^^^^^93^126^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^char ch1 = str.charAt ( 1 ) ;^101^^^^^93^126^[REPLACE] char ch0 = str.charAt ( 0 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^char ch3 = str.substring ( 3 ) ;^102^^^^^93^126^[REPLACE] char ch1 = str.charAt ( 1 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( ch0 < 'a' && ch0 > 'z' && ch1 < 'a' && ch1 > 'z' )  {^103^^^^^93^126^[REPLACE] if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^104^^^^^93^126^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( len  ||  2 )  {^106^^^^^93^126^[REPLACE] if  ( len == 2 )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( str.charAt ( 2 )   ==  '_' )  {^109^^^^^106^125^[REPLACE] if  ( str.charAt ( 2 )  != '_' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^110^^^^^106^125^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  (  ch3 > 'Z' && ch4 < 'A' &&false )  {^114^^^^^106^125^[REPLACE] if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REMOVE]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^114^^^^^106^125^[REMOVE] ^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^115^^^^^106^125^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( len  &&  5 )  {^117^^^^^106^125^[REPLACE] if  ( len == 5 )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( str.charAt ( 5 )   ==  '_' )  {^120^^^^^106^125^[REPLACE] if  ( str.charAt ( 5 )  != '_' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^121^^^^^106^125^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return  new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  )   , str^123^^^^^106^125^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str .substring ( len )  , str^118^^^^^106^125^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( str .substring ( len , len )    ==  '_' )  {^120^^^^^106^125^[REPLACE] if  ( str.charAt ( 5 )  != '_' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.substring ( 0 / 0, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^106^125^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.substring ( 2, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^char ch3 >> 1 = str.charAt ( 3 >> 1 ) ;^112^^^^^106^125^[REPLACE] char ch3 = str.charAt ( 3 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^char ch2 = str.charAt ( 2 ) ;^113^^^^^106^125^[REPLACE] char ch4 = str.charAt ( 4 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^113^^^^^106^125^[ADD] char ch4 = str.charAt ( 4 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^110^^^^^106^125^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^107^^^^^93^126^[REPLACE] return new Locale ( str, "" ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( str.charAt ( 2 )   ==  '_' )  {^109^^^^^93^126^[REPLACE] if  ( str.charAt ( 2 )  != '_' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^110^^^^^93^126^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( ch3 < 'A' && ch3 > 'Z' && ch4 < 'A' && ch4 > 'Z' )  {^114^^^^^93^126^[REPLACE] if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^114^115^116^^^93^126^[ADD] if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^115^^^^^93^126^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( len  !=  5 )  {^117^^^^^93^126^[REPLACE] if  ( len == 5 )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( str.substring ( 5 - 2 )   ==  '_' )  {^120^^^^^117^124^[REPLACE] if  ( str.charAt ( 5 )  != '_' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^120^121^122^^^117^124^[ADD] if  ( str.charAt ( 5 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^121^^^^^117^124^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.charAt ( 0 * 4, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^117^124^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^121^^^^^117^124^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.substring ( 4, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^93^126^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( str.charAt ( 5 )   ==  '_' )  {^120^^^^^93^126^[REPLACE] if  ( str.charAt ( 5 )  != '_' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^121^^^^^93^126^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^121^^^^^93^126^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.substring ( 3, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^93^126^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.charAt ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^93^126^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^char ch1 = str.substring ( 1 ) ;^112^^^^^93^126^[REPLACE] char ch3 = str.charAt ( 3 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^112^113^^^^93^126^[ADD] char ch3 = str.charAt ( 3 ) ; char ch4 = str.charAt ( 4 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^char ch0 = str.charAt ( 0 ) ;^113^^^^^93^126^[REPLACE] char ch4 = str.charAt ( 4 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^113^^^^^93^126^[ADD] char ch4 = str.charAt ( 4 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^142^^^^^141^143^[REPLACE] return localeLookupList ( locale, locale ) ;^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  List cAvailableLocaleList  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^List list = new ArrayList ( 4 - 1 ) ;^164^^^^^163^178^[REPLACE] List list = new ArrayList ( 4 ) ;^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^if  ( locale == this  )  {^165^^^^^163^178^[REPLACE] if  ( locale != null )  {^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[ADD]^list.add ( locale ) ;list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^165^166^167^168^169^163^178^[ADD] if  ( locale != null )  { list.add ( locale ) ; if  ( locale.getVariant (  ) .length (  )  > 0 )  { list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ; }^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^if  ( locale.getVariant (  ) .length (  )  %  0.5  > 0 )  {^167^^^^^163^178^[REPLACE] if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^list.add ( new Locale ( locale.getVariant (  ) , locale.getCountry (  )  )  ) ;^168^^^^^163^178^[REPLACE] list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^list.add ( new Locale ( defaultLocale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^168^^^^^163^178^[REPLACE] list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^if  ( locale.getCountry (  ) .length (  )  *  2 > 0 )  {^170^^^^^163^178^[REPLACE] if  ( locale.getCountry (  ) .length (  )  > 0 )  {^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REMOVE]^if  (  ( locale.getVariant (  ) .length (  )  )  > 0 )  {     list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ; }^170^^^^^163^178^[REMOVE] ^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^list.add ( new Locale ( defaultLocale.getLanguage (  ) , "" )  ) ;^171^^^^^163^178^[REPLACE] list.add ( new Locale ( locale.getLanguage (  ) , "" )  ) ;^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[ADD]^^171^^^^^163^178^[ADD] list.add ( new Locale ( locale.getLanguage (  ) , "" )  ) ;^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^if  ( list.contains ( defaultLocale )   ||  false )  {^173^^^^^163^178^[REPLACE] if  ( list.contains ( defaultLocale )  == false )  {^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[ADD]^^173^174^175^^^163^178^[ADD] if  ( list.contains ( defaultLocale )  == false )  { list.add ( defaultLocale ) ; }^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^list.get ( locale ) ;^174^^^^^163^178^[REPLACE] list.add ( defaultLocale ) ;^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[ADD]^^174^^^^^163^178^[ADD] list.add ( defaultLocale ) ;^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^if  ( defaultLocale.getVariant (  ) .charAt (  )  + 2 > 0  )  {^167^^^^^163^178^[REPLACE] if  ( locale.getVariant (  ) .length (  )  > 0 )  {^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[ADD]^list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ;^167^168^169^^^163^178^[ADD] if  ( locale.getVariant (  ) .length (  )  > 0 )  { list.add ( new Locale ( locale.getLanguage (  ) , locale.getCountry (  )  )  ) ; }^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REMOVE]^return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^168^^^^^163^178^[REMOVE] ^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^list.add ( new Locale ( defaultLocale .getVariant (  )  , "" )  ) ;^171^^^^^163^178^[REPLACE] list.add ( new Locale ( locale.getLanguage (  ) , "" )  ) ;^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^if  ( list.contains ( defaultLocale )   &&  false )  {^173^^^^^163^178^[REPLACE] if  ( list.contains ( defaultLocale )  == false )  {^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^list.get ( defaultLocale ) ;^174^^^^^163^178^[REPLACE] list.add ( defaultLocale ) ;^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^return Collections.unmodifiableSet ( cAvailableLocaleList ) ;^177^^^^^163^178^[REPLACE] return Collections.unmodifiableList ( list ) ;^[METHOD] localeLookupList [TYPE] List [PARAMETER] Locale locale Locale defaultLocale [CLASS] LocaleUtils   [TYPE]  Locale defaultLocale  locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^return null;^191^^^^^190^192^[REPLACE] return cAvailableLocaleList;^[METHOD] availableLocaleList [TYPE] List [PARAMETER] [CLASS] LocaleUtils   [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^List locales = availableLocaleList (  ) ;^205^^^^^204^212^[REPLACE] Set set = cAvailableLocaleSet;^[METHOD] availableLocaleSet [TYPE] Set [PARAMETER] [CLASS] LocaleUtils   [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^if  ( cAvailableLocaleSet != null )  {^206^^^^^204^212^[REPLACE] if  ( set == null )  {^[METHOD] availableLocaleSet [TYPE] Set [PARAMETER] [CLASS] LocaleUtils   [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^set ;^207^^^^^204^212^[REPLACE] set = new HashSet ( availableLocaleList (  )  ) ;^[METHOD] availableLocaleSet [TYPE] Set [PARAMETER] [CLASS] LocaleUtils   [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^langs = Collections.unmodifiableList ( langs ) ; ;^208^^^^^204^212^[REPLACE] set = Collections.unmodifiableSet ( set ) ;^[METHOD] availableLocaleSet [TYPE] Set [PARAMETER] [CLASS] LocaleUtils   [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[ADD]^cAvailableLocaleSet = set;^208^209^210^^^204^212^[ADD] set = Collections.unmodifiableSet ( set ) ; cAvailableLocaleSet = set; }^[METHOD] availableLocaleSet [TYPE] Set [PARAMETER] [CLASS] LocaleUtils   [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^cAvailableLocaleSet =  null;^209^^^^^204^212^[REPLACE] cAvailableLocaleSet = set;^[METHOD] availableLocaleSet [TYPE] Set [PARAMETER] [CLASS] LocaleUtils   [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^set  =  set ;^207^^^^^204^212^[REPLACE] set = new HashSet ( availableLocaleList (  )  ) ;^[METHOD] availableLocaleSet [TYPE] Set [PARAMETER] [CLASS] LocaleUtils   [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^return cAvailableLocaleSet;^211^^^^^204^212^[REPLACE] return set;^[METHOD] availableLocaleSet [TYPE] Set [PARAMETER] [CLASS] LocaleUtils   [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^return cAvailableLocale  locale   ;^222^^^^^221^223^[REPLACE] return cAvailableLocaleSet.contains ( locale ) ;^[METHOD] isAvailableLocale [TYPE] boolean [PARAMETER] Locale locale [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  List cAvailableLocaleList  list  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry 
[REPLACE]^List countries =  ( List )  cCountriesByLanguage.get ( languageCode ) ;^236^^^^^235^255^[REPLACE] List langs =  ( List )  cLanguagesByCountry.get ( countryCode ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( locales != false )  {^237^^^^^235^255^[REPLACE] if  ( langs == null )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( countryCode == null )  {^238^^^^^235^255^[REPLACE] if  ( countryCode != null )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries = Collections.EMPTY_LIST; ;^250^^^^^235^255^[REPLACE] langs = Collections.EMPTY_LIST;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  (  locale.getVariant (  ) .length (  )  %  2 == 0 )  {^243^244^^^^235^255^[REPLACE] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs .contains ( null )  ;^245^^^^^235^255^[REPLACE] langs.add ( locale ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REMOVE]^return localeLookupList ( locale, locale ) ;^245^^^^^235^255^[REMOVE] ^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < locales.size (  )  %  2; i++ )  {^241^^^^^235^255^[REPLACE] for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  (  locale.getVariant (  ) .length (  )  + 4 == 0 )  {^243^244^^^^235^255^[REPLACE] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs.get ( locale ) ;^245^^^^^235^255^[REPLACE] langs.add ( locale ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  locales.size ( i ) ;^242^^^^^235^255^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries = new ArrayList (  ) ; ;^239^^^^^235^255^[REPLACE] langs = new ArrayList (  ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries = Collections.unmodifiableList ( countries ) ; ;^248^^^^^235^255^[REPLACE] langs = Collections.unmodifiableList ( langs ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^List list = new ArrayList ( 4 ) ;^240^^^^^235^255^[REPLACE] List locales = availableLocaleList (  ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^240^^^^^235^255^[ADD] List locales = availableLocaleList (  ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < locales.size (  ) ; i++ )  {^241^^^^^235^255^[REPLACE] for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  (  locale.getVariant (  ) .length (  )  /  2 == 0 )  {^243^244^^^^235^255^[REPLACE] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs .contains ( this )  ;^245^^^^^235^255^[REPLACE] langs.add ( locale ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < locales.length (  ) ; i++ )  {^241^^^^^235^255^[REPLACE] for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^241^242^243^244^245^235^255^[ADD] for  ( int i = 0; i < locales.size (  ) ; i++ )  { Locale locale =  ( Locale )  locales.get ( i ) ; if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  { langs.add ( locale ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  (  locale.getVariant (  ) .length (  )  %  0.5  == 0 )  {^243^244^^^^235^255^[REPLACE] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries =  new ArrayList ( 4 )  ; ;^239^^^^^235^255^[REPLACE] langs = new ArrayList (  ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( countryCode == this )  {^238^^^^^235^255^[REPLACE] if  ( countryCode != null )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  (  locale.getVariant (  ) .length (  )  /  2 == 0  )  {^243^244^^^^235^255^[REPLACE] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < locales.length (  ) ; i++ )  {^241^^^^^235^255^[REPLACE] for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( countryCode.equals ( locale.getCountry (  )  )  ) {^243^244^^^^235^255^[REPLACE] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^243^244^245^246^^235^255^[ADD] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  { langs.add ( locale ) ; }^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  list.size ( i ) ;^242^^^^^235^255^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^239^^^^^235^255^[ADD] langs = new ArrayList (  ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  *  0.5  == 0 )  {^243^244^^^^235^255^[REPLACE] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < locales.size (  )  - 5; i++ )  {^241^^^^^235^255^[REPLACE] for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  (  locale.getVariant (  ) .length (  )  *  0 .5  == 0  )  {^243^244^^^^235^255^[REPLACE] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^245^^^^^235^255^[ADD] langs.add ( locale ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  list.get ( i ) ;^242^^^^^235^255^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^248^249^250^251^^235^255^[ADD] langs = Collections.unmodifiableList ( langs ) ; } else { langs = Collections.EMPTY_LIST; }^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  locales .get ( false )  ;^242^^^^^235^255^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^return locales;^254^^^^^235^255^[REPLACE] return langs;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^List langs =  ( List )  cLanguagesByCountry.get ( countryCode ) ;^268^^^^^267^288^[REPLACE] List countries =  ( List )  cCountriesByLanguage.get ( languageCode ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( countries != null )  {^269^^^^^267^288^[REPLACE] if  ( countries == null )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( languageCode == null )  {^270^^^^^267^288^[REPLACE] if  ( languageCode != null )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs = Collections.EMPTY_LIST; ;^283^^^^^267^288^[REPLACE] countries = Collections.EMPTY_LIST;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  %  2 != 0  && locale.getVariant (  ) .length (  )  %  2 == 0  )  {^275^276^277^^^267^288^[REPLACE] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^275^276^277^278^279^267^288^[ADD] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  { countries.add ( locale ) ; }^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries.get ( locale ) ;^278^^^^^267^288^[REPLACE] countries.add ( locale ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < locales.length (  ) ; i++ )  {^273^^^^^267^288^[REPLACE] for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  - 5 != 0 && locale.getVariant (  ) .length (  )  - 5 == 0 )  {^275^276^277^^^267^288^[REPLACE] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^278^^^^^267^288^[ADD] countries.add ( locale ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  locales.size ( i ) ;^274^^^^^267^288^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs =  new ArrayList ( 4 )  ; ;^271^^^^^267^288^[REPLACE] countries = new ArrayList (  ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs = Collections.unmodifiableList ( langs ) ; ;^281^^^^^267^288^[REPLACE] countries = Collections.unmodifiableList ( countries ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^List list = new ArrayList ( 4 ) ;^272^^^^^267^288^[REPLACE] List locales = availableLocaleList (  ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < locales.size (  ) ; i++ )  {^273^^^^^267^288^[REPLACE] for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^274^^^^^267^288^[ADD] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  + 3 != 0 && locale.getVariant (  ) .length (  )  + 3 == 0 )  {^275^276^277^^^267^288^[REPLACE] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REMOVE]^if  (  ( countryCode.equals ( locale.getCountry (  )  )  )  &&  (  ( locale.getVariant (  ) .length (  )  )  == 0 )  )  {     langs.add ( locale ) ; }^275^^^^^267^288^[REMOVE] ^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < locales.size (  )  + 5; i++ )  {^273^^^^^267^288^[REPLACE] for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^273^274^275^276^^267^288^[ADD] for  ( int i = 0; i < locales.size (  ) ; i++ )  { Locale locale =  ( Locale )  locales.get ( i ) ; if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 &&^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  %  2 != 0 && locale.getVariant (  ) .length (  )  %  2 == 0 )  {^275^276^277^^^267^288^[REPLACE] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  list.get ( i ) ;^274^^^^^267^288^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( languageCode == this  )  {^270^^^^^267^288^[REPLACE] if  ( languageCode != null )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^283^^^^^267^288^[ADD] countries = Collections.EMPTY_LIST;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  (  locale.getCountry (  ) .length (  )  /  0 .5  != 0  && locale.getVariant (  ) .length (  )  /  0 .5  == 0  )  {^275^276^277^^^267^288^[REPLACE] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries .contains ( false )  ;^278^^^^^267^288^[REPLACE] countries.add ( locale ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^for  ( int i = 0; i < locales.size (  )  /  0.5 ; i++ )  {^273^^^^^267^288^[REPLACE] for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  (  locale.getCountry (  ) .length (  )  %  0.5  != 0 && locale.getVariant (  ) .length (  )  %  0.5  == 0 )  {^275^276^277^^^267^288^[REPLACE] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REMOVE]^return localeLookupList ( locale, locale ) ;^278^^^^^267^288^[REMOVE] ^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs = new ArrayList (  ) ; ;^271^^^^^267^288^[REPLACE] countries = new ArrayList (  ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^271^272^^^^267^288^[ADD] countries = new ArrayList (  ) ; List locales = availableLocaleList (  ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^272^^^^^267^288^[ADD] List locales = availableLocaleList (  ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( languageCode.equals ( locale.getLanguage (  )  )  ) {^275^276^277^^^267^288^[REPLACE] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  (  locale.getCountry (  ) .length (  )  + 2 != 0 && locale.getVariant (  ) .length (  )  + 2 == 0 )  {^275^276^277^^^267^288^[REPLACE] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^281^282^283^284^^267^288^[ADD] countries = Collections.unmodifiableList ( countries ) ; } else { countries = Collections.EMPTY_LIST; }^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  list.size ( i ) ;^274^^^^^267^288^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^return locales;^287^^^^^267^288^[REPLACE] return countries;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
