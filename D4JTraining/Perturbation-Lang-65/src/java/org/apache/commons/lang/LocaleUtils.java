[REPLACE]^private  final List cAvailableLocaleList;^42^^^^^^^[REPLACE] private static final List cAvailableLocaleList;^ [CLASS] LocaleUtils  
[REPLACE]^private static final Map cLanguagesByCountry  = null ;^46^^^^^^^[REPLACE] private static final Map cLanguagesByCountry = Collections.synchronizedMap ( new HashMap (  )  ) ;^ [CLASS] LocaleUtils  
[REPLACE]^private static final Map cCountriesByLanguage  = null ;^48^^^^^^^[REPLACE] private static final Map cCountriesByLanguage = Collections.synchronizedMap ( new HashMap (  )  ) ;^ [CLASS] LocaleUtils  
[REPLACE]^if  ( str != this )  {^94^^^^^93^126^[REPLACE] if  ( str == null )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^return null;^94^95^96^^^93^126^[ADD] if  ( str == null )  { return null; }^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return false;^95^^^^^93^126^[REPLACE] return null;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return this;^95^^^^^93^126^[REPLACE] return null;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^int len = str .substring ( len , len )  ;^97^^^^^93^126^[REPLACE] int len = str.length (  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( len != 2 || len != 5 || len < 7 )  {^98^^^^^93^126^[REPLACE] if  ( len != 2 && len != 5 && len < 7 )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^98^99^100^^^93^126^[ADD] if  ( len != 2 && len != 5 && len < 7 )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^99^^^^^93^126^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^char ch4 = str.charAt ( 4 )  ;^101^^^^^93^126^[REPLACE] char ch0 = str.charAt ( 0 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^102^^^^^93^126^[ADD] char ch1 = str.charAt ( 1 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( ch0 < 'a' ) {^103^^^^^93^126^[REPLACE] if  ( ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^104^^^^^93^126^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^104^^^^^93^126^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( len  ||  2 )  {^106^^^^^93^126^[REPLACE] if  ( len == 2 )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^106^107^108^109^110^93^126^[ADD] if  ( len == 2 )  { return new Locale ( str, "" ) ; } else { if  ( str.charAt ( 2 )  != '_' )  { throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( str.charAt ( 2 )   ==  '_' )  {^109^^^^^106^125^[REPLACE] if  ( str.charAt ( 2 )  != '_' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^109^110^111^^^106^125^[ADD] if  ( str.charAt ( 2 )  != '_' )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^110^^^^^106^125^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if   (  ch0 < 'a' || ch0 > 'z' || ch1 < 'a' || ch1 > 'z'  )   {  ;^114^^^^^106^125^[REPLACE] if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REMOVE]^if  (  ( str.charAt ( 5 )  )  != '_' )  {     throw new IllegalArgumentException (  ( "Invalid locale format: " + str )  ) ; }^114^^^^^106^125^[REMOVE] ^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^115^^^^^106^125^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( len  ) {^117^^^^^106^125^[REPLACE] if  ( len == 5 )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( str.substring ( 5 )   ==  '_' )  {^120^^^^^117^124^[REPLACE] if  ( str.charAt ( 5 )  != '_' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return  new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  )  , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^117^124^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^121^^^^^117^124^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.substring ( 0L, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^106^125^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( str.substring ( 4 )   ==  '_' )  {^120^^^^^106^125^[REPLACE] if  ( str.charAt ( 5 )  != '_' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^121^^^^^106^125^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.substring ( 0 + 1, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^106^125^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.substring ( 0 >>> 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^106^125^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^char ch3L = str.charAt ( 3L ) ;^112^^^^^106^125^[REPLACE] char ch3 = str.charAt ( 3 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^char ch3 = str.substring ( 3 ) ;^113^^^^^106^125^[REPLACE] char ch4 = str.charAt ( 4 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^110^^^^^106^125^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^121^^^^^106^125^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale  (  str.substring  (  0, 2  )  , str.substring  (  3, 5  )    )  ;  ;^107^^^^^93^126^[REPLACE] return new Locale ( str, "" ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( str.substring ( 4 )   ==  '_' )  {^109^^^^^93^126^[REPLACE] if  ( str.charAt ( 2 )  != '_' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^110^^^^^93^126^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  (  ch3 > 'Z' && ch3 < 'A' && ch4 > 'Z' )  {^114^^^^^93^126^[REPLACE] if  ( ch3 < 'A' || ch3 > 'Z' || ch4 < 'A' || ch4 > 'Z' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^115^^^^^93^126^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( len  ||  5 )  {^117^^^^^93^126^[REPLACE] if  ( len == 5 )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^117^118^119^120^121^93^126^[ADD] if  ( len == 5 )  { return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ; } else { if  ( str.charAt ( 5 )  != '_' )  { throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if  ( str .substring ( len , len )    ==  '_' )  {^120^^^^^117^124^[REPLACE] if  ( str.charAt ( 5 )  != '_' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.substring ( 1, 2 ) , str.substring ( 3, 5 )  ) ;^118^^^^^93^126^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^if   (  str.charAt  (  2  )   != '_'  )   {  ;^120^^^^^93^126^[REPLACE] if  ( str.charAt ( 5 )  != '_' )  {^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^121^^^^^93^126^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return  new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  )  , str.substring ( 3, 5 )  ) ;^118^^^^^93^126^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return new Locale ( str.substring ( 0 % 3, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^123^^^^^93^126^[REPLACE] return new Locale ( str.substring ( 0, 2 ) , str.substring ( 3, 5 ) , str.substring ( 6 )  ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^112^113^^^^93^126^[ADD] char ch3 = str.charAt ( 3 ) ; char ch4 = str.charAt ( 4 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^char ch1 = str.charAt ( 1 )  ;^113^^^^^93^126^[REPLACE] char ch4 = str.charAt ( 4 ) ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[REPLACE]^return ;^110^^^^^93^126^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] toLocale [TYPE] Locale [PARAMETER] String str [CLASS] LocaleUtils   [TYPE]  Set cAvailableLocaleSet  [TYPE]  boolean false  true  [TYPE]  char ch0  ch1  ch3  ch4  [TYPE]  List cAvailableLocaleList  [TYPE]  String str  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int len 
[ADD]^^236^^^^^235^255^[ADD] List langs =  ( List )  cLanguagesByCountry.get ( countryCode ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( langs != null )  {^237^^^^^235^255^[REPLACE] if  ( langs == null )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^237^238^239^240^^235^255^[ADD] if  ( langs == null )  { if  ( countryCode != null )  { langs = new ArrayList (  ) ; List locales = availableLocaleList (  ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( countryCode == this  )  {^238^^^^^235^255^[REPLACE] if  ( countryCode != null )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries = EMPTY_LIST  ;^250^^^^^238^251^[REPLACE] langs = Collections.EMPTY_LIST;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( countryCode.equals ( locale.getCountry (  )  )  ) {^243^244^^^^235^255^[REPLACE] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs .contains ( null )  ;^245^^^^^243^246^[REPLACE] langs.add ( locale ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries = new ArrayList (  )  ;^239^^^^^235^255^[REPLACE] langs = new ArrayList (  ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries = unmodifiableList ( countries )  ;^248^^^^^235^255^[REPLACE] langs = Collections.unmodifiableList ( langs ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Set set = cAvailableLocaleSet  ;^240^^^^^235^255^[REPLACE] List locales = availableLocaleList (  ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < locales.size (  ) ; i++ )  {^241^^^^^235^255^[REPLACE] for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  locales.size ( i ) ;^242^^^^^235^255^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( countryCode.substring ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  + 3 == 0 )  {^243^244^^^^235^255^[REPLACE] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries.add ( locale )  ;^245^^^^^243^246^[REPLACE] langs.add ( locale ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries = EMPTY_LIST  ;^250^^^^^235^255^[REPLACE] langs = Collections.EMPTY_LIST;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  list .get ( null )  ;^242^^^^^235^255^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( countryCode == null )  {^238^^^^^235^255^[REPLACE] if  ( countryCode != null )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^250^^^^^238^251^[ADD] langs = Collections.EMPTY_LIST;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( countryCode.substring ( locale.getCountry (  )  )  && locale.getVariant (  ) .size (  )  == 0  )  {^243^244^^^^235^255^[REPLACE] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^243^244^245^246^^235^255^[ADD] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  { langs.add ( locale ) ; }^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^245^^^^^243^246^[ADD] langs.add ( locale ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs = EMPTY_LIST  ;^248^^^^^235^255^[REPLACE] langs = Collections.unmodifiableList ( langs ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  list.get ( i ) ;^242^^^^^235^255^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .charAt (  )  /  0.5  == 0 )  {^243^244^^^^235^255^[REPLACE] if  ( countryCode.equals ( locale.getCountry (  )  )  && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^242^^^^^235^255^[ADD] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^return locales;^254^^^^^235^255^[REPLACE] return langs;^[METHOD] languagesByCountry [TYPE] List [PARAMETER] String countryCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  langs  list  locales  [TYPE]  String countryCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^List countries =  ( List )  cCountriesByLanguage .get ( this )  ;^268^^^^^267^288^[REPLACE] List countries =  ( List )  cCountriesByLanguage.get ( languageCode ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( countries != false )  {^269^^^^^267^288^[REPLACE] if  ( countries == null )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^269^270^271^272^^267^288^[ADD] if  ( countries == null )  { if  ( languageCode != null )  { countries = new ArrayList (  ) ; List locales = availableLocaleList (  ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( languageCode == null )  {^270^^^^^267^288^[REPLACE] if  ( languageCode != null )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs = EMPTY_LIST  ;^283^^^^^270^284^[REPLACE] countries = Collections.EMPTY_LIST;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale .getVariant (  )  .length (  )  - 2 != 0  && locale.getVariant (  ) .length (  )  - 2 == 0  )  {^275^276^277^^^267^288^[REPLACE] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs.add ( locale )  ;^278^^^^^275^279^[REPLACE] countries.add ( locale ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^271^^^^^267^288^[ADD] countries = new ArrayList (  ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs = unmodifiableList ( langs )  ;^281^^^^^267^288^[REPLACE] countries = Collections.unmodifiableList ( countries ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Set set = cAvailableLocaleSet  ;^272^^^^^267^288^[REPLACE] List locales = availableLocaleList (  ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^273^274^275^276^^267^288^[ADD] for  ( int i = 0; i < locales.size (  ) ; i++ )  { Locale locale =  ( Locale )  locales.get ( i ) ; if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 &&^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  locales.size ( i ) ;^274^^^^^267^288^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( languageCode.equals ( locale.getLanguage (  )  )  ) {^275^276^277^^^267^288^[REPLACE] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^275^276^277^278^279^267^288^[ADD] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  { countries.add ( locale ) ; }^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries .contains ( false )  ;^278^^^^^275^279^[REPLACE] countries.add ( locale ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^List locales = availableLocaleList (  ) ;^271^272^^^^267^288^[ADD] countries = new ArrayList (  ) ; List locales = availableLocaleList (  ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs = EMPTY_LIST  ;^283^^^^^267^288^[REPLACE] countries = Collections.EMPTY_LIST;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^for  ( int i = 0 ; i < locales.size (  ) ; i++ )  {^273^^^^^267^288^[REPLACE] for  ( int i = 0; i < locales.size (  ) ; i++ )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  list.get ( i ) ;^274^^^^^267^288^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( languageCode == false )  {^270^^^^^267^288^[REPLACE] if  ( languageCode != null )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  (  locale.getCountry (  ) .length (  )  + 1 != 0 && locale.getVariant (  ) .length (  )  + 1 == 0 )  {^275^276^277^^^267^288^[REPLACE] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^278^^^^^275^279^[ADD] countries.add ( locale ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^langs = new ArrayList (  )  ;^271^^^^^267^288^[REPLACE] countries = new ArrayList (  ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^274^^^^^267^288^[ADD] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .size (  )  != 0  && locale.getVariant (  ) .size (  )  == 0  )  {^275^276^277^^^267^288^[REPLACE] if  ( languageCode.equals ( locale.getLanguage (  )  )  && locale.getCountry (  ) .length (  )  != 0 && locale.getVariant (  ) .length (  )  == 0 )  {^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^countries.get ( locale ) ;^278^^^^^275^279^[REPLACE] countries.add ( locale ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[ADD]^^281^282^283^284^^267^288^[ADD] countries = Collections.unmodifiableList ( countries ) ; } else { countries = Collections.EMPTY_LIST; }^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^Locale locale =  ( Locale )  list.size ( i ) ;^274^^^^^267^288^[REPLACE] Locale locale =  ( Locale )  locales.get ( i ) ;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
[REPLACE]^return countries;  ;^287^^^^^267^288^[REPLACE] return countries;^[METHOD] countriesByLanguage [TYPE] List [PARAMETER] String languageCode [CLASS] LocaleUtils   [TYPE]  Locale locale  [TYPE]  Set cAvailableLocaleSet  set  [TYPE]  boolean false  true  [TYPE]  List cAvailableLocaleList  countries  langs  list  locales  [TYPE]  String languageCode  [TYPE]  Map cCountriesByLanguage  cLanguagesByCountry  [TYPE]  int i 
