[REPLACE]^public static final CalendarSerializer instance  = null ;^21^^^^^^^[REPLACE] public static final CalendarSerializer instance = new CalendarSerializer (  ) ;^ [CLASS] CalendarSerializer  
[REPLACE]^public CalendarSerializer (  )  { this ( true, null ) ; }^23^^^^^^^[REPLACE] public CalendarSerializer (  )  { this ( false, null ) ; }^[METHOD] <init> [TYPE] CalendarSerializer() [PARAMETER] [CLASS] CalendarSerializer   [TYPE]  CalendarSerializer instance  [TYPE]  boolean false  true 
[REPLACE]^public CalendarSerializer (  )  { this ( false, null ) ; }^26^^^^^25^27^[REPLACE] super ( Calendar.class, useTimestamp, customFormat ) ;^[METHOD] <init> [TYPE] DateFormat) [PARAMETER] boolean useTimestamp DateFormat customFormat [CLASS] CalendarSerializer   [TYPE]  CalendarSerializer instance  [TYPE]  boolean false  true  useTimestamp  [TYPE]  DateFormat customFormat 
[REPLACE]^if  ( true )  {^32^^^^^30^36^[REPLACE] if  ( timestamp )  {^[METHOD] withFormat [TYPE] CalendarSerializer [PARAMETER] boolean timestamp DateFormat customFormat [CLASS] CalendarSerializer   [TYPE]  CalendarSerializer instance  [TYPE]  boolean false  timestamp  true  [TYPE]  DateFormat customFormat 
[REPLACE]^return  new CalendarSerializer ( false, customFormat )  ;^33^^^^^30^36^[REPLACE] return new CalendarSerializer ( true, null ) ;^[METHOD] withFormat [TYPE] CalendarSerializer [PARAMETER] boolean timestamp DateFormat customFormat [CLASS] CalendarSerializer   [TYPE]  CalendarSerializer instance  [TYPE]  boolean false  timestamp  true  [TYPE]  DateFormat customFormat 
[REPLACE]^return new CalendarSerializer ( false, null ) ;^33^^^^^30^36^[REPLACE] return new CalendarSerializer ( true, null ) ;^[METHOD] withFormat [TYPE] CalendarSerializer [PARAMETER] boolean timestamp DateFormat customFormat [CLASS] CalendarSerializer   [TYPE]  CalendarSerializer instance  [TYPE]  boolean false  timestamp  true  [TYPE]  DateFormat customFormat 
[REPLACE]^return new CalendarSerializer ( true, customFormat ) ;^35^^^^^30^36^[REPLACE] return new CalendarSerializer ( false, customFormat ) ;^[METHOD] withFormat [TYPE] CalendarSerializer [PARAMETER] boolean timestamp DateFormat customFormat [CLASS] CalendarSerializer   [TYPE]  CalendarSerializer instance  [TYPE]  boolean false  timestamp  true  [TYPE]  DateFormat customFormat 
[REPLACE]^return  ( value == null )  ? 0L : value.getTime (  ) ;^40^^^^^39^41^[REPLACE] return  ( value == null )  ? 0L : value.getTimeInMillis (  ) ;^[METHOD] _timestamp [TYPE] long [PARAMETER] Calendar value [CLASS] CalendarSerializer   [TYPE]  CalendarSerializer instance  [TYPE]  Calendar value  [TYPE]  boolean false  true 
[REPLACE]^if  ( timestamp )  {^47^^^^^44^57^[REPLACE] if  ( _useTimestamp )  {^[METHOD] serialize [TYPE] void [PARAMETER] Calendar value JsonGenerator jgen SerializerProvider provider [CLASS] CalendarSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  CalendarSerializer instance  [TYPE]  Calendar value 
[REPLACE]^}  if  ( _customFormat ==instance )  {^49^^^^^44^57^[REPLACE] } else if  ( _customFormat != null )  {^[METHOD] serialize [TYPE] void [PARAMETER] Calendar value JsonGenerator jgen SerializerProvider provider [CLASS] CalendarSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  CalendarSerializer instance  [TYPE]  Calendar value 
[REPLACE]^provider.defaultSerializeDateValue ( value.getTimeInMillis (  ) , jgen ) ;^55^^^^^44^57^[REPLACE] provider.defaultSerializeDateValue ( value.getTime (  ) , jgen ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Calendar value JsonGenerator jgen SerializerProvider provider [CLASS] CalendarSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  CalendarSerializer instance  [TYPE]  Calendar value 
[ADD]^^55^^^^^44^57^[ADD] provider.defaultSerializeDateValue ( value.getTime (  ) , jgen ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Calendar value JsonGenerator jgen SerializerProvider provider [CLASS] CalendarSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  CalendarSerializer instance  [TYPE]  Calendar value 
[REPLACE]^jgen.writeString (   value    ) ;^52^^^^^44^57^[REPLACE] jgen.writeString ( _customFormat.format ( value )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Calendar value JsonGenerator jgen SerializerProvider provider [CLASS] CalendarSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  CalendarSerializer instance  [TYPE]  Calendar value 
[REPLACE]^jgen.writeString ( _customFormat.format ( value )  ) ;^48^^^^^44^57^[REPLACE] jgen.writeNumber ( _timestamp ( value )  ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Calendar value JsonGenerator jgen SerializerProvider provider [CLASS] CalendarSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  CalendarSerializer instance  [TYPE]  Calendar value 
[REPLACE]^} else if  (instance == null )  {^49^^^^^44^57^[REPLACE] } else if  ( _customFormat != null )  {^[METHOD] serialize [TYPE] void [PARAMETER] Calendar value JsonGenerator jgen SerializerProvider provider [CLASS] CalendarSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  CalendarSerializer instance  [TYPE]  Calendar value 
[ADD]^}   jgen.writeString ( _customFormat.format ( value )  ) ;^49^50^51^52^53^44^57^[ADD] else if  ( _customFormat != null )  {  synchronized  ( _customFormat )  { jgen.writeString ( _customFormat.format ( value )  ) ; }^[METHOD] serialize [TYPE] void [PARAMETER] Calendar value JsonGenerator jgen SerializerProvider provider [CLASS] CalendarSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  CalendarSerializer instance  [TYPE]  Calendar value 
[REPLACE]^provider.defaultSerializeDateValue ( value .getTimeInMillis (  )  , jgen ) ;^55^^^^^44^57^[REPLACE] provider.defaultSerializeDateValue ( value.getTime (  ) , jgen ) ;^[METHOD] serialize [TYPE] void [PARAMETER] Calendar value JsonGenerator jgen SerializerProvider provider [CLASS] CalendarSerializer   [TYPE]  JsonGenerator jgen  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider  [TYPE]  CalendarSerializer instance  [TYPE]  Calendar value 
