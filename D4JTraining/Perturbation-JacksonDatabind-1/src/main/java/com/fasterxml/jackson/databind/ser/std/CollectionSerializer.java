[REPLACE]^if  ( _elementSerializer == null )  {^86^^^^^85^128^[REPLACE] if  ( _elementSerializer != null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^86^87^88^89^^85^128^[ADD] if  ( _elementSerializer != null )  { serializeContentsUsing ( value, jgen, provider, _elementSerializer ) ; return; }^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^return;  ;^88^^^^^85^128^[REPLACE] return;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Iterator<?> it = value.isEmpty (  ) ;^90^^^^^85^128^[REPLACE] Iterator<?> it = value.iterator (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if   (  it.hasNext  (    )    )   {  ;^91^^^^^85^128^[REPLACE] if  ( !it.hasNext (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^return;  ;^92^^^^^85^128^[REPLACE] return;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^final TypeSerializer typeSer = _valueTypeSerializer  ;^94^^^^^85^128^[REPLACE] PropertySerializerMap serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^95^^^^^85^128^[ADD] final TypeSerializer typeSer = _valueTypeSerializer;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^int i = 3;^97^^^^^85^128^[REPLACE] int i = 0;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( elem != true )  {^101^^^^^85^128^[REPLACE] if  ( elem == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( serializer != null )  {^106^^^^^101^121^[REPLACE] if  ( serializer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^106^107^108^109^110^101^121^[ADD] if  ( serializer == null )  {  if  ( _elementType.hasGenericTypes (  )  )  { serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if   (  serializer == null  )   {  ;^108^^^^^101^121^[REPLACE] if  ( _elementType.hasGenericTypes (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer =  _findAndAddDynamic ( null, cc, provider ) ;^112^^^^^108^113^[REPLACE] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer =  _findAndAddDynamic ( null, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^109^110^^^^101^121^[REPLACE] serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^112^^^^^101^121^[ADD] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^114^^^^^101^121^[ADD] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^112^^^^^108^113^[ADD] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^109^110^^^^101^121^[ADD] serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != null )  {^116^^^^^101^121^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer.serialize ( elem, jgen, provider )  ;^119^^^^^116^120^[REPLACE] serializer.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^ser.serialize ( elem, jgen, provider )  ;^117^^^^^101^121^[REPLACE] serializer.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^117^^^^^101^121^[ADD] serializer.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer =  _findAndAddDynamic ( null, cc, provider ) ;^112^^^^^101^121^[REPLACE] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializers  =  serializers ;^114^^^^^101^121^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Class<?> cc = elem.Object (  ) ;^104^^^^^101^121^[REPLACE] Class<?> cc = elem.getClass (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^final TypeSerializer typeSer = _valueTypeSerializer  ;^105^^^^^101^121^[REPLACE] JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^provider .constructSpecializedType ( null )  ;^102^^^^^85^128^[REPLACE] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( serializer != null )  {^106^^^^^85^128^[REPLACE] if  ( serializer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^106^107^108^109^110^85^128^[ADD] if  ( serializer == null )  {  if  ( _elementType.hasGenericTypes (  )  )  { serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if   (  serializer == null  )   {  ;^108^^^^^85^128^[REPLACE] if  ( _elementType.hasGenericTypes (  )  )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer =  _findAndAddDynamic ( null, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^109^110^^^^85^128^[REPLACE] serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer =  _findAndAddDynamic ( null, cc, provider ) ;^112^^^^^85^128^[REPLACE] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializers ;^114^^^^^85^128^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != false )  {^116^^^^^85^128^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^ser.serialize ( elem, jgen, provider )  ;^117^^^^^85^128^[REPLACE] serializer.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^Object elem = it.next (  ) ;provider.defaultSerializeNull ( jgen ) ;^98^99^100^101^102^85^128^[ADD] try { do { Object elem = it.next (  ) ; if  ( elem == null )  { provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( elem != null )  {^101^^^^^85^128^[REPLACE] if  ( elem == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^provider.defaultSerializeNull ( jgen ) ;Class<?> cc = elem.getClass (  ) ;JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^101^102^103^104^105^85^128^[ADD] if  ( elem == null )  { provider.defaultSerializeNull ( jgen ) ; } else { Class<?> cc = elem.getClass (  ) ; JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializers ;^114^^^^^101^121^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^108^109^110^111^112^101^121^[ADD] if  ( _elementType.hasGenericTypes (  )  )  { serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ; } else { serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != true )  {^116^^^^^101^121^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializers  = null ;^114^^^^^101^121^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^provider.constructSpecializedType ( jgen ) ;^102^^^^^85^128^[REPLACE] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^109^110^^^^85^128^[ADD] serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^112^^^^^85^128^[ADD] serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializers  =  serializers ;^114^^^^^85^128^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^108^109^110^111^112^85^128^[ADD] if  ( _elementType.hasGenericTypes (  )  )  { serializer = _findAndAddDynamic ( serializers, provider.constructSpecializedType ( _elementType, cc ) , provider ) ; } else { serializer = _findAndAddDynamic ( serializers, cc, provider ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != this )  {^116^^^^^85^128^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^serializer.serialize ( elem, jgen, provider ) ;serializer.serializeWithType ( elem, jgen, provider, typeSer ) ;^116^117^118^119^120^85^128^[ADD] if  ( typeSer == null )  { serializer.serialize ( elem, jgen, provider ) ; } else { serializer.serializeWithType ( elem, jgen, provider, typeSer ) ; }^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer .serialize ( elem , jgen , provider )  ;^119^^^^^116^120^[REPLACE] serializer.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializers  = null ;^114^^^^^85^128^[REPLACE] serializers = _dynamicSerializers;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Object elem = false .hasNext (  )  ;^100^^^^^85^128^[REPLACE] Object elem = it.next (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Class<?> cc = elem.Object (  ) ;^104^^^^^85^128^[REPLACE] Class<?> cc = elem.getClass (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^105^^^^^85^128^[ADD] JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Object elem = it.hasNext (  ) ;^100^^^^^85^128^[REPLACE] Object elem = it.next (  ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^JsonSerializer<Object> serializer = serializers.serializerFor ( this ) ;^105^^^^^85^128^[REPLACE] JsonSerializer<Object> serializer = serializers.serializerFor ( cc ) ;^[METHOD] serializeContents [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap serializers  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  Class cc  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Iterator<?> it = null .isEmpty ( true )  ;^134^^^^^133^157^[REPLACE] Iterator<?> it = value.iterator (  ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if   (  !it.hasNext  (    )    )   {  ;^135^^^^^133^157^[REPLACE] if  ( it.hasNext (  )  )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( elem != null )  {^141^^^^^133^157^[REPLACE] if  ( elem == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^provider.defaultSerializeNull ( jgen ) ;ser.serialize ( elem, jgen, provider ) ;^141^142^143^144^145^133^157^[ADD] if  ( elem == null )  { provider.defaultSerializeNull ( jgen ) ; } else { if  ( typeSer == null )  { ser.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != null )  {^144^^^^^141^149^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^provider.constructSpecializedType ( jgen ) ;^142^^^^^133^157^[REPLACE] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != this )  {^144^^^^^133^157^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^144^145^146^147^148^133^157^[ADD] if  ( typeSer == null )  { ser.serialize ( elem, jgen, provider ) ; } else { ser.serializeWithType ( elem, jgen, provider, typeSer ) ; }^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^ser.serialize ( elem, jgen, provider )  ;^147^^^^^144^148^[REPLACE] ser.serializeWithType ( elem, jgen, provider, typeSer ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^serializer.serialize ( elem, jgen, provider )  ;^145^^^^^133^157^[REPLACE] ser.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^provider.defaultSerializeNull ( jgen ) ;^140^141^142^143^144^133^157^[ADD] try { if  ( elem == null )  { provider.defaultSerializeNull ( jgen ) ; } else { if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if   (  elem == null  )   {  ;^144^^^^^141^149^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^142^^^^^133^157^[ADD] provider.defaultSerializeNull ( jgen ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != null )  {^144^^^^^133^157^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^final TypeSerializer typeSer = _valueTypeSerializer  ;^136^^^^^133^157^[REPLACE] TypeSerializer typeSer = _valueTypeSerializer;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^int i = 0 - 3;^137^^^^^133^157^[REPLACE] int i = 0;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^139^^^^^133^157^[ADD] Object elem = it.next (  ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != this )  {^144^^^^^141^149^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^ser.serialize ( elem, jgen, provider ) ;ser.serializeWithType ( elem, jgen, provider, typeSer ) ;^144^145^146^147^148^141^149^[ADD] if  ( typeSer == null )  { ser.serialize ( elem, jgen, provider ) ; } else { ser.serializeWithType ( elem, jgen, provider, typeSer ) ; }^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != true )  {^144^^^^^133^157^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^^145^^^^^133^157^[ADD] ser.serialize ( elem, jgen, provider ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^if  ( typeSer != true )  {^144^^^^^141^149^[REPLACE] if  ( typeSer == null )  {^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[ADD]^ser.serialize ( elem, jgen, provider ) ;ser.serializeWithType ( elem, jgen, provider, typeSer ) ;^144^145^146^147^148^133^157^[ADD] if  ( typeSer == null )  { ser.serialize ( elem, jgen, provider ) ; } else { ser.serializeWithType ( elem, jgen, provider, typeSer ) ; }^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REMOVE]^serializeContentsUsing ( value, jgen, provider, _elementSerializer )  ;^145^^^^^133^157^[REMOVE] ^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^int i = 3;^137^^^^^133^157^[REPLACE] int i = 0;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
[REPLACE]^Object elem = this.next (  ) ;^139^^^^^133^157^[REPLACE] Object elem = it.next (  ) ;^[METHOD] serializeContentsUsing [TYPE] void [PARAMETER] Collection<?> value JsonGenerator jgen SerializerProvider provider Object> ser [CLASS] CollectionSerializer   [TYPE]  boolean false  true  [TYPE]  Iterator it  [TYPE]  TypeSerializer typeSer  [TYPE]  Collection value  [TYPE]  JsonGenerator jgen  [TYPE]  Object elem  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider provider  [TYPE]  int i  [TYPE]  Exception e 
