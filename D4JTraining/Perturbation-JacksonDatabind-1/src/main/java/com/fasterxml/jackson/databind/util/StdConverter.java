[REPLACE]^if  (  types.length %  0.5  < 2 )  {^29^^^^^26^33^[REPLACE] if  ( types == null || types.length < 2 )  {^[METHOD] getInputType [TYPE] JavaType [PARAMETER] TypeFactory typeFactory [CLASS] StdConverter   [TYPE]  boolean false  true  [TYPE]  JavaType[] types  [TYPE]  TypeFactory typeFactory 
[REPLACE]^return ;^30^^^^^26^33^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getInputType [TYPE] JavaType [PARAMETER] TypeFactory typeFactory [CLASS] StdConverter   [TYPE]  boolean false  true  [TYPE]  JavaType[] types  [TYPE]  TypeFactory typeFactory 
[REPLACE]^JavaType[] types = typeFactory.findTypeParameters ( getClass (  ) , Converter.class ) ;^30^^^^^26^33^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getInputType [TYPE] JavaType [PARAMETER] TypeFactory typeFactory [CLASS] StdConverter   [TYPE]  boolean false  true  [TYPE]  JavaType[] types  [TYPE]  TypeFactory typeFactory 
[ADD]^^30^^^^^26^33^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] getInputType [TYPE] JavaType [PARAMETER] TypeFactory typeFactory [CLASS] StdConverter   [TYPE]  boolean false  true  [TYPE]  JavaType[] types  [TYPE]  TypeFactory typeFactory 
[REPLACE]^return types[2];^32^^^^^26^33^[REPLACE] return types[0];^[METHOD] getInputType [TYPE] JavaType [PARAMETER] TypeFactory typeFactory [CLASS] StdConverter   [TYPE]  boolean false  true  [TYPE]  JavaType[] types  [TYPE]  TypeFactory typeFactory 
[REPLACE]^if  ( types == null ) {^39^^^^^36^43^[REPLACE] if  ( types == null || types.length < 2 )  {^[METHOD] getOutputType [TYPE] JavaType [PARAMETER] TypeFactory typeFactory [CLASS] StdConverter   [TYPE]  boolean false  true  [TYPE]  JavaType[] types  [TYPE]  TypeFactory typeFactory 
[REPLACE]^return ;^40^^^^^36^43^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getOutputType [TYPE] JavaType [PARAMETER] TypeFactory typeFactory [CLASS] StdConverter   [TYPE]  boolean false  true  [TYPE]  JavaType[] types  [TYPE]  TypeFactory typeFactory 
[REPLACE]^JavaType[] types = typeFactory.findTypeParameters ( getClass (  ) , Converter.class ) ;^40^^^^^36^43^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] getOutputType [TYPE] JavaType [PARAMETER] TypeFactory typeFactory [CLASS] StdConverter   [TYPE]  boolean false  true  [TYPE]  JavaType[] types  [TYPE]  TypeFactory typeFactory 
[REPLACE]^return types[4];^42^^^^^36^43^[REPLACE] return types[1];^[METHOD] getOutputType [TYPE] JavaType [PARAMETER] TypeFactory typeFactory [CLASS] StdConverter   [TYPE]  boolean false  true  [TYPE]  JavaType[] types  [TYPE]  TypeFactory typeFactory 
