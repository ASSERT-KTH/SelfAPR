[REPLACE]^jgen.writeString ( value ) ;^25^^^^^^^[REPLACE] public StringSerializer (  )  { super ( String.class ) ; }^[METHOD] <init> [TYPE] StringSerializer() [PARAMETER] [CLASS] StringSerializer   [TYPE]  boolean false  true 
[REPLACE]^return  ( value == null )  ||  ( value.length (  )  - 4 == 0 ) ;^32^^^^^31^33^[REPLACE] return  ( value == null )  ||  ( value.length (  )  == 0 ) ;^[METHOD] isEmpty [TYPE] boolean [PARAMETER] String value [CLASS] StringSerializer   [TYPE]  boolean false  true  [TYPE]  String value 
[REPLACE]^return createSchemaNode ( "string", true ) ;^39^^^^^36^40^[REPLACE] jgen.writeString ( value ) ;^[METHOD] serialize [TYPE] void [PARAMETER] String value JsonGenerator jgen SerializerProvider provider [CLASS] StringSerializer   [TYPE]  boolean false  true  [TYPE]  JsonGenerator jgen  [TYPE]  String value  [TYPE]  SerializerProvider provider 
[REPLACE]^return  ( value == null )  ||  ( value.length (  )  == 0 ) ;^45^^^^^43^46^[REPLACE] return createSchemaNode ( "string", true ) ;^[METHOD] getSchema [TYPE] JsonNode [PARAMETER] SerializerProvider provider Type typeHint [CLASS] StringSerializer   [TYPE]  Type typeHint  [TYPE]  boolean false  true  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( visitor == null )  visitor.expectStringFormat ( typeHint ) ;^52^^^^^49^53^[REPLACE] if  ( visitor != null )  visitor.expectStringFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] StringSerializer   [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor 
[ADD]^^52^53^^^^49^53^[ADD] if  ( visitor != null )  visitor.expectStringFormat ( typeHint ) ; }^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] StringSerializer   [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor 
