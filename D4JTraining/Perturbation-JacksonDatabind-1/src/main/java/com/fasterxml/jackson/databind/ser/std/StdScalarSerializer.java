[REPLACE]^super ( null ) ;^19^^^^^18^20^[REPLACE] super ( t ) ;^[METHOD] <init> [TYPE] Class) [PARAMETER] Class<T> t [CLASS] StdScalarSerializer   [TYPE]  boolean false  true  [TYPE]  Class t 
[REPLACE]^super ( t ) ;^28^^^^^27^29^[REPLACE] super (  ( Class<T> )  t ) ;^[METHOD] <init> [TYPE] Class,boolean) [PARAMETER] Class<?> t boolean dummy [CLASS] StdScalarSerializer   [TYPE]  boolean dummy  false  true  [TYPE]  Class t 
[REPLACE]^typeSer .writeTypeSuffixForScalar ( value , jgen )  ;^43^^^^^39^46^[REPLACE] typeSer.writeTypePrefixForScalar ( value, jgen ) ;^[METHOD] serializeWithType [TYPE] void [PARAMETER] T value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [CLASS] StdScalarSerializer   [TYPE]  boolean false  true  [TYPE]  T value  [TYPE]  TypeSerializer typeSer  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider 
[REPLACE]^return createSchemaNode ( "string", true ) ;^44^^^^^39^46^[REPLACE] serialize ( value, jgen, provider ) ;^[METHOD] serializeWithType [TYPE] void [PARAMETER] T value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [CLASS] StdScalarSerializer   [TYPE]  boolean false  true  [TYPE]  T value  [TYPE]  TypeSerializer typeSer  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider 
[REPLACE]^typeSer.writeTypePrefixForScalar ( value, jgen ) ;^45^^^^^39^46^[REPLACE] typeSer.writeTypeSuffixForScalar ( value, jgen ) ;^[METHOD] serializeWithType [TYPE] void [PARAMETER] T value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [CLASS] StdScalarSerializer   [TYPE]  boolean false  true  [TYPE]  T value  [TYPE]  TypeSerializer typeSer  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider 
[ADD]^^45^^^^^39^46^[ADD] typeSer.writeTypeSuffixForScalar ( value, jgen ) ;^[METHOD] serializeWithType [TYPE] void [PARAMETER] T value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [CLASS] StdScalarSerializer   [TYPE]  boolean false  true  [TYPE]  T value  [TYPE]  TypeSerializer typeSer  [TYPE]  JsonGenerator jgen  [TYPE]  SerializerProvider provider 
[REPLACE]^return createSchemaNode ( "string", true ) ;^59^^^^^56^60^[REPLACE] visitor.expectAnyFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] StdScalarSerializer   [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor 
[ADD]^^59^^^^^56^60^[ADD] visitor.expectAnyFormat ( typeHint ) ;^[METHOD] acceptJsonFormatVisitor [TYPE] void [PARAMETER] JsonFormatVisitorWrapper visitor JavaType typeHint [CLASS] StdScalarSerializer   [TYPE]  JavaType typeHint  [TYPE]  boolean false  true  [TYPE]  JsonFormatVisitorWrapper visitor 
