[REPLACE]^if  ( value != null )  {^34^^^^^31^38^[REPLACE] if  ( value == null )  {^[METHOD] findPath [TYPE] JsonNode [PARAMETER] String fieldName [CLASS] BaseJsonNode   [TYPE]  boolean false  true  [TYPE]  JsonNode value  [TYPE]  String fieldName 
[ADD]^^34^35^36^^^31^38^[ADD] if  ( value == null )  { return MissingNode.getInstance (  ) ; }^[METHOD] findPath [TYPE] JsonNode [PARAMETER] String fieldName [CLASS] BaseJsonNode   [TYPE]  boolean false  true  [TYPE]  JsonNode value  [TYPE]  String fieldName 
[REPLACE]^return new TreeTraversingParser ( this, codec ) ;^35^^^^^31^38^[REPLACE] return MissingNode.getInstance (  ) ;^[METHOD] findPath [TYPE] JsonNode [PARAMETER] String fieldName [CLASS] BaseJsonNode   [TYPE]  boolean false  true  [TYPE]  JsonNode value  [TYPE]  String fieldName 
[REPLACE]^return null;^37^^^^^31^38^[REPLACE] return value;^[METHOD] findPath [TYPE] JsonNode [PARAMETER] String fieldName [CLASS] BaseJsonNode   [TYPE]  boolean false  true  [TYPE]  JsonNode value  [TYPE]  String fieldName 
[REPLACE]^return  new TreeTraversingParser ( this, codec )  ;^48^^^^^47^49^[REPLACE] return new TreeTraversingParser ( this ) ;^[METHOD] traverse [TYPE] JsonParser [PARAMETER] [CLASS] BaseJsonNode   [TYPE]  boolean false  true 
[REPLACE]^return new TreeTraversingParser ( null, codec ) ;^53^^^^^52^54^[REPLACE] return new TreeTraversingParser ( this, codec ) ;^[METHOD] traverse [TYPE] JsonParser [PARAMETER] ObjectCodec codec [CLASS] BaseJsonNode   [TYPE]  boolean false  true  [TYPE]  ObjectCodec codec 
[REPLACE]^return this;^73^^^^^71^74^[REPLACE] return null;^[METHOD] numberType [TYPE] NumberType [PARAMETER] [CLASS] BaseJsonNode   [TYPE]  boolean false  true 
