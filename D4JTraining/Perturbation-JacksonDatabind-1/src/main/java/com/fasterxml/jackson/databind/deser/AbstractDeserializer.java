[REPLACE]^private static   short  serialVersionUID = -3010349050434697698L;^24^^^^^^^[REPLACE] private static final long serialVersionUID = -3010349050434697698L;^ [CLASS] AbstractDeserializer  
[REPLACE]^private final JavaType _baseType;^26^^^^^^^[REPLACE] protected final JavaType _baseType;^ [CLASS] AbstractDeserializer  
[REPLACE]^protected  ObjectIdReader _objectIdReader;^28^^^^^^^[REPLACE] protected final ObjectIdReader _objectIdReader;^ [CLASS] AbstractDeserializer  
[REPLACE]^protected  Map<String, SettableBeanProperty> _backRefProperties;^30^^^^^^^[REPLACE] protected final Map<String, SettableBeanProperty> _backRefProperties;^ [CLASS] AbstractDeserializer  
[REPLACE]^protected  boolean _acceptString;^34^^^^^^^[REPLACE] protected final boolean _acceptString;^ [CLASS] AbstractDeserializer  
[REPLACE]^private final boolean _acceptBoolean;^35^^^^^^^[REPLACE] protected final boolean _acceptBoolean;^ [CLASS] AbstractDeserializer  
[REPLACE]^protected  boolean _acceptInt;^36^^^^^^^[REPLACE] protected final boolean _acceptInt;^ [CLASS] AbstractDeserializer  
[REPLACE]^if  ( _objectIdReader == null )  {^93^^^^^90^107^[REPLACE] if  ( _objectIdReader != null )  {^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^JsonToken t = jp.getCurrentToken (  ) ;return _deserializeFromObjectId ( jp, ctxt ) ;^93^94^^96^97^90^107^[ADD] if  ( _objectIdReader != null )  { JsonToken t = jp.getCurrentToken (  ) ; if  ( t != null && t.isScalarValue (  )  )  { return _deserializeFromObjectId ( jp, ctxt ) ;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t == null && t.isScalarValue (  )  )  {^96^^^^^90^107^[REPLACE] if  ( t != null && t.isScalarValue (  )  )  {^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _deserializeFromObjectId  (  jp, ctxt  )  ;  ;^97^^^^^90^107^[REPLACE] return _deserializeFromObjectId ( jp, ctxt ) ;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^94^^^^^90^107^[ADD] JsonToken t = jp.getCurrentToken (  ) ;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t == null ) {^96^^^^^90^107^[REPLACE] if  ( t != null && t.isScalarValue (  )  )  {^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^96^97^98^^^90^107^[ADD] if  ( t != null && t.isScalarValue (  )  )  { return _deserializeFromObjectId ( jp, ctxt ) ; }^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^JsonToken t = jp.getText (  ) ;^94^^^^^90^107^[REPLACE] JsonToken t = jp.getCurrentToken (  ) ;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object id = deserialize ( jp, ctxt )  ;^102^^^^^90^107^[REPLACE] Object result = _deserializeIfNatural ( jp, ctxt ) ;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( result == this )  {^103^^^^^90^107^[REPLACE] if  ( result != null )  {^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return result;  ;^104^^^^^90^107^[REPLACE] return result;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return typeDeserializer.deserializeTypedFromObject  (  jp, ctxt  )  ;  ;^106^^^^^90^107^[REPLACE] return typeDeserializer.deserializeTypedFromObject ( jp, ctxt ) ;^[METHOD] deserializeWithType [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt TypeDeserializer typeDeserializer [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object result  [TYPE]  TypeDeserializer typeDeserializer  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if   (  _acceptInt  )   {  ;^136^^^^^127^163^[REPLACE] if  ( _acceptString )  {^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return jp .getIntValue (  )  ;^137^^^^^127^163^[REPLACE] return jp.getText (  ) ;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if   (  _acceptString  )   {  ;^141^^^^^127^163^[REPLACE] if  ( _acceptInt )  {^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return jp.getIntValue  (    )  ;  ;^142^^^^^127^163^[REPLACE] return jp.getIntValue (  ) ;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if   (  _acceptBoolean  )   {  ;^147^^^^^127^163^[REPLACE] if  ( _acceptDouble )  {^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return Double.valueOf ( jp.getIntValue (  )  ) ;^148^^^^^127^163^[REPLACE] return Double.valueOf ( jp.getDoubleValue (  )  ) ;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if   (  _acceptDouble  )   {  ;^152^^^^^127^163^[REPLACE] if  ( _acceptBoolean )  {^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return Boolean.TRUE;  ;^153^^^^^127^163^[REPLACE] return Boolean.TRUE;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if   (  _acceptDouble  )   {  ;^157^^^^^127^163^[REPLACE] if  ( _acceptBoolean )  {^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return Boolean.TRUE;  ;^158^^^^^127^163^[REPLACE] return Boolean.FALSE;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return jp.getIntValue (  ) ;^137^^^^^127^163^[REPLACE] return jp.getText (  ) ;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return jp .getDoubleValue (  )  ;^142^^^^^127^163^[REPLACE] return jp.getIntValue (  ) ;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return Double.valueOf ( jp .getIntValue (  )   ) ;^148^^^^^127^163^[REPLACE] return Double.valueOf ( jp.getDoubleValue (  )  ) ;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return true;^162^^^^^127^163^[REPLACE] return null;^[METHOD] _deserializeIfNatural [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AbstractDeserializer   [TYPE]  JavaType _baseType  [TYPE]  boolean _acceptBoolean  _acceptDouble  _acceptInt  _acceptString  false  true  [TYPE]  ObjectIdReader _objectIdReader  [TYPE]  DeserializationContext ctxt  [TYPE]  Map _backRefProperties  backRefProps  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
