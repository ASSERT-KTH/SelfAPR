[REPLACE]^private boolean _closed;^59^^^^^^^[REPLACE] protected boolean _closed;^ [CLASS] TreeTraversingParser  
[REPLACE]^if  ( _nextToken == this )  {^124^^^^^123^162^[REPLACE] if  ( _nextToken != null )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken  = null ;^125^^^^^123^162^[REPLACE] _currToken = _nextToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = null  ;^126^^^^^123^162^[REPLACE] _nextToken = null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return _currToken;  ;^127^^^^^123^162^[REPLACE] return _currToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken ;^125^^^^^123^162^[REPLACE] _currToken = _nextToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^126^^^^^123^162^[ADD] _nextToken = null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if   (  n.isPojo  (    )    )   {  ;^130^^^^^123^162^[REPLACE] if  ( _startContainer )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _nodeCursor.currentHasChildren (  )  )  {^133^^^^^123^162^[REPLACE] if  ( !_nodeCursor.currentHasChildren (  )  )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^133^134^135^136^137^123^162^[ADD] if  ( !_nodeCursor.currentHasChildren (  )  )  { _currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY; return _currToken; }^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^134^135^^^^123^162^[ADD] _currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return _currToken;  ;^136^^^^^123^162^[REPLACE] return _currToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _currToken == JsonToken.START_OBJECT && _currToken == JsonToken.START_ARRAY )  {^140^^^^^123^162^[REPLACE] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^140^141^142^^^123^162^[ADD] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  { _startContainer = true; }^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = false;^141^^^^^123^162^[REPLACE] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = true;^131^^^^^123^162^[REPLACE] _startContainer = false;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken  =  JsonToken.END_ARRAY;^134^135^^^^123^162^[REPLACE] _currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nodeCursor = _nodeCursor.getParent (  )  ;^138^^^^^123^162^[REPLACE] _nodeCursor = _nodeCursor.iterateChildren (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = _nodeCursor.endToken (  )  ;^139^^^^^123^162^[REPLACE] _currToken = _nodeCursor.nextToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return _currToken;  ;^143^^^^^123^162^[REPLACE] return _currToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  (  _currToken == JsonToken.START_ARRAY )  {^140^^^^^123^162^[REPLACE] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^_startContainer = true;^140^141^142^^^123^162^[ADD] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  { _startContainer = true; }^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^139^^^^^123^162^[ADD] _currToken = _nodeCursor.nextToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _nodeCursor != true )  {^146^^^^^123^162^[REPLACE] if  ( _nodeCursor == null )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^146^147^148^149^^123^162^[ADD] if  ( _nodeCursor == null )  { _closed = true; return null; }^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_closed = false;^147^^^^^123^162^[REPLACE] _closed = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return this;^148^^^^^123^162^[REPLACE] return null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return null;  ;^148^^^^^123^162^[REPLACE] return null;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = _nodeCursor.endToken (  )  ;^151^^^^^123^162^[REPLACE] _currToken = _nodeCursor.nextToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if   (  _nextToken != null  )   {  ;^152^^^^^123^162^[REPLACE] if  ( _currToken != null )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( _currToken == JsonToken.START_OBJECT && _currToken == JsonToken.START_ARRAY )  {^153^^^^^123^162^[REPLACE] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^_startContainer = true;^153^154^155^^^123^162^[ADD] if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  { _startContainer = true; }^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = false  ;^154^^^^^123^162^[REPLACE] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_startContainer = false;^154^^^^^123^162^[REPLACE] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return _currToken;  ;^156^^^^^123^162^[REPLACE] return _currToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^154^^^^^123^162^[ADD] _startContainer = true;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_currToken = _nodeCursor.nextToken (  )  ;^159^^^^^123^162^[REPLACE] _currToken = _nodeCursor.endToken (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^_nodeCursor = _nodeCursor.iterateChildren (  )  ;^160^^^^^123^162^[REPLACE] _nodeCursor = _nodeCursor.getParent (  ) ;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return _currToken;  ;^161^^^^^123^162^[REPLACE] return _currToken;^[METHOD] nextToken [TYPE] JsonToken [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if   (  !_closed  )   {  ;^228^^^^^227^249^[REPLACE] if  ( _closed )  {^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^return null;^228^229^230^^^227^249^[ADD] if  ( _closed )  { return null; }^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return null;  ;^229^^^^^227^249^[REPLACE] return null;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return this;^229^^^^^227^249^[REPLACE] return null;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  (  n.isBinary (  )  )  {^242^^^^^227^249^[REPLACE] if  ( n != null && n.isBinary (  )  )  {^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^242^243^244^245^^227^249^[ADD] if  ( n != null && n.isBinary (  )  )  {  return n.asText (  ) ; }^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return n.asToken (  ) ;^244^^^^^227^249^[REPLACE] return n.asText (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return _nodeCursor.currentNode (  ) ;^234^^^^^227^249^[REPLACE] return _nodeCursor.getCurrentName (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return currentNode  (    )  .textValue  (    )  ;  ;^236^^^^^227^249^[REPLACE] return currentNode (  ) .textValue (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;  ;^239^^^^^227^249^[REPLACE] return String.valueOf ( currentNode (  ) .numberValue (  )  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return   (  _currToken == null  )   ? null : _currToken.asString  (    )  ;  ;^247^^^^^227^249^[REPLACE] return  ( _currToken == null )  ? null : _currToken.asString (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^241^^^^^227^249^[ADD] JsonNode n = currentNode (  ) ;^[METHOD] getText [TYPE] String [PARAMETER] [CLASS] TreeTraversingParser   [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^350^^^^^348^367^[ADD] JsonNode n = currentNode (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n == null )  {^351^^^^^348^367^[REPLACE] if  ( n != null )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^351^352^^354^355^348^367^[ADD] if  ( n != null )  { byte[] data = n.binaryValue (  ) ; if  ( data != null )  { return data;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( data == null )  {^354^^^^^348^367^[REPLACE] if  ( data != null )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^return data;^354^355^356^^^348^367^[ADD] if  ( data != null )  { return data; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return data;  ;^355^^^^^348^367^[REPLACE] return data;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if   (  n.isBinary  (    )    )   {  ;^358^^^^^348^367^[REPLACE] if  ( n.isPojo (  )  )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( ! ob instanceof byte[] )  {^360^^^^^348^367^[REPLACE] if  ( ob instanceof byte[] )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return   (  byte[]  )   ob;  ;^361^^^^^348^367^[REPLACE] return  ( byte[] )  ob;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^Object ob =  (  ( POJONode )  n ) ._throwInternal (  ) ;^359^^^^^348^367^[REPLACE] Object ob =  (  ( POJONode )  n ) .getPojo (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^byte[] data = n.intValue (  ) ;^352^^^^^348^367^[REPLACE] byte[] data = n.binaryValue (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( data == false )  {^354^^^^^348^367^[REPLACE] if  ( data != null )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^if  ( n .isObject (  )   )  {^358^^^^^348^367^[REPLACE] if  ( n.isPojo (  )  )  {^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^360^361^362^^^348^367^[ADD] if  ( ob instanceof byte[] )  { return  ( byte[] )  ob; }^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^352^^^^^348^367^[ADD] byte[] data = n.binaryValue (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[ADD]^^359^^^^^348^367^[ADD] Object ob =  (  ( POJONode )  n ) .getPojo (  ) ;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
[REPLACE]^return null;  ;^366^^^^^348^367^[REPLACE] return null;^[METHOD] getBinaryValue [TYPE] byte[] [PARAMETER] Base64Variant b64variant [CLASS] TreeTraversingParser   [TYPE]  byte[] data  [TYPE]  boolean _closed  _startContainer  false  true  [TYPE]  Base64Variant b64variant  [TYPE]  NodeCursor _nodeCursor  [TYPE]  JsonToken _nextToken  [TYPE]  JsonNode n  [TYPE]  Object ob  [TYPE]  ObjectCodec _objectCodec  c  codec 
