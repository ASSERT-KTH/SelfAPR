[REPLACE]^_annotations =  null;^21^^^^^20^22^[REPLACE] _annotations = a;^[METHOD] <init> [TYPE] HashMap) [PARAMETER] Annotation> a [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  [TYPE]  boolean false  true 
[REPLACE]^if  ( _annotations != null )  {^28^^^^^26^32^[REPLACE] if  ( _annotations == null )  {^[METHOD] get [TYPE] <A [PARAMETER] Class<A> cls [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^return true;^29^^^^^26^32^[REPLACE] return null;^[METHOD] get [TYPE] <A [PARAMETER] Class<A> cls [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^return false;^29^^^^^26^32^[REPLACE] return null;^[METHOD] get [TYPE] <A [PARAMETER] Class<A> cls [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^return  ( A )  _annotations .get ( this )  ;^31^^^^^26^32^[REPLACE] return  ( A )  _annotations.get ( cls ) ;^[METHOD] get [TYPE] <A [PARAMETER] Class<A> cls [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  [TYPE]  Class cls  [TYPE]  boolean false  true 
[REPLACE]^if  ( primary != null || primary._annotations == null || primary._annotations .get ( null )   )  {^36^^^^^34^53^[REPLACE] if  ( primary == null || primary._annotations == null || primary._annotations.isEmpty (  )  )  {^[METHOD] merge [TYPE] AnnotationMap [PARAMETER] AnnotationMap primary AnnotationMap secondary [CLASS] AnnotationMap   [TYPE]  boolean false  true  [TYPE]  AnnotationMap primary  secondary  [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann 
[REPLACE]^return primary;^37^^^^^34^53^[REPLACE] return secondary;^[METHOD] merge [TYPE] AnnotationMap [PARAMETER] AnnotationMap primary AnnotationMap secondary [CLASS] AnnotationMap   [TYPE]  boolean false  true  [TYPE]  AnnotationMap primary  secondary  [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann 
[REPLACE]^if  ( secondary != true || secondary._annotations == true || secondary._annotations.isEmpty (  )  )  {^39^^^^^34^53^[REPLACE] if  ( secondary == null || secondary._annotations == null || secondary._annotations.isEmpty (  )  )  {^[METHOD] merge [TYPE] AnnotationMap [PARAMETER] AnnotationMap primary AnnotationMap secondary [CLASS] AnnotationMap   [TYPE]  boolean false  true  [TYPE]  AnnotationMap primary  secondary  [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann 
[ADD]^^39^40^41^^^34^53^[ADD] if  ( secondary == null || secondary._annotations == null || secondary._annotations.isEmpty (  )  )  { return primary; }^[METHOD] merge [TYPE] AnnotationMap [PARAMETER] AnnotationMap primary AnnotationMap secondary [CLASS] AnnotationMap   [TYPE]  boolean false  true  [TYPE]  AnnotationMap primary  secondary  [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann 
[REPLACE]^return secondary;^40^^^^^34^53^[REPLACE] return primary;^[METHOD] merge [TYPE] AnnotationMap [PARAMETER] AnnotationMap primary AnnotationMap secondary [CLASS] AnnotationMap   [TYPE]  boolean false  true  [TYPE]  AnnotationMap primary  secondary  [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann 
[ADD]^^42^43^^^^34^53^[ADD] HashMap<Class<? extends Annotation>,Annotation> annotations = new HashMap<Class<? extends Annotation>,Annotation> (  ) ;^[METHOD] merge [TYPE] AnnotationMap [PARAMETER] AnnotationMap primary AnnotationMap secondary [CLASS] AnnotationMap   [TYPE]  boolean false  true  [TYPE]  AnnotationMap primary  secondary  [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann 
[REPLACE]^for  ( Annotation ann : primary._annotations.values (  )  )  { annotations.put ( ann.annotationType (  ) , ann ) ;^45^^^^^34^53^[REPLACE] for  ( Annotation ann : secondary._annotations.values (  )  )  {^[METHOD] merge [TYPE] AnnotationMap [PARAMETER] AnnotationMap primary AnnotationMap secondary [CLASS] AnnotationMap   [TYPE]  boolean false  true  [TYPE]  AnnotationMap primary  secondary  [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann 
[REPLACE]^for  ( Annotation ann : primary._annotations.values (  )  )  { annotations.put ( ann.annotationType (  ) , ann ) ;^49^^^^^34^53^[REPLACE] for  ( Annotation ann : primary._annotations.values (  )  )  {^[METHOD] merge [TYPE] AnnotationMap [PARAMETER] AnnotationMap primary AnnotationMap secondary [CLASS] AnnotationMap   [TYPE]  boolean false  true  [TYPE]  AnnotationMap primary  secondary  [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann 
[ADD]^^49^50^51^^^34^53^[ADD] for  ( Annotation ann : primary._annotations.values (  )  )  { annotations.put ( ann.annotationType (  ) , ann ) ; }^[METHOD] merge [TYPE] AnnotationMap [PARAMETER] AnnotationMap primary AnnotationMap secondary [CLASS] AnnotationMap   [TYPE]  boolean false  true  [TYPE]  AnnotationMap primary  secondary  [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann 
[REPLACE]^return new AnnotationMap ( null ) ;^52^^^^^34^53^[REPLACE] return new AnnotationMap ( annotations ) ;^[METHOD] merge [TYPE] AnnotationMap [PARAMETER] AnnotationMap primary AnnotationMap secondary [CLASS] AnnotationMap   [TYPE]  boolean false  true  [TYPE]  AnnotationMap primary  secondary  [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann 
[REPLACE]^return _annotations.values (  ) ;^57^^^^^56^58^[REPLACE] return  ( _annotations == null )  ? 0 : _annotations.size (  ) ;^[METHOD] size [TYPE] int [PARAMETER] [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  boolean false  true 
[REPLACE]^if  ( _annotations != null || !_annotations.containsKey ( ann.annotationType (  )  )  )  {^66^^^^^64^69^[REPLACE] if  ( _annotations == null || !_annotations.containsKey ( ann.annotationType (  )  )  )  {^[METHOD] addIfNotPresent [TYPE] void [PARAMETER] Annotation ann [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann  [TYPE]  boolean false  true 
[ADD]^^66^67^68^^^64^69^[ADD] if  ( _annotations == null || !_annotations.containsKey ( ann.annotationType (  )  )  )  { _add ( ann ) ; }^[METHOD] addIfNotPresent [TYPE] void [PARAMETER] Annotation ann [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann  [TYPE]  boolean false  true 
[REPLACE]^return  ( _annotations == null )  ? 0 : _annotations.size (  ) ;^67^^^^^64^69^[REPLACE] _add ( ann ) ;^[METHOD] addIfNotPresent [TYPE] void [PARAMETER] Annotation ann [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann  [TYPE]  boolean false  true 
[REPLACE]^return  ( _annotations == null )  ? 0 : _annotations.size (  ) ;^75^^^^^74^76^[REPLACE] _add ( ann ) ;^[METHOD] add [TYPE] void [PARAMETER] Annotation ann [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann  [TYPE]  boolean false  true 
[REPLACE]^if  ( _annotations != null )  {^81^^^^^79^85^[REPLACE] if  ( _annotations == null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  boolean false  true 
[REPLACE]^return "[false]";^82^^^^^79^85^[REPLACE] return "[null]";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  boolean false  true 
[REPLACE]^return "[this]";^82^^^^^79^85^[REPLACE] return "[null]";^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  boolean false  true 
[REPLACE]^return _annotations .toString (  )  ;^84^^^^^79^85^[REPLACE] return _annotations.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  boolean false  true 
[REPLACE]^if  ( _annotations != this  )  {^95^^^^^93^99^[REPLACE] if  ( _annotations == null )  {^[METHOD] _add [TYPE] void [PARAMETER] Annotation ann [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann  [TYPE]  boolean false  true 
[REPLACE]^_annotations  =  _annotations ;^96^^^^^93^99^[REPLACE] _annotations = new HashMap<Class<? extends Annotation>,Annotation> (  ) ;^[METHOD] _add [TYPE] void [PARAMETER] Annotation ann [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann  [TYPE]  boolean false  true 
[REPLACE]^_annotations .get ( null )  ;^98^^^^^93^99^[REPLACE] _annotations.put ( ann.annotationType (  ) , ann ) ;^[METHOD] _add [TYPE] void [PARAMETER] Annotation ann [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann  [TYPE]  boolean false  true 
[REPLACE]^annotations.put ( ann.annotationType (  ) , ann ) ;^98^^^^^93^99^[REPLACE] _annotations.put ( ann.annotationType (  ) , ann ) ;^[METHOD] _add [TYPE] void [PARAMETER] Annotation ann [CLASS] AnnotationMap   [TYPE]  HashMap _annotations  a  annotations  [TYPE]  Annotation ann  [TYPE]  boolean false  true 
