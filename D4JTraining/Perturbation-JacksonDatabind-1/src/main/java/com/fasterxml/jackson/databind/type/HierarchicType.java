[REPLACE]^protected  Type _actualType;^18^^^^^^^[REPLACE] protected final Type _actualType;^ [CLASS] HierarchicType  
[REPLACE]^protected  Class<?> _rawClass;^20^^^^^^^[REPLACE] protected final Class<?> _rawClass;^ [CLASS] HierarchicType  
[REPLACE]^private final ParameterizedType _genericType;^22^^^^^^^[REPLACE] protected final ParameterizedType _genericType;^ [CLASS] HierarchicType  
[REPLACE]^private HierarchicType _superType;^24^^^^^^^[REPLACE] protected HierarchicType _superType;^ [CLASS] HierarchicType  
[REPLACE]^private HierarchicType _subType;^26^^^^^^^[REPLACE] protected HierarchicType _subType;^ [CLASS] HierarchicType  
[REPLACE]^this._actualType =  _actualType;^30^^^^^28^40^[REPLACE] this._actualType = type;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[REPLACE]^if  ( ! type instanceof Class<?> )  {^31^^^^^28^40^[REPLACE] if  ( type instanceof Class<?> )  {^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[REPLACE]^} else if  ( ! type instanceof ParameterizedType )  {^34^^^^^28^40^[REPLACE] } else if  ( type instanceof ParameterizedType )  {^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[REPLACE]^return ;^38^^^^^28^40^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[REPLACE]^_rawClass =  ( Class<?> )  _genericType.getRawType (  ) ;^38^^^^^28^40^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[REPLACE]^_genericType =   ( ParameterizedType )  type;^35^^^^^28^40^[REPLACE] _genericType =  ( ParameterizedType )  type;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[REPLACE]^_rawClass ;^36^^^^^28^40^[REPLACE] _rawClass =  ( Class<?> )  _genericType.getRawType (  ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[ADD]^^36^^^^^28^40^[ADD] _rawClass =  ( Class<?> )  _genericType.getRawType (  ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[REPLACE]^_rawClass  =  _rawClass ;^36^^^^^28^40^[REPLACE] _rawClass =  ( Class<?> )  _genericType.getRawType (  ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[REPLACE]^_rawClass =   ( Class<?> )  type;^32^^^^^28^40^[REPLACE] _rawClass =  ( Class<?> )  type;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[REPLACE]^_genericType = this;^33^^^^^28^40^[REPLACE] _genericType = null;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[ADD]^^33^^^^^28^40^[ADD] _genericType = null;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[REPLACE]^}  if  ( ! type instanceof ParameterizedType )  {^34^^^^^28^40^[REPLACE] } else if  ( type instanceof ParameterizedType )  {^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[ADD]^^38^^^^^28^40^[ADD] throw new IllegalArgumentException  (" ")  ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[REPLACE]^_genericType = false;^33^^^^^28^40^[REPLACE] _genericType = null;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[ADD]^_rawClass =  ( Class<?> )  _genericType.getRawType (  ) ;^35^36^^^^28^40^[ADD] _genericType =  ( ParameterizedType )  type; _rawClass =  ( Class<?> )  _genericType.getRawType (  ) ;^[METHOD] <init> [TYPE] Type) [PARAMETER] Type type [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  [TYPE]  Type _actualType  type  [TYPE]  Class _rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType 
[REPLACE]^_actualType =  type;^45^^^^^42^50^[REPLACE] _actualType = actualType;^[METHOD] <init> [TYPE] HierarchicType) [PARAMETER] Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  subType  superType 
[ADD]^^45^^^^^42^50^[ADD] _actualType = actualType;^[METHOD] <init> [TYPE] HierarchicType) [PARAMETER] Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  subType  superType 
[REPLACE]^_rawClass =  false;^46^^^^^42^50^[REPLACE] _rawClass = rawClass;^[METHOD] <init> [TYPE] HierarchicType) [PARAMETER] Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  subType  superType 
[REPLACE]^_genericType =  null;^47^^^^^42^50^[REPLACE] _genericType = genericType;^[METHOD] <init> [TYPE] HierarchicType) [PARAMETER] Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  subType  superType 
[REPLACE]^_subType = subType; ;^48^^^^^42^50^[REPLACE] _superType = superType;^[METHOD] <init> [TYPE] HierarchicType) [PARAMETER] Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  subType  superType 
[REPLACE]^_superType = superType; ;^49^^^^^42^50^[REPLACE] _subType = subType;^[METHOD] <init> [TYPE] HierarchicType) [PARAMETER] Type actualType Class<?> rawClass ParameterizedType genericType HierarchicType superType HierarchicType subType [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  subType  superType 
[REPLACE]^HierarchicType sup  =  _superType.deepCloneWithoutSubtype (  ) ;^58^^^^^56^64^[REPLACE] HierarchicType sup =  ( _superType == null )  ? null : _superType.deepCloneWithoutSubtype (  ) ;^[METHOD] deepCloneWithoutSubtype [TYPE] HierarchicType [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  subType  sup  superType 
[REPLACE]^HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, true ) ;^59^^^^^56^64^[REPLACE] HierarchicType result = new HierarchicType ( _actualType, _rawClass, _genericType, sup, null ) ;^[METHOD] deepCloneWithoutSubtype [TYPE] HierarchicType [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  subType  sup  superType 
[REPLACE]^if  ( superType == null )  {^60^^^^^56^64^[REPLACE] if  ( sup != null )  {^[METHOD] deepCloneWithoutSubtype [TYPE] HierarchicType [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  subType  sup  superType 
[REPLACE]^sup.setSuperType ( result ) ;^61^^^^^56^64^[REPLACE] sup.setSubType ( result ) ;^[METHOD] deepCloneWithoutSubtype [TYPE] HierarchicType [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  subType  sup  superType 
[REPLACE]^return superType;^63^^^^^56^64^[REPLACE] return result;^[METHOD] deepCloneWithoutSubtype [TYPE] HierarchicType [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  subType  sup  superType 
[REPLACE]^public void setSuperType ( HierarchicType sup )  { _superType =  superType; }^66^^^^^^^[REPLACE] public void setSuperType ( HierarchicType sup )  { _superType = sup; }^[METHOD] setSuperType [TYPE] void [PARAMETER] HierarchicType sup [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  subType  sup  superType 
[ADD]^^66^67^68^^^^^[ADD] public void setSuperType ( HierarchicType sup )  { _superType = sup; } public final HierarchicType getSuperType (  )  { return _superType; } public void setSubType ( HierarchicType sub )  { _subType = sub; }^[METHOD] setSuperType [TYPE] void [PARAMETER] HierarchicType sup [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  subType  sup  superType 
[REPLACE]^public final HierarchicType getSubType (  )  { return _subType; }^67^^^^^^^[REPLACE] public final HierarchicType getSuperType (  )  { return _superType; }^[METHOD] getSuperType [TYPE] HierarchicType [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  subType  sup  superType 
[REPLACE]^public void setSubType ( HierarchicType sub )  { _subType =  superType; }^68^^^^^^^[REPLACE] public void setSubType ( HierarchicType sub )  { _subType = sub; }^[METHOD] setSubType [TYPE] void [PARAMETER] HierarchicType sub [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  sub  subType  sup  superType 
[REPLACE]^public final boolean isGeneric (  )  { return _genericType != null; } public final ParameterizedType asGeneric (  )  { return _genericType; }^69^^^^^^^[REPLACE] public final HierarchicType getSubType (  )  { return _subType; }^[METHOD] getSubType [TYPE] HierarchicType [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  sub  subType  sup  superType 
[REPLACE]^public final boolean isGeneric (  )  { returngenericType == null; }^71^^^^^^^[REPLACE] public final boolean isGeneric (  )  { return _genericType != null; }^[METHOD] isGeneric [TYPE] boolean [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  sub  subType  sup  superType 
[REPLACE]^public final boolean isGeneric (  )  { return _genericType != null; } public final ParameterizedType asGeneric (  )  { return _genericType; }^72^^^^^^^[REPLACE] public final ParameterizedType asGeneric (  )  { return _genericType; }^[METHOD] asGeneric [TYPE] ParameterizedType [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  sub  subType  sup  superType 
[REPLACE]^public final boolean isGeneric (  )  { return _genericType != null; } public final ParameterizedType asGeneric (  )  { return _genericType; }^74^^^^^^^[REPLACE] public final Class<?> getRawClass (  )  { return _rawClass; }^[METHOD] getRawClass [TYPE] Class [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  sub  subType  sup  superType 
[REPLACE]^if  ( _genericType ==genericType )  {^78^^^^^77^82^[REPLACE] if  ( _genericType != null )  {^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  sub  subType  sup  superType 
[ADD]^^78^79^80^^^77^82^[ADD] if  ( _genericType != null )  { return _genericType.toString (  ) ; }^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  sub  subType  sup  superType 
[REPLACE]^return _genericType.Object (  ) ;^79^^^^^77^82^[REPLACE] return _genericType.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  sub  subType  sup  superType 
[REPLACE]^return result;^81^^^^^77^82^[REPLACE] return _rawClass.getName (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] HierarchicType   [TYPE]  ParameterizedType _genericType  genericType  [TYPE]  Type _actualType  actualType  type  [TYPE]  Class _rawClass  rawClass  [TYPE]  boolean false  true  [TYPE]  HierarchicType _subType  _superType  result  sub  subType  sup  superType 
