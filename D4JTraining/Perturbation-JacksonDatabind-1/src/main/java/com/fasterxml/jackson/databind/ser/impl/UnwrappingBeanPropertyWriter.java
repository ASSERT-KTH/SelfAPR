[REPLACE]^_handleSelfReference ( bean, ser ) ;^33^^^^^32^35^[REPLACE] super ( base ) ;^[METHOD] <init> [TYPE] NameTransformer) [PARAMETER] BeanPropertyWriter base NameTransformer unwrapper [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  unwrapper  [TYPE]  BeanPropertyWriter base  [TYPE]  boolean false  true 
[REPLACE]^_nameTransformer = transformer; ;^34^^^^^32^35^[REPLACE] _nameTransformer = unwrapper;^[METHOD] <init> [TYPE] NameTransformer) [PARAMETER] BeanPropertyWriter base NameTransformer unwrapper [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  unwrapper  [TYPE]  BeanPropertyWriter base  [TYPE]  boolean false  true 
[REPLACE]^jgen.writeFieldName ( _name ) ;^39^^^^^37^41^[REPLACE] super ( base, name ) ;^[METHOD] <init> [TYPE] SerializedString) [PARAMETER] UnwrappingBeanPropertyWriter base NameTransformer transformer SerializedString name [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  SerializedString name  [TYPE]  boolean false  true  [TYPE]  UnwrappingBeanPropertyWriter base 
[REPLACE]^_nameTransformer = unwrapper; ;^40^^^^^37^41^[REPLACE] _nameTransformer = transformer;^[METHOD] <init> [TYPE] SerializedString) [PARAMETER] UnwrappingBeanPropertyWriter base NameTransformer transformer SerializedString name [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  SerializedString name  [TYPE]  boolean false  true  [TYPE]  UnwrappingBeanPropertyWriter base 
[REPLACE]^String newName = transformer.transform ( oldName ) ;^46^^^^^44^53^[REPLACE] String oldName = _name.getValue (  ) ;^[METHOD] rename [TYPE] UnwrappingBeanPropertyWriter [PARAMETER] NameTransformer transformer [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  String newName  oldName  [TYPE]  boolean false  true 
[REPLACE]^String newName =.chainedTransformerer.transform ( newName ) ;^47^^^^^44^53^[REPLACE] String newName = transformer.transform ( oldName ) ;^[METHOD] rename [TYPE] UnwrappingBeanPropertyWriter [PARAMETER] NameTransformer transformer [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  String newName  oldName  [TYPE]  boolean false  true 
[REPLACE]^transformer =  NameTransformer.chainedTransformer ( unwrapper, _nameTransformer ) ;^50^^^^^44^53^[REPLACE] transformer = NameTransformer.chainedTransformer ( transformer, _nameTransformer ) ;^[METHOD] rename [TYPE] UnwrappingBeanPropertyWriter [PARAMETER] NameTransformer transformer [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  String newName  oldName  [TYPE]  boolean false  true 
[ADD]^^50^51^52^53^^44^53^[ADD] transformer = NameTransformer.chainedTransformer ( transformer, _nameTransformer ) ;  return new UnwrappingBeanPropertyWriter ( this, transformer, new SerializedString ( newName )  ) ; }^[METHOD] rename [TYPE] UnwrappingBeanPropertyWriter [PARAMETER] NameTransformer transformer [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  String newName  oldName  [TYPE]  boolean false  true 
[REPLACE]^return new UnwrappingBeanPropertyWriter ( this, transformer, new SerializedString ( oldName )  ) ;^52^^^^^44^53^[REPLACE] return new UnwrappingBeanPropertyWriter ( this, transformer, new SerializedString ( newName )  ) ;^[METHOD] rename [TYPE] UnwrappingBeanPropertyWriter [PARAMETER] NameTransformer transformer [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  String newName  oldName  [TYPE]  boolean false  true 
[REPLACE]^String newName = transformer.transform ( oldName ) ;^65^^^^^64^104^[REPLACE] Object value = get ( bean ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( value != null )  {^66^^^^^64^104^[REPLACE] if  ( value == null )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REMOVE]^if  ( value == bean )  {     _handleSelfReference ( bean, ser ) ; }^66^^^^^64^104^[REMOVE] ^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^return serializer;^69^^^^^64^104^[REPLACE] return;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^PropertySerializerMap map = _dynamicSerializers;^71^^^^^64^104^[REPLACE] JsonSerializer<Object> ser = _serializer;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^^71^^^^^64^104^[ADD] JsonSerializer<Object> ser = _serializer;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( ser != null )  {^72^^^^^64^104^[REPLACE] if  ( ser == null )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( ser != false )  {^76^^^^^64^104^[REPLACE] if  ( ser == null )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^ser =  _findAndAddDynamic ( null, cls, prov ) ;^77^^^^^64^104^[REPLACE] ser = _findAndAddDynamic ( map, cls, prov ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^ser =  null.serializerFor ( cls ) ;^75^^^^^64^104^[REPLACE] ser = map.serializerFor ( cls ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^Class<?> cls = value.Object (  ) ;^73^^^^^64^104^[REPLACE] Class<?> cls = value.getClass (  ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^JsonSerializer<Object> ser = _serializer;^74^^^^^64^104^[REPLACE] PropertySerializerMap map = _dynamicSerializers;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( ser != null )  {^76^^^^^64^104^[REPLACE] if  ( ser == null )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^ser = _findAndAddDynamic ( map, cls, prov ) ;^76^77^78^^^64^104^[ADD] if  ( ser == null )  { ser = _findAndAddDynamic ( map, cls, prov ) ; }^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^String oldName = _name.getValue (  ) ;^73^^^^^64^104^[REPLACE] Class<?> cls = value.getClass (  ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^^73^74^^^^64^104^[ADD] Class<?> cls = value.getClass (  ) ; PropertySerializerMap map = _dynamicSerializers;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( _suppressableValue == null )  {^80^^^^^64^104^[REPLACE] if  ( _suppressableValue != null )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( MARKER_FOR_EMPTY  || 1 )  {^81^^^^^64^104^[REPLACE] if  ( MARKER_FOR_EMPTY == _suppressableValue )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^}  else {^85^^^^^64^104^[REPLACE] } else if  ( _suppressableValue.equals ( value )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^return serializer;^86^^^^^64^104^[REPLACE] return;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( true.isEmpty ( value )  )  {^82^^^^^64^104^[REPLACE] if  ( ser.isEmpty ( value )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^^82^83^84^^^64^104^[ADD] if  ( ser.isEmpty ( value )  )  { return; }^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^return serializer;^83^^^^^64^104^[REPLACE] return;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( true.unwrappingSerializer ( value )  )  {^82^^^^^64^104^[REPLACE] if  ( ser.isEmpty ( value )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( MARKER_FOR_EMPTY  &&  _suppressableValue )  {^81^^^^^64^104^[REPLACE] if  ( MARKER_FOR_EMPTY == _suppressableValue )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^} else if  (   value    )  {^85^^^^^64^104^[REPLACE] } else if  ( _suppressableValue.equals ( value )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^}^85^86^87^^^64^104^[ADD] else if  ( _suppressableValue.equals ( value )  )  { return; }^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( ser .serializeWithType ( bean , jgen , prov )   )  {^82^^^^^64^104^[REPLACE] if  ( ser.isEmpty ( value )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^}  if  (   value    )  {^85^^^^^64^104^[REPLACE] } else if  ( _suppressableValue.equals ( value )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( value  !=  bean )  {^90^^^^^64^104^[REPLACE] if  ( value == bean )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^_handleSelfReference ( bean, ser ) ;^90^91^92^^^64^104^[ADD] if  ( value == bean )  { _handleSelfReference ( bean, ser ) ; }^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^_handleSelfReference ( bean, null ) ;^91^^^^^64^104^[REPLACE] _handleSelfReference ( bean, ser ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( ser.isUnwrappingSerializer (  )  )  {^95^^^^^64^104^[REPLACE] if  ( !ser.isUnwrappingSerializer (  )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( !ser.isUnwrappingSerializer (  )  )  { jgen.writeFieldName ( _name ) ;^96^^^^^64^104^[REPLACE] jgen.writeFieldName ( _name ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( _typeSerializer != false )  {^99^^^^^64^104^[REPLACE] if  ( _typeSerializer == null )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^ser.serialize ( value, jgen, prov ) ;ser.serializeWithType ( value, jgen, prov, _typeSerializer ) ;^99^100^101^102^103^64^104^[ADD] if  ( _typeSerializer == null )  { ser.serialize ( value, jgen, prov ) ; } else { ser.serializeWithType ( value, jgen, prov, _typeSerializer ) ; }^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^serializer = serializer.unwrappingSerializer ( t ) ;^102^^^^^99^103^[REPLACE] ser.serializeWithType ( value, jgen, prov, _typeSerializer ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^ser.serializeWithType ( value, jgen, prov ) ;^100^^^^^64^104^[REPLACE] ser.serialize ( value, jgen, prov ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^super.assignSerializer ( this ) ;^110^^^^^108^118^[REPLACE] super.assignSerializer ( ser ) ;^[METHOD] assignSerializer [TYPE] void [PARAMETER] Object> ser [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true 
[REPLACE]^if  ( _serializer == null )  {^111^^^^^108^118^[REPLACE] if  ( _serializer != null )  {^[METHOD] assignSerializer [TYPE] void [PARAMETER] Object> ser [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true 
[ADD]^NameTransformer t = _nameTransformer;^111^112^113^114^115^108^118^[ADD] if  ( _serializer != null )  { NameTransformer t = _nameTransformer; if  ( _serializer.isUnwrappingSerializer (  )  )  { t = NameTransformer.chainedTransformer ( t,  (  ( UnwrappingBeanSerializer )  _serializer ) ._nameTransformer ) ; }^[METHOD] assignSerializer [TYPE] void [PARAMETER] Object> ser [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true 
[REPLACE]^if  ( !ser.isUnwrappingSerializer (  )  )  {^113^^^^^108^118^[REPLACE] if  ( _serializer.isUnwrappingSerializer (  )  )  {^[METHOD] assignSerializer [TYPE] void [PARAMETER] Object> ser [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true 
[REPLACE]^t = NameTransformer.chainedTransformer ( t,  (  ( UnwrappingBeanSerializer )  serializer ) ._nameTransformer ) ; ;^114^^^^^108^118^[REPLACE] t = NameTransformer.chainedTransformer ( t,  (  ( UnwrappingBeanSerializer )  _serializer ) ._nameTransformer ) ;^[METHOD] assignSerializer [TYPE] void [PARAMETER] Object> ser [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true 
[REPLACE]^serializer = serializer.unwrappingSerializer ( t ) ; ;^116^^^^^108^118^[REPLACE] _serializer = _serializer.unwrappingSerializer ( t ) ;^[METHOD] assignSerializer [TYPE] void [PARAMETER] Object> ser [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true 
[REPLACE]^String newName = transformer.transform ( oldName ) ;^112^^^^^108^118^[REPLACE] NameTransformer t = _nameTransformer;^[METHOD] assignSerializer [TYPE] void [PARAMETER] Object> ser [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true 
[REPLACE]^if  ( _serializer .unwrappingSerializer ( _nameTransformer )   )  {^113^^^^^108^118^[REPLACE] if  ( _serializer.isUnwrappingSerializer (  )  )  {^[METHOD] assignSerializer [TYPE] void [PARAMETER] Object> ser [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true 
[ADD]^^114^115^^^^108^118^[ADD] t = NameTransformer.chainedTransformer ( t,  (  ( UnwrappingBeanSerializer )  _serializer ) ._nameTransformer ) ; }^[METHOD] assignSerializer [TYPE] void [PARAMETER] Object> ser [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true 
[ADD]^^112^113^114^115^^108^118^[ADD] NameTransformer t = _nameTransformer; if  ( _serializer.isUnwrappingSerializer (  )  )  { t = NameTransformer.chainedTransformer ( t,  (  ( UnwrappingBeanSerializer )  _serializer ) ._nameTransformer ) ; }^[METHOD] assignSerializer [TYPE] void [PARAMETER] Object> ser [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JsonSerializer ser  [TYPE]  boolean false  true 
[REPLACE]^JsonSerializer<Object> ser = _serializer;^125^^^^^122^140^[REPLACE] JsonSerializer<Object> serializer;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[ADD]^^125^^^^^122^140^[ADD] JsonSerializer<Object> serializer;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( _nonTrivialBaseType == this )  {^126^^^^^122^140^[REPLACE] if  ( _nonTrivialBaseType != null )  {^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^serializer = provider.findValueSerializer ( subtype, this ) ; ;^130^^^^^122^140^[REPLACE] serializer = provider.findValueSerializer ( type, this ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^serializer = provider.findValueSerializer ( type, this ) ; ;^128^^^^^122^140^[REPLACE] serializer = provider.findValueSerializer ( subtype, this ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^JavaType subtype = provider .findValueSerializer ( subtype , 1 )  ;^127^^^^^122^140^[REPLACE] JavaType subtype = provider.constructSpecializedType ( _nonTrivialBaseType, type ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[ADD]^^127^^^^^122^140^[ADD] JavaType subtype = provider.constructSpecializedType ( _nonTrivialBaseType, type ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[ADD]^^128^^^^^122^140^[ADD] serializer = provider.findValueSerializer ( subtype, this ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^JavaType subtype = provider.findValueSerializer ( _nonTrivialBaseType, type ) ;^127^^^^^122^140^[REPLACE] JavaType subtype = provider.constructSpecializedType ( _nonTrivialBaseType, type ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[ADD]^serializer = provider.findValueSerializer ( subtype, this ) ;^127^128^^^^122^140^[ADD] JavaType subtype = provider.constructSpecializedType ( _nonTrivialBaseType, type ) ; serializer = provider.findValueSerializer ( subtype, this ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^String newName = transformer.transform ( oldName ) ;^132^^^^^122^140^[REPLACE] NameTransformer t = _nameTransformer;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( !ser.isUnwrappingSerializer (  )  )  {^133^^^^^122^140^[REPLACE] if  ( serializer.isUnwrappingSerializer (  )  )  {^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REMOVE]^if  ( _serializer.isUnwrappingSerializer (  )  )  {     t = chainedTransformer ( t,  (  ( UnwrappingBeanSerializer )   ( _serializer )  ) ._nameTransformer ) ; }^133^^^^^122^140^[REMOVE] ^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^t = NameTransformer.chainedTransformer ( t,  (  ( UnwrappingBeanSerializer )  _serializer ) ._nameTransformer ) ; ;^134^^^^^122^140^[REPLACE] t = NameTransformer.chainedTransformer ( t,  (  ( UnwrappingBeanSerializer )  serializer ) ._nameTransformer ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^_serializer = _serializer.unwrappingSerializer ( t ) ; ;^136^^^^^122^140^[REPLACE] serializer = serializer.unwrappingSerializer ( t ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[ADD]^^136^^^^^122^140^[ADD] serializer = serializer.unwrappingSerializer ( t ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^_dynamicSerializers =  _dynamicSerializers.newWith ( null, serializer ) ;^138^^^^^122^140^[REPLACE] _dynamicSerializers = _dynamicSerializers.newWith ( type, serializer ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[ADD]^^138^^^^^122^140^[ADD] _dynamicSerializers = _dynamicSerializers.newWith ( type, serializer ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^return 0;^139^^^^^122^140^[REPLACE] return serializer;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
