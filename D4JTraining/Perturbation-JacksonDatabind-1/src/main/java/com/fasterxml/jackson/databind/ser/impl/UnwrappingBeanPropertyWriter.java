[REPLACE]^protected  NameTransformer _nameTransformer;^24^^^^^^^[REPLACE] protected final NameTransformer _nameTransformer;^ [CLASS] UnwrappingBeanPropertyWriter  
[REPLACE]^JavaType subtype = provider.constructSpecializedType ( _nonTrivialBaseType, type )  ;^65^^^^^64^104^[REPLACE] Object value = get ( bean ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( value != null )  {^66^^^^^64^104^[REPLACE] if  ( value == null )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^return;  ;^69^^^^^64^104^[REPLACE] return;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^Object> serializer  ;^71^^^^^64^104^[REPLACE] JsonSerializer<Object> ser = _serializer;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( ser != null )  {^72^^^^^64^104^[REPLACE] if  ( ser == null )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^Class<?> cls = value.getClass (  ) ;PropertySerializerMap map = _dynamicSerializers;ser = map.serializerFor ( cls ) ;^72^73^74^75^^64^104^[ADD] if  ( ser == null )  { Class<?> cls = value.getClass (  ) ; PropertySerializerMap map = _dynamicSerializers; ser = map.serializerFor ( cls ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( null != false )  {^76^^^^^64^104^[REPLACE] if  ( ser == null )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^ser =  _findAndAddDynamic ( null, cls, prov ) ;^77^^^^^64^104^[REPLACE] ser = _findAndAddDynamic ( map, cls, prov ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^^75^^^^^64^104^[ADD] ser = map.serializerFor ( cls ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^^77^^^^^64^104^[ADD] ser = _findAndAddDynamic ( map, cls, prov ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^Class<?> cls = value.Object (  ) ;^73^^^^^64^104^[REPLACE] Class<?> cls = value.getClass (  ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^JavaType subtype = provider.constructSpecializedType ( _nonTrivialBaseType, type )  ;^74^^^^^64^104^[REPLACE] PropertySerializerMap map = _dynamicSerializers;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if   (  value == null  )   {  ;^76^^^^^64^104^[REPLACE] if  ( ser == null )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^ser =  null.serializerFor ( cls ) ;^75^^^^^64^104^[REPLACE] ser = map.serializerFor ( cls ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^^73^^^^^64^104^[ADD] Class<?> cls = value.getClass (  ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( _suppressableValue == null )  {^80^^^^^64^104^[REPLACE] if  ( _suppressableValue != null )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( MARKER_FOR_EMPTY  ) {^81^^^^^64^104^[REPLACE] if  ( MARKER_FOR_EMPTY == _suppressableValue )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^}  if  ( _suppressableValue.equals ( value )  )  {^85^^^^^64^104^[REPLACE] } else if  ( _suppressableValue.equals ( value )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^}^85^86^87^^^64^104^[ADD] else if  ( _suppressableValue.equals ( value )  )  { return; }^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^return;  ;^86^^^^^64^104^[REPLACE] return;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( true.isEmpty ( value )  )  {^82^^^^^64^104^[REPLACE] if  ( ser.isEmpty ( value )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^return;^82^83^84^^^64^104^[ADD] if  ( ser.isEmpty ( value )  )  { return; }^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^return;  ;^83^^^^^64^104^[REPLACE] return;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( false.unwrappingSerializer ( value )  )  {^82^^^^^64^104^[REPLACE] if  ( ser.isEmpty ( value )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^}   return;^85^86^87^^^64^104^[ADD] else if  ( _suppressableValue.equals ( value )  )  { return; }^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^}  else {^85^^^^^64^104^[REPLACE] } else if  ( _suppressableValue.equals ( value )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( this.unwrappingSerializer ( value )  )  {^82^^^^^64^104^[REPLACE] if  ( ser.isEmpty ( value )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( ser.unwrappingSerializer ( value )  )  {^82^^^^^64^104^[REPLACE] if  ( ser.isEmpty ( value )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( value  !=  bean )  {^90^^^^^64^104^[REPLACE] if  ( value == bean )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[ADD]^^90^91^92^^^64^104^[ADD] if  ( value == bean )  { _handleSelfReference ( bean, ser ) ; }^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^_handleSelfReference ( bean, false ) ;^91^^^^^64^104^[REPLACE] _handleSelfReference ( bean, ser ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( ser.isUnwrappingSerializer (  )  )  {^95^^^^^64^104^[REPLACE] if  ( !ser.isUnwrappingSerializer (  )  )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^provider.findValueSerializer ( subtype, this )  ;^96^^^^^64^104^[REPLACE] jgen.writeFieldName ( _name ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^if  ( null != null )  {^99^^^^^64^104^[REPLACE] if  ( _typeSerializer == null )  {^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^ser .serialize ( value , jgen , prov )  ;^102^^^^^99^103^[REPLACE] ser.serializeWithType ( value, jgen, prov, _typeSerializer ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^ser.serializeWithType ( value, jgen, prov ) ;^100^^^^^64^104^[REPLACE] ser.serialize ( value, jgen, prov ) ;^[METHOD] serializeAsField [TYPE] void [PARAMETER] Object bean JsonGenerator jgen SerializerProvider prov [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  transformer  unwrapper  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  JsonGenerator jgen  [TYPE]  Object bean  value  [TYPE]  Class cls  [TYPE]  JsonSerializer ser  [TYPE]  SerializerProvider prov 
[REPLACE]^Object> ser = _serializer  ;^125^^^^^124^140^[REPLACE] JsonSerializer<Object> serializer;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( _nonTrivialBaseType == null )  {^126^^^^^124^140^[REPLACE] if  ( _nonTrivialBaseType != null )  {^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^serializer = provider.findValueSerializer ( subtype, this )  ;^130^^^^^126^131^[REPLACE] serializer = provider.findValueSerializer ( type, this ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^serializer = provider.findValueSerializer ( type, this )  ;^128^^^^^124^140^[REPLACE] serializer = provider.findValueSerializer ( subtype, this ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[ADD]^^127^^^^^124^140^[ADD] JavaType subtype = provider.constructSpecializedType ( _nonTrivialBaseType, type ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[ADD]^^130^^^^^124^140^[ADD] serializer = provider.findValueSerializer ( type, this ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[ADD]^^127^128^^^^124^140^[ADD] JavaType subtype = provider.constructSpecializedType ( _nonTrivialBaseType, type ) ; serializer = provider.findValueSerializer ( subtype, this ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^JavaType subtype = provider.constructSpecializedType ( _nonTrivialBaseType, type )  ;^132^^^^^124^140^[REPLACE] NameTransformer t = _nameTransformer;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^if  ( null.isUnwrappingSerializer (  )  )  {^133^^^^^124^140^[REPLACE] if  ( serializer.isUnwrappingSerializer (  )  )  {^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[ADD]^^134^135^^^^124^140^[ADD] t = NameTransformer.chainedTransformer ( t,  (  ( UnwrappingBeanSerializer )  serializer ) ._nameTransformer ) ; }^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^t = chainedTransformer ( t,  (  ( UnwrappingBeanSerializer )   ( _serializer )  ) ._nameTransformer )  ;^134^^^^^124^140^[REPLACE] t = NameTransformer.chainedTransformer ( t,  (  ( UnwrappingBeanSerializer )  serializer ) ._nameTransformer ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^_serializer = _serializer.unwrappingSerializer ( t )  ;^136^^^^^124^140^[REPLACE] serializer = serializer.unwrappingSerializer ( t ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^_dynamicSerializers =  _dynamicSerializers.newWith ( false, serializer ) ;^138^^^^^124^140^[REPLACE] _dynamicSerializers = _dynamicSerializers.newWith ( type, serializer ) ;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
[REPLACE]^return serializer;  ;^139^^^^^124^140^[REPLACE] return serializer;^[METHOD] _findAndAddDynamic [TYPE] JsonSerializer [PARAMETER] PropertySerializerMap map Class<?> type SerializerProvider provider [CLASS] UnwrappingBeanPropertyWriter   [TYPE]  NameTransformer _nameTransformer  t  transformer  unwrapper  [TYPE]  JavaType subtype  [TYPE]  boolean false  true  [TYPE]  PropertySerializerMap map  [TYPE]  Class type  [TYPE]  JsonSerializer serializer  [TYPE]  SerializerProvider provider 
