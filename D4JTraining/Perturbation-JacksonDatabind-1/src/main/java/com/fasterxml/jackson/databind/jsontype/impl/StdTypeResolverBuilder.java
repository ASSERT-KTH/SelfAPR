[REPLACE]^private JsonTypeInfo.Id _idType;^24^^^^^^^[REPLACE] protected JsonTypeInfo.Id _idType;^ [CLASS] StdTypeResolverBuilder  
[REPLACE]^private JsonTypeInfo.As _includeAs;^26^^^^^^^[REPLACE] protected JsonTypeInfo.As _includeAs;^ [CLASS] StdTypeResolverBuilder  
[REPLACE]^protected  char  _typeProperty;^28^^^^^^^[REPLACE] protected String _typeProperty;^ [CLASS] StdTypeResolverBuilder  
[REPLACE]^protected boolean _typeIdVisible ;^33^^^^^^^[REPLACE] protected boolean _typeIdVisible = false;^ [CLASS] StdTypeResolverBuilder  
[REPLACE]^private Class<?> _defaultImpl;^39^^^^^^^[REPLACE] protected Class<?> _defaultImpl;^ [CLASS] StdTypeResolverBuilder  
[REPLACE]^private TypeIdResolver _customIdResolver;^43^^^^^^^[REPLACE] protected TypeIdResolver _customIdResolver;^ [CLASS] StdTypeResolverBuilder  
[REPLACE]^if  ( _idType  ||  JsonTypeInfo.Id.NONE )  {^75^^^^^74^92^[REPLACE] if  ( _idType == JsonTypeInfo.Id.NONE )  {^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return null;  ;^76^^^^^74^92^[REPLACE] return null;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return this;^76^^^^^74^92^[REPLACE] return null;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, false ) ;^78^^^^^74^92^[REPLACE] TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsArrayTypeSerializer ( idRes, this ) ;^81^^^^^74^92^[REPLACE] return new AsArrayTypeSerializer ( idRes, null ) ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsPropertyTypeSerializer ( idRes, false, _typeProperty ) ;^83^84^^^^74^92^[REPLACE] return new AsPropertyTypeSerializer ( idRes, null, _typeProperty ) ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsWrapperTypeSerializer ( idRes, true ) ;^86^^^^^74^92^[REPLACE] return new AsWrapperTypeSerializer ( idRes, null ) ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsExternalTypeSerializer ( _customIdResolver, true, _typeProperty ) ;^88^89^^^^74^92^[REPLACE] return new AsExternalTypeSerializer ( idRes, null, _typeProperty ) ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^throw new IllegalStateException (  ( "Do not know how to construct standard type id resolver for idType: " +  ( _idType )  )  )  ;^91^^^^^74^92^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^if  ( _idType  &&  JsonTypeInfo.Id.NONE )  {^98^^^^^97^120^[REPLACE] if  ( _idType == JsonTypeInfo.Id.NONE )  {^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[ADD]^return null;^98^99^100^^^97^120^[ADD] if  ( _idType == JsonTypeInfo.Id.NONE )  { return null; }^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return this;^99^^^^^97^120^[REPLACE] return null;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return true;^99^^^^^97^120^[REPLACE] return null;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false )  ;^102^^^^^97^120^[REPLACE] TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsArrayTypeDeserializer ( baseType, _customIdResolver, _typeProperty, _typeIdVisible, _defaultImpl ) ;^107^108^^^^97^120^[REPLACE] return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsWrapperTypeDeserializer  (  baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl  )  ;  ;^110^111^^^^97^120^[REPLACE] return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsWrapperTypeDeserializer ( baseType, _customIdResolver, _typeProperty, _typeIdVisible, _defaultImpl ) ;^113^114^^^^97^120^[REPLACE] return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsWrapperTypeDeserializer  (  baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl  )  ;  ;^116^117^^^^97^120^[REPLACE] return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return ;^119^^^^^97^120^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^if  ( _customIdResolver == null )  {^196^^^^^194^214^[REPLACE] if  ( _customIdResolver != null )  {^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return _customIdResolver;  ;^197^^^^^194^214^[REPLACE] return _customIdResolver;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^if  ( _idType != this )  {^199^^^^^194^214^[REPLACE] if  ( _idType == null )  {^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[ADD]^^200^^^^^194^214^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^throw new IllegalArgumentException ( "includeAs can not be null" )  ;^200^^^^^194^214^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new ClassNameIdResolver ( baseType, true.getTypeFactory (  )  ) ;^204^^^^^194^214^[REPLACE] return new ClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new MinimalClassNameIdResolver ( baseType, 0.getTypeFactory (  )  ) ;^206^^^^^194^214^[REPLACE] return new MinimalClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, true ) ;^208^^^^^194^214^[REPLACE] return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return false;^210^^^^^194^214^[REPLACE] return null;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return ;^213^^^^^194^214^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
