[REPLACE]^protected boolean _typeIdVisible ;^33^^^^^^^[REPLACE] protected boolean _typeIdVisible = false;^ [CLASS] StdTypeResolverBuilder  
[REPLACE]^private TypeIdResolver _customIdResolver;^43^^^^^^^[REPLACE] protected TypeIdResolver _customIdResolver;^ [CLASS] StdTypeResolverBuilder  
[REPLACE]^return new StdTypeResolverBuilder (  ) .inclusion ( JsonTypeInfo.Id.NONE, null ) ;^54^^^^^53^55^[REPLACE] return new StdTypeResolverBuilder (  ) .init ( JsonTypeInfo.Id.NONE, null ) ;^[METHOD] noTypeInfoBuilder [TYPE] StdTypeResolverBuilder [PARAMETER] [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver 
[REPLACE]^if  ( idType != null )  {^61^^^^^58^69^[REPLACE] if  ( idType == null )  {^[METHOD] init [TYPE] StdTypeResolverBuilder [PARAMETER] Id idType TypeIdResolver idRes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return ;^62^^^^^58^69^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] init [TYPE] StdTypeResolverBuilder [PARAMETER] Id idType TypeIdResolver idRes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^62^^^^^58^69^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] init [TYPE] StdTypeResolverBuilder [PARAMETER] Id idType TypeIdResolver idRes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^_idType =  null;^64^^^^^58^69^[REPLACE] _idType = idType;^[METHOD] init [TYPE] StdTypeResolverBuilder [PARAMETER] Id idType TypeIdResolver idRes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^_customIdResolver =  null;^65^^^^^58^69^[REPLACE] _customIdResolver = idRes;^[METHOD] init [TYPE] StdTypeResolverBuilder [PARAMETER] Id idType TypeIdResolver idRes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^typeIdPropName = _idType.getDefaultPropertyName (  ) ; ;^67^^^^^58^69^[REPLACE] _typeProperty = idType.getDefaultPropertyName (  ) ;^[METHOD] init [TYPE] StdTypeResolverBuilder [PARAMETER] Id idType TypeIdResolver idRes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return null;^68^^^^^58^69^[REPLACE] return this;^[METHOD] init [TYPE] StdTypeResolverBuilder [PARAMETER] Id idType TypeIdResolver idRes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^if  ( _idType  &&  JsonTypeInfo.Id.NONE )  {^75^^^^^72^92^[REPLACE] if  ( _idType == JsonTypeInfo.Id.NONE )  {^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return false;^76^^^^^72^92^[REPLACE] return null;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return this;^76^^^^^72^92^[REPLACE] return null;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, false ) ;^78^^^^^72^92^[REPLACE] TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsArrayTypeSerializer ( _customIdResolver, this ) ;^81^^^^^72^92^[REPLACE] return new AsArrayTypeSerializer ( idRes, null ) ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsPropertyTypeSerializer ( _customIdResolver, true, _typeProperty ) ;^83^84^^^^72^92^[REPLACE] return new AsPropertyTypeSerializer ( idRes, null, _typeProperty ) ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsWrapperTypeSerializer ( idRes, false ) ;^86^^^^^72^92^[REPLACE] return new AsWrapperTypeSerializer ( idRes, null ) ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsExternalTypeSerializer ( _customIdResolver, true, _typeProperty ) ;^88^89^^^^72^92^[REPLACE] return new AsExternalTypeSerializer ( idRes, null, _typeProperty ) ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^91^^^^^72^92^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[ADD]^^91^^^^^72^92^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] buildTypeSerializer [TYPE] TypeSerializer [PARAMETER] SerializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  SerializationConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^if  ( _idType  !=  JsonTypeInfo.Id.NONE )  {^98^^^^^95^120^[REPLACE] if  ( _idType == JsonTypeInfo.Id.NONE )  {^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return true;^99^^^^^95^120^[REPLACE] return null;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return this;^99^^^^^95^120^[REPLACE] return null;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, false ) ;^102^^^^^95^120^[REPLACE] TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[ADD]^^102^^^^^95^120^[ADD] TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^107^108^^^^95^120^[REPLACE] return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^110^111^^^^95^120^[REPLACE] return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^113^114^^^^95^120^[REPLACE] return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsExternalTypeDeserializer ( baseType, _customIdResolver, _typeProperty, _typeIdVisible, _defaultImpl ) ;^116^117^^^^95^120^[REPLACE] return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^119^^^^^95^120^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] buildTypeDeserializer [TYPE] TypeDeserializer [PARAMETER] DeserializationConfig config JavaType baseType NamedType> subtypes [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  [TYPE]  DeserializationConfig config  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^if  ( includeAs != null )  {^130^^^^^129^135^[REPLACE] if  ( includeAs == null )  {^[METHOD] inclusion [TYPE] StdTypeResolverBuilder [PARAMETER] As includeAs [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[ADD]^^130^131^132^^^129^135^[ADD] if  ( includeAs == null )  { throw new IllegalArgumentException  (" ")  ; }^[METHOD] inclusion [TYPE] StdTypeResolverBuilder [PARAMETER] As includeAs [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^throw new IllegalStateException  (" ")  ; ;^131^^^^^129^135^[REPLACE] throw new IllegalArgumentException  (" ")  ;^[METHOD] inclusion [TYPE] StdTypeResolverBuilder [PARAMETER] As includeAs [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^_includeAs =  this;^133^^^^^129^135^[REPLACE] _includeAs = includeAs;^[METHOD] inclusion [TYPE] StdTypeResolverBuilder [PARAMETER] As includeAs [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return null;^134^^^^^129^135^[REPLACE] return this;^[METHOD] inclusion [TYPE] StdTypeResolverBuilder [PARAMETER] As includeAs [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^if  ( typeIdPropName == this || typeIdPropName.length (  )  *  2 == 0 )  {^145^^^^^142^150^[REPLACE] if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[METHOD] typeProperty [TYPE] StdTypeResolverBuilder [PARAMETER] String typeIdPropName [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^_typeProperty = idType.getDefaultPropertyName (  ) ; ;^146^^^^^142^150^[REPLACE] typeIdPropName = _idType.getDefaultPropertyName (  ) ;^[METHOD] typeProperty [TYPE] StdTypeResolverBuilder [PARAMETER] String typeIdPropName [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^_typeProperty =  null;^148^^^^^142^150^[REPLACE] _typeProperty = typeIdPropName;^[METHOD] typeProperty [TYPE] StdTypeResolverBuilder [PARAMETER] String typeIdPropName [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return null;^149^^^^^142^150^[REPLACE] return this;^[METHOD] typeProperty [TYPE] StdTypeResolverBuilder [PARAMETER] String typeIdPropName [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^_defaultImpl =  this;^155^^^^^153^157^[REPLACE] _defaultImpl = defaultImpl;^[METHOD] defaultImpl [TYPE] StdTypeResolverBuilder [PARAMETER] Class<?> defaultImpl [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[ADD]^^155^^^^^153^157^[ADD] _defaultImpl = defaultImpl;^[METHOD] defaultImpl [TYPE] StdTypeResolverBuilder [PARAMETER] Class<?> defaultImpl [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return null;^156^^^^^153^157^[REPLACE] return this;^[METHOD] defaultImpl [TYPE] StdTypeResolverBuilder [PARAMETER] Class<?> defaultImpl [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  true  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^_typeIdVisible =  true;^161^^^^^160^163^[REPLACE] _typeIdVisible = isVisible;^[METHOD] typeIdVisibility [TYPE] StdTypeResolverBuilder [PARAMETER] boolean isVisible [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  isVisible  true  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return null;^162^^^^^160^163^[REPLACE] return this;^[METHOD] typeIdVisibility [TYPE] StdTypeResolverBuilder [PARAMETER] boolean isVisible [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  isVisible  true  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsExternalTypeSerializer ( idRes, null, _typeProperty ) ;^171^^^^^^^[REPLACE] public String getTypeProperty (  )  { return _typeProperty; }^[METHOD] getTypeProperty [TYPE] String [PARAMETER] [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  isVisible  true  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return this;^175^^^^^174^176^[REPLACE] return _defaultImpl;^[METHOD] getDefaultImpl [TYPE] Class [PARAMETER] [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  isVisible  true  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^178^^^^^^^[REPLACE] public boolean isTypeIdVisible (  )  { return _typeIdVisible; }^[METHOD] isTypeIdVisible [TYPE] boolean [PARAMETER] [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  boolean _typeIdVisible  false  isVisible  true  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^if  ( _customIdResolver == null )  {^196^^^^^191^214^[REPLACE] if  ( _customIdResolver != null )  {^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return _defaultImpl;^197^^^^^191^214^[REPLACE] return _customIdResolver;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^if  ( this != null )  {^199^^^^^191^214^[REPLACE] if  ( _idType == null )  {^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^200^^^^^191^214^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[ADD]^^200^^^^^191^214^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new MinimalClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^204^^^^^191^214^[REPLACE] return new ClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return new MinimalClassNameIdResolver ( baseType, 1.getTypeFactory (  )  ) ;^206^^^^^191^214^[REPLACE] return new MinimalClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return TypeNameIdResolver.construct ( config, baseType, 0, forSer, forDeser ) ;^208^^^^^191^214^[REPLACE] return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^return false;^210^^^^^191^214^[REPLACE] return null;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
[REPLACE]^throw new IllegalArgumentException  (" ")  ; ;^213^^^^^191^214^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] idResolver [TYPE] TypeIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] StdTypeResolverBuilder   [TYPE]  As _includeAs  includeAs  [TYPE]  JavaType baseType  [TYPE]  boolean _typeIdVisible  false  forDeser  forSer  isVisible  true  [TYPE]  MapperConfig config  [TYPE]  Collection subtypes  [TYPE]  Class _defaultImpl  defaultImpl  [TYPE]  Id _idType  idType  [TYPE]  String _typeProperty  typeIdPropName  [TYPE]  TypeIdResolver _customIdResolver  idRes 
