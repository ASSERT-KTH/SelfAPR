[REPLACE]^private static final long serialVersionUID ;^19^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] StdSubtypeResolver  
[REPLACE]^Class<?> rawBase =  ( baseType != null )  ? property.getRawType (  )  : baseType.getRawClass (  ) ;^75^^^^^73^104^[REPLACE] Class<?> rawBase =  ( baseType == null )  ? property.getRawType (  )  : baseType.getRawClass (  ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^^77^^^^^73^104^[ADD] HashMap<NamedType, NamedType> collected = new HashMap<NamedType, NamedType> (  ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( _registeredSubtypes == null )  {^79^^^^^73^104^[REPLACE] if  ( _registeredSubtypes != null )  {^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if   (  _registeredSubtypes == null  )   {  ;^82^^^^^73^104^[REPLACE] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( rootType.getType (  ) , ai, config ) ;^83^^^^^73^104^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^^80^81^82^83^84^79^87^[ADD] for  ( NamedType subtype : _registeredSubtypes )  {  if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  { AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ; _collectAndResolve ( curr, subtype, config, ai, collected ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType type  ;^80^^^^^79^87^[REPLACE] for  ( NamedType subtype : _registeredSubtypes )  {^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass ac = constructWithoutSuperTypes ( nt.getType (  ) , ai, config )  ;^83^^^^^79^87^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( rawBase.isAssignableFrom ( subtype.hasName (  )  )  )  {^82^^^^^73^104^[REPLACE] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ;_collectAndResolve ( curr, subtype, config, ai, collected ) ;^82^83^84^85^^73^104^[ADD] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  { AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ; _collectAndResolve ( curr, subtype, config, ai, collected ) ; }^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, null ) ;^83^^^^^73^104^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType> st = ai.findSubtypes ( annotatedType )  ;^90^^^^^73^104^[REPLACE] Collection<NamedType> st = ai.findSubtypes ( property ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( st == null )  {^91^^^^^73^104^[REPLACE] if  ( st != null )  {^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType type  ;^92^^^^^91^96^[REPLACE] for  ( NamedType nt : st )  {^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass curr = constructWithoutSuperTypes ( subtype.getType (  ) , ai, config )  ;^93^^^^^91^96^[REPLACE] AnnotatedClass ac = AnnotatedClass.constructWithoutSuperTypes ( nt.getType (  ) , ai, config ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^for  ( NamedType subtype : st )  {^92^^^^^91^96^[REPLACE] for  ( NamedType nt : st )  {^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType rootType = new NamedType ( rawBase, true ) ;^98^^^^^73^104^[REPLACE] NamedType rootType = new NamedType ( rawBase, null ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass ac = constructWithoutSuperTypes ( nt.getType (  ) , ai, config )  ;^99^^^^^73^104^[REPLACE] AnnotatedClass ac = AnnotatedClass.constructWithoutSuperTypes ( rawBase, ai, config ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^_collectAndResolve ( ac, nt, config, ai, collected )  ;^102^^^^^73^104^[REPLACE] _collectAndResolve ( ac, rootType, config, ai, collected ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^return  new NamedType> (  )   ) ;^103^^^^^73^104^[REPLACE] return new ArrayList<NamedType> ( collected.values (  )  ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedMember property MapperConfig<?> config AnnotationIntrospector ai JavaType baseType [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap collected  [TYPE]  AnnotatedClass ac  curr  [TYPE]  NamedType nt  rootType  subtype  [TYPE]  AnnotatedMember property  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType, NamedType> collected = new NamedType, NamedType> (  )  ;^110^^^^^109^126^[REPLACE] HashMap<NamedType, NamedType> subtypes = new HashMap<NamedType, NamedType> (  ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( _registeredSubtypes == null )  {^112^^^^^109^126^[REPLACE] if  ( _registeredSubtypes != null )  {^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if   (  _registeredSubtypes == null  )   {  ;^116^^^^^109^126^[REPLACE] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^^117^^^^^109^126^[ADD] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^for  ( NamedType rootType : _registeredSubtypes )  {^114^^^^^112^121^[REPLACE] for  ( NamedType subtype : _registeredSubtypes )  {^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^int len = classes.length  ;^113^^^^^112^121^[REPLACE] Class<?> rawBase = type.getRawType (  ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType type  ;^114^^^^^112^121^[REPLACE] for  ( NamedType subtype : _registeredSubtypes )  {^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass ac = constructWithoutSuperTypes ( nt.getType (  ) , ai, config )  ;^117^^^^^112^121^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( rawBase.isAssignableFrom ( subtype.hasName (  )  )  )  {^116^^^^^109^126^[REPLACE] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  {^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[ADD]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ;_collectAndResolve ( curr, subtype, config, ai, subtypes ) ;^116^117^118^119^^109^126^[ADD] if  ( rawBase.isAssignableFrom ( subtype.getType (  )  )  )  { AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ; _collectAndResolve ( curr, subtype, config, ai, subtypes ) ; }^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.hasName (  ) , ai, config ) ;^117^^^^^109^126^[REPLACE] AnnotatedClass curr = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType[] types = new length]  ;^123^^^^^109^126^[REPLACE] NamedType rootType = new NamedType ( type.getRawType (  ) , null ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^_collectAndResolve ( ac, rootType, config, ai, collected )  ;^124^^^^^109^126^[REPLACE] _collectAndResolve ( type, rootType, config, ai, subtypes ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^return  new NamedType> (  )   ) ;^125^^^^^109^126^[REPLACE] return new ArrayList<NamedType> ( subtypes.values (  )  ) ;^[METHOD] collectAndResolveSubtypes [TYPE] Collection [PARAMETER] AnnotatedClass type MapperConfig<?> config AnnotationIntrospector ai [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass curr  type  [TYPE]  HashMap subtypes  [TYPE]  NamedType rootType  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Class rawBase  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( namedType.hasName (  )  )  {^141^^^^^140^172^[REPLACE] if  ( !namedType.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( name == null )  {^143^^^^^140^172^[REPLACE] if  ( name != null )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^namedType =  new NamedType ( subtype.getType (  ) , name ) ;^144^^^^^140^172^[REPLACE] namedType = new NamedType ( namedType.getType (  ) , name ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^namedType =  new NamedType ( null.getType (  ) , name ) ;^144^^^^^140^172^[REPLACE] namedType = new NamedType ( namedType.getType (  ) , name ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^String name = ai .findSubtypes ( null )  ;^142^^^^^140^172^[REPLACE] String name = ai.findTypeName ( annotatedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( name == this )  {^143^^^^^140^172^[REPLACE] if  ( name != null )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^^144^^^^^140^172^[ADD] namedType = new NamedType ( namedType.getType (  ) , name ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^String name = ai .findSubtypes ( true )  ;^142^^^^^140^172^[REPLACE] String name = ai.findTypeName ( annotatedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( null.containsKey ( namedType )  )  {^149^^^^^140^172^[REPLACE] if  ( collectedSubtypes.containsKey ( namedType )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if   (  !prev.hasName  (    )    )   {  ;^151^^^^^140^172^[REPLACE] if  ( namedType.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^^151^152^153^154^155^140^172^[ADD] if  ( namedType.hasName (  )  )  { NamedType prev = collectedSubtypes.get ( namedType ) ; if  ( !prev.hasName (  )  )  { collectedSubtypes.put ( namedType, namedType ) ; }^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if   (  namedType.hasName  (    )    )   {  ;^153^^^^^140^172^[REPLACE] if  ( !prev.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^collectedSubtypes.put ( namedType, namedType ) ;^153^154^155^^^140^172^[ADD] if  ( !prev.hasName (  )  )  { collectedSubtypes.put ( namedType, namedType ) ; }^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^collectedSubtypes.put ( subtype, namedType ) ;^154^^^^^140^172^[REPLACE] collectedSubtypes.put ( namedType, namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType prev = collectedSubtypes.containsKey ( subtype ) ;^152^^^^^140^172^[REPLACE] NamedType prev = collectedSubtypes.get ( namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( !prev.NamedType (  )  )  {^153^^^^^140^172^[REPLACE] if  ( !prev.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^collectedSubtypes.get ( namedType )  ;^154^^^^^140^172^[REPLACE] collectedSubtypes.put ( namedType, namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^return;  ;^157^^^^^140^172^[REPLACE] return;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^^152^^^^^140^172^[ADD] NamedType prev = collectedSubtypes.get ( namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( prev.hasName (  )  )  {^153^^^^^140^172^[REPLACE] if  ( !prev.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType prev = null.get ( namedType ) ;^152^^^^^140^172^[REPLACE] NamedType prev = collectedSubtypes.get ( namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^collectedSubtypes.get ( namedType )  ;^160^^^^^140^172^[REPLACE] collectedSubtypes.put ( namedType, namedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^^161^^^^^140^172^[ADD] Collection<NamedType> st = ai.findSubtypes ( annotatedType ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( st == null ) {^162^^^^^140^172^[REPLACE] if  ( st != null && !st.isEmpty (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^if   (  namedType.hasName  (    )    )   {  ;^166^^^^^140^172^[REPLACE] if  ( !subtype.hasName (  )  )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^subtype =  new NamedType ( namedType.getType (  ) , ai.findTypeName ( namedTypeClass )  ) ;^167^^^^^140^172^[REPLACE] subtype = new NamedType ( subtype.getType (  ) , ai.findTypeName ( subtypeClass )  ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^namedType = new NamedType ( namedType.getType (  ) , name )  ;^167^^^^^162^171^[REPLACE] subtype = new NamedType ( subtype.getType (  ) , ai.findTypeName ( subtypeClass )  ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^NamedType type  ;^163^^^^^162^171^[REPLACE] for  ( NamedType subtype : st )  {^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass namedTypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ;^164^^^^^162^171^[REPLACE] AnnotatedClass subtypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[ADD]^subtype = new NamedType ( subtype.getType (  ) , ai.findTypeName ( subtypeClass )  ) ;^166^167^168^^^140^172^[ADD] if  ( !subtype.hasName (  )  )  { subtype = new NamedType ( subtype.getType (  ) , ai.findTypeName ( subtypeClass )  ) ; }^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^subtype =  new NamedType ( null.getType (  ) , ai.findTypeName ( nullClass )  ) ;^167^^^^^140^172^[REPLACE] subtype = new NamedType ( subtype.getType (  ) , ai.findTypeName ( subtypeClass )  ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^subtype =  new NamedType ( namedType.getType (  ) , ai.findTypeName ( namedTypeClass )  ) ;^167^^^^^162^171^[REPLACE] subtype = new NamedType ( subtype.getType (  ) , ai.findTypeName ( subtypeClass )  ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
[REPLACE]^AnnotatedClass ac = constructWithoutSuperTypes ( nt.getType (  ) , ai, config )  ;^164^^^^^162^171^[REPLACE] AnnotatedClass subtypeClass = AnnotatedClass.constructWithoutSuperTypes ( subtype.getType (  ) , ai, config ) ;^[METHOD] _collectAndResolve [TYPE] void [PARAMETER] AnnotatedClass annotatedType NamedType namedType MapperConfig<?> config AnnotationIntrospector ai NamedType> collectedSubtypes [CLASS] StdSubtypeResolver   [TYPE]  LinkedHashSet _registeredSubtypes  [TYPE]  boolean false  true  [TYPE]  AnnotatedClass annotatedType  subtypeClass  [TYPE]  HashMap collectedSubtypes  [TYPE]  NamedType namedType  prev  subtype  [TYPE]  AnnotationIntrospector ai  [TYPE]  MapperConfig config  [TYPE]  Collection st  [TYPE]  String name  [TYPE]  long serialVersionUID 
