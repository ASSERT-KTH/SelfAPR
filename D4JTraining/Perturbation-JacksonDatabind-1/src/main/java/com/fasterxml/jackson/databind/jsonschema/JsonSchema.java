[REPLACE]^this.schema =  null;^38^^^^^36^39^[REPLACE] this.schema = schema;^[METHOD] <init> [TYPE] ObjectNode) [PARAMETER] ObjectNode schema [CLASS] JsonSchema   [TYPE]  ObjectNode schema  [TYPE]  boolean false  true 
[REPLACE]^return this.schema.toString (  ) ;^53^^^^^51^54^[REPLACE] return schema;^[METHOD] getSchemaNode [TYPE] ObjectNode [PARAMETER] [CLASS] JsonSchema   [TYPE]  ObjectNode schema  [TYPE]  boolean false  true 
[REPLACE]^return this.schema .hashCode (  )  ;^59^^^^^57^60^[REPLACE] return this.schema.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] JsonSchema   [TYPE]  ObjectNode schema  [TYPE]  boolean false  true 
[REPLACE]^return schema.toString (  ) ;^65^^^^^63^66^[REPLACE] return schema.hashCode (  ) ;^[METHOD] hashCode [TYPE] int [PARAMETER] [CLASS] JsonSchema   [TYPE]  ObjectNode schema  [TYPE]  boolean false  true 
[REPLACE]^if  ( o  ||  this )  return false;^71^^^^^69^80^[REPLACE] if  ( o == this )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[ADD]^^71^72^73^^75^69^80^[ADD] if  ( o == this )  return true; if  ( o == null )  return false; if  ( ! ( o instanceof JsonSchema )  )  return false; JsonSchema other =  ( JsonSchema )  o;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[REPLACE]^if  ( o == this )  return false;^71^^^^^69^80^[REPLACE] if  ( o == this )  return true;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[REPLACE]^if  ( o != null )  return false;^72^^^^^69^80^[REPLACE] if  ( o == null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[REPLACE]^if  ( o == null )  return true;^72^^^^^69^80^[REPLACE] if  ( o == null )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[REPLACE]^if  ( ! ! ( o instanceof JsonSchema )  )  return false;^73^^^^^69^80^[REPLACE] if  ( ! ( o instanceof JsonSchema )  )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[ADD]^^73^74^75^76^77^69^80^[ADD] if  ( ! ( o instanceof JsonSchema )  )  return false;  JsonSchema other =  ( JsonSchema )  o; if  ( schema == null )  { return other.schema == null;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[REPLACE]^if  ( ! ( o instanceof JsonSchema )  )  return true;^73^^^^^69^80^[REPLACE] if  ( ! ( o instanceof JsonSchema )  )  return false;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[REPLACE]^ObjectNode objectNode = JsonNodeFactory.instance.objectNode (  ) ;^75^^^^^69^80^[REPLACE] JsonSchema other =  ( JsonSchema )  o;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[REPLACE]^if  ( schema != null )  {^76^^^^^69^80^[REPLACE] if  ( schema == null )  {^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[REPLACE]^return schema != null;;^77^^^^^69^80^[REPLACE] return other.schema == null;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[REPLACE]^return true ;^77^^^^^69^80^[REPLACE] return other.schema == null;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[REPLACE]^return schema .equals ( o )  ;^79^^^^^69^80^[REPLACE] return schema.equals ( other.schema ) ;^[METHOD] equals [TYPE] boolean [PARAMETER] Object o [CLASS] JsonSchema   [TYPE]  Object o  [TYPE]  boolean false  true  [TYPE]  ObjectNode schema  [TYPE]  JsonSchema other 
[REPLACE]^JsonSchema other =  ( JsonSchema )  o;^89^^^^^87^94^[REPLACE] ObjectNode objectNode = JsonNodeFactory.instance.objectNode (  ) ;^[METHOD] getDefaultSchemaNode [TYPE] JsonNode [PARAMETER] [CLASS] JsonSchema   [TYPE]  ObjectNode objectNode  schema  [TYPE]  boolean false  true 
[REPLACE]^objectNode .equals ( null )  ;^90^^^^^87^94^[REPLACE] objectNode.put ( "type", "any" ) ;^[METHOD] getDefaultSchemaNode [TYPE] JsonNode [PARAMETER] [CLASS] JsonSchema   [TYPE]  ObjectNode objectNode  schema  [TYPE]  boolean false  true 
[ADD]^^90^^^^^87^94^[ADD] objectNode.put ( "type", "any" ) ;^[METHOD] getDefaultSchemaNode [TYPE] JsonNode [PARAMETER] [CLASS] JsonSchema   [TYPE]  ObjectNode objectNode  schema  [TYPE]  boolean false  true 
[REPLACE]^return schema;^93^^^^^87^94^[REPLACE] return objectNode;^[METHOD] getDefaultSchemaNode [TYPE] JsonNode [PARAMETER] [CLASS] JsonSchema   [TYPE]  ObjectNode objectNode  schema  [TYPE]  boolean false  true 
