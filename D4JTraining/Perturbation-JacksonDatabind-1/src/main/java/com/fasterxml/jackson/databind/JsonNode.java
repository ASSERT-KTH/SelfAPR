[REPLACE]^public int size (  )  { return 0 ; }^74^^^^^^^[REPLACE] public int size (  )  { return 0; }^[METHOD] size [TYPE] int [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return true;^81^^^^^77^85^[REPLACE] return false;^[METHOD] isValueNode [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return false;^83^^^^^77^85^[REPLACE] return true;^[METHOD] isValueNode [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^JsonNode n = get ( index ) ;^89^^^^^88^91^[REPLACE] final JsonNodeType type = getNodeType (  ) ;^[METHOD] isContainerNode [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  JsonNodeType type 
[REPLACE]^return type ;^90^^^^^88^91^[REPLACE] return type == JsonNodeType.OBJECT || type == JsonNodeType.ARRAY;^[METHOD] isContainerNode [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  JsonNodeType type 
[REPLACE]^return getNodeType (  )   &&  JsonNodeType.MISSING;^95^^^^^94^96^[REPLACE] return getNodeType (  )  == JsonNodeType.MISSING;^[METHOD] isMissingNode [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return getNodeType (  )   !=  JsonNodeType.ARRAY;;^100^^^^^99^101^[REPLACE] return getNodeType (  )  == JsonNodeType.ARRAY;^[METHOD] isArray [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return true ;^105^^^^^104^106^[REPLACE] return getNodeType (  )  == JsonNodeType.OBJECT;^[METHOD] isObject [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public JsonNode get ( String fieldName )  { return true; }^148^^^^^^^[REPLACE] public JsonNode get ( String fieldName )  { return null; }^[METHOD] get [TYPE] JsonNode [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  String fieldName 
[REPLACE]^return getNodeType (  )  == JsonNodeType.NULL;^175^^^^^174^176^[REPLACE] return EmptyIterator.instance (  ) ;^[METHOD] fieldNames [TYPE] Iterator [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return getNodeType (  )   ||  JsonNodeType.POJO;^204^^^^^203^205^[REPLACE] return getNodeType (  )  == JsonNodeType.POJO;^[METHOD] isPojo [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^returnfalse (  )   ||  JsonNodeType.NUMBER;^211^^^^^210^212^[REPLACE] return getNodeType (  )  == JsonNodeType.NUMBER;^[METHOD] isNumber [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public boolean isIntegralNumber (  )  { return true; }^219^^^^^^^[REPLACE] public boolean isIntegralNumber (  )  { return false; }^[METHOD] isIntegralNumber [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public boolean isFloatingPointNumber (  )  { return true; }^225^^^^^^^[REPLACE] public boolean isFloatingPointNumber (  )  { return false; }^[METHOD] isFloatingPointNumber [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public boolean isShort (  )  { return true; }^237^^^^^^^[REPLACE] public boolean isShort (  )  { return false; }^[METHOD] isShort [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public boolean isInt (  )  { return true; }^249^^^^^^^[REPLACE] public boolean isInt (  )  { return false; }^[METHOD] isInt [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public boolean isLong (  )  { return true; }^261^^^^^^^[REPLACE] public boolean isLong (  )  { return false; }^[METHOD] isLong [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public boolean isFloat (  )  { return true; }^266^^^^^^^[REPLACE] public boolean isFloat (  )  { return false; }^[METHOD] isFloat [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public boolean isDouble (  )  { return true; }^268^^^^^^^[REPLACE] public boolean isDouble (  )  { return false; }^[METHOD] isDouble [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public boolean isBigDecimal (  )  { return true; }^269^^^^^^^[REPLACE] public boolean isBigDecimal (  )  { return false; }^[METHOD] isBigDecimal [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public boolean isBigInteger (  )  { return true; }^270^^^^^^^[REPLACE] public boolean isBigInteger (  )  { return false; }^[METHOD] isBigInteger [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return getNodeType (  )   !=  JsonNodeType.STRING;;^277^^^^^276^278^[REPLACE] return getNodeType (  )  == JsonNodeType.STRING;^[METHOD] isTextual [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return null (  )   !=  JsonNodeType.BOOLEAN;;^285^^^^^284^286^[REPLACE] return getNodeType (  )  == JsonNodeType.BOOLEAN;^[METHOD] isBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return false (  )   ||  JsonNodeType.NULL;^293^^^^^292^294^[REPLACE] return getNodeType (  )  == JsonNodeType.NULL;^[METHOD] isNull [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return getNodeType (  )   !=  JsonNodeType.BINARY;;^305^^^^^304^306^[REPLACE] return getNodeType (  )  == JsonNodeType.BINARY;^[METHOD] isBinary [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public boolean canConvertToInt (  )  { return true; }^317^^^^^^^[REPLACE] public boolean canConvertToInt (  )  { return false; }^[METHOD] canConvertToInt [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public boolean canConvertToLong (  )  { return true; }^328^^^^^^^[REPLACE] public boolean canConvertToLong (  )  { return false; }^[METHOD] canConvertToLong [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public String textValue (  )  { return false; }^346^^^^^^^[REPLACE] public String textValue (  )  { return null; }^[METHOD] textValue [TYPE] String [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return false;^359^^^^^358^360^[REPLACE] return null;^[METHOD] binaryValue [TYPE] byte[] [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public boolean booleanValue (  )  { return true; }^370^^^^^^^[REPLACE] public boolean booleanValue (  )  { return false; }^[METHOD] booleanValue [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public Number numberValue (  )  { return true; }^380^^^^^^^[REPLACE] public Number numberValue (  )  { return null; }^[METHOD] numberValue [TYPE] Number [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public short shortValue (  )  { return 3; }^392^^^^^^^[REPLACE] public short shortValue (  )  { return 0; }^[METHOD] shortValue [TYPE] short [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public long longValue (  )  { return 0L; }^404^^^^^^^[REPLACE] public int intValue (  )  { return 0; }^[METHOD] intValue [TYPE] int [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public long longValue (  )  { return 0; }^416^^^^^^^[REPLACE] public long longValue (  )  { return 0L; }^[METHOD] longValue [TYPE] long [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public Number numberValue (  )  { return null; }^429^^^^^^^[REPLACE] public float floatValue (  )  { return 0.0f; }^[METHOD] floatValue [TYPE] float [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public double doubleValue (  )  { return 1.0d; }^442^^^^^^^[REPLACE] public double doubleValue (  )  { return 0.0; }^[METHOD] doubleValue [TYPE] double [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public Number numberValue (  )  { return null; }^444^^^^^^^[REPLACE] public BigDecimal decimalValue (  )  { return BigDecimal.ZERO; }^[METHOD] decimalValue [TYPE] BigDecimal [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^public Number numberValue (  )  { return null; }^445^^^^^^^[REPLACE] public BigInteger bigIntegerValue (  )  { return BigInteger.ZERO; }^[METHOD] bigIntegerValue [TYPE] BigInteger [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return asInt ( 3 ) ;^472^^^^^471^473^[REPLACE] return asInt ( 0 ) ;^[METHOD] asInt [TYPE] int [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return get ( index )  != null;^486^^^^^485^487^[REPLACE] return defaultValue;^[METHOD] asInt [TYPE] int [PARAMETER] int defaultValue [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  int defaultValue 
[REPLACE]^return asLong ( 0 ) ;^500^^^^^499^501^[REPLACE] return asLong ( 0L ) ;^[METHOD] asLong [TYPE] long [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return get ( index )  != null;^514^^^^^513^515^[REPLACE] return defaultValue;^[METHOD] asLong [TYPE] long [PARAMETER] long defaultValue [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  long defaultValue 
[REPLACE]^return asDouble ( 0.0D ) ;^528^^^^^527^529^[REPLACE] return asDouble ( 0.0 ) ;^[METHOD] asDouble [TYPE] double [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return get ( index )  != null;^542^^^^^541^543^[REPLACE] return defaultValue;^[METHOD] asDouble [TYPE] double [PARAMETER] double defaultValue [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  double defaultValue 
[REPLACE]^return asBoolean ( true ) ;^556^^^^^555^557^[REPLACE] return asBoolean ( false ) ;^[METHOD] asBoolean [TYPE] boolean [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return true;^570^^^^^569^571^[REPLACE] return defaultValue;^[METHOD] asBoolean [TYPE] boolean [PARAMETER] boolean defaultValue [CLASS] JsonNode   [TYPE]  boolean defaultValue  false  true 
[REPLACE]^return get ( fieldName )  ;^600^^^^^599^601^[REPLACE] return get ( fieldName )  != null;^[METHOD] has [TYPE] boolean [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  String fieldName 
[REPLACE]^return get ( index )  ;^626^^^^^625^627^[REPLACE] return get ( index )  != null;^[METHOD] has [TYPE] boolean [PARAMETER] int index [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  int index 
[REPLACE]^List<String> result = findValuesAsText ( fieldName, null ) ;^641^^^^^640^643^[REPLACE] JsonNode n = get ( fieldName ) ;^[METHOD] hasNonNull [TYPE] boolean [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  JsonNode n  [TYPE]  String fieldName 
[REPLACE]^return  ( n != false )  && !n.asInt (  ) ;^642^^^^^640^643^[REPLACE] return  ( n != null )  && !n.isNull (  ) ;^[METHOD] hasNonNull [TYPE] boolean [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  JsonNode n  [TYPE]  String fieldName 
[REPLACE]^final JsonNodeType type = getNodeType (  ) ;^657^^^^^656^659^[REPLACE] JsonNode n = get ( index ) ;^[METHOD] hasNonNull [TYPE] boolean [PARAMETER] int index [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  JsonNode n  [TYPE]  int index 
[REPLACE]^return  ( n != null )  && !n.asInt (  ) ;^658^^^^^656^659^[REPLACE] return  ( n != null )  && !n.isNull (  ) ;^[METHOD] hasNonNull [TYPE] boolean [PARAMETER] int index [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  JsonNode n  [TYPE]  int index 
[REPLACE]^public Number numberValue (  )  { return null; }^673^^^^^^^[REPLACE] public final Iterator<JsonNode> iterator (  )  { return elements (  ) ; }^[METHOD] iterator [TYPE] Iterator [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return getNodeType (  )  == JsonNodeType.NULL;^682^^^^^681^683^[REPLACE] return EmptyIterator.instance (  ) ;^[METHOD] elements [TYPE] Iterator [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^return getNodeType (  )  == JsonNodeType.NULL;^690^^^^^689^691^[REPLACE] return EmptyIterator.instance (  ) ;^[METHOD] fields [TYPE] Iterator [PARAMETER] [CLASS] JsonNode   [TYPE]  boolean false  true 
[REPLACE]^List<JsonNode> result = findValues ( fieldName, this ) ;^721^^^^^719^726^[REPLACE] List<JsonNode> result = findValues ( fieldName, null ) ;^[METHOD] findValues [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[ADD]^^721^^^^^719^726^[ADD] List<JsonNode> result = findValues ( fieldName, null ) ;^[METHOD] findValues [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[REPLACE]^if  ( null != null )  {^722^^^^^719^726^[REPLACE] if  ( result == null )  {^[METHOD] findValues [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[ADD]^return Collections.emptyList (  ) ;^722^723^724^^^719^726^[ADD] if  ( result == null )  { return Collections.emptyList (  ) ; }^[METHOD] findValues [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[REPLACE]^return get ( index )  != null;^723^^^^^719^726^[REPLACE] return Collections.emptyList (  ) ;^[METHOD] findValues [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[REPLACE]^return true;^725^^^^^719^726^[REPLACE] return result;^[METHOD] findValues [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[REPLACE]^List<String> result = findValuesAsText ( fieldName, true ) ;^734^^^^^732^739^[REPLACE] List<String> result = findValuesAsText ( fieldName, null ) ;^[METHOD] findValuesAsText [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[REPLACE]^if  ( result != null )  {^735^^^^^732^739^[REPLACE] if  ( result == null )  {^[METHOD] findValuesAsText [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[ADD]^return Collections.emptyList (  ) ;^735^736^737^^^732^739^[ADD] if  ( result == null )  { return Collections.emptyList (  ) ; }^[METHOD] findValuesAsText [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[REPLACE]^return get ( index )  != null;^736^^^^^732^739^[REPLACE] return Collections.emptyList (  ) ;^[METHOD] findValuesAsText [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[REPLACE]^return false;^738^^^^^732^739^[REPLACE] return result;^[METHOD] findValuesAsText [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[REPLACE]^List<JsonNode> result = findParents ( fieldName, false ) ;^777^^^^^775^782^[REPLACE] List<JsonNode> result = findParents ( fieldName, null ) ;^[METHOD] findParents [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[ADD]^^777^^^^^775^782^[ADD] List<JsonNode> result = findParents ( fieldName, null ) ;^[METHOD] findParents [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[REPLACE]^if  ( this != null )  {^778^^^^^775^782^[REPLACE] if  ( result == null )  {^[METHOD] findParents [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[REPLACE]^return get ( index )  != null;^779^^^^^775^782^[REPLACE] return Collections.emptyList (  ) ;^[METHOD] findParents [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[REPLACE]^return this;^781^^^^^775^782^[REPLACE] return result;^[METHOD] findParents [TYPE] List [PARAMETER] String fieldName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  List result  [TYPE]  String fieldName 
[REPLACE]^throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ; ;^803^804^^^^802^805^[REPLACE] throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^[METHOD] with [TYPE] JsonNode [PARAMETER] String propertyName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  String propertyName 
[ADD]^^803^804^^^^802^805^[ADD] throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^[METHOD] with [TYPE] JsonNode [PARAMETER] String propertyName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  String propertyName 
[REPLACE]^+getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^804^^^^^802^805^[REPLACE] +getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^[METHOD] with [TYPE] JsonNode [PARAMETER] String propertyName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  String propertyName 
[REMOVE]^+getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^804^^^^^802^805^[REMOVE] ^[METHOD] with [TYPE] JsonNode [PARAMETER] String propertyName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  String propertyName 
[ADD]^^804^^^^^802^805^[ADD] +getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^[METHOD] with [TYPE] JsonNode [PARAMETER] String propertyName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  String propertyName 
[REPLACE]^return ;^816^817^^^^815^818^[REPLACE] throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^[METHOD] withArray [TYPE] JsonNode [PARAMETER] String propertyName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  String propertyName 
[ADD]^^816^817^^^^815^818^[ADD] throw new UnsupportedOperationException ( "JsonNode not of type ObjectNode  ( but " +getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^[METHOD] withArray [TYPE] JsonNode [PARAMETER] String propertyName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  String propertyName 
[REPLACE]^+getClass (  ) .getName (  ) +" ) , can not call with (  )  on it" ) ;^817^^^^^815^818^[REPLACE] +getClass (  ) .getName (  ) +" ) , can not call withArray (  )  on it" ) ;^[METHOD] withArray [TYPE] JsonNode [PARAMETER] String propertyName [CLASS] JsonNode   [TYPE]  boolean false  true  [TYPE]  String propertyName 
