[REPLACE]^private static final  short  serialVersionUID = 5471961369237518580;^24^^^^^^^[REPLACE] private static final long serialVersionUID = 5471961369237518580L;^ [CLASS] ArrayBlockingQueueDeserializer  
[REPLACE]^if   (  jp.getCurrentToken  (    )   == JsonToken.VALUE_STRING  )   {  ;^98^^^^^96^124^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray ( jp, ctxt, new ArrayBlockingQueue<Object> ( 0 )  ) ;^99^^^^^96^124^[REPLACE] return handleNonArray ( jp, ctxt, new ArrayBlockingQueue<Object> ( 1 )  ) ;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray ( jp, ctxt,  new Object> ( tmp.size (  ) , false, tmp )   ) ;^99^^^^^96^124^[REPLACE] return handleNonArray ( jp, ctxt, new ArrayBlockingQueue<Object> ( 1 )  ) ;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object value  ;^101^^^^^96^124^[REPLACE] ArrayList<Object> tmp = new ArrayList<Object> (  ) ;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object value  ;^103^^^^^96^124^[REPLACE] JsonDeserializer<Object> valueDes = _valueDeserializer;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object value  ;^104^^^^^96^124^[REPLACE] JsonToken t;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^105^^^^^96^124^[ADD] final TypeDeserializer typeDeser = _valueTypeDeserializer;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  !=  JsonToken.VALUE_NULL )  {^110^^^^^96^124^[REPLACE] if  ( t == JsonToken.VALUE_NULL )  {^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^}  else {^112^^^^^96^124^[REPLACE] } else if  ( typeDeser == null )  {^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^value =  null.deserializeWithType ( jp, ctxt, typeDeser ) ;^115^^^^^112^116^[REPLACE] value = valueDes.deserializeWithType ( jp, ctxt, typeDeser ) ;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^value =  false.deserialize ( jp, ctxt ) ;^113^^^^^96^124^[REPLACE] value = valueDes.deserialize ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^113^^^^^96^124^[ADD] value = valueDes.deserialize ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^115^^^^^96^124^[ADD] value = valueDes.deserializeWithType ( jp, ctxt, typeDeser ) ;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^value = this;^111^^^^^96^124^[REPLACE] value = null;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^}   value = valueDes.deserialize ( jp, ctxt ) ;value = valueDes.deserializeWithType ( jp, ctxt, typeDeser ) ;^112^113^114^115^116^96^124^[ADD] else if  ( typeDeser == null )  { value = valueDes.deserialize ( jp, ctxt ) ; } else { value = valueDes.deserializeWithType ( jp, ctxt, typeDeser ) ; }^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^while  (  ( t =  null.nextToken (  )  )  !^107^^^^^96^124^[REPLACE] while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^value =  null.deserialize ( jp, ctxt ) ;^113^^^^^96^124^[REPLACE] value = valueDes.deserialize ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^value =  this.deserializeWithType ( jp, ctxt, typeDeser ) ;^115^^^^^96^124^[REPLACE] value = valueDes.deserializeWithType ( jp, ctxt, typeDeser ) ;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^JsonToken t  ;^108^^^^^96^124^[REPLACE] Object value;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( this == false )  {^119^^^^^96^124^[REPLACE] if  ( result0 != null )  {^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return null;^121^^^^^96^124^[REPLACE] return result0;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return result0;  ;^121^^^^^96^124^[REPLACE] return result0;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return new ArrayBlockingQueue<Object> ( this .ArrayList (  )  , true, tmp ) ;^123^^^^^96^124^[REPLACE] return new ArrayBlockingQueue<Object> ( tmp.size (  ) , false, tmp ) ;^[METHOD] deserialize [TYPE] Collection [PARAMETER] JsonParser jp DeserializationContext ctxt Object> result0 [CLASS] ArrayBlockingQueueDeserializer   [TYPE]  boolean false  true  [TYPE]  ArrayList tmp  [TYPE]  DeserializationContext ctxt  [TYPE]  Collection result0  [TYPE]  JsonToken t  [TYPE]  Object value  [TYPE]  JsonDeserializer valueDes  [TYPE]  TypeDeserializer typeDeser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
