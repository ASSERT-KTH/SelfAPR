[REPLACE]^private static final  short  serialVersionUID = 1L;^15^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] ClassDeserializer  
[REPLACE]^public  static ClassDeserializer instance = new ClassDeserializer (  ) ;^17^^^^^^^[REPLACE] public final static ClassDeserializer instance = new ClassDeserializer (  ) ;^ [CLASS] ClassDeserializer  
[REPLACE]^throw ctxt.instantiationException  (" ")  ;^19^^^^^^^[REPLACE] public ClassDeserializer (  )  { super ( Class.class ) ; }^[METHOD] <init> [TYPE] ClassDeserializer() [PARAMETER] [CLASS] ClassDeserializer   [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  boolean false  true 
[ADD]^^19^20^21^^^^^[ADD] public ClassDeserializer (  )  { super ( Class.class ) ; }  @Override^[METHOD] <init> [TYPE] ClassDeserializer() [PARAMETER] [CLASS] ClassDeserializer   [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  boolean false  true 
[REPLACE]^JsonToken curr = jp.getText (  ) ;^25^^^^^22^36^[REPLACE] JsonToken curr = jp.getCurrentToken (  ) ;^[METHOD] deserialize [TYPE] Class [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ClassDeserializer   [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken curr  [TYPE]  String className  [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  Exception e  [TYPE]  JsonParser jp 
[ADD]^^25^^^^^22^36^[ADD] JsonToken curr = jp.getCurrentToken (  ) ;^[METHOD] deserialize [TYPE] Class [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ClassDeserializer   [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken curr  [TYPE]  String className  [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  Exception e  [TYPE]  JsonParser jp 
[REPLACE]^if  ( curr  ||  JsonToken.VALUE_STRING )  {^27^^^^^22^36^[REPLACE] if  ( curr == JsonToken.VALUE_STRING )  {^[METHOD] deserialize [TYPE] Class [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ClassDeserializer   [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken curr  [TYPE]  String className  [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  Exception e  [TYPE]  JsonParser jp 
[ADD]^return ctxt.findClass ( className ) ;^29^30^31^32^33^22^36^[ADD] try { return ctxt.findClass ( className ) ; } catch  ( Exception e )  { throw ctxt.instantiationException  (" ")  ; }^[METHOD] deserialize [TYPE] Class [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ClassDeserializer   [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken curr  [TYPE]  String className  [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  Exception e  [TYPE]  JsonParser jp 
[REPLACE]^return ctxt.mappingException ( className ) ;^30^^^^^22^36^[REPLACE] return ctxt.findClass ( className ) ;^[METHOD] deserialize [TYPE] Class [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ClassDeserializer   [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken curr  [TYPE]  String className  [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  Exception e  [TYPE]  JsonParser jp 
[REPLACE]^String className = jp.getCurrentToken (  ) .trim (  ) ;^28^^^^^22^36^[REPLACE] String className = jp.getText (  ) .trim (  ) ;^[METHOD] deserialize [TYPE] Class [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ClassDeserializer   [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken curr  [TYPE]  String className  [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  Exception e  [TYPE]  JsonParser jp 
[REPLACE]^return ;^32^^^^^22^36^[REPLACE] throw ctxt.instantiationException  (" ")  ;^[METHOD] deserialize [TYPE] Class [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ClassDeserializer   [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken curr  [TYPE]  String className  [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  Exception e  [TYPE]  JsonParser jp 
[REPLACE]^return ctxt .mappingException ( curr )  ;^30^^^^^22^36^[REPLACE] return ctxt.findClass ( className ) ;^[METHOD] deserialize [TYPE] Class [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ClassDeserializer   [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken curr  [TYPE]  String className  [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  Exception e  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.mappingException  (" ")  ; ;^32^^^^^22^36^[REPLACE] throw ctxt.instantiationException  (" ")  ;^[METHOD] deserialize [TYPE] Class [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ClassDeserializer   [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken curr  [TYPE]  String className  [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  Exception e  [TYPE]  JsonParser jp 
[REPLACE]^return ;^35^^^^^22^36^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] Class [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ClassDeserializer   [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken curr  [TYPE]  String className  [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  Exception e  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt .instantiationException (  )   ;^35^^^^^22^36^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] Class [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ClassDeserializer   [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken curr  [TYPE]  String className  [TYPE]  long serialVersionUID  [TYPE]  ClassDeserializer instance  [TYPE]  Exception e  [TYPE]  JsonParser jp 
