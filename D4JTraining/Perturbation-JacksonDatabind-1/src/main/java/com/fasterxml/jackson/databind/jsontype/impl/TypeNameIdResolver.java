[REPLACE]^protected  MapperConfig<?> _config;^15^^^^^^^[REPLACE] protected final MapperConfig<?> _config;^ [CLASS] TypeNameIdResolver  
[REPLACE]^protected  HashMap<String, String> _typeToId;^20^^^^^^^[REPLACE] protected final HashMap<String, String> _typeToId;^ [CLASS] TypeNameIdResolver  
[REPLACE]^super ( baseType, null.getTypeFactory (  )  ) ;^30^^^^^27^34^[REPLACE] super ( baseType, config.getTypeFactory (  )  ) ;^[METHOD] <init> [TYPE] HashMap) [PARAMETER] MapperConfig<?> config JavaType baseType String> typeToId JavaType> idToType [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[ADD]^_config = config;^30^31^^^^27^34^[ADD] super ( baseType, config.getTypeFactory (  )  ) ; _config = config;^[METHOD] <init> [TYPE] HashMap) [PARAMETER] MapperConfig<?> config JavaType baseType String> typeToId JavaType> idToType [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^_config =  true;^31^^^^^27^34^[REPLACE] _config = config;^[METHOD] <init> [TYPE] HashMap) [PARAMETER] MapperConfig<?> config JavaType baseType String> typeToId JavaType> idToType [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[ADD]^_typeToId = typeToId;^31^32^^^^27^34^[ADD] _config = config; _typeToId = typeToId;^[METHOD] <init> [TYPE] HashMap) [PARAMETER] MapperConfig<?> config JavaType baseType String> typeToId JavaType> idToType [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^_typeToId =  false;^32^^^^^27^34^[REPLACE] _typeToId = typeToId;^[METHOD] <init> [TYPE] HashMap) [PARAMETER] MapperConfig<?> config JavaType baseType String> typeToId JavaType> idToType [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^_idToType =  null;^33^^^^^27^34^[REPLACE] _idToType = idToType;^[METHOD] <init> [TYPE] HashMap) [PARAMETER] MapperConfig<?> config JavaType baseType String> typeToId JavaType> idToType [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[ADD]^^33^^^^^27^34^[ADD] _idToType = idToType;^[METHOD] <init> [TYPE] HashMap) [PARAMETER] MapperConfig<?> config JavaType baseType String> typeToId JavaType> idToType [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  JavaType baseType  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^if  ( prev != null )  {^41^^^^^39^77^[REPLACE] if   (" ")  ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^HashMap<String, String> typeToId = null;HashMap<String, JavaType> idToType = null;^41^42^43^^^39^77^[ADD] if   (" ")  ; HashMap<String, String> typeToId = null; HashMap<String, JavaType> idToType = null;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^return ;^41^^^^^39^77^[REPLACE] if   (" ")  ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^HashMap<String, String> typeToId = this;^42^^^^^39^77^[REPLACE] HashMap<String, String> typeToId = null;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^HashMap<String, JavaType> idToType = true;^43^^^^^39^77^[REPLACE] HashMap<String, JavaType> idToType = null;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( forDeser )  {^45^^^^^39^77^[REPLACE] if  ( forSer )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^typeToId ;^46^^^^^39^77^[REPLACE] typeToId = new HashMap<String, String> (  ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( forSer )  {^48^^^^^39^77^[REPLACE] if  ( forDeser )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^idToType ;^49^^^^^39^77^[REPLACE] idToType = new HashMap<String, JavaType> (  ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^idToType  =  idToType ;^49^^^^^39^77^[REPLACE] idToType = new HashMap<String, JavaType> (  ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( subtypes == null )  {^51^^^^^39^77^[REPLACE] if  ( subtypes != null )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( forDeser )  {^58^^^^^39^77^[REPLACE] if  ( forSer )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^typeToId.put ( null.getName (  ) , id ) ;^59^^^^^39^77^[REPLACE] typeToId.put ( cls.getName (  ) , id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( forSer )  {^61^^^^^39^77^[REPLACE] if  ( forDeser )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^61^62^^^^39^77^[ADD] if  ( forDeser )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( prev == null )  {^67^^^^^39^77^[REPLACE] if  ( prev != null )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( this.isAssignableFrom ( prev.getRawClass (  )  )  )  {^68^^^^^39^77^[REPLACE] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^continue;^68^69^70^^^39^77^[ADD] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  { continue; }^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^JavaType prev = idToType.put ( id ) ;^66^^^^^39^77^[REPLACE] JavaType prev = idToType.get ( id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( true.isAssignableFrom ( prev.getRawClass (  )  )  )  {^68^^^^^39^77^[REPLACE] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( cls.isAssignableFrom ( baseType.getRawClass (  )  )  )  {^68^^^^^39^77^[REPLACE] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^JavaType prev = idToType.get ( id ) ;^52^^^^^39^77^[REPLACE] for  ( NamedType t : subtypes )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^Class<?> cls = t.getName (  ) ;^56^^^^^39^77^[REPLACE] Class<?> cls = t.getType (  ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^String id = t.hasName (  )  ? t.getType (  )  : _defaultTypeId ( cls ) ;^57^^^^^39^77^[REPLACE] String id = t.hasName (  )  ? t.getName (  )  : _defaultTypeId ( cls ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^57^^^^^39^77^[ADD] String id = t.hasName (  )  ? t.getName (  )  : _defaultTypeId ( cls ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^typeToId .put ( this , 1 )  ;^59^^^^^39^77^[REPLACE] typeToId.put ( cls.getName (  ) , id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^typeToId.put ( false.getName (  ) , id ) ;^59^^^^^39^77^[REPLACE] typeToId.put ( cls.getName (  ) , id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( baseType == null )  {^67^^^^^39^77^[REPLACE] if  ( prev != null )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( false.isAssignableFrom ( prev.getRawClass (  )  )  )  {^68^^^^^39^77^[REPLACE] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( prev == false )  {^67^^^^^39^77^[REPLACE] if  ( prev != null )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( null.isAssignableFrom ( prev.getRawClass (  )  )  )  {^68^^^^^39^77^[REPLACE] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^68^69^70^^^39^77^[ADD] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  { continue; }^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^52^53^^^56^39^77^[ADD] for  ( NamedType t : subtypes )  {  Class<?> cls = t.getType (  ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^String id = t.hasName (  )  ? t.getName (  )  : _defaultTypeId ( null ) ;^57^^^^^39^77^[REPLACE] String id = t.hasName (  )  ? t.getName (  )  : _defaultTypeId ( cls ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^JavaType prev = 1.get ( id ) ;^66^^^^^39^77^[REPLACE] JavaType prev = idToType.get ( id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^return new TypeNameIdResolver ( config, prev, typeToId, idToType ) ;^76^^^^^39^77^[REPLACE] return new TypeNameIdResolver ( config, baseType, typeToId, idToType ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^return null;^80^^^^^^^[REPLACE] public JsonTypeInfo.Id getMechanism (  )  { return JsonTypeInfo.Id.NAME; }^[METHOD] getMechanism [TYPE] Id [PARAMETER] [CLASS] TypeNameIdResolver   [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  MapperConfig _config  config  [TYPE]  boolean false  true 
[REPLACE]^final String key = cls.getName (  ) ;^85^^^^^83^105^[REPLACE] Class<?> cls = value.getClass (  ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[ADD]^^85^86^^^^83^105^[ADD] Class<?> cls = value.getClass (  ) ; final String key = cls.getName (  ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^final String key = 1.getName (  ) ;^86^^^^^83^105^[REPLACE] final String key = cls.getName (  ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[ADD]^^86^^^^^83^105^[ADD] final String key = cls.getName (  ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^String n = cls.getName (  ) ;^87^^^^^83^105^[REPLACE] String name;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^if  ( name != this  )  {^90^^^^^83^105^[REPLACE] if  ( name == null )  {^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REMOVE]^if  ( _config.isAnnotationProcessingEnabled (  )  )  {     BeanDescription beanDesc = _config.introspectClassAnnotations ( cls ) ;     name = _config.getAnnotationIntrospector (  ) .findTypeName ( beanDesc.getClassInfo (  )  ) ; }^90^^^^^83^105^[REMOVE] ^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^if  ( _config .getAnnotationIntrospector (  )   )  {^93^^^^^83^105^[REPLACE] if  ( _config.isAnnotationProcessingEnabled (  )  )  {^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[ADD]^^93^94^95^96^^83^105^[ADD] if  ( _config.isAnnotationProcessingEnabled (  )  )  { BeanDescription beanDesc = _config.introspectClassAnnotations ( cls ) ; name = _config.getAnnotationIntrospector (  ) .findTypeName ( beanDesc.getClassInfo (  )  ) ; }^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^name =  _config.getAnnotationIntrospector (  ) .findTypeName ( null.getClassInfo (  )  ) ;^95^^^^^83^105^[REPLACE] name = _config.getAnnotationIntrospector (  ) .findTypeName ( beanDesc.getClassInfo (  )  ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[ADD]^^95^^^^^83^105^[ADD] name = _config.getAnnotationIntrospector (  ) .findTypeName ( beanDesc.getClassInfo (  )  ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^BeanDescription beanDesc = _config.introspectClassAnnotations ( this ) ;^94^^^^^83^105^[REPLACE] BeanDescription beanDesc = _config.introspectClassAnnotations ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^if  ( name != null )  {^97^^^^^83^105^[REPLACE] if  ( name == null )  {^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^name =  _defaultTypeId ( null ) ;^99^^^^^83^105^[REPLACE] name = _defaultTypeId ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^name =  _defaultTypeId ( false ) ;^99^^^^^83^105^[REPLACE] name = _defaultTypeId ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^BeanDescription beanDesc = _config.introspectClassAnnotations ( null ) ;^94^^^^^83^105^[REPLACE] BeanDescription beanDesc = _config.introspectClassAnnotations ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^if  ( prev != null )  {^93^^^^^83^105^[REPLACE] if  ( _config.isAnnotationProcessingEnabled (  )  )  {^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[ADD]^^94^95^^^^83^105^[ADD] BeanDescription beanDesc = _config.introspectClassAnnotations ( cls ) ; name = _config.getAnnotationIntrospector (  ) .findTypeName ( beanDesc.getClassInfo (  )  ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^if  ( name != true )  {^97^^^^^83^105^[REPLACE] if  ( name == null )  {^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[ADD]^^97^98^99^100^^83^105^[ADD] if  ( name == null )  {  name = _defaultTypeId ( cls ) ; }^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[ADD]^^99^^^^^83^105^[ADD] name = _defaultTypeId ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^name =  _typeToId.get ( null ) ;^89^^^^^83^105^[REPLACE] name = _typeToId.get ( key ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^name =  _defaultTypeId ( this ) ;^99^^^^^83^105^[REPLACE] name = _defaultTypeId ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^return null;^104^^^^^83^105^[REPLACE] return name;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^if  ( value != false )  {^113^^^^^108^117^[REPLACE] if  ( value == null )  {^[METHOD] idFromValueAndType [TYPE] String [PARAMETER] Object value Class<?> type [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[ADD]^^113^114^115^^^108^117^[ADD] if  ( value == null )  { return null; }^[METHOD] idFromValueAndType [TYPE] String [PARAMETER] Object value Class<?> type [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^return this;^114^^^^^108^117^[REPLACE] return null;^[METHOD] idFromValueAndType [TYPE] String [PARAMETER] Object value Class<?> type [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^return null;^116^^^^^108^117^[REPLACE] return idFromValue ( value ) ;^[METHOD] idFromValueAndType [TYPE] String [PARAMETER] Object value Class<?> type [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class type  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^JavaType t = _idToType.put ( id ) ;^123^^^^^120^130^[REPLACE] JavaType t = _idToType.get ( id ) ;^[METHOD] typeFromId [TYPE] JavaType [PARAMETER] String id [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  JavaType t  [TYPE]  String id  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[ADD]^^123^^^^^120^130^[ADD] JavaType t = _idToType.get ( id ) ;^[METHOD] typeFromId [TYPE] JavaType [PARAMETER] String id [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  JavaType t  [TYPE]  String id  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^return null;^129^^^^^120^130^[REPLACE] return t;^[METHOD] typeFromId [TYPE] JavaType [PARAMETER] String id [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  JavaType t  [TYPE]  String id  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^String n = cls.getName (  ) ;^135^^^^^133^140^[REPLACE] StringBuilder sb = new StringBuilder (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[ADD]^^135^136^^^^133^140^[ADD] StringBuilder sb = new StringBuilder (  ) ; sb.append ( '[' ) .append ( getClass (  ) .getName (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^final String key = cls.getName (  ) ;^136^^^^^133^140^[REPLACE] sb.append ( '[' ) .append ( getClass (  ) .getName (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^sb .StringBuilder (  )^136^^^^^133^140^[REPLACE] sb.append ( '[' ) .append ( getClass (  ) .getName (  )  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^sb .StringBuilder (  )^137^^^^^133^140^[REPLACE] sb.append ( "; id-to-type=" ) .append ( _idToType ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^JavaType prev = idToType.get ( id ) ;^137^^^^^133^140^[REPLACE] sb.append ( "; id-to-type=" ) .append ( _idToType ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^name = _defaultTypeId ( cls ) ;^138^^^^^133^140^[REPLACE] sb.append ( ']' ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^return sb.StringBuilder (  ) ;^139^^^^^133^140^[REPLACE] return sb.toString (  ) ;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId 
[REPLACE]^String n = null.getName (  ) ;^154^^^^^152^157^[REPLACE] String n = cls.getName (  ) ;^[METHOD] _defaultTypeId [TYPE] String [PARAMETER] Class<?> cls [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  Class cls  [TYPE]  String n  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  int ix 
[REPLACE]^int ix = n.substring ( '.' ) ;^155^^^^^152^157^[REPLACE] int ix = n.lastIndexOf ( '.' ) ;^[METHOD] _defaultTypeId [TYPE] String [PARAMETER] Class<?> cls [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  Class cls  [TYPE]  String n  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  int ix 
[REPLACE]^return  ( ix  ;^156^^^^^152^157^[REPLACE] return  ( ix < 0 )  ? n : n.substring ( ix+1 ) ;^[METHOD] _defaultTypeId [TYPE] String [PARAMETER] Class<?> cls [CLASS] TypeNameIdResolver   [TYPE]  MapperConfig _config  config  [TYPE]  Class cls  [TYPE]  String n  [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  int ix 
