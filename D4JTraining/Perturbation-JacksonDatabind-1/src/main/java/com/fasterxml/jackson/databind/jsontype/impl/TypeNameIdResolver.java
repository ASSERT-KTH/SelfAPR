[REPLACE]^private final HashMap<String, String> _typeToId;^20^^^^^^^[REPLACE] protected final HashMap<String, String> _typeToId;^ [CLASS] TypeNameIdResolver  
[REPLACE]^if    ( " " )   ; HashMap<String, String> typeToId = null;  ;^41^^^^^39^77^[REPLACE] if   (" ")  ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^return ;^41^^^^^39^77^[REPLACE] if   (" ")  ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^42^43^^^^39^77^[ADD] HashMap<String, String> typeToId = null; HashMap<String, JavaType> idToType = null;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^HashMap<String, JavaType> idToType = this;^43^^^^^39^77^[REPLACE] HashMap<String, JavaType> idToType = null;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if   (  forDeser  )   {  ;^45^^^^^39^77^[REPLACE] if  ( forSer )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^46^^^^^39^77^[ADD] typeToId = new HashMap<String, String> (  ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^typeToId  = null ;^46^^^^^39^77^[REPLACE] typeToId = new HashMap<String, String> (  ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if   (  forSer  )   {  ;^48^^^^^39^77^[REPLACE] if  ( forDeser )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^idToType  =  idToType ;^49^^^^^39^77^[REPLACE] idToType = new HashMap<String, JavaType> (  ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^idToType  = null ;^49^^^^^39^77^[REPLACE] idToType = new HashMap<String, JavaType> (  ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( subtypes == null )  {^51^^^^^39^77^[REPLACE] if  ( subtypes != null )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if   (  forDeser  )   {  ;^58^^^^^39^77^[REPLACE] if  ( forSer )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^58^59^60^^^39^77^[ADD] if  ( forSer )  { typeToId.put ( cls.getName (  ) , id ) ; }^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^typeToId.put ( cls .getType (  )  , id ) ;^59^^^^^39^77^[REPLACE] typeToId.put ( cls.getName (  ) , id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^59^^^^^39^77^[ADD] typeToId.put ( cls.getName (  ) , id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^typeToId.put ( null.getName (  ) , id ) ;^59^^^^^39^77^[REPLACE] typeToId.put ( cls.getName (  ) , id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if   (  forSer  )   {  ;^61^^^^^39^77^[REPLACE] if  ( forDeser )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^61^62^^^^39^77^[ADD] if  ( forDeser )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( baseType == false )  {^67^^^^^39^77^[REPLACE] if  ( prev != null )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( cls.isAssignableFrom ( baseType.getRawClass (  )  )  )  {^68^^^^^39^77^[REPLACE] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( 0 .getName (  )   )  {^68^^^^^39^77^[REPLACE] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^continue;^68^69^70^^^39^77^[ADD] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  { continue; }^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^66^^^^^39^77^[ADD] JavaType prev = idToType.get ( id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if   (  name == null  )   {  ;^67^^^^^39^77^[REPLACE] if  ( prev != null )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^67^68^69^70^^39^77^[ADD] if  ( prev != null )  { if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  { continue; }^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( null.isAssignableFrom ( prev.getRawClass (  )  )  )  {^68^^^^^39^77^[REPLACE] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if   (  forDeser  )   {  ;^58^^^^^51^75^[REPLACE] if  ( forSer )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^typeToId.put ( null.getName (  ) , id ) ;^59^^^^^51^75^[REPLACE] typeToId.put ( cls.getName (  ) , id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REMOVE]^_idToType.get ( id )  ;^59^^^^^51^75^[REMOVE] ^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^t.getName (  )  ;^59^^^^^51^75^[REPLACE] typeToId.put ( cls.getName (  ) , id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if   (  forSer  )   {  ;^61^^^^^51^75^[REPLACE] if  ( forDeser )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^61^62^^^^51^75^[ADD] if  ( forDeser )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( baseType == false )  {^67^^^^^51^75^[REPLACE] if  ( prev != null )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^67^68^69^70^^51^75^[ADD] if  ( prev != null )  { if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  { continue; }^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( cls.isAssignableFrom ( baseType.getRawClass (  )  )  )  {^68^^^^^51^75^[REPLACE] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^JavaType prev = idToType.put ( id ) ;^66^^^^^51^75^[REPLACE] JavaType prev = idToType.get ( id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  (baseType == null )  {^67^^^^^51^75^[REPLACE] if  ( prev != null )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( null.isAssignableFrom ( prev.getRawClass (  )  )  )  {^68^^^^^51^75^[REPLACE] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^continue;^68^69^70^^^51^75^[ADD] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  { continue; }^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^Class<?> cls = value.getClass (  )  ;^56^^^^^51^75^[REPLACE] Class<?> cls = t.getType (  ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^String id = t.hasName (  )  ? t.getType (  )  : _defaultTypeId ( cls ) ;^57^^^^^51^75^[REPLACE] String id = t.hasName (  )  ? t.getName (  )  : _defaultTypeId ( cls ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^66^^^^^51^75^[ADD] JavaType prev = idToType.get ( id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^JavaType prev = idToType.get ( id )  ;^52^^^^^51^75^[REPLACE] for  ( NamedType t : subtypes )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^Class<?> cls = t.getName (  ) ;^56^^^^^51^75^[REPLACE] Class<?> cls = t.getType (  ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^String id = t.hasName (  )  ? t.getName (  )  : _defaultTypeId ( null ) ;^57^^^^^51^75^[REPLACE] String id = t.hasName (  )  ? t.getName (  )  : _defaultTypeId ( cls ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^JavaType prev = this.put ( id ) ;^66^^^^^51^75^[REPLACE] JavaType prev = idToType.get ( id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^t.getName (  )  ;^59^^^^^39^77^[REPLACE] typeToId.put ( cls.getName (  ) , id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( baseType == null )  {^67^^^^^39^77^[REPLACE] if  ( prev != null )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( this.isAssignableFrom ( prev.getRawClass (  )  )  )  {^68^^^^^39^77^[REPLACE] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if    ( " " )   ; HashMap<String, String> typeToId = null;  ;^68^^^^^39^77^[REPLACE] if  ( cls.isAssignableFrom ( prev.getRawClass (  )  )  )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^59^^^^^51^75^[ADD] typeToId.put ( cls.getName (  ) , id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  ( prev ==baseType )  {^67^^^^^51^75^[REPLACE] if  ( prev != null )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^if  (baseType == true )  {^67^^^^^51^75^[REPLACE] if  ( prev != null )  {^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^String id = t.hasName (  )  ? t.getName (  )  : _defaultTypeId ( this ) ;^57^^^^^51^75^[REPLACE] String id = t.hasName (  )  ? t.getName (  )  : _defaultTypeId ( cls ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[ADD]^^57^^^^^51^75^[ADD] String id = t.hasName (  )  ? t.getName (  )  : _defaultTypeId ( cls ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^JavaType prev = null.get ( id ) ;^66^^^^^51^75^[REPLACE] JavaType prev = idToType.get ( id ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^return new TypeNameIdResolver ( config, baseType, this, idToType ) ;^76^^^^^39^77^[REPLACE] return new TypeNameIdResolver ( config, baseType, typeToId, idToType ) ;^[METHOD] construct [TYPE] TypeNameIdResolver [PARAMETER] MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [CLASS] TypeNameIdResolver   [TYPE]  JavaType baseType  prev  [TYPE]  boolean false  forDeser  forSer  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  NamedType t  [TYPE]  MapperConfig _config  config  [TYPE]  Collection subtypes  [TYPE]  Class cls  [TYPE]  String id 
[REPLACE]^Class<?> cls = t.getType (  )  ;^85^^^^^84^105^[REPLACE] Class<?> cls = value.getClass (  ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^String n = cls.getName (  )  ;^86^^^^^84^105^[REPLACE] final String key = cls.getName (  ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[ADD]^^87^^^^^84^105^[ADD] String name;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^if  ( name != true )  {^90^^^^^84^105^[REPLACE] if  ( name == null )  {^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^if  ( _config .getAnnotationIntrospector (  )   )  {^93^^^^^84^105^[REPLACE] if  ( _config.isAnnotationProcessingEnabled (  )  )  {^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^name =  _config.getAnnotationIntrospector (  ) .findTypeName ( null.getClassInfo (  )  ) ;^95^^^^^84^105^[REPLACE] name = _config.getAnnotationIntrospector (  ) .findTypeName ( beanDesc.getClassInfo (  )  ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^BeanDescription beanDesc = _config.introspectClassAnnotations ( false ) ;^94^^^^^84^105^[REPLACE] BeanDescription beanDesc = _config.introspectClassAnnotations ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^if  ( name != null )  {^97^^^^^84^105^[REPLACE] if  ( name == null )  {^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^name =  _defaultTypeId ( null ) ;^99^^^^^84^105^[REPLACE] name = _defaultTypeId ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[ADD]^^95^^^^^84^105^[ADD] name = _config.getAnnotationIntrospector (  ) .findTypeName ( beanDesc.getClassInfo (  )  ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[ADD]^^99^^^^^84^105^[ADD] name = _defaultTypeId ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^BeanDescription beanDesc = _config.introspectClassAnnotations ( null ) ;^94^^^^^84^105^[REPLACE] BeanDescription beanDesc = _config.introspectClassAnnotations ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^if  ( _config.getAnnotationIntrospector (  )  )  {^93^^^^^84^105^[REPLACE] if  ( _config.isAnnotationProcessingEnabled (  )  )  {^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^BeanDescription beanDesc = _config.constructType ( cls ) ;^94^^^^^84^105^[REPLACE] BeanDescription beanDesc = _config.introspectClassAnnotations ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^if  ( name != this  )  {^97^^^^^84^105^[REPLACE] if  ( name == null )  {^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[ADD]^^97^98^99^100^^84^105^[ADD] if  ( name == null )  {  name = _defaultTypeId ( cls ) ; }^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^name =  _defaultTypeId ( 1 ) ;^99^^^^^84^105^[REPLACE] name = _defaultTypeId ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^name =  _typeToId.get ( null ) ;^89^^^^^84^105^[REPLACE] name = _typeToId.get ( key ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[ADD]^^94^^^^^84^105^[ADD] BeanDescription beanDesc = _config.introspectClassAnnotations ( cls ) ;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
[REPLACE]^return name;  ;^104^^^^^84^105^[REPLACE] return name;^[METHOD] idFromValue [TYPE] String [PARAMETER] Object value [CLASS] TypeNameIdResolver   [TYPE]  boolean false  true  [TYPE]  HashMap _idToType  _typeToId  idToType  typeToId  [TYPE]  BeanDescription beanDesc  [TYPE]  MapperConfig _config  config  [TYPE]  Object value  [TYPE]  Class cls  [TYPE]  String key  name 
