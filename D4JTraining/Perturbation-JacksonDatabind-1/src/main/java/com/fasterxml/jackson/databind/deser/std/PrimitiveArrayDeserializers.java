[REPLACE]^private static final long serialVersionUID ;^74^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  
[REPLACE]^private  final long serialVersionUID = 1;^142^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  
[REPLACE]^private static final long serialVersionUID  = null ;^194^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  
[REPLACE]^private static final long serialVersionUID = 1;^278^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  
[REPLACE]^private static  long serialVersionUID = 1L;^325^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  
[REPLACE]^public final static new FloatDeser (  )  ;^327^^^^^^^[REPLACE] public final static IntDeser instance = new IntDeser (  ) ;^ [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  
[REPLACE]^private static final long serialVersionUID = 1;^375^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  
[REPLACE]^public  static LongDeser instance = new LongDeser (  ) ;^377^^^^^^^[REPLACE] public final static LongDeser instance = new LongDeser (  ) ;^ [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  
[REPLACE]^private static final long serialVersionUID  = null ;^424^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  
[REPLACE]^private static final long serialVersionUID  = null ;^472^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser  
[REPLACE]^if  ( rawType  ) {^25^^^^^23^51^[REPLACE] if  ( rawType == Integer.TYPE )  {^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^return IntDeser.instance;^25^26^27^^^23^51^[ADD] if  ( rawType == Integer.TYPE )  { return IntDeser.instance; }^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return new byte[] { value };  ;^26^^^^^23^51^[REPLACE] return IntDeser.instance;^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( rawType  ||  Long.TYPE )  {^28^^^^^23^51^[REPLACE] if  ( rawType == Long.TYPE )  {^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return new byte[] { value };  ;^29^^^^^23^51^[REPLACE] return LongDeser.instance;^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( this  &&  Byte.TYPE )  {^32^^^^^23^51^[REPLACE] if  ( rawType == Byte.TYPE )  {^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return  new FloatDeser (  )  ;^33^^^^^23^51^[REPLACE] return new ByteDeser (  ) ;^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^if   (  rawType == Long.TYPE  )   {  ;^35^^^^^23^51^[REPLACE] if  ( rawType == Short.TYPE )  {^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return  new FloatDeser (  )  ;^36^^^^^23^51^[REPLACE] return new ShortDeser (  ) ;^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^if  (this  !=  Float.TYPE )  {^38^^^^^23^51^[REPLACE] if  ( rawType == Float.TYPE )  {^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return  new BooleanDeser (  )  ;^39^^^^^23^51^[REPLACE] return new FloatDeser (  ) ;^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( null  !=  Double.TYPE )  {^41^^^^^23^51^[REPLACE] if  ( rawType == Double.TYPE )  {^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^^41^42^43^^^23^51^[ADD] if  ( rawType == Double.TYPE )  { return new DoubleDeser (  ) ; }^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return  new FloatDeser (  )  ;^42^^^^^23^51^[REPLACE] return new DoubleDeser (  ) ;^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^if  (   Boolean.TYPE )  {^44^^^^^23^51^[REPLACE] if  ( rawType == Boolean.TYPE )  {^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^return new BooleanDeser (  ) ;^44^45^46^^^23^51^[ADD] if  ( rawType == Boolean.TYPE )  { return new BooleanDeser (  ) ; }^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return  new FloatDeser (  )  ;^45^^^^^23^51^[REPLACE] return new BooleanDeser (  ) ;^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^if  ( rawType  ||  Character.TYPE )  {^47^^^^^23^51^[REPLACE] if  ( rawType == Character.TYPE )  {^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[REPLACE]^return  new FloatDeser (  )  ;^48^^^^^23^51^[REPLACE] return new CharDeser (  ) ;^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^^50^^^^^23^51^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] forType [TYPE] JsonDeserializer [PARAMETER] Class<?> rawType [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  Class rawType  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID 
[ADD]^^86^^^^^81^129^[ADD] JsonToken t = jp.getCurrentToken (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if   (  t != JsonToken.VALUE_STRING  )   {  ;^87^^^^^81^129^[REPLACE] if  ( t == JsonToken.VALUE_STRING )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return result;  ;^95^^^^^81^129^[REPLACE] return result;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^char[] buffer = jp .getTextOffset (  )  ;^89^^^^^81^129^[REPLACE] char[] buffer = jp.getTextCharacters (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^int offset = jp.getTextLength (  ) ;^90^^^^^81^129^[REPLACE] int offset = jp.getTextOffset (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^int len = jp.getTextOffset (  ) ;^91^^^^^81^129^[REPLACE] int len = jp.getTextLength (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^byte value  ;^93^^^^^81^129^[REPLACE] char[] result = new char[len];^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^int len = jp .getTextOffset (  )  ;^91^^^^^81^129^[REPLACE] int len = jp.getTextLength (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if   (  !jp.isExpectedStartArrayToken  (    )    )   {  ;^97^^^^^81^129^[REPLACE] if  ( jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if   (  t == JsonToken.VALUE_STRING  )   {  ;^101^^^^^81^129^[REPLACE] if  ( t != JsonToken.VALUE_STRING )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^101^102^103^^^81^129^[ADD] if  ( t != JsonToken.VALUE_STRING )  { throw ctxt.mappingException  (" ")  ; }^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return ;^102^^^^^81^129^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^handleNonArray ( jp, ctxt )  ;^102^^^^^81^129^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( str.length (  )  *  0.5  != 1 )  {^105^^^^^81^129^[REPLACE] if  ( str.length (  )  != 1 )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return ;^106^^^^^81^129^[REPLACE] throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.size (  ) +" into a char element of char array" ) ;^106^^^^^81^129^[REPLACE] throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^106^^^^^81^129^[ADD] throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^handleNonArray ( jp, ctxt )  ;^106^^^^^81^129^[REPLACE] throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^100^101^102^^^81^129^[ADD] while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  { if  ( t != JsonToken.VALUE_STRING )  { throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return sb.toString (  ) .charAt (  ) ;^110^^^^^81^129^[REPLACE] return sb.toString (  ) .toCharArray (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^StringBuilder sb = new StringBuilder ( 64 - 4 ) ;^99^^^^^81^129^[REPLACE] StringBuilder sb = new StringBuilder ( 64 ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^String str = jp .getTextOffset (  )  ;^104^^^^^81^129^[REPLACE] String str = jp.getText (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( t  ==  JsonToken.VALUE_STRING )  {^101^^^^^81^129^[REPLACE] if  ( t != JsonToken.VALUE_STRING )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^throw ctxt .isEnabled (  )   ;^102^^^^^81^129^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( str.length (  )  - 3 != 1 )  {^105^^^^^81^129^[REPLACE] if  ( str.length (  )  != 1 )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^105^106^107^^^81^129^[ADD] if  ( str.length (  )  != 1 )  { throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ; }^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of.charAt "+str.length (  ) +" into a char element of char array" ) ;^106^^^^^81^129^[REPLACE] throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^while  (  ( t =  null.nextToken (  )  )  !^100^^^^^81^129^[REPLACE] while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return sb.toString  (    )  .toCharArray  (    )  ;  ;^110^^^^^81^129^[REPLACE] return sb.toString (  ) .toCharArray (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^StringBuilder sb = new StringBuilder ( 65 ) ;^99^^^^^81^129^[REPLACE] StringBuilder sb = new StringBuilder ( 64 ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^String str = jp.getTextOffset (  ) ;^104^^^^^81^129^[REPLACE] String str = jp.getText (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^102^^^^^81^129^[ADD] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  (   JsonToken.VALUE_EMBEDDED_OBJECT )  {^113^^^^^81^129^[REPLACE] if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^113^114^115^116^117^81^129^[ADD] if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  { Object ob = jp.getEmbeddedObject (  ) ; if  ( ob == null )  return null; if  ( ob instanceof char[] )  { return  ( char[] )  ob;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( ob != this )  return this;^115^^^^^81^129^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^115^116^117^118^^81^129^[ADD] if  ( ob == null )  return null; if  ( ob instanceof char[] )  { return  ( char[] )  ob; }^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( ob == true )  return true;^115^^^^^81^129^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( ! ob instanceof char[] )  {^116^^^^^81^129^[REPLACE] if  ( ob instanceof char[] )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^return  ( char[] )  ob;^116^117^118^^^81^129^[ADD] if  ( ob instanceof char[] )  { return  ( char[] )  ob; }^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return   (  char[]  )   ob;  ;^117^^^^^81^129^[REPLACE] return  ( char[] )  ob;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if   (  ob instanceof char[]  )   {  ;^119^^^^^81^129^[REPLACE] if  ( ob instanceof String )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^119^120^121^^^81^129^[ADD] if  ( ob instanceof String )  { return  (  ( String )  ob ) .toCharArray (  ) ; }^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return  (  ( String )  ob ) .length (  ) ;^120^^^^^81^129^[REPLACE] return  (  ( String )  ob ) .toCharArray (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( ! ob instanceof byte[] )  {^123^^^^^81^129^[REPLACE] if  ( ob instanceof byte[] )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return Base64Variants.getDefaultVariant (  ) .encode (  ( byte[] )  ob, true ) .toCharArray (  ) ;^124^^^^^81^129^[REPLACE] return Base64Variants.getDefaultVariant (  ) .encode (  ( byte[] )  ob, false ) .toCharArray (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return null;  ;^115^^^^^81^129^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^114^^^^^81^129^[ADD] Object ob = jp.getEmbeddedObject (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( ob != null )  return null;^115^^^^^81^129^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if   (  ob instanceof String  )   {  ;^116^^^^^81^129^[REPLACE] if  ( ob instanceof char[] )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return  (  ( String )  ob )  .charAt ( len )  ;^120^^^^^81^129^[REPLACE] return  (  ( String )  ob ) .toCharArray (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^throw ctxt.mappingException ( TYPE )  ;^128^^^^^81^129^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^handleNonArray ( jp, ctxt )  ;^128^^^^^81^129^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REMOVE]^ctxt.getArrayBuilders (  )  ;^128^^^^^81^129^[REMOVE] ^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^150^^^^^149^167^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^151^^^^^149^167^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^LongBuilder builder = ctxt.getArrayBuilders (  ) .getLongBuilder (  )  ;^153^^^^^149^167^[REPLACE] ArrayBuilders.BooleanBuilder builder = ctxt.getArrayBuilders (  ) .getBooleanBuilder (  ) ;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^boolean[] chunk = null.resetAndStart (  ) ;^154^^^^^149^167^[REPLACE] boolean[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 1;^155^^^^^149^167^[REPLACE] int ix = 0;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ix >= chunk.length (  )  )  {^160^^^^^149^167^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^161^^^^^149^167^[ADD] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 3;^162^^^^^149^167^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^ix = 0;^161^162^^^^149^167^[ADD] chunk = builder.appendCompletedChunk ( chunk, ix ) ; ix = 0;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^164^^^^^149^167^[ADD] chunk[ix++] = value;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^short value = _parseShortPrimitive ( jp, ctxt )  ;^159^^^^^149^167^[REPLACE] boolean value = _parseBooleanPrimitive ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return builder.completeAndClearBuffer  (  chunk, ix  )  ;  ;^166^^^^^149^167^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^JsonToken t = jp.nextToken (  ) ;^202^^^^^201^243^[REPLACE] JsonToken t = jp.getCurrentToken (  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  ) {^205^^^^^201^243^[REPLACE] if  ( t == JsonToken.VALUE_STRING )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return jp.getBinaryValue ( ctxt .getArrayBuilders (  )   ) ;^206^^^^^201^243^[REPLACE] return jp.getBinaryValue ( ctxt.getBase64Variant (  )  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return jp .getByteValue (  )  ;^206^^^^^201^243^[REPLACE] return jp.getBinaryValue ( ctxt.getBase64Variant (  )  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  !=  JsonToken.VALUE_EMBEDDED_OBJECT )  {^209^^^^^201^243^[REPLACE] if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ob != null )  return null;^211^^^^^201^243^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ob == false )  return false;^211^^^^^201^243^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if   (  ob instanceof char[]  )   {  ;^212^^^^^201^243^[REPLACE] if  ( ob instanceof byte[] )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^212^213^214^^^201^243^[ADD] if  ( ob instanceof byte[] )  { return  ( byte[] )  ob; }^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return   (  byte[]  )   ob;  ;^213^^^^^201^243^[REPLACE] return  ( byte[] )  ob;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^210^211^^^^201^243^[ADD] Object ob = jp.getEmbeddedObject (  ) ; if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^211^212^213^214^^201^243^[ADD] if  ( ob == null )  return null; if  ( ob instanceof byte[] )  { return  ( byte[] )  ob; }^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ! ob instanceof byte[] )  {^212^^^^^201^243^[REPLACE] if  ( ob instanceof byte[] )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^return  ( byte[] )  ob;^212^213^214^^^201^243^[ADD] if  ( ob instanceof byte[] )  { return  ( byte[] )  ob; }^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ob == this )  return this;^211^^^^^201^243^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^Object ob = jp.getTextOffset (  ) ;^210^^^^^201^243^[REPLACE] Object ob = jp.getEmbeddedObject (  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^216^^^^^201^243^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^217^^^^^201^243^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^LongBuilder builder = ctxt.getArrayBuilders (  ) .getLongBuilder (  )  ;^219^^^^^201^243^[REPLACE] ArrayBuilders.ByteBuilder builder = ctxt.getArrayBuilders (  ) .getByteBuilder (  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^220^^^^^201^243^[ADD] byte[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 0L;^221^^^^^201^243^[REPLACE] int ix = 0;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t == JsonToken.VALUE_NUMBER_INT && t == JsonToken.VALUE_NUMBER_FLOAT )  {^226^^^^^201^243^[REPLACE] if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^226^227^228^229^^201^243^[ADD] if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {  value = jp.getByteValue (  ) ; } else {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  ==  JsonToken.VALUE_NULL )  {^231^^^^^226^235^[REPLACE] if  ( t != JsonToken.VALUE_NULL )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REMOVE]^if  ( ! ( ctxt.isEnabled ( DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY )  )  )  {     throw ctxt.mappingException ( _valueClass ) ; }^231^^^^^226^235^[REMOVE] ^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^value = jp.getByteValue (  )  ;^234^^^^^226^235^[REPLACE] value =  ( byte )  0;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return ;^232^^^^^226^235^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^228^^^^^201^243^[ADD] value = jp.getByteValue (  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  ==  JsonToken.VALUE_NULL )  {^231^^^^^201^243^[REPLACE] if  ( t != JsonToken.VALUE_NULL )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^231^232^233^^^201^243^[ADD] if  ( t != JsonToken.VALUE_NULL )  { throw ctxt.mappingException  (" ")  ; }^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.mappingException ( TYPE )  ;^232^^^^^201^243^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^handleNonArray ( jp, ctxt )  ;^232^^^^^201^243^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ix >= chunk.length %  0 .5  )  {^236^^^^^201^243^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  this.appendCompletedChunk ( chunk, ix ) ;^237^^^^^201^243^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 2;^238^^^^^201^243^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^while  (  ( t =  null.nextToken (  )  )  !^223^^^^^201^243^[REPLACE] while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^value =  null.getByteValue (  ) ;^228^^^^^201^243^[REPLACE] value = jp.getByteValue (  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^value = jp.getByteValue (  )  ;^234^^^^^201^243^[REPLACE] value =  ( byte )  0;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  true.appendCompletedChunk ( chunk, ix ) ;^237^^^^^201^243^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^238^^^^^201^243^[ADD] ix = 0;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk[ix++] =  value;^240^^^^^201^243^[REPLACE] chunk[ix++] = value;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 0  ;^225^^^^^201^243^[REPLACE] byte value;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return ;^232^^^^^201^243^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return builder .resetAndStart (  )  ;^242^^^^^201^243^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) || ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^[REPLACE] if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.getText (  ) .length (  )  /  0 .5  == 0  )  {^251^^^^^249^254^[REPLACE] if  ( jp.getText (  ) .length (  )  == 0 )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return false;^252^^^^^249^254^[REPLACE] return null;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.getText (  ) .length (  )  %  2 == 0 )  {^251^^^^^247^271^[REPLACE] if  ( jp.getText (  ) .length (  )  == 0 )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return false;^252^^^^^247^271^[REPLACE] return null;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return true;^252^^^^^247^271^[REPLACE] return null;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( !ctxt.mappingException ( DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY )  )  {^255^^^^^247^271^[REPLACE] if  ( !ctxt.isEnabled ( DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY )  )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^256^^^^^247^271^[ADD] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt .isEnabled (  )   ;^256^^^^^247^271^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.mappingException ( TYPE )  ;^256^^^^^247^271^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 0  ;^258^^^^^247^271^[REPLACE] byte value;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^JsonToken t = jp.nextToken (  ) ;^259^^^^^247^271^[REPLACE] JsonToken t = jp.getCurrentToken (  ) ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t == JsonToken.VALUE_NUMBER_INT && t == JsonToken.VALUE_NUMBER_FLOAT )  {^260^^^^^247^271^[REPLACE] if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if   (  t != JsonToken.VALUE_STRING  )   {  ;^265^^^^^260^269^[REPLACE] if  ( t != JsonToken.VALUE_NULL )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^value = jp.getByteValue (  )  ;^268^^^^^260^269^[REPLACE] value =  ( byte )  0;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.mappingException ( TYPE )  ;^266^^^^^260^269^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^value =  null.getByteValue (  ) ;^262^^^^^247^271^[REPLACE] value = jp.getByteValue (  ) ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  ==  JsonToken.VALUE_NULL )  {^265^^^^^247^271^[REPLACE] if  ( t != JsonToken.VALUE_NULL )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^266^^^^^247^271^[ADD] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^handleNonArray ( jp, ctxt )  ;^266^^^^^247^271^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REMOVE]^ctxt.getArrayBuilders (  ) .getIntBuilder (  )  ;^266^^^^^247^271^[REMOVE] ^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^262^^^^^247^271^[ADD] value = jp.getByteValue (  ) ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^268^^^^^247^271^[ADD] value =  ( byte )  0;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return ;^266^^^^^247^271^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return new byte[] { value };  ;^270^^^^^247^271^[REPLACE] return new byte[] { value };^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^286^^^^^285^302^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^287^^^^^285^302^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^LongBuilder builder = ctxt.getArrayBuilders (  ) .getLongBuilder (  )  ;^289^^^^^285^302^[REPLACE] ArrayBuilders.ShortBuilder builder = ctxt.getArrayBuilders (  ) .getShortBuilder (  ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^short[] chunk = true.resetAndStart (  ) ;^290^^^^^285^302^[REPLACE] short[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^291^^^^^285^302^[ADD] int ix = 0;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ix >= chunk.length - 3 )  {^295^^^^^285^302^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^296^^^^^285^302^[ADD] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 1;^297^^^^^285^302^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  null.appendCompletedChunk ( chunk, ix ) ;^296^^^^^285^302^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 0 + 2;^297^^^^^285^302^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk[ix++] =  value;^299^^^^^285^302^[REPLACE] chunk[ix++] = value;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^294^^^^^285^302^[ADD] short value = _parseShortPrimitive ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return builder.appendCompletedChunk ( chunk, ix ) ;^301^^^^^285^302^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^335^^^^^334^352^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^336^^^^^334^352^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^ArrayBuilders.IntBuilder builder = ctxt.isEnabled (  ) .getIntBuilder (  ) ;^338^^^^^334^352^[REPLACE] ArrayBuilders.IntBuilder builder = ctxt.getArrayBuilders (  ) .getIntBuilder (  ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^int[] chunk = false.resetAndStart (  ) ;^339^^^^^334^352^[REPLACE] int[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 4;^340^^^^^334^352^[REPLACE] int ix = 0;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ix >= chunk.length /  2 )  {^345^^^^^334^352^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  true.appendCompletedChunk ( chunk, ix ) ;^346^^^^^334^352^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^ix = 0 % 0;^347^^^^^334^352^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  1.appendCompletedChunk ( chunk, ix ) ;^346^^^^^334^352^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^ix = 0L;^347^^^^^334^352^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^chunk[ix++] =  value;^349^^^^^334^352^[REPLACE] chunk[ix++] = value;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^short value = _parseShortPrimitive ( jp, ctxt )  ;^344^^^^^334^352^[REPLACE] int value = _parseIntPrimitive ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^return builder.completeAndClearBuffer  (  chunk, ix  )  ;  ;^351^^^^^334^352^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  IntBuilder builder  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^if  ( !jp .getCurrentToken (  )   )  {^385^^^^^384^401^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^386^^^^^384^401^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ArrayBuilders.LongBuilder builder = ctxt.getArrayBuilders (  )  .getFloatBuilder (  )  ;^388^^^^^384^401^[REPLACE] ArrayBuilders.LongBuilder builder = ctxt.getArrayBuilders (  ) .getLongBuilder (  ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^long[] chunk = null.resetAndStart (  ) ;^389^^^^^384^401^[REPLACE] long[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 3;^390^^^^^384^401^[REPLACE] int ix = 0;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ix >= chunk.length + 4 )  {^394^^^^^384^401^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^395^396^^^^384^401^[ADD] chunk = builder.appendCompletedChunk ( chunk, ix ) ; ix = 0;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 0 + 4;^396^^^^^384^401^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  1.appendCompletedChunk ( chunk, ix ) ;^395^^^^^384^401^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 3;^396^^^^^384^401^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^398^^^^^384^401^[ADD] chunk[ix++] = value;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^393^^^^^384^401^[ADD] long value = _parseLongPrimitive ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return null.completeAndClearBuffer ( chunk, ix ) ;^400^^^^^384^401^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if   (  jp.isExpectedStartArrayToken  (    )    )   {  ;^432^^^^^431^449^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[ADD]^^432^433^434^^^431^449^[ADD] if  ( !jp.isExpectedStartArrayToken (  )  )  { return handleNonArray ( jp, ctxt ) ; }^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^433^^^^^431^449^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[ADD]^float[] chunk = builder.resetAndStart (  ) ;^435^436^^^^431^449^[ADD] ArrayBuilders.FloatBuilder builder = ctxt.getArrayBuilders (  ) .getFloatBuilder (  ) ; float[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^float[] chunk = null.resetAndStart (  ) ;^436^^^^^431^449^[REPLACE] float[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[ADD]^^437^^^^^431^449^[ADD] int ix = 0;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^if  ( ix >= chunk.length - 1 )  {^442^^^^^431^449^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[ADD]^chunk = builder.appendCompletedChunk ( chunk, ix ) ;ix = 0;^442^443^444^445^^431^449^[ADD] if  ( ix >= chunk.length )  { chunk = builder.appendCompletedChunk ( chunk, ix ) ; ix = 0; }^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^chunk =  this.appendCompletedChunk ( chunk, ix ) ;^443^^^^^431^449^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^ix = 3;^444^^^^^431^449^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^chunk =  true.appendCompletedChunk ( chunk, ix ) ;^443^^^^^431^449^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^ix = 2;^444^^^^^431^449^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^chunk[ix++] =  value;^446^^^^^431^449^[REPLACE] chunk[ix++] = value;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[ADD]^^441^^^^^431^449^[ADD] float value = _parseFloatPrimitive ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^return builder.appendCompletedChunk ( chunk, ix ) ;^448^^^^^431^449^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^if   (  jp.isExpectedStartArrayToken  (    )    )   {  ;^480^^^^^479^496^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^481^^^^^479^496^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^483^484^^^^479^496^[ADD] ArrayBuilders.DoubleBuilder builder = ctxt.getArrayBuilders (  ) .getDoubleBuilder (  ) ; double[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^484^^^^^479^496^[ADD] double[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^485^^^^^479^496^[ADD] int ix = 0;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ix >= chunk.length (  )  )  {^489^^^^^479^496^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  null.appendCompletedChunk ( chunk, ix ) ;^490^^^^^479^496^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 3;^491^^^^^479^496^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^491^^^^^479^496^[ADD] ix = 0;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk[ix++] =  value;^493^^^^^479^496^[REPLACE] chunk[ix++] = value;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^short value = _parseShortPrimitive ( jp, ctxt )  ;^488^^^^^479^496^[REPLACE] double value = _parseDoublePrimitive ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return null.completeAndClearBuffer ( chunk, ix ) ;^495^^^^^479^496^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] PrimitiveArrayDeserializers CharDeser BooleanDeser ByteDeser ShortDeser IntDeser LongDeser FloatDeser DoubleDeser   [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^private  final long serialVersionUID = 1;^74^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] handleNonArray [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  LongDeser instance  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  value  [TYPE]  JsonParser jp 
[ADD]^^86^^^^^81^129^[ADD] JsonToken t = jp.getCurrentToken (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if   (  t != JsonToken.VALUE_STRING  )   {  ;^87^^^^^81^129^[REPLACE] if  ( t == JsonToken.VALUE_STRING )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return result;  ;^95^^^^^81^129^[REPLACE] return result;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^char[] buffer = jp .getTextOffset (  )  ;^89^^^^^81^129^[REPLACE] char[] buffer = jp.getTextCharacters (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^int offset = jp.getTextLength (  ) ;^90^^^^^81^129^[REPLACE] int offset = jp.getTextOffset (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^int len = jp.getTextOffset (  ) ;^91^^^^^81^129^[REPLACE] int len = jp.getTextLength (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^93^94^^^^81^129^[ADD] char[] result = new char[len]; System.arraycopy ( buffer, offset, result, 0, len ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^char[] buffer = jp.getTextOffset (  ) ;^89^^^^^81^129^[REPLACE] char[] buffer = jp.getTextCharacters (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^90^^^^^81^129^[ADD] int offset = jp.getTextOffset (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^93^^^^^81^129^[ADD] char[] result = new char[len];^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if   (  ob instanceof byte[]  )   {  ;^97^^^^^81^129^[REPLACE] if  ( jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^97^98^99^100^^81^129^[ADD] if  ( jp.isExpectedStartArrayToken (  )  )  {  StringBuilder sb = new StringBuilder ( 64 ) ; while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if   (  t == JsonToken.VALUE_STRING  )   {  ;^101^^^^^81^129^[REPLACE] if  ( t != JsonToken.VALUE_STRING )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^throw ctxt.mappingException ( _valueClass )  ;^102^^^^^81^129^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^jp.getText (  )  ;^102^^^^^81^129^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( str.length (  )  + 4 != 1 )  {^105^^^^^81^129^[REPLACE] if  ( str.length (  )  != 1 )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^105^106^107^^^81^129^[ADD] if  ( str.length (  )  != 1 )  { throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ; }^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return ;^106^^^^^81^129^[REPLACE] throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  )  + 3+" into a char element of char array" ) ;^106^^^^^81^129^[REPLACE] throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of.charAt "+str.length (  ) +" into a char element of char array" ) ;^106^^^^^81^129^[REPLACE] throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^106^^^^^81^129^[ADD] throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^while  (  ( t =  null.nextToken (  )  )  !^100^^^^^81^129^[REPLACE] while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return sb .StringBuilder ( offset )  .toCharArray (  ) ;^110^^^^^81^129^[REPLACE] return sb.toString (  ) .toCharArray (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^StringBuilder sb = new StringBuilder ( 0 ) ;^99^^^^^81^129^[REPLACE] StringBuilder sb = new StringBuilder ( 64 ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^104^^^^^81^129^[ADD] String str = jp.getText (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return ;^102^^^^^81^129^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( t  ==  JsonToken.VALUE_STRING )  {^101^^^^^81^129^[REPLACE] if  ( t != JsonToken.VALUE_STRING )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REMOVE]^ctxt.mappingException ( _valueClass )  ;^102^^^^^81^129^[REMOVE] ^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( str.length (  )  + 5 != 1 )  {^105^^^^^81^129^[REPLACE] if  ( str.length (  )  != 1 )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  )  - 4+" into a char element of char array" ) ;^106^^^^^81^129^[REPLACE] throw JsonMappingException.from ( jp, "Can not convert a JSON String of length "+str.length (  ) +" into a char element of char array" ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^100^101^102^^^81^129^[ADD] while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  { if  ( t != JsonToken.VALUE_STRING )  { throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return sb.toString  (    )  .toCharArray  (    )  ;  ;^110^^^^^81^129^[REPLACE] return sb.toString (  ) .toCharArray (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^99^^^^^81^129^[ADD] StringBuilder sb = new StringBuilder ( 64 ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^String str = jp.getTextOffset (  ) ;^104^^^^^81^129^[REPLACE] String str = jp.getText (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( t  ||  JsonToken.VALUE_EMBEDDED_OBJECT )  {^113^^^^^81^129^[REPLACE] if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( ob != null )  return null;^115^^^^^81^129^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^115^116^117^118^^81^129^[ADD] if  ( ob == null )  return null; if  ( ob instanceof char[] )  { return  ( char[] )  ob; }^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( ob == this )  return this;^115^^^^^81^129^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if   (  ob instanceof byte[]  )   {  ;^116^^^^^81^129^[REPLACE] if  ( ob instanceof char[] )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return   (  char[]  )   ob;  ;^117^^^^^81^129^[REPLACE] return  ( char[] )  ob;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if   (  ob instanceof byte[]  )   {  ;^119^^^^^81^129^[REPLACE] if  ( ob instanceof String )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return  (  ( String )  ob )  .charAt ( len )  ;^120^^^^^81^129^[REPLACE] return  (  ( String )  ob ) .toCharArray (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( ! ob instanceof byte[] )  {^123^^^^^81^129^[REPLACE] if  ( ob instanceof byte[] )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^123^124^125^^^81^129^[ADD] if  ( ob instanceof byte[] )  { return Base64Variants.getDefaultVariant (  ) .encode (  ( byte[] )  ob, false ) .toCharArray (  ) ; }^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return Base64Variants.getDefaultVariant (  ) .encode (  ( byte[] )  ob, true ) .toCharArray (  ) ;^124^^^^^81^129^[REPLACE] return Base64Variants.getDefaultVariant (  ) .encode (  ( byte[] )  ob, false ) .toCharArray (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( ob == true )  return true;^115^^^^^81^129^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^return  (  ( String )  ob ) .length (  ) ;^120^^^^^81^129^[REPLACE] return  (  ( String )  ob ) .toCharArray (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^Object ob = jp.getTextOffset (  ) ;^114^^^^^81^129^[REPLACE] Object ob = jp.getEmbeddedObject (  ) ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( ob != this )  return this;^115^^^^^81^129^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( ! ob instanceof char[] )  {^116^^^^^81^129^[REPLACE] if  ( ob instanceof char[] )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^116^117^118^^^81^129^[ADD] if  ( ob instanceof char[] )  { return  ( char[] )  ob; }^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( ! ob instanceof String )  {^119^^^^^81^129^[REPLACE] if  ( ob instanceof String )  {^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REMOVE]^if  (  ( str.length (  )  )  != 1 )  {     throw from ( jp,  (  ( "Can not convert a JSON String of length " +  ( str.length (  )  )  )  + " into a char element of char array" )  ) ; }^123^^^^^81^129^[REMOVE] ^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[ADD]^^128^^^^^81^129^[ADD] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^jp.getText (  )  ;^128^^^^^81^129^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] CharDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^private static final long serialVersionUID  = null ;^142^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] deserialize [TYPE] char[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  [TYPE]  StringBuilder sb  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  String str  [TYPE]  long serialVersionUID  [TYPE]  int len  offset  [TYPE]  JsonParser jp  [TYPE]  char[] buffer  result 
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^150^^^^^149^167^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^150^151^152^^^149^167^[ADD] if  ( !jp.isExpectedStartArrayToken (  )  )  { return handleNonArray ( jp, ctxt ) ; }^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^151^^^^^149^167^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ArrayBuilders.BooleanBuilder builder = ctxt .isEnabled (  )  .getBooleanBuilder (  ) ;^153^^^^^149^167^[REPLACE] ArrayBuilders.BooleanBuilder builder = ctxt.getArrayBuilders (  ) .getBooleanBuilder (  ) ;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 0  ;^154^^^^^149^167^[REPLACE] boolean[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^155^^^^^149^167^[ADD] int ix = 0;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ix >= chunk.length (  )  )  {^160^^^^^149^167^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  1.appendCompletedChunk ( chunk, ix ) ;^161^^^^^149^167^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 0 / 1;^162^^^^^149^167^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 3;^162^^^^^149^167^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk[ix++] =  value;^164^^^^^149^167^[REPLACE] chunk[ix++] = value;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 0  ;^159^^^^^149^167^[REPLACE] boolean value = _parseBooleanPrimitive ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return builder.appendCompletedChunk ( chunk, ix ) ;^166^^^^^149^167^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] BooleanDeser   [TYPE]  boolean false  true  value  [TYPE]  BooleanBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  boolean[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^private static final long serialVersionUID ;^194^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] handleNonArray [TYPE] boolean[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^202^^^^^201^243^[ADD] JsonToken t = jp.getCurrentToken (  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if   (  t != JsonToken.VALUE_NULL  )   {  ;^205^^^^^201^243^[REPLACE] if  ( t == JsonToken.VALUE_STRING )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^205^206^207^^^201^243^[ADD] if  ( t == JsonToken.VALUE_STRING )  { return jp.getBinaryValue ( ctxt.getBase64Variant (  )  ) ; }^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return jp.getBinaryValue  (  ctxt.getBase64Variant  (    )    )  ;  ;^206^^^^^201^243^[REPLACE] return jp.getBinaryValue ( ctxt.getBase64Variant (  )  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return jp .getByteValue (  )  ;^206^^^^^201^243^[REPLACE] return jp.getBinaryValue ( ctxt.getBase64Variant (  )  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  !=  JsonToken.VALUE_EMBEDDED_OBJECT )  {^209^^^^^201^243^[REPLACE] if  ( t == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ob != null )  return null;^211^^^^^201^243^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ob == true )  return true;^211^^^^^201^243^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ! ob instanceof byte[] )  {^212^^^^^201^243^[REPLACE] if  ( ob instanceof byte[] )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^return  ( byte[] )  ob;^212^213^214^^^201^243^[ADD] if  ( ob instanceof byte[] )  { return  ( byte[] )  ob; }^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return   (  byte[]  )   ob;  ;^213^^^^^201^243^[REPLACE] return  ( byte[] )  ob;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ob == false )  return false;^211^^^^^201^243^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^Object ob = jp.getByteValue (  ) ;^210^^^^^201^243^[REPLACE] Object ob = jp.getEmbeddedObject (  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ob == this )  return this;^211^^^^^201^243^[REPLACE] if  ( ob == null )  return null;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^216^^^^^201^243^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^217^^^^^201^243^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^byte value  ;^219^^^^^201^243^[REPLACE] ArrayBuilders.ByteBuilder builder = ctxt.getArrayBuilders (  ) .getByteBuilder (  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^byte[] chunk = null.resetAndStart (  ) ;^220^^^^^201^243^[REPLACE] byte[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^221^^^^^201^243^[ADD] int ix = 0;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t == JsonToken.VALUE_NUMBER_INT && t == JsonToken.VALUE_NUMBER_FLOAT )  {^226^^^^^201^243^[REPLACE] if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  ==  JsonToken.VALUE_NULL )  {^231^^^^^226^235^[REPLACE] if  ( t != JsonToken.VALUE_NULL )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^value = jp.getByteValue (  )  ;^234^^^^^226^235^[REPLACE] value =  ( byte )  0;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return ;^232^^^^^226^235^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^value =  null.getByteValue (  ) ;^228^^^^^201^243^[REPLACE] value = jp.getByteValue (  ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  ==  JsonToken.VALUE_NULL )  {^231^^^^^201^243^[REPLACE] if  ( t != JsonToken.VALUE_NULL )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^231^232^233^^^201^243^[ADD] if  ( t != JsonToken.VALUE_NULL )  { throw ctxt.mappingException  (" ")  ; }^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.mappingException ( _valueClass )  ;^232^^^^^201^243^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^handleNonArray ( jp, ctxt )  ;^232^^^^^201^243^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^232^^^^^201^243^[ADD] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ix >= chunk.length + 2 )  {^236^^^^^201^243^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  1.appendCompletedChunk ( chunk, ix ) ;^237^^^^^201^243^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 0 / 0;^238^^^^^201^243^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^while  (  ( t =  null.nextToken (  )  )  !^223^^^^^201^243^[REPLACE] while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^value = jp.getByteValue (  )  ;^234^^^^^201^243^[REPLACE] value =  ( byte )  0;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  this.appendCompletedChunk ( chunk, ix ) ;^237^^^^^201^243^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 1;^238^^^^^201^243^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk[ix++] =  value;^240^^^^^201^243^[REPLACE] chunk[ix++] = value;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 0  ;^225^^^^^201^243^[REPLACE] byte value;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return ;^232^^^^^201^243^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return builder.appendCompletedChunk ( chunk, ix ) ;^242^^^^^201^243^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  byte[] chunk  [TYPE]  ByteBuilder builder  [TYPE]  boolean false  true  [TYPE]  byte value  [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  Object ob  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  (  ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^249^250^^^^247^271^[REPLACE] if  (  ( jp.getCurrentToken (  )  == JsonToken.VALUE_STRING ) && ctxt.isEnabled ( DeserializationFeature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT )  )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.getText (  ) .length (  )  - 5 == 0 )  {^251^^^^^249^254^[REPLACE] if  ( jp.getText (  ) .length (  )  == 0 )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^return null;  ;^252^^^^^249^254^[REPLACE] return null;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.nextToken (  ) .length (  )  + 2 == 0 )  {^251^^^^^247^271^[REPLACE] if  ( jp.getText (  ) .length (  )  == 0 )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[ADD]^^251^252^253^^^247^271^[ADD] if  ( jp.getText (  ) .length (  )  == 0 )  { return null; }^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^return null;  ;^252^^^^^247^271^[REPLACE] return null;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^return this;^252^^^^^247^271^[REPLACE] return null;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ctxt.isEnabled ( DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY )  )  {^255^^^^^247^271^[REPLACE] if  ( !ctxt.isEnabled ( DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY )  )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[ADD]^^255^256^257^^^247^271^[ADD] if  ( !ctxt.isEnabled ( DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY )  )  { throw ctxt.mappingException  (" ")  ; }^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[ADD]^^256^^^^^247^271^[ADD] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt .getBase64Variant (  )   ;^256^^^^^247^271^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^return ;^256^^^^^247^271^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 0  ;^258^^^^^247^271^[REPLACE] byte value;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^JsonToken t = jp .nextToken (  )  ;^259^^^^^247^271^[REPLACE] JsonToken t = jp.getCurrentToken (  ) ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t == JsonToken.VALUE_NUMBER_INT && t == JsonToken.VALUE_NUMBER_FLOAT )  {^260^^^^^247^271^[REPLACE] if  ( t == JsonToken.VALUE_NUMBER_INT || t == JsonToken.VALUE_NUMBER_FLOAT )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  ==  JsonToken.VALUE_NULL )  {^265^^^^^260^269^[REPLACE] if  ( t != JsonToken.VALUE_NULL )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^value = jp.getByteValue (  )  ;^268^^^^^260^269^[REPLACE] value =  ( byte )  0;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^return ;^266^^^^^260^269^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^value =  null.getByteValue (  ) ;^262^^^^^247^271^[REPLACE] value = jp.getByteValue (  ) ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  ==  JsonToken.VALUE_NULL )  {^265^^^^^247^271^[REPLACE] if  ( t != JsonToken.VALUE_NULL )  {^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[ADD]^^265^266^267^^^247^271^[ADD] if  ( t != JsonToken.VALUE_NULL )  { throw ctxt.mappingException  (" ")  ; }^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.mappingException ( _valueClass )  ;^266^^^^^247^271^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^handleNonArray ( jp, ctxt )  ;^266^^^^^247^271^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[ADD]^^266^^^^^247^271^[ADD] throw ctxt.mappingException  (" ")  ;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^value = jp.getByteValue (  )  ;^268^^^^^247^271^[REPLACE] value =  ( byte )  0;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^return new byte[] { value };  ;^270^^^^^247^271^[REPLACE] return new byte[] { value };^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ByteDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^private static final long serialVersionUID ;^278^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] handleNonArray [TYPE] byte[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  byte value  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^286^^^^^285^302^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^287^^^^^285^302^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ArrayBuilders.ShortBuilder builder = ctxt.getArrayBuilders (  )  ._parseShortPrimitive ( true , null )  ;^289^^^^^285^302^[REPLACE] ArrayBuilders.ShortBuilder builder = ctxt.getArrayBuilders (  ) .getShortBuilder (  ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^int ix = 0;^290^291^^^^285^302^[ADD] short[] chunk = builder.resetAndStart (  ) ; int ix = 0;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 3;^291^^^^^285^302^[REPLACE] int ix = 0;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ix >= chunk.length - 5 )  {^295^^^^^285^302^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  null.appendCompletedChunk ( chunk, ix ) ;^296^^^^^285^302^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 3;^297^^^^^285^302^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  false.appendCompletedChunk ( chunk, ix ) ;^296^^^^^285^302^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 4;^297^^^^^285^302^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk[ix++] =  value;^299^^^^^285^302^[REPLACE] chunk[ix++] = value;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 0  ;^294^^^^^285^302^[REPLACE] short value = _parseShortPrimitive ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return builder.appendCompletedChunk ( chunk, ix ) ;^301^^^^^285^302^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] ShortDeser   [TYPE]  boolean false  true  [TYPE]  ShortBuilder builder  [TYPE]  short[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  short value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^private static final long serialVersionUID ;^325^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] handleNonArray [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^public final static IntDeser instance  = null ;^327^^^^^^^[REPLACE] public final static IntDeser instance = new IntDeser (  ) ;^[METHOD] handleNonArray [TYPE] short[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^335^^^^^334^352^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^336^^^^^334^352^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[ADD]^^338^339^^^^334^352^[ADD] ArrayBuilders.IntBuilder builder = ctxt.getArrayBuilders (  ) .getIntBuilder (  ) ; int[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^int[] chunk = true.resetAndStart (  ) ;^339^^^^^334^352^[REPLACE] int[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 2;^340^^^^^334^352^[REPLACE] int ix = 0;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ix >= chunk.length + 2 )  {^345^^^^^334^352^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[ADD]^chunk = builder.appendCompletedChunk ( chunk, ix ) ;ix = 0;^345^346^347^348^^334^352^[ADD] if  ( ix >= chunk.length )  { chunk = builder.appendCompletedChunk ( chunk, ix ) ; ix = 0; }^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[ADD]^^346^^^^^334^352^[ADD] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^ix = 4;^347^^^^^334^352^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[ADD]^ix = 0;^346^347^^^^334^352^[ADD] chunk = builder.appendCompletedChunk ( chunk, ix ) ; ix = 0;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^ix = 0 - 4;^347^^^^^334^352^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^chunk[ix++] =  value;^349^^^^^334^352^[REPLACE] chunk[ix++] = value;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^IntBuilder builder = ctxt.getArrayBuilders (  ) .getIntBuilder (  )  ;^344^^^^^334^352^[REPLACE] int value = _parseIntPrimitive ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^return builder.appendCompletedChunk ( chunk, ix ) ;^351^^^^^334^352^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] IntDeser   [TYPE]  IntBuilder builder  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  DeserializationContext ctxt  [TYPE]  int[] chunk  [TYPE]  long serialVersionUID  [TYPE]  int ix  value  [TYPE]  JsonParser jp 
[REPLACE]^private static final long serialVersionUID  = null ;^375^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] handleNonArray [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^public final static LongDeser instance ;^377^^^^^^^[REPLACE] public final static LongDeser instance = new LongDeser (  ) ;^[METHOD] handleNonArray [TYPE] int[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  IntDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( !jp .getCurrentToken (  )   )  {^385^^^^^384^401^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^return handleNonArray ( jp, ctxt ) ;^385^386^387^^^384^401^[ADD] if  ( !jp.isExpectedStartArrayToken (  )  )  { return handleNonArray ( jp, ctxt ) ; }^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^386^^^^^384^401^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ArrayBuilders.LongBuilder builder = ctxt.isEnabled (  ) .getLongBuilder (  ) ;^388^^^^^384^401^[REPLACE] ArrayBuilders.LongBuilder builder = ctxt.getArrayBuilders (  ) .getLongBuilder (  ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^long[] chunk = null.resetAndStart (  ) ;^389^^^^^384^401^[REPLACE] long[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 3;^390^^^^^384^401^[REPLACE] int ix = 0;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ix >= chunk.length + 2 )  {^394^^^^^384^401^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  this.appendCompletedChunk ( chunk, ix ) ;^395^^^^^384^401^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 0 - 1;^396^^^^^384^401^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  true.appendCompletedChunk ( chunk, ix ) ;^395^^^^^384^401^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^396^^^^^384^401^[ADD] ix = 0;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk[ix++] =  value;^398^^^^^384^401^[REPLACE] chunk[ix++] = value;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 0  ;^393^^^^^384^401^[REPLACE] long value = _parseLongPrimitive ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return builder.appendCompletedChunk ( chunk, ix ) ;^400^^^^^384^401^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] LongDeser   [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  LongBuilder builder  [TYPE]  long[] chunk  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  value  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^private static final long serialVersionUID  = null ;^424^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] handleNonArray [TYPE] long[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  LongDeser instance  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  value  [TYPE]  JsonParser jp 
[REPLACE]^if  ( !jp .getCurrentToken (  )   )  {^432^^^^^431^449^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[ADD]^return handleNonArray ( jp, ctxt ) ;^432^433^434^^^431^449^[ADD] if  ( !jp.isExpectedStartArrayToken (  )  )  { return handleNonArray ( jp, ctxt ) ; }^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^433^^^^^431^449^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[ADD]^^435^436^^^^431^449^[ADD] ArrayBuilders.FloatBuilder builder = ctxt.getArrayBuilders (  ) .getFloatBuilder (  ) ; float[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^float[] chunk = true.resetAndStart (  ) ;^436^^^^^431^449^[REPLACE] float[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^int ix = 3;^437^^^^^431^449^[REPLACE] int ix = 0;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^if  ( ix >= chunk.length /  2 )  {^442^^^^^431^449^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[ADD]^^443^444^^^^431^449^[ADD] chunk = builder.appendCompletedChunk ( chunk, ix ) ; ix = 0;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^ix = 0L;^444^^^^^431^449^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^chunk =  null.appendCompletedChunk ( chunk, ix ) ;^443^^^^^431^449^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^ix = 3;^444^^^^^431^449^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^chunk[ix++] =  value;^446^^^^^431^449^[REPLACE] chunk[ix++] = value;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^float[] chunk = builder.resetAndStart (  )  ;^441^^^^^431^449^[REPLACE] float value = _parseFloatPrimitive ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^return this.appendCompletedChunk ( chunk, ix ) ;^448^^^^^431^449^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] FloatDeser   [TYPE]  boolean false  true  [TYPE]  FloatBuilder builder  [TYPE]  DeserializationContext ctxt  [TYPE]  float value  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp  [TYPE]  float[] chunk 
[REPLACE]^private static  long serialVersionUID = 1L;^472^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^[METHOD] handleNonArray [TYPE] float[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DeserializationContext ctxt  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^480^^^^^479^496^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^return handleNonArray ( jp, ctxt ) ;^480^481^482^^^479^496^[ADD] if  ( !jp.isExpectedStartArrayToken (  )  )  { return handleNonArray ( jp, ctxt ) ; }^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return handleNonArray  (  jp, ctxt  )  ;  ;^481^^^^^479^496^[REPLACE] return handleNonArray ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^483^^^^^479^496^[ADD] ArrayBuilders.DoubleBuilder builder = ctxt.getArrayBuilders (  ) .getDoubleBuilder (  ) ;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^484^^^^^479^496^[ADD] double[] chunk = builder.resetAndStart (  ) ;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^int ix = 0 - 0;^485^^^^^479^496^[REPLACE] int ix = 0;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^if  ( ix >= chunk.length + 2 )  {^489^^^^^479^496^[REPLACE] if  ( ix >= chunk.length )  {^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk =  null.appendCompletedChunk ( chunk, ix ) ;^490^^^^^479^496^[REPLACE] chunk = builder.appendCompletedChunk ( chunk, ix ) ;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 0L;^491^^^^^479^496^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^ix = 3;^491^^^^^479^496^[REPLACE] ix = 0;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^chunk[ix++] =  value;^493^^^^^479^496^[REPLACE] chunk[ix++] = value;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[ADD]^^488^^^^^479^496^[ADD] double value = _parseDoublePrimitive ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
[REPLACE]^return null .resetAndStart (  )  ;^495^^^^^479^496^[REPLACE] return builder.completeAndClearBuffer ( chunk, ix ) ;^[METHOD] deserialize [TYPE] double[] [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] DoubleDeser   [TYPE]  DoubleBuilder builder  [TYPE]  boolean false  true  [TYPE]  double[] chunk  [TYPE]  double value  [TYPE]  DeserializationContext ctxt  [TYPE]  long serialVersionUID  [TYPE]  int ix  [TYPE]  JsonParser jp 
