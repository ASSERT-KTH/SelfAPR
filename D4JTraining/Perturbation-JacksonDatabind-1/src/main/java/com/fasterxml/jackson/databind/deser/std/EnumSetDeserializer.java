[REPLACE]^private static final  short  serialVersionUID = 3479455075597887177L;^23^^^^^^^[REPLACE] private static final long serialVersionUID = 3479455075597887177L;^ [CLASS] EnumSetDeserializer  
[REPLACE]^private JsonDeserializer<Enum<?>> _enumDeserializer;^29^^^^^^^[REPLACE] protected JsonDeserializer<Enum<?>> _enumDeserializer;^ [CLASS] EnumSetDeserializer  
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^87^^^^^85^111^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.mappingException ( _enumClass )  ;^88^^^^^85^111^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^ctxt.mappingException ( _enumClass )  ;^88^^^^^85^111^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^JsonToken t;^90^91^^^^85^111^[ADD] EnumSet result = constructSet (  ) ; JsonToken t;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^91^^^^^85^111^[ADD] JsonToken t;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  ) {^99^^^^^85^111^[REPLACE] if  ( t == JsonToken.VALUE_NULL )  {^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REMOVE]^if  ( ! ( jp.isExpectedStartArrayToken (  )  )  )  {     throw ctxt.mappingException ( class ) ; }^99^^^^^85^111^[REMOVE] ^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.mappingException ( class )  ;^100^^^^^85^111^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^ctxt.mappingException ( class )  ;^100^^^^^85^111^[REPLACE] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^100^^^^^85^111^[ADD] throw ctxt.mappingException  (" ")  ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( value == null )  {^106^^^^^85^111^[REPLACE] if  ( value != null )  {^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^constructSet (  )  ;^107^^^^^85^111^[REPLACE] result.add ( value ) ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^while  (  ( t =  null.nextToken (  )  )  !^93^^^^^85^111^[REPLACE] while  (  ( t = jp.nextToken (  )  )  != JsonToken.END_ARRAY )  {^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^102^^^^^85^111^[ADD] Enum<?> value = _enumDeserializer.deserialize ( jp, ctxt ) ;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return result;  ;^110^^^^^85^111^[REPLACE] return result;^[METHOD] deserialize [TYPE] EnumSet [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] EnumSetDeserializer   [TYPE]  Enum value  [TYPE]  JavaType _enumType  enumType  [TYPE]  boolean false  true  [TYPE]  EnumSet result  [TYPE]  DeserializationContext ctxt  [TYPE]  Class _enumClass  [TYPE]  JsonToken t  [TYPE]  JsonDeserializer _enumDeserializer  deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
