[REPLACE]^private static final long serialVersionUID ;^17^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] TypeParser MyTokenizer  
[REPLACE]^protected  TypeFactory _factory;^19^^^^^^^[REPLACE] protected final TypeFactory _factory;^ [CLASS] TypeParser MyTokenizer  
[REPLACE]^protected  short  _index;^96^^^^^^^[REPLACE] protected int _index;^ [CLASS] TypeParser MyTokenizer  
[REPLACE]^if   (  tokens.hasMoreTokens  (    )    )   {  ;^41^^^^^40^55^[REPLACE] if  ( !tokens.hasMoreTokens (  )  )  {^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^41^42^43^^^40^55^[ADD] if  ( !tokens.hasMoreTokens (  )  )  { throw _problem ( tokens, "Unexpected end-of-string" ) ; }^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return ;^42^^^^^40^55^[REPLACE] throw _problem ( tokens, "Unexpected end-of-string" ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^Class<?> base = findClass ( tokens.hasMoreTokens (  ) , tokens ) ;^44^^^^^40^55^[REPLACE] Class<?> base = findClass ( tokens.nextToken (  ) , tokens ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if   (  !tokens.hasMoreTokens  (    )    )   {  ;^46^^^^^40^55^[REPLACE] if  ( tokens.hasMoreTokens (  )  )  {^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if  ( "<".substring ( token )  )  {^48^^^^^40^55^[REPLACE] if  ( "<".equals ( token )  )  {^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return _factory._fromParameterizedClass ( null, parseTypes ( tokens )  ) ;^49^^^^^40^55^[REPLACE] return _factory._fromParameterizedClass ( base, parseTypes ( tokens )  ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^String token = tokens.hasMoreTokens (  ) ;^47^^^^^40^55^[REPLACE] String token = tokens.nextToken (  ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return _factory._fromClass ( base, this ) ;^54^^^^^40^55^[REPLACE] return _factory._fromClass ( base, null ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
