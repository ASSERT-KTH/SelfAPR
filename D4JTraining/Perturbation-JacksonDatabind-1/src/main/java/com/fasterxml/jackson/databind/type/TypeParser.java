[REPLACE]^private static final long serialVersionUID  = null ;^17^^^^^^^[REPLACE] private static final long serialVersionUID = 1L;^ [CLASS] TypeParser MyTokenizer  
[REPLACE]^protected  TypeFactory _factory;^19^^^^^^^[REPLACE] protected final TypeFactory _factory;^ [CLASS] TypeParser MyTokenizer  
[REPLACE]^protected  String _input;^94^^^^^^^[REPLACE] protected final String _input;^ [CLASS] TypeParser MyTokenizer  
[REPLACE]^protected  short  _pushbackToken;^98^^^^^^^[REPLACE] protected String _pushbackToken;^ [CLASS] TypeParser MyTokenizer  
[REPLACE]^_factory =  null;^22^^^^^21^23^[REPLACE] _factory = f;^[METHOD] <init> [TYPE] TypeFactory) [PARAMETER] TypeFactory f [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^22^^^^^21^23^[ADD] _factory = f;^[METHOD] <init> [TYPE] TypeFactory) [PARAMETER] TypeFactory f [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^super ( _pushbackToken, "<,>", true ) ;^101^^^^^100^103^[REPLACE] super ( str, "<,>", true ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  str  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^101^102^^^^100^103^[ADD] super ( str, "<,>", true ) ; _input = str;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  str  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^_input =  _pushbackToken;^102^^^^^100^103^[REPLACE] _input = str;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  str  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^102^^^^^100^103^[ADD] _input = str;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  str  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^canonical =  _pushbackToken.trim (  ) ;^28^^^^^25^36^[REPLACE] canonical = canonical.trim (  ) ;^[METHOD] parse [TYPE] JavaType [PARAMETER] String canonical [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  str  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^MyTokenizer tokens = new MyTokenizer ( _pushbackToken ) ;^29^^^^^25^36^[REPLACE] MyTokenizer tokens = new MyTokenizer ( canonical ) ;^[METHOD] parse [TYPE] JavaType [PARAMETER] String canonical [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  str  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^ArrayList<JavaType> types = new ArrayList<JavaType> (  ) ;^30^^^^^25^36^[REPLACE] JavaType type = parseType ( tokens ) ;^[METHOD] parse [TYPE] JavaType [PARAMETER] String canonical [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  str  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^30^^^^^25^36^[ADD] JavaType type = parseType ( tokens ) ;^[METHOD] parse [TYPE] JavaType [PARAMETER] String canonical [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  str  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if  ( tokens .nextToken (  )   )  {^32^^^^^25^36^[REPLACE] if  ( tokens.hasMoreTokens (  )  )  {^[METHOD] parse [TYPE] JavaType [PARAMETER] String canonical [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  str  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return ;^33^^^^^25^36^[REPLACE] throw _problem ( tokens, "Unexpected tokens after complete type" ) ;^[METHOD] parse [TYPE] JavaType [PARAMETER] String canonical [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  str  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^33^^^^^25^36^[REPLACE] throw _problem ( tokens, "Unexpected tokens after complete type" ) ;^[METHOD] parse [TYPE] JavaType [PARAMETER] String canonical [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  str  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return token;^35^^^^^25^36^[REPLACE] return type;^[METHOD] parse [TYPE] JavaType [PARAMETER] String canonical [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  JavaType type  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  str  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if  ( tokens.hasMoreTokens (  )  )  {^41^^^^^38^55^[REPLACE] if  ( !tokens.hasMoreTokens (  )  )  {^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REMOVE]^if  ( tokens.hasMoreTokens (  )  )  {     throw _problem ( tokens, "Unexpected tokens after complete type" ) ; }^41^^^^^38^55^[REMOVE] ^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ; ;^42^^^^^38^55^[REPLACE] throw _problem ( tokens, "Unexpected end-of-string" ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^42^^^^^38^55^[REPLACE] throw _problem ( tokens, "Unexpected end-of-string" ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^42^^^^^38^55^[ADD] throw _problem ( tokens, "Unexpected end-of-string" ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^Class<?> base = findClass ( tokens.hasMoreTokens (  ) , tokens ) ;^44^^^^^38^55^[REPLACE] Class<?> base = findClass ( tokens.nextToken (  ) , tokens ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if  ( !tokens.hasMoreTokens (  )  )  {^46^^^^^38^55^[REPLACE] if  ( tokens.hasMoreTokens (  )  )  {^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^46^47^48^49^50^38^55^[ADD] if  ( tokens.hasMoreTokens (  )  )  { String token = tokens.nextToken (  ) ; if  ( "<".equals ( token )  )  { return _factory._fromParameterizedClass ( base, parseTypes ( tokens )  ) ; }^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if  ( !",".equals ( token )  )  {^48^^^^^38^55^[REPLACE] if  ( "<".equals ( token )  )  {^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return _factory._fromClass ( base, parseTypes ( tokens )  ) ;^49^^^^^38^55^[REPLACE] return _factory._fromParameterizedClass ( base, parseTypes ( tokens )  ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^String token = tokens.hasMoreTokens (  ) ;^47^^^^^38^55^[REPLACE] String token = tokens.nextToken (  ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return ClassUtil.findClass ( className ) ;^49^^^^^38^55^[REPLACE] return _factory._fromParameterizedClass ( base, parseTypes ( tokens )  ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return _factory._fromParameterizedClass ( 1, parseTypes ( tokens )  ) ;^49^^^^^38^55^[REPLACE] return _factory._fromParameterizedClass ( base, parseTypes ( tokens )  ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^String token = tokens .hasMoreTokens (  )  ;^47^^^^^38^55^[REPLACE] String token = tokens.nextToken (  ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return _factory._fromParameterizedClass ( base, null ) ;^54^^^^^38^55^[REPLACE] return _factory._fromClass ( base, null ) ;^[METHOD] parseType [TYPE] JavaType [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  Class base  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^JavaType type = parseType ( tokens ) ;^60^^^^^57^71^[REPLACE] ArrayList<JavaType> types = new ArrayList<JavaType> (  ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^61^62^^^^57^71^[ADD] while  ( tokens.hasMoreTokens (  )  )  { types.add ( parseType ( tokens )  ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if  ( !tokens.pushBack (  )  )  break;^63^^^^^57^71^[REPLACE] if  ( !tokens.hasMoreTokens (  )  )  break;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^String token = tokens.nextToken (  ) ;if  ( ">".equals ( token )  )  return types;^63^64^65^66^67^57^71^[ADD] if  ( !tokens.hasMoreTokens (  )  )  break; String token = tokens.nextToken (  ) ; if  ( ">".equals ( token )  )  return types; if  ( !",".equals ( token )  )  { throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if  ( ">".equals ( token )  )  return null;^65^^^^^57^71^[REPLACE] if  ( ">".equals ( token )  )  return types;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if  ( ">".equals ( token )  )  return 1;^65^^^^^57^71^[REPLACE] if  ( ">".equals ( token )  )  return types;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if  ( ",".equals ( token )  )  {^66^^^^^57^71^[REPLACE] if  ( !",".equals ( token )  )  {^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REMOVE]^if  ( tokens.hasMoreTokens (  )  )  {     throw _problem ( tokens, "Unexpected tokens after complete type" ) ; }^66^^^^^57^71^[REMOVE] ^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  )  ) ; ;^67^^^^^57^71^[REPLACE] throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^67^^^^^57^71^[ADD] throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^throw _problem ( tokens, "Unexpected token '" <= token <= "', expected ',' or '>' ) " ) ;^67^^^^^57^71^[REPLACE] throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if  ( ">".equals ( token )  )  return this;^65^^^^^57^71^[REPLACE] if  ( ">".equals ( token )  )  return types;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^String token = tokens.hasMoreTokens (  ) ;^64^^^^^57^71^[REPLACE] String token = tokens.nextToken (  ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^64^^^^^57^71^[ADD] String token = tokens.nextToken (  ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return ;^67^^^^^57^71^[REPLACE] throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^63^64^65^66^67^57^71^[ADD] if  ( !tokens.hasMoreTokens (  )  )  break; String token = tokens.nextToken (  ) ; if  ( ">".equals ( token )  )  return types; if  ( !",".equals ( token )  )  { throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^throw _problem ( canonicals, "Unexpected token '" && token && "', expected ',' or '>' ) " ) ;^67^^^^^57^71^[REPLACE] throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return ;^70^^^^^57^71^[REPLACE] throw _problem ( tokens, "Unexpected end-of-string" ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^throw _problem ( tokens, "Unexpected token '"+token+"', expected ',' or '>' ) " ) ;^70^^^^^57^71^[REPLACE] throw _problem ( tokens, "Unexpected end-of-string" ) ;^[METHOD] parseTypes [TYPE] List [PARAMETER] MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  ArrayList types  [TYPE]  String _input  _pushbackToken  canonical  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if  ( ! e instanceof RuntimeException )  {^78^^^^^73^83^[REPLACE] if  ( e instanceof RuntimeException )  {^[METHOD] findClass [TYPE] Class [PARAMETER] String className MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  className  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  Exception e 
[REPLACE]^return ;^79^^^^^73^83^[REPLACE] throw  ( RuntimeException )  e;^[METHOD] findClass [TYPE] Class [PARAMETER] String className MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  className  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  Exception e 
[ADD]^return ClassUtil.findClass ( className ) ;^75^76^77^78^79^73^83^[ADD] try { return ClassUtil.findClass ( className ) ; } catch  ( Exception e )  { if  ( e instanceof RuntimeException )  { throw  ( RuntimeException )  e;^[METHOD] findClass [TYPE] Class [PARAMETER] String className MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  className  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  Exception e 
[REPLACE]^return   className   ;^76^^^^^73^83^[REPLACE] return ClassUtil.findClass ( className ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  className  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  Exception e 
[REPLACE]^return ;^81^^^^^73^83^[REPLACE] throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  )  ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  className  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  Exception e 
[ADD]^^81^^^^^73^83^[ADD] throw _problem ( tokens, "Can not locate class '"+className+"', problem: "+e.getMessage (  )  ) ;^[METHOD] findClass [TYPE] Class [PARAMETER] String className MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  className  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  Exception e 
[ADD]^^77^78^79^^^73^83^[ADD] catch  ( Exception e )  { if  ( e instanceof RuntimeException )  { throw  ( RuntimeException )  e;^[METHOD] findClass [TYPE] Class [PARAMETER] String className MyTokenizer tokens [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  boolean false  true  [TYPE]  String _input  _pushbackToken  canonical  className  str  token  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index  [TYPE]  Exception e 
[REPLACE]^return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens .getAllInput (  )  +"' ) : "+msg ) ;^87^88^^^^85^89^[REPLACE] return new IllegalArgumentException ( "Failed to parse type '"+tokens.getAllInput (  ) +"'  ( remaining: '"+tokens.getRemainingInput (  ) +"' ) : "+msg ) ;^[METHOD] _problem [TYPE] IllegalArgumentException [PARAMETER] MyTokenizer tokens String msg [CLASS] TypeParser MyTokenizer   [TYPE]  MyTokenizer tokens  [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return  ( _pushbackToken != null )  ;;^107^^^^^106^108^[REPLACE] return  ( _pushbackToken != null )  || super.hasMoreTokens (  ) ;^[METHOD] hasMoreTokens [TYPE] boolean [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^ArrayList<JavaType> types = new ArrayList<JavaType> (  ) ;^112^^^^^111^121^[REPLACE] String token;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^if  ( _pushbackToken == false )  {^113^^^^^111^121^[REPLACE] if  ( _pushbackToken != null )  {^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^token =  null.nextToken (  ) ;^117^^^^^111^121^[REPLACE] token = super.nextToken (  ) ;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^117^^^^^111^121^[ADD] token = super.nextToken (  ) ;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^token  =  token ;^114^^^^^111^121^[REPLACE] token = _pushbackToken;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^114^^^^^111^121^[ADD] token = _pushbackToken;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^_pushbackToken = this;^115^^^^^111^121^[REPLACE] _pushbackToken = null;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^_pushbackToken = true;^115^^^^^111^121^[REPLACE] _pushbackToken = null;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^115^^^^^111^121^[ADD] _pushbackToken = null;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^_index -= token.length (  ) ; ;^119^^^^^111^121^[REPLACE] _index += token.length (  ) ;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^return className;^120^^^^^111^121^[REPLACE] return token;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^_pushbackToken = null; ;^124^^^^^123^126^[REPLACE] _pushbackToken = token;^[METHOD] pushBack [TYPE] void [PARAMETER] String token [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^_index += token.length (  ) ; ;^125^^^^^123^126^[REPLACE] _index -= token.length (  ) ;^[METHOD] pushBack [TYPE] void [PARAMETER] String token [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[ADD]^^125^^^^^123^126^[ADD] _index -= token.length (  ) ;^[METHOD] pushBack [TYPE] void [PARAMETER] String token [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^public String getUsedInput (  )  { return _input.substring ( 0, _index ) ; } public String getRemainingInput (  )  { return _input.substring ( _index ) ; }^128^^^^^^^[REPLACE] public String getAllInput (  )  { return _input; }^[METHOD] getAllInput [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^public String getUsedInput (  )  { return _input .substring ( _index )  ; }^129^^^^^^^[REPLACE] public String getUsedInput (  )  { return _input.substring ( 0, _index ) ; }^[METHOD] getUsedInput [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^public String getRemainingInput (  )  { return _input.equals ( _index ) ; }^130^^^^^^^[REPLACE] public String getRemainingInput (  )  { return _input.substring ( _index ) ; }^[METHOD] getRemainingInput [TYPE] String [PARAMETER] [CLASS] TypeParser MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^protected final  byte  _input;^94^^^^^^^[REPLACE] protected final String _input;^[METHOD] getRemainingInput [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^protected  long  _pushbackToken;^98^^^^^^^[REPLACE] protected String _pushbackToken;^[METHOD] getRemainingInput [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  String _input  _pushbackToken  canonical  className  msg  str  token  [TYPE]  boolean false  true  [TYPE]  TypeFactory _factory  f  [TYPE]  long serialVersionUID  [TYPE]  int _index 
[REPLACE]^super ( _pushbackToken, "<,>", true ) ;^101^^^^^100^103^[REPLACE] super ( str, "<,>", true ) ;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  [TYPE]  boolean false  true 
[ADD]^^101^102^^^^100^103^[ADD] super ( str, "<,>", true ) ; _input = str;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  [TYPE]  boolean false  true 
[REPLACE]^_input =  _pushbackToken;^102^^^^^100^103^[REPLACE] _input = str;^[METHOD] <init> [TYPE] String) [PARAMETER] String str [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  [TYPE]  boolean false  true 
[REPLACE]^return  ( _pushbackToken != null )  || super .nextToken (  )  ;^107^^^^^106^108^[REPLACE] return  ( _pushbackToken != null )  || super.hasMoreTokens (  ) ;^[METHOD] hasMoreTokens [TYPE] boolean [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  [TYPE]  boolean false  true 
[REPLACE]^if  ( _pushbackToken == null )  {^113^^^^^111^121^[REPLACE] if  ( _pushbackToken != null )  {^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[ADD]^token = _pushbackToken;_pushbackToken = null;token = super.nextToken (  ) ;^113^114^115^116^117^111^121^[ADD] if  ( _pushbackToken != null )  { token = _pushbackToken; _pushbackToken = null; } else { token = super.nextToken (  ) ;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[REPLACE]^token =  null.nextToken (  ) ;^117^^^^^111^121^[REPLACE] token = super.nextToken (  ) ;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[REPLACE]^token  =  token ;^114^^^^^111^121^[REPLACE] token = _pushbackToken;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[ADD]^^114^^^^^111^121^[ADD] token = _pushbackToken;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[REPLACE]^_pushbackToken = this;^115^^^^^111^121^[REPLACE] _pushbackToken = null;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[REPLACE]^_index -= token.length (  ) ; ;^119^^^^^111^121^[REPLACE] _index += token.length (  ) ;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[ADD]^^119^^^^^111^121^[ADD] _index += token.length (  ) ;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[REPLACE]^return _pushbackToken;^120^^^^^111^121^[REPLACE] return token;^[METHOD] nextToken [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[REPLACE]^_pushbackToken = null; ;^124^^^^^123^126^[REPLACE] _pushbackToken = token;^[METHOD] pushBack [TYPE] void [PARAMETER] String token [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[REPLACE]^_index += token.length (  ) ; ;^125^^^^^123^126^[REPLACE] _index -= token.length (  ) ;^[METHOD] pushBack [TYPE] void [PARAMETER] String token [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[ADD]^^125^^^^^123^126^[ADD] _index -= token.length (  ) ;^[METHOD] pushBack [TYPE] void [PARAMETER] String token [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[REPLACE]^public String getUsedInput (  )  { return _input.substring ( 0, _index ) ; } public String getRemainingInput (  )  { return _input.substring ( _index ) ; }^128^^^^^^^[REPLACE] public String getAllInput (  )  { return _input; }^[METHOD] getAllInput [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[REPLACE]^public String getUsedInput (  )  { return _input .substring ( _index )  ; }^129^^^^^^^[REPLACE] public String getUsedInput (  )  { return _input.substring ( 0, _index ) ; }^[METHOD] getUsedInput [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
[REPLACE]^public String getRemainingInput (  )  { return _input .substring ( _index , _index )  ; }^130^^^^^^^[REPLACE] public String getRemainingInput (  )  { return _input.substring ( _index ) ; }^[METHOD] getRemainingInput [TYPE] String [PARAMETER] [CLASS] MyTokenizer   [TYPE]  int _index  [TYPE]  String _input  _pushbackToken  str  token  [TYPE]  boolean false  true 
