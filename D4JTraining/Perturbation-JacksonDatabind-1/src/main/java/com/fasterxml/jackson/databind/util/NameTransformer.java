[REPLACE]^public  static NameTransformer NOP = new NameTransformer (  )  {^14^^^^^14^24^[REPLACE] public final static NameTransformer NOP = new NameTransformer (  )  {^ [CLASS] NameTransformer 1 2 3 4 Chained  
[REPLACE]^boolean hasPrefix =  ( prefix != null )  &&  ( prefix .endsWith ( prefix )   *  0.5  > 0 ) ;^34^^^^^33^86^[REPLACE] boolean hasPrefix =  ( prefix != null )  &&  ( prefix.length (  )  > 0 ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[ADD]^^35^^^^^33^86^[ADD] boolean hasSuffix =  ( suffix != null )  &&  ( suffix.length (  )  > 0 ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^if   (  hasSuffix  )   {  ;^37^^^^^33^86^[REPLACE] if  ( hasPrefix )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[ADD]^^37^38^39^40^41^33^86^[ADD] if  ( hasPrefix )  { if  ( hasSuffix )  { return new NameTransformer (  )  { @Override public String transform ( String name )  { return prefix + name + suffix; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^if   (  hasPrefix  )   {  ;^38^^^^^33^86^[REPLACE] if  ( hasSuffix )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^if   (  transformed.endsWith  (  suffix  )    )   {  ;^44^^^^^33^86^[REPLACE] if  ( transformed.startsWith ( prefix )  )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^if  ( str.startsWith ( suffix )  )  {^46^^^^^33^86^[REPLACE] if  ( str.endsWith ( suffix )  )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[ADD]^^46^47^48^^^33^86^[ADD] if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return str.substring ( 0, str.size (  )  - suffix.size (  )  ) ;^47^^^^^33^86^[REPLACE] return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return str.substring  (  0, str.length  (    )   - suffix.length  (    )    )  ;  ;^47^^^^^33^86^[REPLACE] return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^String str = suffix.substring ( prefix.length (  )  ) ;^45^^^^^33^86^[REPLACE] String str = transformed.substring ( prefix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^if   (  transformed.endsWith  (  suffix  )    )   {  ;^46^^^^^33^86^[REPLACE] if  ( str.endsWith ( suffix )  )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return transformed.substring  (  0, transformed.length  (    )   - suffix.length  (    )    )  ;  ;^39^^^^^33^86^[REPLACE] return new NameTransformer (  )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^public String transform ( String name )  { return prefix  name  transformed; }^41^^^^^33^86^[REPLACE] public String transform ( String name )  { return prefix + name + suffix; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return str.substring ( 0, str.substring (  )  %  0.5  - suffix.length (  )  %  0.5  ) ;^47^^^^^33^86^[REPLACE] return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return true;^50^^^^^33^86^[REPLACE] return null;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^public String toString (  )  { return "[PreAndSuffixTransformer ( '"prefix"','"suffix"' ) ]"; }^53^^^^^33^86^[REPLACE] public String toString (  )  { return "[PreAndSuffixTransformer ( '"+prefix+"','"+suffix+"' ) ]"; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^String str = transformed.substring ( suffix.length (  )  ) ;^45^^^^^33^86^[REPLACE] String str = transformed.substring ( prefix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[ADD]^^44^45^46^47^48^33^86^[ADD] if  ( transformed.startsWith ( prefix )  )  { String str = transformed.substring ( prefix.length (  )  ) ; if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return str.substring ( 0, str.length (  )  %  0.5  - suffix.length (  )  %  0.5  ) ;^47^^^^^33^86^[REPLACE] return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[ADD]^return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^46^47^48^^^33^86^[ADD] if  ( str.endsWith ( suffix )  )  { return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return str.substring ( 0, str.substring (  )  %  2 - suffix.length (  )  %  2 ) ;^47^^^^^33^86^[REPLACE] return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^if  ( suffix.startsWith ( prefix )  )  {^61^^^^^33^86^[REPLACE] if  ( transformed.startsWith ( prefix )  )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[ADD]^^61^62^63^^^33^86^[ADD] if  ( transformed.startsWith ( prefix )  )  { return transformed.substring ( prefix.length (  )  ) ; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return transformed.substring ( suffix.length (  )  ) ;^62^^^^^33^86^[REPLACE] return transformed.substring ( prefix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^public String transform ( String name )  { return prefix  name  suffix; }^41^^^^^33^86^[REPLACE] public String transform ( String name )  { return prefix + name + suffix; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return false;^50^^^^^33^86^[REPLACE] return null;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return transformed.substring  (  0, transformed.length  (    )   - suffix.length  (    )    )  ;  ;^56^^^^^33^86^[REPLACE] return new NameTransformer (  )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^public String transform ( Stringtransformed )  { return prefix transformed; }^58^^^^^33^86^[REPLACE] public String transform ( String name )  { return prefix + name; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return null;  ;^64^^^^^33^86^[REPLACE] return null;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^public String toString (  )  { return "[PrefixTransformer ( '"prefix"' ) ]"; }^67^^^^^33^86^[REPLACE] public String toString (  )  { return "[PrefixTransformer ( '"+prefix+"' ) ]"; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^if  ( str.endsWith ( transformed )  )  {^46^^^^^33^86^[REPLACE] if  ( str.endsWith ( suffix )  )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return str.substring ( 0 , str.length (  )  - 3 - transformed.length (  )  - 3 ) ;^47^^^^^33^86^[REPLACE] return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return str.substring ( 0, str.length (  )  /  2 - transformed.length (  )  /  2 ) ;^47^^^^^33^86^[REPLACE] return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^if  ( transformed.endsWith ( suffix )  )  {^46^^^^^33^86^[REPLACE] if  ( str.endsWith ( suffix )  )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return str.substring ( 0, str.length (  )  + 5 - suffix.length (  )  + 5 ) ;^47^^^^^33^86^[REPLACE] return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return str.substring ( 0, str.substring (  )  + 1 - suffix.length (  )  + 1 ) ;^47^^^^^33^86^[REPLACE] return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return str.substring ( 0 , str.size (  )  - suffix.size (  )  ) ;^47^^^^^33^86^[REPLACE] return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^String str = transformed.substring ( prefix .endsWith ( name )   ) ;^45^^^^^33^86^[REPLACE] String str = transformed.substring ( prefix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return str.substring ( 0, str.length (  )  %  2 - suffix.length (  )  %  2 ) ;^47^^^^^33^86^[REPLACE] return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return suffix.substring ( prefix.length (  )  ) ;^62^^^^^33^86^[REPLACE] return transformed.substring ( prefix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return str .substring ( true )   + 2 ) ;^47^^^^^33^86^[REPLACE] return str.substring ( 0, str.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return null;  ;^50^^^^^33^86^[REPLACE] return null;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return false;^64^^^^^33^86^[REPLACE] return null;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^if   (  hasPrefix  )   {  ;^70^^^^^33^86^[REPLACE] if  ( hasSuffix )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^if   (  str.endsWith  (  suffix  )    )   {  ;^76^^^^^33^86^[REPLACE] if  ( transformed.endsWith ( suffix )  )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return transformed.substring ( 0, transformed.size (  )  - str.size (  )  ) ;^77^^^^^33^86^[REPLACE] return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return transformed.substring  (  0, transformed.length  (    )   - suffix.length  (    )    )  ;  ;^71^^^^^33^86^[REPLACE] return new NameTransformer (  )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^public String transform ( Stringtransformed )  { return name  suffix; }^73^^^^^33^86^[REPLACE] public String transform ( String name )  { return name + suffix; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return transformed.substring ( 0, transformed.length (  )  *  0.5  - suffix.length (  )  *  0.5  ) ;^77^^^^^33^86^[REPLACE] return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return null;  ;^79^^^^^33^86^[REPLACE] return null;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^public String toString (  )  { return "[SuffixTransformer ( '"suffix"' ) ]"; }^82^^^^^33^86^[REPLACE] public String toString (  )  { return "[SuffixTransformer ( '"+suffix+"' ) ]"; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^if  ( str.endsWith ( suffix )  )  {^76^^^^^33^86^[REPLACE] if  ( transformed.endsWith ( suffix )  )  {^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return transformed.substring ( 0, transformed.size (  )  - suffix.size (  )  ) ;^77^^^^^33^86^[REPLACE] return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^public String transform ( Stringtransformed )  { return name  transformed; }^73^^^^^33^86^[REPLACE] public String transform ( String name )  { return name + suffix; }^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return transformed.substring ( 0, transformed.length (  )  - 5 - suffix.length (  )  - 5 ) ;^77^^^^^33^86^[REPLACE] return transformed.substring ( 0, transformed.length (  )  - suffix.length (  )  ) ;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return true;^79^^^^^33^86^[REPLACE] return null;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^return transformed.substring  (  0, transformed.length  (    )   - suffix.length  (    )    )  ;  ;^85^^^^^33^86^[REPLACE] return NOP;^[METHOD] simpleTransformer [TYPE] NameTransformer [PARAMETER] String prefix String suffix [CLASS] NameTransformer 1 2 3 4 Chained   [TYPE]  NameTransformer NOP  _t1  _t2  t1  t2  [TYPE]  String name  prefix  str  suffix  transformed  [TYPE]  boolean false  hasPrefix  hasSuffix  true 
[REPLACE]^protected  NameTransformer _t1, _t2;^111^^^^^^^[REPLACE] protected final NameTransformer _t1, _t2;^[METHOD] toString [TYPE] String [PARAMETER] [CLASS] Chained   [TYPE]  boolean false  true 
