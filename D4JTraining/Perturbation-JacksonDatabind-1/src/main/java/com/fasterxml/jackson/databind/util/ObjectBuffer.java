[REPLACE]^final static int INITIAL_CHUNK_SIZE ;^17^^^^^^^[REPLACE] final static int INITIAL_CHUNK_SIZE = 12;^ [CLASS] ObjectBuffer Node  
[REPLACE]^final  int SMALL_CHUNK_SIZE =  ( 1 << 14 ) ;^23^^^^^^^[REPLACE] final static int SMALL_CHUNK_SIZE =  ( 1 << 14 ) ;^ [CLASS] ObjectBuffer Node  
[REPLACE]^final static int MAX_CHUNK_SIZE  = null ;^31^^^^^^^[REPLACE] final static int MAX_CHUNK_SIZE =  ( 1 << 18 ) ;^ [CLASS] ObjectBuffer Node  
[REPLACE]^Object[] _data;^232^^^^^^^[REPLACE] final Object[] _data;^ [CLASS] ObjectBuffer Node  
[REPLACE]^Object[] curr = n.getData (  )  ;^96^^^^^95^112^[REPLACE] Node next = new Node ( fullChunk ) ;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^if  (next != null )  {^97^^^^^95^112^[REPLACE] if  ( _bufferHead == null )  {^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[ADD]^_bufferHead = _bufferTail = next;_bufferTail.linkNext ( next ) ;_bufferTail = next;^97^98^99^100^101^95^112^[ADD] if  ( _bufferHead == null )  { _bufferHead = _bufferTail = next; } else { _bufferTail.linkNext ( next ) ; _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferTail = null  ;^101^^^^^97^102^[REPLACE] _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferHead = _bufferTail = null  ;^98^^^^^95^112^[REPLACE] _bufferHead = _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[ADD]^^98^^^^^95^112^[ADD] _bufferHead = _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferTail = null  ;^98^^^^^95^112^[REPLACE] _bufferHead = _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferTail = null  ;^101^^^^^95^112^[REPLACE] _bufferTail = next;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^int len = _freeBuffer.length;^103^^^^^95^112^[REPLACE] int len = fullChunk.length;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferedEntryCount = 0  ;^104^^^^^95^112^[REPLACE] _bufferedEntryCount += len;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^if  ( len  >  SMALL_CHUNK_SIZE )  {^106^^^^^95^112^[REPLACE] if  ( len < SMALL_CHUNK_SIZE )  {^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^_bufferedEntryCount +=  ( len  <  2 ) ;^109^^^^^106^110^[REPLACE] len +=  ( len >> 2 ) ;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^len +=  _bufferedEntryCount;^107^^^^^95^112^[REPLACE] len += len;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^len +=  ( len  < _bufferedEntryCount ) ;^109^^^^^95^112^[REPLACE] len +=  ( len >> 2 ) ;^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^return   (  _freeBuffer == null  )   ? 0 : _freeBuffer.length;  ;^111^^^^^95^112^[REPLACE] return new Object[len];^[METHOD] appendCompletedChunk [TYPE] Object[] [PARAMETER] Object[] fullChunk [CLASS] ObjectBuffer Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  len  [TYPE]  Object[] _data  _freeBuffer  data  fullChunk  [TYPE]  Node _bufferHead  _bufferTail  _next  next 
[REPLACE]^int ptr = 4;^201^^^^^200^216^[REPLACE] int ptr = 0;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^for  ( Node n =  _bufferHead; next !^203^^^^^200^216^[REPLACE] for  ( Node n = _bufferHead; n != null; n = n.next (  )  )  {^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^ptr +=  totalSize;^207^^^^^200^216^[REPLACE] ptr += len;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^203^204^205^206^207^200^216^[ADD] for  ( Node n = _bufferHead; n != null; n = n.next (  )  )  { Object[] curr = n.getData (  ) ; int len = curr.length; System.arraycopy ( curr, 0, resultArray, ptr, len ) ; ptr += len;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^Object[] curr = next .next (  )  ;^204^^^^^200^216^[REPLACE] Object[] curr = n.getData (  ) ;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^int len = result.length;^205^^^^^200^216^[REPLACE] int len = curr.length;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^System.arraycopy ( lastChunk, 1, resultArray, ptr, lastChunkEntries ) ;^209^^^^^200^216^[REPLACE] System.arraycopy ( lastChunk, 0, resultArray, ptr, lastChunkEntries ) ;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^ptr +=  len;^210^^^^^200^216^[REPLACE] ptr += lastChunkEntries;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^if  ( ptr  ==  totalSize )  {^213^^^^^200^216^[REPLACE] if  ( ptr != totalSize )  {^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^return ;^214^^^^^200^216^[REPLACE] throw new IllegalStateException  (" ")  ;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[ADD]^^214^^^^^200^216^[ADD] throw new IllegalStateException  (" ")  ;^[METHOD] _copyTo [TYPE] void [PARAMETER] Object resultArray int totalSize Object[] lastChunk int lastChunkEntries [CLASS] ObjectBuffer Node   [TYPE]  Object resultArray  [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
[REPLACE]^Object[] _data;^232^^^^^^^[REPLACE] final Object[] _data;^[METHOD] linkNext [TYPE] void [PARAMETER] Node next [CLASS] Node   [TYPE]  boolean false  true  [TYPE]  int INITIAL_CHUNK_SIZE  MAX_CHUNK_SIZE  SMALL_CHUNK_SIZE  _bufferedEntryCount  i  lastChunkEntries  len  ptr  totalSize  [TYPE]  Object[] _data  _freeBuffer  curr  data  fullChunk  lastChunk  result  [TYPE]  Node _bufferHead  _bufferTail  _next  n  next 
