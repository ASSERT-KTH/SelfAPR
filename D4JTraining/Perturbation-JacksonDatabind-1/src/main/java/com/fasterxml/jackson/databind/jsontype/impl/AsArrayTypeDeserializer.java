[REPLACE]^private static   short  serialVersionUID = 5345570420394408290;^27^^^^^^^[REPLACE] private static final long serialVersionUID = 5345570420394408290L;^ [CLASS] AsArrayTypeDeserializer  
[REPLACE]^boolean hadStartArray = jp .getCurrentToken (  )  ;^100^^^^^99^121^[REPLACE] boolean hadStartArray = jp.isExpectedStartArrayToken (  ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object> deser = _findDeserializer ( ctxt, typeId )  ;^101^^^^^99^121^[REPLACE] String typeId = _locateTypeId ( jp, ctxt ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^boolean hadStartArray = jp.isExpectedStartArrayToken (  )  ;^102^^^^^99^121^[REPLACE] JsonDeserializer<Object> deser = _findDeserializer ( ctxt, typeId ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _typeIdVisible || jp.getCurrentToken (  )  == JsonToken.START_OBJECT )  {^104^^^^^99^121^[REPLACE] if  ( _typeIdVisible && jp.getCurrentToken (  )  == JsonToken.START_OBJECT )  {^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^111^112^^^^99^121^[ADD] jp = JsonParserSequence.createFlattened ( tb.asParser ( jp ) , jp ) ; jp.nextToken (  ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^TokenBuffer tb = new TokenBuffer ( true ) ;^107^^^^^99^121^[REPLACE] TokenBuffer tb = new TokenBuffer ( null ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^jp =  JsonParserSequence.createFlattened ( null.asParser ( jp ) , jp ) ;^111^^^^^99^121^[REPLACE] jp = JsonParserSequence.createFlattened ( tb.asParser ( jp ) , jp ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^TokenBuffer tb = new TokenBuffer ( false ) ;^107^^^^^99^121^[REPLACE] TokenBuffer tb = new TokenBuffer ( null ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^Object value = null.deserialize ( jp, ctxt ) ;^114^^^^^99^121^[REPLACE] Object value = deser.deserialize ( jp, ctxt ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  (  jp.nextToken (  )  != JsonToken.END_ARRAY )  {^116^^^^^99^121^[REPLACE] if  ( hadStartArray && jp.nextToken (  )  != JsonToken.END_ARRAY )  {^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^116^117^118^119^^99^121^[ADD] if  ( hadStartArray && jp.nextToken (  )  != JsonToken.END_ARRAY )  { throw ctxt.wrongTokenException ( jp, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" ) ; }^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.wrongTokenException ( jp, JsonToken.START_ARRAY,  ( "need JSON Array to contain As.WRAPPER_ARRAY type information for class " +  ( baseTypeName (  )  )  )  )  ;^117^118^^^^99^121^[REPLACE] throw ctxt.wrongTokenException ( jp, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt .wrongTokenException ( jp , typeId )  ;^117^118^^^^99^121^[REPLACE] throw ctxt.wrongTokenException ( jp, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^117^118^^^^99^121^[ADD] throw ctxt.wrongTokenException ( jp, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return ;^117^118^^^^99^121^[REPLACE] throw ctxt.wrongTokenException ( jp, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" ) ;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return value;  ;^120^^^^^99^121^[REPLACE] return value;^[METHOD] _deserialize [TYPE] Object [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  boolean false  hadStartArray  true  [TYPE]  TokenBuffer tb  [TYPE]  DeserializationContext ctxt  [TYPE]  Object value  [TYPE]  String typeId  [TYPE]  JsonDeserializer deser  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( jp.isExpectedStartArrayToken (  )  )  {^126^^^^^125^145^[REPLACE] if  ( !jp.isExpectedStartArrayToken (  )  )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^126^127^^129^130^125^145^[ADD] if  ( !jp.isExpectedStartArrayToken (  )  )  {  if  ( _defaultImpl != null )  { return _idResolver.idFromBaseType (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( true == this )  {^129^^^^^125^145^[REPLACE] if  ( _defaultImpl != null )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^129^130^131^^^125^145^[ADD] if  ( _defaultImpl != null )  { return _idResolver.idFromBaseType (  ) ; }^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _idResolver.idFromBaseType  (    )  ;  ;^130^^^^^125^145^[REPLACE] return _idResolver.idFromBaseType (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^132^^^^^125^145^[ADD] throw ctxt.wrongTokenException  (" ")  ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _defaultImpl == null )  {^129^^^^^125^145^[REPLACE] if  ( _defaultImpl != null )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.wrongTokenException ( jp, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" )  ;^132^^^^^125^145^[REPLACE] throw ctxt.wrongTokenException  (" ")  ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^135^^^^^125^145^[ADD] JsonToken t = jp.nextToken (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( t  &&  JsonToken.VALUE_STRING )  {^136^^^^^125^145^[REPLACE] if  ( t == JsonToken.VALUE_STRING )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return result;  ;^139^^^^^125^145^[REPLACE] return result;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^String result = jp.nextToken (  ) ;^137^^^^^125^145^[REPLACE] String result = jp.getText (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^137^138^^^^125^145^[ADD] String result = jp.getText (  ) ; jp.nextToken (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^if  ( _defaultImpl == null )  {^141^^^^^125^145^[REPLACE] if  ( _defaultImpl != null )  {^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^return _idResolver.idFromBaseType (  ) ;^141^142^143^^^125^145^[ADD] if  ( _defaultImpl != null )  { return _idResolver.idFromBaseType (  ) ; }^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^return _idResolver.idFromBaseType  (    )  ;  ;^142^^^^^125^145^[REPLACE] return _idResolver.idFromBaseType (  ) ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^throw ctxt.wrongTokenException ( jp, JsonToken.END_ARRAY, "expected closing END_ARRAY after type information and deserialized value" )  ;^144^^^^^125^145^[REPLACE] throw ctxt.wrongTokenException  (" ")  ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[REPLACE]^jp.getText (  )  ;^144^^^^^125^145^[REPLACE] throw ctxt.wrongTokenException  (" ")  ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
[ADD]^^144^^^^^125^145^[ADD] throw ctxt.wrongTokenException  (" ")  ;^[METHOD] _locateTypeId [TYPE] String [PARAMETER] JsonParser jp DeserializationContext ctxt [CLASS] AsArrayTypeDeserializer   [TYPE]  DeserializationContext ctxt  [TYPE]  JsonToken t  [TYPE]  String result  [TYPE]  boolean false  true  [TYPE]  long serialVersionUID  [TYPE]  JsonParser jp 
